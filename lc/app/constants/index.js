
export const qlist = [
    {
        "id": "912",
        "title": "Sort an Array",
        "slug": "sort-an-array",
        "difficulty": "Medium",
        "likes": 137,
        "dislikes": 128,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [],
        "content": "<p>Given an array of integers <code>nums</code>, sort the array in ascending order.</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong>&nbsp;[5,2,3,1]\n<strong>Output:</strong> [1,2,3,5]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>[5,1,1,2,0,0]\n<strong>Output: </strong>[0,0,1,1,2,5]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 10000</code></li>\n\t<li><code>-50000 &lt;= A[i] &lt;= 50000</code></li>\n</ol>\n"
    },
    {
        "id": "1081",
        "title": "Smallest Subsequence of Distinct Characters",
        "slug": "smallest-subsequence-of-distinct-characters",
        "difficulty": "Medium",
        "likes": 163,
        "dislikes": 30,
        "hints": [
            "Greedily try to add one missing character. How to check if adding some character will not cause problems ? Use bit-masks to check whether you will be able to complete the sub-sequence if you add the character at some index i."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "String"
        ],
        "content": "<p>Return the lexicographically smallest subsequence of <code>text</code> that contains all the distinct characters of <code>text</code> exactly once.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">&quot;cdadabcc&quot;</span>\n<strong>Output: </strong><span id=\"example-output-1\">&quot;adbc&quot;</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">&quot;abcd&quot;</span>\n<strong>Output: </strong><span id=\"example-output-2\">&quot;abcd&quot;</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">&quot;ecbacba&quot;</span>\n<strong>Output: </strong><span id=\"example-output-3\">&quot;eacb&quot;</span>\n</pre>\n\n<div>\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-4-1\">&quot;leetcode&quot;</span>\n<strong>Output: </strong><span id=\"example-output-4\">&quot;letcod&quot;</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= text.length &lt;= 1000</code></li>\n\t<li><code>text</code> consists of lowercase English letters.</li>\n</ol>\n\n<p>&nbsp;</p>\n</div>\n</div>\n</div>"
    },
    {
        "id": "440",
        "title": "K-th Smallest in Lexicographical Order",
        "slug": "k-th-smallest-in-lexicographical-order",
        "difficulty": "Hard",
        "likes": 209,
        "dislikes": 38,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [],
        "content": "<p>Given integers <code>n</code> and <code>k</code>, find the lexicographically k-th smallest integer in the range from <code>1</code> to <code>n</code>.</p>\n\n<p>Note: 1 &le; k &le; n &le; 10<sup>9</sup>.</p>\n\n<p><b>Example:</b>\n<pre>\n<b>Input:</b>\nn: 13   k: 2\n\n<b>Output:</b>\n10\n\n<b>Explanation:</b>\nThe lexicographical order is [1, 10, 11, 12, 13, 2, 3, 4, 5, 6, 7, 8, 9], so the second smallest number is 10.\n</pre>\n</p>\n"
    },
    {
        "id": "968",
        "title": "Binary Tree Cameras",
        "slug": "binary-tree-cameras",
        "difficulty": "Hard",
        "likes": 337,
        "dislikes": 11,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Distribute Coins in Binary Tree\", \"titleSlug\": \"distribute-coins-in-binary-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "651",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming",
            "Tree",
            "Depth-first Search"
        ],
        "content": "<p>Given a binary tree, we install cameras on the nodes of the tree.&nbsp;</p>\n\n<p>Each camera at&nbsp;a node can monitor <strong>its parent, itself, and its immediate children</strong>.</p>\n\n<p>Calculate the minimum number of cameras needed to monitor all nodes of the tree.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"./img/binary-tree-cameras_1.png\" style=\"width: 138px; height: 163px;\" />\n<div>\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[0,0,null,0,0]</span>\n<strong>Output: </strong><span id=\"example-output-1\">1</span>\n<strong>Explanation: </strong>One camera is enough to monitor all nodes if placed as shown.\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n<img alt=\"\" src=\"./img/binary-tree-cameras_2.png\" style=\"width: 139px; height: 312px;\" />\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[0,0,null,0,null,0,null,null,0]</span>\n<strong>Output: </strong><span id=\"example-output-2\">2\n<strong>Explanation:</strong> At least two cameras are needed to monitor all nodes of the tree. The above image shows one of the valid configurations of camera placement.</span>\n</pre>\n\n<p><br />\n<strong>Note:</strong></p>\n\n<ol>\n\t<li>The number of nodes in the given tree will be in the range&nbsp;<code>[1, 1000]</code>.</li>\n\t<li><strong>Every</strong> node has value 0.</li>\n</ol>\n</div>\n</div>\n"
    },
    {
        "id": "494",
        "title": "Target Sum",
        "slug": "target-sum",
        "difficulty": "Medium",
        "likes": 1591,
        "dislikes": 74,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Expression Add Operators\", \"titleSlug\": \"expression-add-operators\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "123",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming",
            "Depth-first Search"
        ],
        "content": "<p>\nYou are given a list of non-negative integers, a1, a2, ..., an, and a target, S. Now you have 2 symbols <code>+</code> and <code>-</code>. For each integer, you should choose one from <code>+</code> and <code>-</code> as its new symbol.\n</p> \n\n<p>Find out how many ways to assign symbols to make sum of integers equal to target S.  \n</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> nums is [1, 1, 1, 1, 1], S is 3. \n<b>Output:</b> 5\n<b>Explanation:</b> \n\n-1+1+1+1+1 = 3\n+1-1+1+1+1 = 3\n+1+1-1+1+1 = 3\n+1+1+1-1+1 = 3\n+1+1+1+1-1 = 3\n\nThere are 5 ways to assign symbols to make the sum of nums be target 3.\n</pre>\n</p>\n\n<p><b>Note:</b><br>\n<ol>\n<li>The length of the given array is positive and will not exceed 20. </li>\n<li>The sum of elements in the given array will not exceed 1000.</li>\n<li>Your output answer is guaranteed to be fitted in a 32-bit integer.</li>\n</ol>\n</p>"
    },
    {
        "id": "474",
        "title": "Ones and Zeroes",
        "slug": "ones-and-zeroes",
        "difficulty": "Medium",
        "likes": 629,
        "dislikes": 154,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Non-negative Integers without Consecutive Ones\", \"titleSlug\": \"non-negative-integers-without-consecutive-ones\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "112",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>In the computer world, use restricted resource you have to generate maximum benefit is what we always want to pursue.</p>\n\n<p>For now, suppose you are a dominator of <b>m</b> <code>0s</code> and <b>n</b> <code>1s</code> respectively. On the other hand, there is an array with strings consisting of only <code>0s</code> and <code>1s</code>.</p>\n\n<p>Now your task is to find the maximum number of strings that you can form with given <b>m</b> <code>0s</code> and <b>n</b> <code>1s</code>. Each <code>0</code> and <code>1</code> can be used at most <b>once</b>.</p>\n\n<p><b>Note:</b></p>\n\n<ol>\n\t<li>The given numbers of <code>0s</code> and <code>1s</code> will both not exceed <code>100</code></li>\n\t<li>The size of given string array won&#39;t exceed <code>600</code>.</li>\n</ol>\n\n<p>&nbsp;</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> Array = {&quot;10&quot;, &quot;0001&quot;, &quot;111001&quot;, &quot;1&quot;, &quot;0&quot;}, m = 5, n = 3\n<b>Output:</b> 4\n\n<b>Explanation:</b> This are totally 4 strings can be formed by the using of 5 0s and 3 1s, which are &ldquo;10,&rdquo;0001&rdquo;,&rdquo;1&rdquo;,&rdquo;0&rdquo;\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input:</b> Array = {&quot;10&quot;, &quot;0&quot;, &quot;1&quot;}, m = 1, n = 1\n<b>Output:</b> 2\n\n<b>Explanation:</b> You could form &quot;10&quot;, but then you&#39;d have nothing left. Better form &quot;0&quot; and &quot;1&quot;.\n</pre>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "798",
        "title": "Smallest Rotation with Highest Score",
        "slug": "smallest-rotation-with-highest-score",
        "difficulty": "Hard",
        "likes": 180,
        "dislikes": 14,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "428",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [],
        "content": "<p>&nbsp;Given an array <code>A</code>, we may rotate it by a non-negative integer <code>K</code> so that the array becomes <code>A[K], A[K+1], A{K+2], ... A[A.length - 1], A[0], A[1], ..., A[K-1]</code>.&nbsp; Afterward, any entries that are less than or equal to their index are worth 1 point.&nbsp;</p>\n\n<p>For example, if we have <code>[2, 4, 1, 3, 0]</code>, and we rotate by <code>K = 2</code>, it becomes <code>[1, 3, 0, 2, 4]</code>.&nbsp; This is worth 3 points because 1 &gt; 0 [no points], 3 &gt; 1 [no points], 0 &lt;= 2 [one point], 2 &lt;= 3 [one point], 4 &lt;= 4 [one point].</p>\n\n<p>Over all possible rotations, return the rotation index K that corresponds to the highest score we could receive.&nbsp; If there are multiple answers, return the smallest such index K.</p>\n\n<pre>\n<strong>Example 1:</strong>\n<strong>Input:</strong> [2, 3, 1, 4, 0]\n<strong>Output:</strong> 3\n<strong>Explanation: </strong> \nScores for each K are listed below: \nK = 0,  A = [2,3,1,4,0],    score 2\nK = 1,  A = [3,1,4,0,2],    score 3\nK = 2,  A = [1,4,0,2,3],    score 3\nK = 3,  A = [4,0,2,3,1],    score 4\nK = 4,  A = [0,2,3,1,4],    score 3\n</pre>\n\n<p>So we should choose K = 3, which has the highest score.</p>\n\n<p>&nbsp;</p>\n\n<pre>\n<strong>Example 2:</strong>\n<strong>Input:</strong> [1, 3, 0, 2, 4]\n<strong>Output:</strong> 0\n<strong>Explanation: </strong> A will always have 3 points no matter how it shifts.\nSo we will choose the smallest K, which is 0.\n</pre>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li><code>A</code>&nbsp;will have&nbsp;length at most <code>20000</code>.</li>\n\t<li><code>A[i]</code> will be in the range <code>[0, A.length]</code>.</li>\n</ul>\n"
    },
    {
        "id": "45",
        "title": "Jump Game II",
        "slug": "jump-game-ii",
        "difficulty": "Hard",
        "likes": 1424,
        "dislikes": 83,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Jump Game\", \"titleSlug\": \"jump-game\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Array",
            "Greedy"
        ],
        "content": "<p>Given an array of non-negative integers, you are initially positioned at the first index of the array.</p>\n\n<p>Each element in the array represents your maximum jump length at that position.</p>\n\n<p>Your goal is to reach the last index in the minimum number of jumps.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input:</strong> [2,3,1,1,4]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The minimum number of jumps to reach the last index is 2.\n    Jump 1 step from index 0 to 1, then 3 steps to the last index.</pre>\n\n<p><strong>Note:</strong></p>\n\n<p>You can assume that you can always reach the last index.</p>\n"
    },
    {
        "id": "594",
        "title": "Longest Harmonious Subsequence",
        "slug": "longest-harmonious-subsequence",
        "difficulty": "Easy",
        "likes": 455,
        "dislikes": 62,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "141",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Hash Table"
        ],
        "content": "<p>We define a harmounious array as an array where the difference between its maximum value and its minimum value is <b>exactly</b> 1.</p>\n\n<p>Now, given an integer array, you need to find the length of its longest harmonious subsequence among all its possible <a href=\"https://en.wikipedia.org/wiki/Subsequence\">subsequences</a>.</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> [1,3,2,2,5,2,3,7]\n<b>Output:</b> 5\n<b>Explanation:</b> The longest harmonious subsequence is [3,2,2,2,3].\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b> The length of the input array will not exceed 20,000.</p>\n"
    },
    {
        "id": "820",
        "title": "Short Encoding of Words",
        "slug": "short-encoding-of-words",
        "difficulty": "Medium",
        "likes": 173,
        "dislikes": 46,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "454",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [],
        "content": "<p>Given a list of words, we may encode it by writing a reference string <code>S</code> and a list of indexes <code>A</code>.</p>\n\n<p>For example, if the list of words is <code>[&quot;time&quot;, &quot;me&quot;, &quot;bell&quot;]</code>, we can write it as <code>S = &quot;time#bell#&quot;</code>&nbsp;and <code>indexes = [0, 2, 5]</code>.</p>\n\n<p>Then for each index, we will recover the word by reading from the reference string from that index until we reach a <code>&quot;#&quot;</code> character.</p>\n\n<p>What is the length of the shortest reference string S possible that encodes the given words?</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input:</strong> words = <code>[&quot;time&quot;, &quot;me&quot;, &quot;bell&quot;]</code>\n<strong>Output:</strong> 10\n<strong>Explanation:</strong> S = <code>&quot;time#bell#&quot; and indexes = [0, 2, 5</code>].\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= words.length&nbsp;&lt;= 2000</code>.</li>\n\t<li><code>1 &lt;=&nbsp;words[i].length&nbsp;&lt;= 7</code>.</li>\n\t<li>Each word&nbsp;has only&nbsp;lowercase letters.</li>\n</ol>\n"
    },
    {
        "id": "166",
        "title": "Fraction to Recurring Decimal",
        "slug": "fraction-to-recurring-decimal",
        "difficulty": "Medium",
        "likes": 529,
        "dislikes": 1171,
        "hints": [
            "No scary math, just apply elementary math knowledge. Still remember how to perform a <i>long division</i>?",
            "Try a long division on 4/9, the repeating part is obvious. Now try 4/333. Do you see a pattern?",
            "Notice that once the remainder starts repeating, so does the divided result.",
            "Be wary of edge cases! List out as many test cases as you can think of and test your code thoroughly."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "19",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Hash Table",
            "Math"
        ],
        "content": "<p>Given two integers representing the numerator and denominator of a fraction, return the fraction in string format.</p>\n\n<p>If the fractional part is repeating, enclose the repeating part in parentheses.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> numerator = 1, denominator = 2\n<strong>Output:</strong> &quot;0.5&quot;\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> numerator = 2, denominator = 1\n<strong>Output:</strong> &quot;2&quot;</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> numerator = 2, denominator = 3\n<strong>Output: </strong>&quot;0.(6)&quot;\n</pre>\n"
    },
    {
        "id": "705",
        "title": "Design HashSet",
        "slug": "design-hashset",
        "difficulty": "Easy",
        "likes": 168,
        "dislikes": 45,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Design HashMap\", \"titleSlug\": \"design-hashmap\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Hash Table",
            "Design"
        ],
        "content": "<p>Design a HashSet&nbsp;without using any built-in hash table libraries.</p>\n\n<p>To be specific, your design should include these functions:</p>\n\n<ul>\n\t<li><code>add(value)</code>:&nbsp;Insert a value into the HashSet.&nbsp;</li>\n\t<li><code>contains(value)</code> : Return whether the value exists in the HashSet or not.</li>\n\t<li><code>remove(value)</code>: Remove a value in&nbsp;the HashSet. If the value does not exist in the HashSet, do nothing.</li>\n</ul>\n\n<p><br />\n<strong>Example:</strong></p>\n\n<pre>\nMyHashSet hashSet = new MyHashSet();\nhashSet.add(1); &nbsp; &nbsp; &nbsp; &nbsp; \nhashSet.add(2); &nbsp; &nbsp; &nbsp; &nbsp; \nhashSet.contains(1); &nbsp;&nbsp;&nbsp;// returns true\nhashSet.contains(3); &nbsp;&nbsp;&nbsp;// returns false (not found)\nhashSet.add(2); &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\nhashSet.contains(2); &nbsp;&nbsp;&nbsp;// returns true\nhashSet.remove(2); &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\nhashSet.contains(2); &nbsp;&nbsp;&nbsp;// returns false (already removed)\n</pre>\n\n<p><br />\n<strong>Note:</strong></p>\n\n<ul>\n\t<li>All values will be in the range of <code>[0, 1000000]</code>.</li>\n\t<li>The number of operations will be in the range of&nbsp;<code>[1, 10000]</code>.</li>\n\t<li>Please do not use the built-in HashSet library.</li>\n</ul>\n"
    },
    {
        "id": "704",
        "title": "Binary Search",
        "slug": "binary-search",
        "difficulty": "Easy",
        "likes": 320,
        "dislikes": 34,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Search in a Sorted Array of Unknown Size\", \"titleSlug\": \"search-in-a-sorted-array-of-unknown-size\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "719",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Binary Search"
        ],
        "content": "<p>Given a <strong>sorted</strong> (in ascending order) integer array <code>nums</code> of <code>n</code> elements and a <code>target</code> value, write a function to search <code>target</code> in <code>nums</code>. If <code>target</code> exists, then return its index, otherwise return <code>-1</code>.</p>\n\n<p><br />\n<strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> <code>nums</code> = [-1,0,3,5,9,12], <code>target</code> = 9\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> 9 exists in <code>nums</code> and its index is 4\n\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> <code>nums</code> = [-1,0,3,5,9,12], <code>target</code> = 2\n<strong>Output:</strong> -1\n<strong>Explanation:</strong> 2 does not exist in <code>nums</code> so return -1\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li>You may assume that all elements in <code>nums</code> are unique.</li>\n\t<li><code>n</code> will be in the range <code>[1, 10000]</code>.</li>\n\t<li>The value of each element in <code>nums</code> will be in the range <code>[-9999, 9999]</code>.</li>\n</ol>\n"
    },
    {
        "id": "954",
        "title": "Array of Doubled Pairs",
        "slug": "array-of-doubled-pairs",
        "difficulty": "Medium",
        "likes": 137,
        "dislikes": 23,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "636",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Hash Table"
        ],
        "content": "<p>Given an array of integers <code>A</code>&nbsp;with even length, return <code>true</code> if and only if it is possible to reorder it such that <code>A[2 * i + 1] = 2 * A[2 * i]</code> for every <code>0 &lt;=&nbsp;i &lt; len(A) / 2</code>.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<div>\n<div>\n<ol>\n</ol>\n</div>\n</div>\n</div>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[3,1,3,6]</span>\n<strong>Output: </strong><span id=\"example-output-1\">false</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[2,1,2,6]</span>\n<strong>Output: </strong><span id=\"example-output-2\">false</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">[4,-2,2,-4]</span>\n<strong>Output: </strong><span id=\"example-output-3\">true</span>\n<strong>Explanation: </strong><span id=\"example-output-3\">We can take two groups, [-2,-4] and [2,4] to form [-2,-4,2,4] or [2,4,-2,-4].</span>\n</pre>\n\n<div>\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-4-1\">[1,2,4,16,8,4]</span>\n<strong>Output: </strong><span id=\"example-output-4\">false</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>0 &lt;= A.length &lt;= 30000</code></li>\n\t<li><code>A.length</code> is even</li>\n\t<li><code>-100000 &lt;= A[i] &lt;= 100000</code></li>\n</ol>\n</div>\n</div>\n</div>\n</div>\n"
    },
    {
        "id": "390",
        "title": "Elimination Game",
        "slug": "elimination-game",
        "difficulty": "Medium",
        "likes": 256,
        "dislikes": 230,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [],
        "content": "<p>\nThere is a list of sorted integers from 1 to <i>n</i>. Starting from left to right, remove the first number and every other number afterward until you reach the end of the list.</p>\n\n<p>Repeat the previous step again, but this time from right to left, remove the right most number and every other number from the remaining numbers.</p>\n\n<p>We keep repeating the steps again, alternating left to right and right to left, until a single number remains.</p>\n\n<p>Find the last number that remains starting with a list of length <i>n</i>.</p>\n\n<p><b>Example:</b>\n<pre>\nInput:\nn = 9,\n<u>1</u> 2 <u>3</u> 4 <u>5</u> 6 <u>7</u> 8 <u>9</u>\n2 <u>4</u> 6 <u>8</u>\n<u>2</u> 6\n6\n\nOutput:\n6\n</pre>\n</p>"
    },
    {
        "id": "841",
        "title": "Keys and Rooms",
        "slug": "keys-and-rooms",
        "difficulty": "Medium",
        "likes": 550,
        "dislikes": 44,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "472",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Depth-first Search",
            "Graph"
        ],
        "content": "<p>There are <code>N</code> rooms and you start in room <code>0</code>.&nbsp; Each room has a distinct number in <code>0, 1, 2, ..., N-1</code>, and each room may have&nbsp;some keys to access the next room.&nbsp;</p>\n\n<p>Formally, each room <code>i</code>&nbsp;has a list of keys <code>rooms[i]</code>, and each key <code>rooms[i][j]</code> is an integer in <code>[0, 1, ..., N-1]</code> where <code>N = rooms.length</code>.&nbsp; A key <code>rooms[i][j] = v</code>&nbsp;opens the room with number <code>v</code>.</p>\n\n<p>Initially, all the rooms start locked (except for room <code>0</code>).&nbsp;</p>\n\n<p>You can walk back and forth between rooms freely.</p>\n\n<p>Return <code>true</code>&nbsp;if and only if you can enter&nbsp;every room.</p>\n\n<ol>\n</ol>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>[[1],[2],[3],[]]\n<strong>Output: </strong>true\n<strong>Explanation:  </strong>\nWe start in room 0, and pick up key 1.\nWe then go to room 1, and pick up key 2.\nWe then go to room 2, and pick up key 3.\nWe then go to room 3.  Since we were able to go to every room, we return true.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>[[1,3],[3,0,1],[2],[0]]\n<strong>Output: </strong>false\n<strong>Explanation: </strong>We can&#39;t enter the room with number 2.\n</pre>\n\n<p><b>Note:</b></p>\n\n<ol>\n\t<li><code>1 &lt;= rooms.length &lt;=&nbsp;1000</code></li>\n\t<li><code>0 &lt;= rooms[i].length &lt;= 1000</code></li>\n\t<li>The number of keys in all rooms combined is at most&nbsp;<code>3000</code>.</li>\n</ol>\n"
    },
    {
        "id": "1009",
        "title": "Complement of Base 10 Integer",
        "slug": "complement-of-base-10-integer",
        "difficulty": "Easy",
        "likes": 79,
        "dislikes": 15,
        "hints": [
            "A binary number plus its complement will equal 111....111 in binary.  Also, N = 0 is a corner case."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Math"
        ],
        "content": "<p>Every non-negative integer <code>N</code>&nbsp;has a binary representation.&nbsp; For example,&nbsp;<code>5</code> can be represented as <code>&quot;101&quot;</code>&nbsp;in binary, <code>11</code> as <code>&quot;1011&quot;</code>&nbsp;in binary, and so on.&nbsp; Note that except for <code>N = 0</code>, there are no leading zeroes in any&nbsp;binary representation.</p>\n\n<p>The <em>complement</em>&nbsp;of a binary representation&nbsp;is the number in binary you get when changing every <code>1</code> to a <code>0</code> and <code>0</code> to a <code>1</code>.&nbsp; For example, the complement of <code>&quot;101&quot;</code> in binary is <code>&quot;010&quot;</code> in binary.</p>\n\n<p>For a given number <code>N</code> in base-10, return the complement of it&#39;s binary representation as a&nbsp;base-10 integer.</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">5</span>\n<strong>Output: </strong><span id=\"example-output-1\">2</span>\n<strong>Explanation: </strong>5 is &quot;101&quot; in binary, with complement &quot;010&quot; in binary, which is 2 in base-10.\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">7</span>\n<strong>Output: </strong><span id=\"example-output-2\">0</span>\n<span id=\"example-output-1\"><strong>Explanation: </strong>7 is &quot;111&quot; in binary, with complement &quot;000&quot; in binary, which is 0 in base-10.\n</span></pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">10</span>\n<strong>Output: </strong><span id=\"example-output-3\">5</span>\n<strong>Explanation: </strong>10 is &quot;1010&quot; in binary, with complement &quot;0101&quot; in binary, which is 5 in base-10.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>0 &lt;= N &lt; 10^9</code></li>\n</ol>\n</div>\n</div>\n</div>"
    },
    {
        "id": "1031",
        "title": "Maximum Sum of Two Non-Overlapping Subarrays",
        "slug": "maximum-sum-of-two-non-overlapping-subarrays",
        "difficulty": "Medium",
        "likes": 224,
        "dislikes": 10,
        "hints": [
            "We can use prefix sums to calculate any subarray sum quickly.\r\nFor each L length subarray, find the best possible M length subarray that occurs before and after it."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Array"
        ],
        "content": "<p>Given an array <code>A</code> of non-negative integers, return the maximum sum of elements in two non-overlapping (contiguous) subarrays, which have lengths&nbsp;<code>L</code> and <code>M</code>.&nbsp; (For clarification, the <code>L</code>-length subarray could occur before or after the <code>M</code>-length subarray.)</p>\n\n<p>Formally,&nbsp;return the largest <code>V</code> for which&nbsp;<code>V = (A[i] + A[i+1] + ... + A[i+L-1]) + (A[j] + A[j+1] + ... + A[j+M-1])</code> and either:</p>\n\n<ul>\n\t<li><code>0 &lt;= i &lt; i + L - 1 &lt; j &lt; j + M - 1 &lt; A.length</code>, <strong>or</strong></li>\n\t<li><code>0 &lt;= j &lt; j + M - 1 &lt; i &lt; i + L - 1 &lt; A.length</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-1-1\">[0,6,5,2,2,5,1,9,4]</span>, L = <span id=\"example-input-1-2\">1</span>, M = <span id=\"example-input-1-3\">2</span>\n<strong>Output: </strong><span id=\"example-output-1\">20\n<strong>Explanation:</strong> One choice of subarrays is [9] with length 1, and [6,5] with length 2.</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-2-1\">[3,8,1,3,2,1,8,9,0]</span>, L = <span id=\"example-input-2-2\">3</span>, M = <span id=\"example-input-2-3\">2</span>\n<strong>Output: </strong><span id=\"example-output-2\">29\n</span><span id=\"example-output-1\"><strong>Explanation:</strong> One choice of subarrays is</span><span> [3,8,1] with length 3, and [8,9] with length 2.</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-3-1\">[2,1,5,6,0,9,5,0,3,8]</span>, L = <span id=\"example-input-3-2\">4</span>, M = <span id=\"example-input-3-3\">3</span>\n<strong>Output: </strong><span id=\"example-output-3\">31\n</span><span id=\"example-output-1\"><strong>Explanation:</strong> One choice of subarrays is</span><span> [5,6,0,9] with length 4, and [3,8] with length 3.</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>L &gt;= 1</code></li>\n\t<li><code>M &gt;= 1</code></li>\n\t<li><code>L + M &lt;= A.length &lt;= 1000</code></li>\n\t<li><code>0 &lt;= A[i] &lt;= 1000</code></li>\n</ol>\n</div>\n</div>\n</div>\n"
    },
    {
        "id": "1007",
        "title": "Minimum Domino Rotations For Equal Row",
        "slug": "minimum-domino-rotations-for-equal-row",
        "difficulty": "Medium",
        "likes": 99,
        "dislikes": 78,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "731",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Greedy"
        ],
        "content": "<p>In a row of dominoes, <code>A[i]</code> and <code>B[i]</code> represent the top and bottom halves of the <code>i</code>-th domino.&nbsp; (A domino is a tile with two numbers from 1 to 6 - one on each half of the tile.)</p>\n\n<p>We may rotate the <code>i</code>-th domino, so that <code>A[i]</code> and <code>B[i]</code> swap values.</p>\n\n<p>Return the minimum number of rotations so that all the values in <code>A</code> are the same, or all the values in <code>B</code>&nbsp;are the same.</p>\n\n<p>If it cannot be done, return <code>-1</code>.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<p><img alt=\"\" src=\"./img/minimum-domino-rotations-for-equal-row_1.png\" style=\"height: 161px; width: 200px;\" /></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-1-1\">[2,1,2,4,2,2]</span>, B = <span id=\"example-input-1-2\">[5,2,6,2,3,2]</span>\n<strong>Output: </strong><span id=\"example-output-1\">2</span>\n<strong>Explanation: </strong>\nThe first figure represents the dominoes as given by A and B: before we do any rotations.\nIf we rotate the second and fourth dominoes, we can make every value in the top row equal to 2, as indicated by the second figure.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-2-1\">[3,5,1,2,3]</span>, B = <span id=\"example-input-2-2\">[3,6,3,3,4]</span>\n<strong>Output: </strong><span id=\"example-output-2\">-1</span>\n<strong>Explanation: </strong>\nIn this case, it is not possible to rotate the dominoes to make one row of values equal.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A[i], B[i] &lt;= 6</code></li>\n\t<li><code>2 &lt;= A.length == B.length &lt;= 20000</code></li>\n</ol>\n"
    },
    {
        "id": "867",
        "title": "Transpose Matrix",
        "slug": "transpose-matrix",
        "difficulty": "Easy",
        "likes": 235,
        "dislikes": 242,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "502",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array"
        ],
        "content": "<p>Given a&nbsp;matrix <code>A</code>, return the transpose of <code>A</code>.</p>\n\n<p>The transpose of a matrix is the matrix flipped over it&#39;s main diagonal, switching the row and column indices of the matrix.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[[1,2,3],[4,5,6],[7,8,9]]</span>\n<strong>Output: </strong><span id=\"example-output-1\">[[1,4,7],[2,5,8],[3,6,9]]</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[[1,2,3],[4,5,6]]</span>\n<strong>Output: </strong><span id=\"example-output-2\">[[1,4],[2,5],[3,6]]</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><span><strong>Note:</strong></span></p>\n\n<ol>\n\t<li><code><span>1 &lt;= A.length&nbsp;&lt;= 1000</span></code></li>\n\t<li><code><span>1 &lt;= A[0].length&nbsp;&lt;= 1000</span></code></li>\n</ol>\n</div>\n</div>\n"
    },
    {
        "id": "795",
        "title": "Number of Subarrays with Bounded Maximum",
        "slug": "number-of-subarrays-with-bounded-maximum",
        "difficulty": "Medium",
        "likes": 384,
        "dislikes": 37,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "424",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array"
        ],
        "content": "<p>We are given an array <code>A</code> of positive integers, and two positive integers <code>L</code> and <code>R</code> (<code>L &lt;= R</code>).</p>\n\n<p>Return the number of (contiguous, non-empty) subarrays such that the value of the maximum array element in that subarray is at least <code>L</code> and at most <code>R</code>.</p>\n\n<pre>\n<strong>Example :</strong>\n<strong>Input:</strong> \nA = [2, 1, 4, 3]\nL = 2\nR = 3\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> There are three subarrays that meet the requirements: [2], [2, 1], [3].\n</pre>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>L, R&nbsp; and <code>A[i]</code> will be an integer in the range <code>[0, 10^9]</code>.</li>\n\t<li>The length of <code>A</code> will be in the range of <code>[1, 50000]</code>.</li>\n</ul>\n"
    },
    {
        "id": "51",
        "title": "N-Queens",
        "slug": "n-queens",
        "difficulty": "Hard",
        "likes": 1151,
        "dislikes": 50,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"N-Queens II\", \"titleSlug\": \"n-queens-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Grid Illumination\", \"titleSlug\": \"grid-illumination\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "714",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Backtracking"
        ],
        "content": "<p>The <em>n</em>-queens puzzle is the problem of placing <em>n</em> queens on an <em>n</em>&times;<em>n</em> chessboard such that no two queens attack each other.</p>\n\n<p><img alt=\"\" src=\"./img/n-queens_1.png\" style=\"width: 258px; height: 276px;\" /></p>\n\n<p>Given an integer <em>n</em>, return all distinct solutions to the <em>n</em>-queens puzzle.</p>\n\n<p>Each solution contains a distinct board configuration of the <em>n</em>-queens&#39; placement, where <code>&#39;Q&#39;</code> and <code>&#39;.&#39;</code> both indicate a queen and an empty space respectively.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input:</strong> 4\n<strong>Output:</strong> [\n [&quot;.Q..&quot;,  // Solution 1\n  &quot;...Q&quot;,\n  &quot;Q...&quot;,\n  &quot;..Q.&quot;],\n\n [&quot;..Q.&quot;,  // Solution 2\n  &quot;Q...&quot;,\n  &quot;...Q&quot;,\n  &quot;.Q..&quot;]\n]\n<strong>Explanation:</strong> There exist two distinct solutions to the 4-queens puzzle as shown above.\n</pre>\n"
    },
    {
        "id": "981",
        "title": "Time Based Key-Value Store",
        "slug": "time-based-key-value-store",
        "difficulty": "Medium",
        "likes": 288,
        "dislikes": 46,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "677",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Hash Table",
            "Binary Search"
        ],
        "content": "<p>Create a timebased key-value store class&nbsp;<code>TimeMap</code>, that supports two operations.</p>\n\n<p>1. <code>set(string key, string value, int timestamp)</code></p>\n\n<ul>\n\t<li>Stores the <code>key</code> and <code>value</code>, along with the given <code>timestamp</code>.</li>\n</ul>\n\n<p>2. <code>get(string key, int timestamp)</code></p>\n\n<ul>\n\t<li>Returns a value such that <code>set(key, value, timestamp_prev)</code> was called previously, with <code>timestamp_prev &lt;= timestamp</code>.</li>\n\t<li>If there are multiple such values, it returns the one with the largest <code>timestamp_prev</code>.</li>\n\t<li>If there are no values, it returns the empty string (<code>&quot;&quot;</code>).</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>inputs = <span id=\"example-input-1-1\">[&quot;TimeMap&quot;,&quot;set&quot;,&quot;get&quot;,&quot;get&quot;,&quot;set&quot;,&quot;get&quot;,&quot;get&quot;]</span>, inputs = <span id=\"example-input-1-2\">[[],[&quot;foo&quot;,&quot;bar&quot;,1],[&quot;foo&quot;,1],[&quot;foo&quot;,3],[&quot;foo&quot;,&quot;bar2&quot;,4],[&quot;foo&quot;,4],[&quot;foo&quot;,5]]</span>\n<strong>Output: </strong><span id=\"example-output-1\">[null,null,&quot;bar&quot;,&quot;bar&quot;,null,&quot;bar2&quot;,&quot;bar2&quot;]</span>\n<strong>Explanation: </strong><span id=\"example-output-1\">&nbsp; \nTimeMap kv; &nbsp; \nkv.set(&quot;foo&quot;, &quot;bar&quot;, 1); // store the key &quot;foo&quot; and value &quot;bar&quot; along with timestamp = 1 &nbsp; \nkv.get(&quot;foo&quot;, 1);  // output &quot;bar&quot; &nbsp; \nkv.get(&quot;foo&quot;, 3); // output &quot;bar&quot; since there is no value corresponding to foo at timestamp 3 and timestamp 2, then the only value is at timestamp 1 ie &quot;bar&quot; &nbsp; \nkv.set(&quot;foo&quot;, &quot;bar2&quot;, 4); &nbsp; \nkv.get(&quot;foo&quot;, 4); // output &quot;bar2&quot; &nbsp; \nkv.get(&quot;foo&quot;, 5); //output &quot;bar2&quot; &nbsp; \n</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>inputs = <span id=\"example-input-2-1\">[&quot;TimeMap&quot;,&quot;set&quot;,&quot;set&quot;,&quot;get&quot;,&quot;get&quot;,&quot;get&quot;,&quot;get&quot;,&quot;get&quot;]</span>, inputs = <span id=\"example-input-2-2\">[[],[&quot;love&quot;,&quot;high&quot;,10],[&quot;love&quot;,&quot;low&quot;,20],[&quot;love&quot;,5],[&quot;love&quot;,10],[&quot;love&quot;,15],[&quot;love&quot;,20],[&quot;love&quot;,25]]</span>\n<strong>Output: </strong><span id=\"example-output-2\">[null,null,null,&quot;&quot;,&quot;high&quot;,&quot;high&quot;,&quot;low&quot;,&quot;low&quot;]</span>\n</pre>\n</div>\n</div>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li>All key/value strings are lowercase.</li>\n\t<li>All key/value strings have&nbsp;length in the range&nbsp;<code>[1, 100]</code></li>\n\t<li>The <code>timestamps</code> for all <code>TimeMap.set</code> operations are strictly increasing.</li>\n\t<li><code>1 &lt;= timestamp &lt;= 10^7</code></li>\n\t<li><code>TimeMap.set</code> and <code>TimeMap.get</code>&nbsp;functions will be called a total of <code>120000</code> times (combined) per test case.</li>\n</ol>\n"
    },
    {
        "id": "1046",
        "title": "Last Stone Weight",
        "slug": "last-stone-weight",
        "difficulty": "Easy",
        "likes": 182,
        "dislikes": 12,
        "hints": [
            "Simulate the process.  We can do it with a heap, or by sorting some list of stones every time we take a turn."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Heap",
            "Greedy"
        ],
        "content": "<p>We have a collection of rocks, each rock has a positive integer weight.</p>\n\n<p>Each turn, we choose the two <strong>heaviest</strong>&nbsp;rocks&nbsp;and smash them together.&nbsp; Suppose the stones have weights <code>x</code> and <code>y</code> with <code>x &lt;= y</code>.&nbsp; The result of this smash is:</p>\n\n<ul>\n\t<li>If <code>x == y</code>, both stones are totally destroyed;</li>\n\t<li>If <code>x != y</code>, the stone of weight <code>x</code> is totally destroyed, and the stone of weight <code>y</code> has new weight <code>y-x</code>.</li>\n</ul>\n\n<p>At the end, there is at most 1 stone left.&nbsp; Return the weight of this stone (or 0 if there are no stones left.)</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>[2,7,4,1,8,1]\n<strong>Output: </strong>1\n<strong>Explanation: </strong>\nWe combine 7 and 8 to get 1 so the array converts to [2,4,1,1,1] then,\nwe combine 2 and 4 to get 2 so the array converts to [2,1,1,1] then,\nwe combine 2 and 1 to get 1 so the array converts to [1,1,1] then,\nwe combine 1 and 1 to get 0 so the array converts to [1] then that&#39;s the value of last stone.</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= stones.length &lt;= 30</code></li>\n\t<li><code>1 &lt;= stones[i] &lt;= 1000</code></li>\n</ol>"
    },
    {
        "id": "1071",
        "title": "Greatest Common Divisor of Strings",
        "slug": "greatest-common-divisor-of-strings",
        "difficulty": "Easy",
        "likes": 142,
        "dislikes": 50,
        "hints": [
            "The greatest common divisor must be a prefix of each string, so we can try all prefixes."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "String"
        ],
        "content": "<p>For strings <code>S</code> and <code>T</code>, we say &quot;<code>T</code> divides <code>S</code>&quot; if and only if <code>S = T + ... + T</code>&nbsp; (<code>T</code> concatenated with itself 1 or more times)</p>\n\n<p>Return the largest string <code>X</code> such that <code>X</code> divides <font face=\"monospace\">str1</font>&nbsp;and <code>X</code> divides <font face=\"monospace\">str2</font>.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>str1 = <span id=\"example-input-1-1\">&quot;ABCABC&quot;</span>, str2 = <span id=\"example-input-1-2\">&quot;ABC&quot;</span>\n<strong>Output: </strong><span id=\"example-output-1\">&quot;ABC&quot;</span>\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>str1 = <span id=\"example-input-2-1\">&quot;ABABAB&quot;</span>, str2 = <span id=\"example-input-2-2\">&quot;ABAB&quot;</span>\n<strong>Output: </strong><span id=\"example-output-2\">&quot;AB&quot;</span>\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>str1 = <span id=\"example-input-3-1\">&quot;LEET&quot;</span>, str2 = <span id=\"example-input-3-2\">&quot;CODE&quot;</span>\n<strong>Output: </strong><span id=\"example-output-3\">&quot;&quot;</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= str1.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= str2.length &lt;= 1000</code></li>\n\t<li><code>str1[i]</code> and <code>str2[i]</code> are English uppercase letters.</li>\n</ol>"
    },
    {
        "id": "831",
        "title": "Masking Personal Information",
        "slug": "masking-personal-information",
        "difficulty": "Medium",
        "likes": 52,
        "dislikes": 231,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "462",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String"
        ],
        "content": "<p>We are given a&nbsp;personal information string <code>S</code>, which may represent&nbsp;either <strong>an email address</strong> or <strong>a phone number.</strong></p>\n\n<p>We would like to mask this&nbsp;personal information according to the&nbsp;following rules:</p>\n\n<p><br />\n<u><strong>1. Email address:</strong></u></p>\n\n<p>We define a&nbsp;<strong>name</strong> to be a string of <code>length &ge; 2</code> consisting&nbsp;of only lowercase letters&nbsp;<code>a-z</code> or uppercase&nbsp;letters&nbsp;<code>A-Z</code>.</p>\n\n<p>An email address starts with a name, followed by the&nbsp;symbol <code>&#39;@&#39;</code>, followed by a name, followed by the&nbsp;dot&nbsp;<code>&#39;.&#39;</code>&nbsp;and&nbsp;followed by a name.&nbsp;</p>\n\n<p>All email addresses are&nbsp;guaranteed to be valid and in the format of&nbsp;<code>&quot;name1@name2.name3&quot;.</code></p>\n\n<p>To mask an email, <strong>all names must be converted to lowercase</strong> and <strong>all letters between the first and last letter of the first name</strong> must be replaced by 5 asterisks <code>&#39;*&#39;</code>.</p>\n\n<p><br />\n<u><strong>2. Phone number:</strong></u></p>\n\n<p>A phone number is a string consisting of&nbsp;only the digits <code>0-9</code> or the characters from the set <code>{&#39;+&#39;, &#39;-&#39;, &#39;(&#39;, &#39;)&#39;, &#39;&nbsp;&#39;}.</code>&nbsp;You may assume a phone&nbsp;number contains&nbsp;10 to 13 digits.</p>\n\n<p>The last 10 digits make up the local&nbsp;number, while the digits before those make up the country code. Note that&nbsp;the country code is optional. We want to expose only the last 4 digits&nbsp;and mask all other&nbsp;digits.</p>\n\n<p>The local&nbsp;number&nbsp;should be formatted and masked as <code>&quot;***-***-1111&quot;,&nbsp;</code>where <code>1</code> represents the exposed digits.</p>\n\n<p>To mask a phone number with country code like <code>&quot;+111 111 111 1111&quot;</code>, we write it in the form <code>&quot;+***-***-***-1111&quot;.</code>&nbsp; The <code>&#39;+&#39;</code>&nbsp;sign and the first <code>&#39;-&#39;</code>&nbsp;sign before the local number should only exist if there is a country code.&nbsp; For example, a 12 digit phone number mask&nbsp;should start&nbsp;with <code>&quot;+**-&quot;</code>.</p>\n\n<p>Note that extraneous characters like <code>&quot;(&quot;, &quot;)&quot;, &quot; &quot;</code>, as well as&nbsp;extra dashes or plus signs not part of the above formatting scheme should be removed.</p>\n\n<p>&nbsp;</p>\n\n<p>Return the correct &quot;mask&quot; of the information provided.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>&quot;LeetCode@LeetCode.com&quot;\n<strong>Output: </strong>&quot;l*****e@leetcode.com&quot;\n<strong>Explanation:&nbsp;</strong>All names are converted to lowercase, and the letters between the\n&nbsp;            first and last letter of the first name is replaced by 5 asterisks.\n&nbsp;            Therefore, &quot;leetcode&quot; -&gt; &quot;l*****e&quot;.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>&quot;AB@qq.com&quot;\n<strong>Output: </strong>&quot;a*****b@qq.com&quot;\n<strong>Explanation:&nbsp;</strong>There must be 5 asterisks between the first and last letter \n&nbsp;            of the first name &quot;ab&quot;. Therefore, &quot;ab&quot; -&gt; &quot;a*****b&quot;.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>&quot;1(234)567-890&quot;\n<strong>Output: </strong>&quot;***-***-7890&quot;\n<strong>Explanation:</strong>&nbsp;10 digits in the phone number, which means all digits make up the local number.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input: </strong>&quot;86-(10)12345678&quot;\n<strong>Output: </strong>&quot;+**-***-***-5678&quot;\n<strong>Explanation:</strong>&nbsp;12 digits, 2 digits for country code and 10 digits for local number. \n</pre>\n\n<p><strong>Notes:</strong></p>\n\n<ol>\n\t<li><code>S.length&nbsp;&lt;=&nbsp;40</code>.</li>\n\t<li>Emails have length at least 8.</li>\n\t<li>Phone numbers have length at least 10.</li>\n</ol>\n"
    },
    {
        "id": "210",
        "title": "Course Schedule II",
        "slug": "course-schedule-ii",
        "difficulty": "Medium",
        "likes": 1184,
        "dislikes": 82,
        "hints": [
            "This problem is equivalent to finding the topological order in a directed graph. If a cycle exists, no topological ordering exists and therefore it will be impossible to take all courses.",
            "<a href=\"https://class.coursera.org/algo-003/lecture/52\" target=\"_blank\">Topological Sort via DFS</a> - A great video tutorial (21 minutes) on Coursera explaining the basic concepts of Topological Sort.",
            "Topological sort could also be done via <a href=\"http://en.wikipedia.org/wiki/Topological_sorting#Algorithms\" target=\"_blank\">BFS</a>."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Course Schedule\", \"titleSlug\": \"course-schedule\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Alien Dictionary\", \"titleSlug\": \"alien-dictionary\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Minimum Height Trees\", \"titleSlug\": \"minimum-height-trees\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Sequence Reconstruction\", \"titleSlug\": \"sequence-reconstruction\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Course Schedule III\", \"titleSlug\": \"course-schedule-iii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "645",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Depth-first Search",
            "Breadth-first Search",
            "Graph",
            "Topological Sort"
        ],
        "content": "<p>There are a total of <em>n</em> courses you have to take, labeled from <code>0</code> to <code>n-1</code>.</p>\n\n<p>Some courses may have prerequisites, for example to take course 0 you have to first take course 1, which is expressed as a pair: <code>[0,1]</code></p>\n\n<p>Given the total number of courses and a list of prerequisite <strong>pairs</strong>, return the ordering of courses you should take to finish all courses.</p>\n\n<p>There may be multiple correct orders, you just need to return one of them. If it is impossible to finish all courses, return an empty array.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> 2, [[1,0]] \n<strong>Output: </strong><code>[0,1]</code>\n<strong>Explanation:</strong>&nbsp;There are a total of 2 courses to take. To take course 1 you should have finished   \n&nbsp;            course 0. So the correct course order is <code>[0,1] .</code></pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> 4, [[1,0],[2,0],[3,1],[3,2]]\n<strong>Output: </strong><code>[0,1,2,3] or [0,2,1,3]</code>\n<strong>Explanation:</strong>&nbsp;There are a total of 4 courses to take. To take course 3 you should have finished both     \n             courses 1 and 2. Both courses 1 and 2 should be taken after you finished course 0. \n&nbsp;            So one correct course order is <code>[0,1,2,3]</code>. Another correct ordering is <code>[0,2,1,3] .</code></pre>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li>The input prerequisites is a graph represented by <strong>a list of edges</strong>, not adjacency matrices. Read more about <a href=\"https://www.khanacademy.org/computing/computer-science/algorithms/graph-representation/a/representing-graphs\" target=\"_blank\">how a graph is represented</a>.</li>\n\t<li>You may assume that there are no duplicate edges in the input prerequisites.</li>\n</ol>\n"
    },
    {
        "id": "916",
        "title": "Word Subsets",
        "slug": "word-subsets",
        "difficulty": "Medium",
        "likes": 192,
        "dislikes": 53,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "571",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String"
        ],
        "content": "<p>We are given two arrays <code>A</code> and <code>B</code> of words.&nbsp; Each word is a string of lowercase letters.</p>\n\n<p>Now, say that&nbsp;word <code>b</code> is a subset of word <code>a</code><strong>&nbsp;</strong>if every letter in <code>b</code> occurs in <code>a</code>, <strong>including multiplicity</strong>.&nbsp; For example, <code>&quot;wrr&quot;</code> is a subset of <code>&quot;warrior&quot;</code>, but is not a subset of <code>&quot;world&quot;</code>.</p>\n\n<p>Now say a word <code>a</code> from <code>A</code> is <em>universal</em> if for every <code>b</code> in <code>B</code>, <code>b</code>&nbsp;is a subset of <code>a</code>.&nbsp;</p>\n\n<p>Return a list of all universal words in <code>A</code>.&nbsp; You can return the words in any order.</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-1-1\">[&quot;amazon&quot;,&quot;apple&quot;,&quot;facebook&quot;,&quot;google&quot;,&quot;leetcode&quot;]</span>, B = <span id=\"example-input-1-2\">[&quot;e&quot;,&quot;o&quot;]</span>\n<strong>Output: </strong><span id=\"example-output-1\">[&quot;facebook&quot;,&quot;google&quot;,&quot;leetcode&quot;]</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-2-1\">[&quot;amazon&quot;,&quot;apple&quot;,&quot;facebook&quot;,&quot;google&quot;,&quot;leetcode&quot;]</span>, B = <span id=\"example-input-2-2\">[&quot;l&quot;,&quot;e&quot;]</span>\n<strong>Output: </strong><span id=\"example-output-2\">[&quot;apple&quot;,&quot;google&quot;,&quot;leetcode&quot;]</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-3-1\">[&quot;amazon&quot;,&quot;apple&quot;,&quot;facebook&quot;,&quot;google&quot;,&quot;leetcode&quot;]</span>, B = <span id=\"example-input-3-2\">[&quot;e&quot;,&quot;oo&quot;]</span>\n<strong>Output: </strong><span id=\"example-output-3\">[&quot;facebook&quot;,&quot;google&quot;]</span>\n</pre>\n\n<div>\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-4-1\">[&quot;amazon&quot;,&quot;apple&quot;,&quot;facebook&quot;,&quot;google&quot;,&quot;leetcode&quot;]</span>, B = <span id=\"example-input-4-2\">[&quot;lo&quot;,&quot;eo&quot;]</span>\n<strong>Output: </strong><span id=\"example-output-4\">[&quot;google&quot;,&quot;leetcode&quot;]</span>\n</pre>\n\n<div>\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-5-1\">[&quot;amazon&quot;,&quot;apple&quot;,&quot;facebook&quot;,&quot;google&quot;,&quot;leetcode&quot;]</span>, B = <span id=\"example-input-5-2\">[&quot;ec&quot;,&quot;oc&quot;,&quot;ceo&quot;]</span>\n<strong>Output: </strong><span id=\"example-output-5\">[&quot;facebook&quot;,&quot;leetcode&quot;]</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length, B.length &lt;= 10000</code></li>\n\t<li><code>1 &lt;= A[i].length, B[i].length&nbsp;&lt;= 10</code></li>\n\t<li><code>A[i]</code> and <code>B[i]</code> consist only of lowercase letters.</li>\n\t<li>All words in <code>A[i]</code> are unique: there isn&#39;t <code>i != j</code> with <code>A[i] == A[j]</code>.</li>\n</ol>\n</div>\n</div>\n</div>\n</div>\n</div>\n"
    },
    {
        "id": "417",
        "title": "Pacific Atlantic Water Flow",
        "slug": "pacific-atlantic-water-flow",
        "difficulty": "Medium",
        "likes": 753,
        "dislikes": 137,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Depth-first Search",
            "Breadth-first Search"
        ],
        "content": "<p>Given an <code>m x n</code> matrix of non-negative integers representing the height of each unit cell in a continent, the &quot;Pacific ocean&quot; touches the left and top edges of the matrix and the &quot;Atlantic ocean&quot; touches the right and bottom edges.</p>\n\n<p>Water can only flow in four directions (up, down, left, or right) from a cell to another one with height equal or lower.</p>\n\n<p>Find the list of grid coordinates where water can flow to both the Pacific and Atlantic ocean.</p>\n\n<p><b>Note:</b></p>\n\n<ol>\n\t<li>The order of returned grid coordinates does not matter.</li>\n\t<li>Both <i>m</i> and <i>n</i> are less than 150.</li>\n</ol>\n\n<p>&nbsp;</p>\n\n<p><b>Example:</b></p>\n\n<pre>\nGiven the following 5x5 matrix:\n\n  Pacific ~   ~   ~   ~   ~ \n       ~  1   2   2   3  (5) *\n       ~  3   2   3  (4) (4) *\n       ~  2   4  (5)  3   1  *\n       ~ (6) (7)  1   4   5  *\n       ~ (5)  1   1   2   4  *\n          *   *   *   *   * Atlantic\n\nReturn:\n\n[[0, 4], [1, 3], [1, 4], [2, 2], [3, 0], [3, 1], [4, 0]] (positions with parentheses in above matrix).\n</pre>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "566",
        "title": "Reshape the Matrix",
        "slug": "reshape-the-matrix",
        "difficulty": "Easy",
        "likes": 618,
        "dislikes": 90,
        "hints": [
            "Do you know how 2d matrix is stored in 1d memory? Try to map 2-dimensions into one.",
            "M[i][j]=M[n*i+j] , where n is the number of cols. \r\nThis is the one way of converting 2-d indices into one 1-d index.  \r\nNow, how will you convert 1-d index into 2-d indices?",
            "Try to use division and modulus to convert 1-d index into 2-d indices.",
            "M[i] =>  M[n/i][n%i]   Will it result in right mapping? Take some example and check this formulae."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "120",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array"
        ],
        "content": "<p>In MATLAB, there is a very useful function called 'reshape', which can reshape a matrix into a new one with different size but keep its original data.\n</p>\n\n<p>\nYou're given a matrix represented by a two-dimensional array, and two <b>positive</b> integers <b>r</b> and <b>c</b> representing the <b>row</b> number and <b>column</b> number of the wanted reshaped matrix, respectively.</p>\n\n <p>The reshaped matrix need to be filled with all the elements of the original matrix in the same <b>row-traversing</b> order as they were.\n</p>\n\n<p>\nIf the 'reshape' operation with given parameters is possible and legal, output the new reshaped matrix; Otherwise, output the original matrix.\n</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> \nnums = \n[[1,2],\n [3,4]]\nr = 1, c = 4\n<b>Output:</b> \n[[1,2,3,4]]\n<b>Explanation:</b><br>The <b>row-traversing</b> of nums is [1,2,3,4]. The new reshaped matrix is a 1 * 4 matrix, fill it row by row by using the previous list.\n</pre>\n</p>\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b> \nnums = \n[[1,2],\n [3,4]]\nr = 2, c = 4\n<b>Output:</b> \n[[1,2],\n [3,4]]\n<b>Explanation:</b><br>There is no way to reshape a 2 * 2 matrix to a 2 * 4 matrix. So output the original matrix.\n</pre>\n</p>\n\n<p><b>Note:</b><br>\n<ol>\n<li>The height and width of the given matrix is in range [1, 100].</li>\n<li>The given r and c are all positive.</li>\n</ol>\n</p>"
    },
    {
        "id": "376",
        "title": "Wiggle Subsequence",
        "slug": "wiggle-subsequence",
        "difficulty": "Medium",
        "likes": 611,
        "dislikes": 51,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "60",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming",
            "Greedy"
        ],
        "content": "<p>A sequence of numbers is called a <strong>wiggle sequence</strong> if the differences between successive numbers strictly alternate between positive and negative. The first difference (if one exists) may be either positive or negative. A sequence with fewer than two elements is trivially a wiggle sequence.</p>\n\n<p>For example, <code>[1,7,4,9,2,5]</code> is a wiggle sequence because the differences <code>(6,-3,5,-7,3)</code> are alternately positive and negative. In contrast, <code>[1,4,7,2,5]</code> and <code>[1,7,4,5,5]</code> are not wiggle sequences, the first because its first two differences are positive and the second because its last difference is zero.</p>\n\n<p>Given a sequence of integers, return the length of the longest subsequence that is a wiggle sequence. A subsequence is obtained by deleting some number of elements (eventually, also zero) from the original sequence, leaving the remaining elements in their original order.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[1,7,4,9,2,5]</span>\n<strong>Output: </strong><span id=\"example-output-1\">6\n<strong>Explanation:</strong> </span>The entire sequence is a wiggle sequence.</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[1,17,5,10,13,15,10,5,16,8]</span>\n<strong>Output: </strong><span id=\"example-output-2\">7\n</span><span id=\"example-output-1\"><strong>Explanation: </strong></span>There are several subsequences that achieve this length. One is [1,17,10,13,10,16,8].</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">[1,2,3,4,5,6,7,8,9]</span>\n<strong>Output: </strong><span id=\"example-output-3\">2</span></pre>\n\n<p><b>Follow up:</b><br />\nCan you do it in O(<i>n</i>) time?</p>\n</div>\n</div>\n"
    },
    {
        "id": "192",
        "title": "Word Frequency",
        "slug": "word-frequency",
        "difficulty": "Medium",
        "likes": 147,
        "dislikes": 83,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Top K Frequent Elements\", \"titleSlug\": \"top-k-frequent-elements\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [],
        "content": "<p>Write a bash script to calculate the frequency of each word in a text file <code>words.txt</code>.</p>\n\n<p>For simplicity sake, you may assume:</p>\n\n<ul>\n\t<li><code>words.txt</code> contains only lowercase characters and space <code>&#39; &#39;</code> characters.</li>\n\t<li>Each word must consist of lowercase characters only.</li>\n\t<li>Words are separated by one or more whitespace characters.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<p>Assume that <code>words.txt</code> has the following content:</p>\n\n<pre>\nthe day is sunny the the\nthe sunny is is\n</pre>\n\n<p>Your script should output the following, sorted by descending frequency:</p>\n\n<pre>\nthe 4\nis 3\nsunny 2\nday 1\n</pre>\n\n<p><b>Note:</b></p>\n\n<ul>\n\t<li>Don&#39;t worry about handling ties, it is guaranteed that each word&#39;s frequency count is unique.</li>\n\t<li>Could you write it in one-line using <a href=\"http://tldp.org/HOWTO/Bash-Prog-Intro-HOWTO-4.html\">Unix pipes</a>?</li>\n</ul>\n"
    },
    {
        "id": "108",
        "title": "Convert Sorted Array to Binary Search Tree",
        "slug": "convert-sorted-array-to-binary-search-tree",
        "difficulty": "Easy",
        "likes": 1385,
        "dislikes": 146,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Convert Sorted List to Binary Search Tree\", \"titleSlug\": \"convert-sorted-list-to-binary-search-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Tree",
            "Depth-first Search"
        ],
        "content": "<p>Given an array where elements are sorted in ascending order, convert it to a height balanced BST.</p>\n\n<p>For this problem, a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of <em>every</em> node never differ by more than 1.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\nGiven the sorted array: [-10,-3,0,5,9],\n\nOne possible answer is: [0,-3,9,-10,null,5], which represents the following height balanced BST:\n\n      0\n     / \\\n   -3   9\n   /   /\n -10  5\n</pre>\n"
    },
    {
        "id": "769",
        "title": "Max Chunks To Make Sorted",
        "slug": "max-chunks-to-make-sorted",
        "difficulty": "Medium",
        "likes": 511,
        "dislikes": 88,
        "hints": [
            "The first chunk can be found as the smallest k for which A[:k+1] == [0, 1, 2, ...k]; then we repeat this process."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Max Chunks To Make Sorted II\", \"titleSlug\": \"max-chunks-to-make-sorted-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "387",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array"
        ],
        "content": "<p>Given an array <code>arr</code> that is a permutation of <code>[0, 1, ..., arr.length - 1]</code>, we split the array into some number of &quot;chunks&quot; (partitions), and individually sort each chunk.&nbsp; After concatenating them,&nbsp;the result equals the sorted array.</p>\n\n<p>What is the most number of chunks we could have made?</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [4,3,2,1,0]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong>\nSplitting into two or more chunks will not return the required result.\nFor example, splitting into [4, 3], [2, 1, 0] will result in [3, 4, 0, 1, 2], which isn&#39;t sorted.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [1,0,2,3,4]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong>\nWe can split into two chunks, such as [1, 0], [2, 3, 4].\nHowever, splitting into [1, 0], [2], [3], [4] is the highest number of chunks possible.\n</pre>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li><code>arr</code> will have length in range <code>[1, 10]</code>.</li>\n\t<li><code>arr[i]</code> will be a permutation of <code>[0, 1, ..., arr.length - 1]</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "1091",
        "title": "Shortest Path in Binary Matrix",
        "slug": "shortest-path-in-binary-matrix",
        "difficulty": "Medium",
        "likes": 111,
        "dislikes": 19,
        "hints": [
            "Do a breadth first search to find the shortest path."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Breadth-first Search"
        ],
        "content": "<p>In an N by N square grid, each cell is either empty (0) or blocked (1).</p>\n\n<p>A&nbsp;<em>clear&nbsp;path from top-left to bottom-right</em>&nbsp;has length <code>k</code> if and only if it is composed of cells <code>C_1, C_2, ..., C_k</code>&nbsp;such that:</p>\n\n<ul>\n\t<li>Adjacent cells <code>C_i</code> and <code>C_{i+1}</code> are connected 8-directionally (ie., they are different and&nbsp;share an edge or corner)</li>\n\t<li><code>C_1</code> is at location <code>(0, 0)</code> (ie. has value <code>grid[0][0]</code>)</li>\n\t<li><code>C_k</code>&nbsp;is at location <code>(N-1, N-1)</code> (ie. has value <code>grid[N-1][N-1]</code>)</li>\n\t<li>If <code>C_i</code> is located at&nbsp;<code>(r, c)</code>, then <code>grid[r][c]</code> is empty (ie.&nbsp;<code>grid[r][c] ==&nbsp;0</code>).</li>\n</ul>\n\n<p>Return the length of the shortest such clear path from top-left to bottom-right.&nbsp; If such a path does not exist, return -1.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[[0,1],[1,0]]\n<img alt=\"\" src=\"./img/shortest-path-in-binary-matrix_1.png\" style=\"width: 151px; height: 152px;\" />\n</span>\n<strong>Output: </strong>2\n<img alt=\"\" src=\"./img/shortest-path-in-binary-matrix_2.png\" style=\"width: 151px; height: 152px;\" />\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[[0,0,0],[1,1,0],[1,1,0]]\n<img alt=\"\" src=\"./img/shortest-path-in-binary-matrix_3.png\" style=\"width: 151px; height: 152px;\" />\n</span>\n<strong>Output:</strong> 4\n<img alt=\"\" src=\"./img/shortest-path-in-binary-matrix_4.png\" style=\"width: 151px; height: 152px;\" />\n</pre>\n\n<p>&nbsp;</p>\n</div>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= grid.length == grid[0].length &lt;= 100</code></li>\n\t<li><code>grid[r][c]</code> is <code>0</code> or <code>1</code></li>\n</ol>\n"
    },
    {
        "id": "297",
        "title": "Serialize and Deserialize Binary Tree",
        "slug": "serialize-and-deserialize-binary-tree",
        "difficulty": "Hard",
        "likes": 1843,
        "dislikes": 91,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Encode and Decode Strings\", \"titleSlug\": \"encode-and-decode-strings\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Serialize and Deserialize BST\", \"titleSlug\": \"serialize-and-deserialize-bst\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find Duplicate Subtrees\", \"titleSlug\": \"find-duplicate-subtrees\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Serialize and Deserialize N-ary Tree\", \"titleSlug\": \"serialize-and-deserialize-n-ary-tree\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "563",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree",
            "Design"
        ],
        "content": "<p>Serialization is the process of converting a data structure or object into a sequence of bits so that it can be stored in a file or memory buffer, or transmitted across a network connection link to be reconstructed later in the same or another computer environment.</p>\n\n<p>Design an algorithm to serialize and deserialize a binary tree. There is no restriction on how your serialization/deserialization algorithm should work. You just need to ensure that a binary tree can be serialized to a string and this string can be deserialized to the original tree structure.</p>\n\n<p><strong>Example:&nbsp;</strong></p>\n\n<pre>\nYou may serialize the following tree:\n\n    1\n   / \\\n  2   3\n     / \\\n    4   5\n\nas <code>&quot;[1,2,3,null,null,4,5]&quot;</code>\n</pre>\n\n<p><strong>Clarification:</strong> The above format is the same as <a href=\"/faq/#binary-tree\">how LeetCode serializes a binary tree</a>. You do not necessarily need to follow this format, so please be creative and come up with different approaches yourself.</p>\n\n<p><strong>Note:&nbsp;</strong>Do not use class member/global/static variables to store states. Your serialize and deserialize algorithms should be stateless.</p>\n"
    },
    {
        "id": "433",
        "title": "Minimum Genetic Mutation",
        "slug": "minimum-genetic-mutation",
        "difficulty": "Medium",
        "likes": 290,
        "dislikes": 37,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Word Ladder\", \"titleSlug\": \"word-ladder\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [],
        "content": "<p>A gene string can be represented by an 8-character long string, with choices from <code>&quot;A&quot;</code>, <code>&quot;C&quot;</code>, <code>&quot;G&quot;</code>, <code>&quot;T&quot;</code>.</p>\n\n<p>Suppose we need to investigate about a mutation (mutation from &quot;start&quot; to &quot;end&quot;), where ONE mutation is defined as ONE single character changed in the gene string.</p>\n\n<p>For example, <code>&quot;AACCGGTT&quot;</code> -&gt; <code>&quot;AACCGGTA&quot;</code> is 1 mutation.</p>\n\n<p>Also, there is a given gene &quot;bank&quot;, which records all the valid gene mutations. A gene must be in the bank to make it a valid gene string.</p>\n\n<p>Now, given 3 things - start, end, bank, your task is to determine what is the minimum number of mutations needed to mutate from &quot;start&quot; to &quot;end&quot;. If there is no such a mutation, return -1.</p>\n\n<p><b>Note:</b></p>\n\n<ol>\n\t<li>Starting point is assumed to be valid, so it might not be included in the bank.</li>\n\t<li>If multiple mutations are needed, all mutations during in the sequence must be valid.</li>\n\t<li>You may assume start and end string is not the same.</li>\n</ol>\n\n<p>&nbsp;</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\nstart: &quot;AACCGGTT&quot;\nend:   &quot;AACCGGTA&quot;\nbank: [&quot;AACCGGTA&quot;]\n\nreturn: 1\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Example 2:</b></p>\n\n<pre>\nstart: &quot;AACCGGTT&quot;\nend:   &quot;AAACGGTA&quot;\nbank: [&quot;AACCGGTA&quot;, &quot;AACCGCTA&quot;, &quot;AAACGGTA&quot;]\n\nreturn: 2\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Example 3:</b></p>\n\n<pre>\nstart: &quot;AAAAACCC&quot;\nend:   &quot;AACCCCCC&quot;\nbank: [&quot;AAAACCCC&quot;, &quot;AAACCCCC&quot;, &quot;AACCCCCC&quot;]\n\nreturn: 3\n</pre>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "842",
        "title": "Split Array into Fibonacci Sequence",
        "slug": "split-array-into-fibonacci-sequence",
        "difficulty": "Medium",
        "likes": 296,
        "dislikes": 101,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Additive Number\", \"titleSlug\": \"additive-number\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Fibonacci Number\", \"titleSlug\": \"fibonacci-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "475",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String",
            "Backtracking",
            "Greedy"
        ],
        "content": "<p>Given a string <code>S</code>&nbsp;of digits, such as <code>S = &quot;123456579&quot;</code>, we can split it into a <em>Fibonacci-like sequence</em>&nbsp;<code>[123, 456, 579].</code></p>\n\n<p>Formally, a Fibonacci-like sequence is a list&nbsp;<code>F</code> of non-negative integers such that:</p>\n\n<ul>\n\t<li><code>0 &lt;= F[i] &lt;= 2^31 - 1</code>, (that is,&nbsp;each integer fits a 32-bit signed integer type);</li>\n\t<li><code>F.length &gt;= 3</code>;</li>\n\t<li>and<code> F[i] + F[i+1] = F[i+2] </code>for all <code>0 &lt;= i &lt; F.length - 2</code>.</li>\n</ul>\n\n<p>Also, note that when splitting the string into pieces, each piece must not have extra leading zeroes, except if the piece is the number 0 itself.</p>\n\n<p>Return any Fibonacci-like sequence split from <code>S</code>, or return <code>[]</code> if it cannot be done.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>&quot;123456579&quot;\n<strong>Output: </strong>[123,456,579]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>&quot;11235813&quot;\n<strong>Output: </strong>[1,1,2,3,5,8,13]\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>&quot;112358130&quot;\n<strong>Output: </strong>[]\n<strong>Explanation: </strong>The task is impossible.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input: </strong>&quot;0123&quot;\n<strong>Output: </strong>[]\n<strong>Explanation: </strong>Leading zeroes are not allowed, so &quot;01&quot;, &quot;2&quot;, &quot;3&quot; is not valid.\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input: </strong>&quot;1101111&quot;\n<strong>Output: </strong>[110, 1, 111]\n<strong>Explanation: </strong>The output [11, 0, 11, 11] would also be accepted.\n</pre>\n\n<p><strong>Note: </strong></p>\n\n<ol>\n\t<li><code>1 &lt;= S.length&nbsp;&lt;= 200</code></li>\n\t<li><code>S</code> contains only digits.</li>\n</ol>\n"
    },
    {
        "id": "955",
        "title": "Delete Columns to Make Sorted II",
        "slug": "delete-columns-to-make-sorted-ii",
        "difficulty": "Medium",
        "likes": 143,
        "dislikes": 31,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "634",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Greedy"
        ],
        "content": "<p>We are given an array&nbsp;<code>A</code> of <code>N</code> lowercase letter strings, all of the same length.</p>\n\n<p>Now, we may choose any set of deletion indices, and for each string, we delete all the characters in those indices.</p>\n\n<p>For example, if we have an array <code>A = [&quot;abcdef&quot;,&quot;uvwxyz&quot;]</code> and deletion indices <code>{0, 2, 3}</code>, then the final array after deletions is <code>[&quot;bef&quot;,&quot;vyz&quot;]</code>.</p>\n\n<p>Suppose we chose a set of deletion indices <code>D</code> such that after deletions, the final array has its elements in <strong>lexicographic</strong> order (<code>A[0] &lt;= A[1] &lt;= A[2] ... &lt;= A[A.length - 1]</code>).</p>\n\n<p>Return the minimum possible value of <code>D.length</code>.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<div>\n<ol>\n</ol>\n</div>\n</div>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[&quot;ca&quot;,&quot;bb&quot;,&quot;ac&quot;]</span>\n<strong>Output: </strong><span id=\"example-output-1\">1</span>\n<strong>Explanation: </strong>\nAfter deleting the first column, A = [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;].\nNow A is in lexicographic order (ie. A[0] &lt;= A[1] &lt;= A[2]).\nWe require at least 1 deletion since initially A was not in lexicographic order, so the answer is 1.\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span>[&quot;xc&quot;,&quot;yb&quot;,&quot;za&quot;]</span>\n<strong>Output: </strong><span id=\"example-output-2\">0</span>\n<strong>Explanation: </strong>\nA is already in lexicographic order, so we don&#39;t need to delete anything.\nNote that the rows of A are not necessarily in lexicographic order:\nie. it is NOT necessarily true that (A[0][0] &lt;= A[0][1] &lt;= ...)\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">[&quot;zyx&quot;,&quot;wvu&quot;,&quot;tsr&quot;]</span>\n<strong>Output: </strong><span id=\"example-output-3\">3</span>\n<strong>Explanation: </strong>\nWe have to delete every column.\n</pre>\n\n<p>&nbsp;</p>\n\n<div>\n<div>\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= A[i].length &lt;= 100</code></li>\n</ol>\n</div>\n</div>\n</div>\n</div>\n</div>\n"
    },
    {
        "id": "824",
        "title": "Goat Latin",
        "slug": "goat-latin",
        "difficulty": "Easy",
        "likes": 167,
        "dislikes": 448,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "459",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String"
        ],
        "content": "<p>A sentence <code>S</code> is given, composed of words separated by spaces. Each word consists of lowercase and uppercase letters only.</p>\n\n<p>We would like to convert the sentence to &quot;<em>Goat Latin&quot;</em>&nbsp;(a made-up language similar to Pig Latin.)</p>\n\n<p>The rules of Goat Latin are as follows:</p>\n\n<ul>\n\t<li>If a word begins with a vowel (a, e, i, o, or u), append <code>&quot;ma&quot;</code>&nbsp;to the end of the word.<br />\n\tFor example, the word &#39;apple&#39; becomes &#39;applema&#39;.<br />\n\t&nbsp;</li>\n\t<li>If a word begins with a consonant (i.e. not a vowel), remove the first letter and append it to the end, then add <code>&quot;ma&quot;</code>.<br />\n\tFor example, the word <code>&quot;goat&quot;</code>&nbsp;becomes <code>&quot;oatgma&quot;</code>.<br />\n\t&nbsp;</li>\n\t<li>Add one letter <code>&#39;a&#39;</code>&nbsp;to the end of each word per its word index in the sentence, starting with 1.<br />\n\tFor example,&nbsp;the first word gets <code>&quot;a&quot;</code> added to the end, the second word gets <code>&quot;aa&quot;</code> added to the end and so on.</li>\n</ul>\n\n<p>Return the&nbsp;final sentence representing the conversion from <code>S</code>&nbsp;to Goat&nbsp;Latin.&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>&quot;I speak Goat Latin&quot;\n<strong>Output: </strong>&quot;Imaa peaksmaaa oatGmaaaa atinLmaaaaa&quot;\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>&quot;The quick brown fox jumped over the lazy dog&quot;\n<strong>Output: </strong>&quot;heTmaa uickqmaaa rownbmaaaa oxfmaaaaa umpedjmaaaaaa overmaaaaaaa hetmaaaaaaaa azylmaaaaaaaaa ogdmaaaaaaaaaa&quot;\n</pre>\n\n<p>&nbsp;</p>\n\n<p>Notes:</p>\n\n<ul>\n\t<li><code>S</code> contains only uppercase, lowercase and spaces.&nbsp;Exactly one space between each word.</li>\n\t<li><code>1 &lt;= S.length &lt;= 150</code>.</li>\n</ul>\n"
    },
    {
        "id": "382",
        "title": "Linked List Random Node",
        "slug": "linked-list-random-node",
        "difficulty": "Medium",
        "likes": 411,
        "dislikes": 126,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Random Pick Index\", \"titleSlug\": \"random-pick-index\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Reservoir Sampling"
        ],
        "content": "<p>Given a singly linked list, return a random node's value from the linked list. Each node must have the <b>same probability</b> of being chosen.</p>\n\n<p><b>Follow up:</b><br />\nWhat if the linked list is extremely large and its length is unknown to you? Could you solve this efficiently without using extra space?\n</p>\n\n<p><b>Example:</b>\n<pre>\n// Init a singly linked list [1,2,3].\nListNode head = new ListNode(1);\nhead.next = new ListNode(2);\nhead.next.next = new ListNode(3);\nSolution solution = new Solution(head);\n\n// getRandom() should return either 1, 2, or 3 randomly. Each element should have equal probability of returning.\nsolution.getRandom();\n</pre>\n</p>"
    },
    {
        "id": "12",
        "title": "Integer to Roman",
        "slug": "integer-to-roman",
        "difficulty": "Medium",
        "likes": 672,
        "dislikes": 2095,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Roman to Integer\", \"titleSlug\": \"roman-to-integer\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Integer to English Words\", \"titleSlug\": \"integer-to-english-words\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Math",
            "String"
        ],
        "content": "<p>Roman numerals are represented by seven different symbols:&nbsp;<code>I</code>, <code>V</code>, <code>X</code>, <code>L</code>, <code>C</code>, <code>D</code> and <code>M</code>.</p>\n\n<pre>\n<strong>Symbol</strong>       <strong>Value</strong>\nI             1\nV             5\nX             10\nL             50\nC             100\nD             500\nM             1000</pre>\n\n<p>For example,&nbsp;two is written as <code>II</code>&nbsp;in Roman numeral, just two one&#39;s added together. Twelve is written as, <code>XII</code>, which is simply <code>X</code> + <code>II</code>. The number twenty seven is written as <code>XXVII</code>, which is <code>XX</code> + <code>V</code> + <code>II</code>.</p>\n\n<p>Roman numerals are usually written largest to smallest from left to right. However, the numeral for four is not <code>IIII</code>. Instead, the number four is written as <code>IV</code>. Because the one is before the five we subtract it making four. The same principle applies to the number nine, which is written as <code>IX</code>. There are six instances where subtraction is used:</p>\n\n<ul>\n\t<li><code>I</code> can be placed before <code>V</code> (5) and <code>X</code> (10) to make 4 and 9.&nbsp;</li>\n\t<li><code>X</code> can be placed before <code>L</code> (50) and <code>C</code> (100) to make 40 and 90.&nbsp;</li>\n\t<li><code>C</code> can be placed before <code>D</code> (500) and <code>M</code> (1000) to make 400 and 900.</li>\n</ul>\n\n<p>Given an integer, convert it to a roman numeral. Input is guaranteed to be within the range from 1 to 3999.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong>&nbsp;3\n<strong>Output:</strong> &quot;III&quot;</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong>&nbsp;4\n<strong>Output:</strong> &quot;IV&quot;</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong>&nbsp;9\n<strong>Output:</strong> &quot;IX&quot;</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong>&nbsp;58\n<strong>Output:</strong> &quot;LVIII&quot;\n<strong>Explanation:</strong> L = 50, V = 5, III = 3.\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong>&nbsp;1994\n<strong>Output:</strong> &quot;MCMXCIV&quot;\n<strong>Explanation:</strong> M = 1000, CM = 900, XC = 90 and IV = 4.</pre>\n"
    },
    {
        "id": "39",
        "title": "Combination Sum",
        "slug": "combination-sum",
        "difficulty": "Medium",
        "likes": 2384,
        "dislikes": 74,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Letter Combinations of a Phone Number\", \"titleSlug\": \"letter-combinations-of-a-phone-number\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Combination Sum II\", \"titleSlug\": \"combination-sum-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Combinations\", \"titleSlug\": \"combinations\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Combination Sum III\", \"titleSlug\": \"combination-sum-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Factor Combinations\", \"titleSlug\": \"factor-combinations\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Combination Sum IV\", \"titleSlug\": \"combination-sum-iv\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Array",
            "Backtracking"
        ],
        "content": "<p>Given a <strong>set</strong> of candidate numbers (<code>candidates</code>) <strong>(without duplicates)</strong> and a target number (<code>target</code>), find all unique combinations in <code>candidates</code>&nbsp;where the candidate numbers sums to <code>target</code>.</p>\n\n<p>The <strong>same</strong> repeated number may be chosen from <code>candidates</code>&nbsp;unlimited number of times.</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>All numbers (including <code>target</code>) will be positive integers.</li>\n\t<li>The solution set must not contain duplicate combinations.</li>\n</ul>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> candidates = <code>[2,3,6,7], </code>target = <code>7</code>,\n<strong>A solution set is:</strong>\n[\n  [7],\n  [2,2,3]\n]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> candidates = [2,3,5]<code>, </code>target = 8,\n<strong>A solution set is:</strong>\n[\n&nbsp; [2,2,2,2],\n&nbsp; [2,3,3],\n&nbsp; [3,5]\n]\n</pre>\n"
    },
    {
        "id": "1015",
        "title": "Smallest Integer Divisible by K",
        "slug": "smallest-integer-divisible-by-k",
        "difficulty": "Medium",
        "likes": 59,
        "dislikes": 185,
        "hints": [
            "11111 = 1111 * 10 + 1\r\nWe only need to store remainders modulo K.",
            "If we never get a remainder of 0, why would that happen, and how would we know that?"
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Math"
        ],
        "content": "<p>Given a positive integer <code>K</code>, you need find the <strong>smallest</strong>&nbsp;positive integer <code>N</code> such that <code>N</code> is divisible by <code>K</code>, and <code>N</code> only contains the digit <strong>1</strong>.</p>\n\n<p>Return the&nbsp;length of <code>N</code>.&nbsp; If there is no such <code>N</code>,&nbsp;return -1.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> 1\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> The smallest answer is N = 1, which has length 1.</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> 2\n<strong>Output:</strong> -1\n<strong>Explanation:</strong> There is no such positive integer N divisible by 2.</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> 3\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> The smallest answer is N = 111, which has length 3.</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= K &lt;= 10^5</code></li>\n</ul>"
    },
    {
        "id": "211",
        "title": "Add and Search Word - Data structure design",
        "slug": "add-and-search-word-data-structure-design",
        "difficulty": "Medium",
        "likes": 990,
        "dislikes": 59,
        "hints": [
            "You should be familiar with how a Trie works. If not, please work on this problem: <a href=\"https://leetcode.com/problems/implement-trie-prefix-tree/\">Implement Trie (Prefix Tree)</a> first."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Implement Trie (Prefix Tree)\", \"titleSlug\": \"implement-trie-prefix-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Prefix and Suffix Search\", \"titleSlug\": \"prefix-and-suffix-search\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Backtracking",
            "Design",
            "Trie"
        ],
        "content": "<p>Design a data structure that supports the following two operations:</p>\n\n<pre>\nvoid addWord(word)\nbool search(word)\n</pre>\n\n<p>search(word) can search a literal word or a regular expression string containing only letters <code>a-z</code> or <code>.</code>. A <code>.</code> means it can represent any one letter.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\naddWord(&quot;bad&quot;)\naddWord(&quot;dad&quot;)\naddWord(&quot;mad&quot;)\nsearch(&quot;pad&quot;) -&gt; false\nsearch(&quot;bad&quot;) -&gt; true\nsearch(&quot;.ad&quot;) -&gt; true\nsearch(&quot;b..&quot;) -&gt; true\n</pre>\n\n<p><b>Note:</b><br />\nYou may assume that all words are consist of lowercase letters <code>a-z</code>.</p>\n"
    },
    {
        "id": "823",
        "title": "Binary Trees With Factors",
        "slug": "binary-trees-with-factors",
        "difficulty": "Medium",
        "likes": 214,
        "dislikes": 28,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "453",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [],
        "content": "<p>Given an array of unique integers, each integer is strictly greater than 1.</p>\n\n<p>We make a binary tree using these integers&nbsp;and each number may be used for any number of times.</p>\n\n<p>Each non-leaf node&#39;s&nbsp;value should be equal to the product of the values of it&#39;s children.</p>\n\n<p>How many binary trees can we make?&nbsp; Return the answer <strong>modulo 10 ** 9 + 7</strong>.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> <code>A = [2, 4]</code>\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> We can make these trees: <code>[2], [4], [4, 2, 2]</code></pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> <code>A = [2, 4, 5, 10]</code>\n<strong>Output:</strong> <code>7</code>\n<strong>Explanation:</strong> We can make these trees: <code>[2], [4], [5], [10], [4, 2, 2], [10, 2, 5], [10, 5, 2]</code>.</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;=&nbsp;1000</code>.</li>\n\t<li><code>2 &lt;=&nbsp;A[i]&nbsp;&lt;=&nbsp;10 ^ 9</code>.</li>\n</ol>\n"
    },
    {
        "id": "835",
        "title": "Image Overlap",
        "slug": "image-overlap",
        "difficulty": "Medium",
        "likes": 212,
        "dislikes": 293,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "464",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array"
        ],
        "content": "<p>Two images <code>A</code> and <code>B</code> are given, represented as&nbsp;binary, square matrices of the same size.&nbsp; (A binary matrix has only 0s and 1s as values.)</p>\n\n<p>We translate one image however we choose (sliding it left, right, up, or down any number of units), and place it on top of the other image.&nbsp; After, the <em>overlap</em> of this translation is the number of positions that have a 1 in both images.</p>\n\n<p>(Note also that a translation does <strong>not</strong> include any kind of rotation.)</p>\n\n<p>What is the largest possible overlap?</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = [[1,1,0],\n            [0,1,0],\n&nbsp;           [0,1,0]]\n&nbsp;      B = [[0,0,0],\n&nbsp;           [0,1,1],\n&nbsp;           [0,0,1]]\n<strong>Output: </strong>3\n<strong>Explanation:</strong> We slide A to right by 1 unit and down by 1 unit.</pre>\n\n<p><strong>Notes:</strong>&nbsp;</p>\n\n<ol>\n\t<li><code>1 &lt;= A.length = A[0].length = B.length = B[0].length &lt;= 30</code></li>\n\t<li><code>0 &lt;=&nbsp;A[i][j], B[i][j] &lt;= 1</code></li>\n</ol>\n"
    },
    {
        "id": "902",
        "title": "Numbers At Most N Given Digit Set",
        "slug": "numbers-at-most-n-given-digit-set",
        "difficulty": "Hard",
        "likes": 111,
        "dislikes": 27,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "551",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math",
            "Dynamic Programming"
        ],
        "content": "<p>We have a <strong>sorted</strong> set of digits <code>D</code>, a non-empty subset of <code>{&#39;1&#39;,&#39;2&#39;,&#39;3&#39;,&#39;4&#39;,&#39;5&#39;,&#39;6&#39;,&#39;7&#39;,&#39;8&#39;,&#39;9&#39;}</code>.&nbsp; (Note that <code>&#39;0&#39;</code> is not included.)</p>\n\n<p>Now, we write numbers using these digits, using each digit as many times as we want.&nbsp; For example, if <code>D = {&#39;1&#39;,&#39;3&#39;,&#39;5&#39;}</code>, we may write numbers such as <code>&#39;13&#39;, &#39;551&#39;, &#39;1351315&#39;</code>.</p>\n\n<p>Return the number of positive integers that can be written (using the digits of <code>D</code>) that are less than or equal to <code>N</code>.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>D = <span id=\"example-input-1-1\">[&quot;1&quot;,&quot;3&quot;,&quot;5&quot;,&quot;7&quot;]</span>, N = <span id=\"example-input-1-2\">100</span>\n<strong>Output: </strong><span id=\"example-output-1\">20</span>\n<strong>Explanation: </strong>\nThe 20 numbers that can be written are:\n1, 3, 5, 7, 11, 13, 15, 17, 31, 33, 35, 37, 51, 53, 55, 57, 71, 73, 75, 77.\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>D = <span id=\"example-input-2-1\">[&quot;1&quot;,&quot;4&quot;,&quot;9&quot;]</span>, N = <span id=\"example-input-2-2\">1000000000</span>\n<strong>Output: </strong><span id=\"example-output-2\">29523</span>\n<strong>Explanation: </strong>\nWe can write 3 one digit numbers, 9 two digit numbers, 27 three digit numbers,\n81 four digit numbers, 243 five digit numbers, 729 six digit numbers,\n2187 seven digit numbers, 6561 eight digit numbers, and 19683 nine digit numbers.\nIn total, this is 29523 integers that can be written using the digits of D.</pre>\n</div>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>D</code> is a&nbsp;subset of digits <code>&#39;1&#39;-&#39;9&#39;</code> in sorted order.</li>\n\t<li><code>1 &lt;= N &lt;= 10^9</code></li>\n</ol>\n"
    },
    {
        "id": "988",
        "title": "Smallest String Starting From Leaf",
        "slug": "smallest-string-starting-from-leaf",
        "difficulty": "Medium",
        "likes": 177,
        "dislikes": 37,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Sum Root to Leaf Numbers\", \"titleSlug\": \"sum-root-to-leaf-numbers\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Binary Tree Paths\", \"titleSlug\": \"binary-tree-paths\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "682",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree",
            "Depth-first Search"
        ],
        "content": "<p>Given the <code>root</code> of a binary tree, each node has a value from <code>0</code> to <code>25</code> representing the letters <code>&#39;a&#39;</code> to <code>&#39;z&#39;</code>: a value of <code>0</code> represents <code>&#39;a&#39;</code>, a value of <code>1</code> represents <code>&#39;b&#39;</code>, and so on.</p>\n\n<p>Find the lexicographically smallest string that starts at a leaf of this tree and ends at the root.</p>\n\n<p><em>(As a reminder, any shorter prefix of a string is lexicographically smaller: for example, <code>&quot;ab&quot;</code> is lexicographically smaller than <code>&quot;aba&quot;</code>.&nbsp; A leaf of a node is a node that has no children.)</em></p>\n\n<div>\n<div>\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n</div>\n</div>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<p><strong><img alt=\"\" src=\"./img/smallest-string-starting-from-leaf_1.png\" style=\"width: 160px; height: 107px;\" /></strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[0,1,2,3,4,3,4]</span>\n<strong>Output: </strong><span id=\"example-output-1\">&quot;dba&quot;</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<p><strong><img alt=\"\" src=\"./img/smallest-string-starting-from-leaf_2.png\" style=\"width: 160px; height: 107px;\" /></strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[25,1,3,1,3,0,2]</span>\n<strong>Output: </strong><span id=\"example-output-2\">&quot;adz&quot;</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<p><strong><img alt=\"\" src=\"./img/smallest-string-starting-from-leaf_3.png\" style=\"height: 170px; width: 172px;\" /></strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">[2,2,1,null,1,0,null,0]</span>\n<strong>Output: </strong><span id=\"example-output-3\">&quot;abc&quot;</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li>The number of nodes in the given tree will be between <code>1</code> and <code>8500</code>.</li>\n\t<li>Each node in the tree will have a value between <code>0</code> and <code>25</code>.</li>\n</ol>\n</div>\n</div>\n</div>"
    },
    {
        "id": "1034",
        "title": "Coloring A Border",
        "slug": "coloring-a-border",
        "difficulty": "Medium",
        "likes": 54,
        "dislikes": 140,
        "hints": [
            "Use a DFS to find every square in the component.  Then for each square, color it if it has a neighbor that is outside the grid or a different color."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Island Perimeter\", \"titleSlug\": \"island-perimeter\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Depth-first Search"
        ],
        "content": "<p>Given a 2-dimensional&nbsp;<code>grid</code> of integers, each value in the grid represents the color of the grid square at that location.</p>\n\n<p>Two squares belong to the same <em>connected component</em> if and only if they have the same color and are next to each other in any of the 4 directions.</p>\n\n<p>The&nbsp;<em>border</em> of a connected component is&nbsp;all the squares in the connected component that are&nbsp;either 4-directionally adjacent to&nbsp;a square not in the component, or on the boundary of the grid (the first or last row or column).</p>\n\n<p>Given a square at location&nbsp;<code>(r0, c0)</code>&nbsp;in the grid and a <code>color</code>, color the&nbsp;border of the connected component of that square with the given <code>color</code>, and return the final <code>grid</code>.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>grid = <span id=\"example-input-1-1\">[[1,1],[1,2]]</span>, r0 = <span id=\"example-input-1-2\">0</span>, c0 = <span id=\"example-input-1-3\">0</span>, color = <span id=\"example-input-1-4\">3</span>\n<strong>Output: </strong><span id=\"example-output-1\">[[3, 3], [3, 2]]</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>grid = <span id=\"example-input-2-1\">[[1,2,2],[2,3,2]]</span>, r0 = <span id=\"example-input-2-2\">0</span>, c0 = <span id=\"example-input-2-3\">1</span>, color = <span id=\"example-input-2-4\">3</span>\n<strong>Output: </strong><span id=\"example-output-2\">[[1, 3, 3], [2, 3, 3]]</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>grid = <span id=\"example-input-3-1\">[[1,1,1],[1,1,1],[1,1,1]]</span>, r0 = <span id=\"example-input-3-2\">1</span>, c0 = <span id=\"example-input-3-3\">1</span>, color = <span id=\"example-input-3-4\">2</span>\n<strong>Output: </strong><span id=\"example-output-3\">[[2, 2, 2], [2, 1, 2], [2, 2, 2]]</span></pre>\n</div>\n</div>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= grid.length &lt;= 50</code></li>\n\t<li><code>1 &lt;= grid[0].length &lt;= 50</code></li>\n\t<li><code>1 &lt;= grid[i][j] &lt;= 1000</code></li>\n\t<li><code>0 &lt;= r0 &lt; grid.length</code></li>\n\t<li><code>0 &lt;= c0 &lt; grid[0].length</code></li>\n\t<li><code>1 &lt;= color &lt;= 1000</code></li>\n</ol>"
    },
    {
        "id": "670",
        "title": "Maximum Swap",
        "slug": "maximum-swap",
        "difficulty": "Medium",
        "likes": 636,
        "dislikes": 48,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Create Maximum Number\", \"titleSlug\": \"create-maximum-number\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "243",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Math"
        ],
        "content": "<p>\nGiven a non-negative integer, you could swap two digits <b>at most</b> once to get the maximum valued number. Return the maximum valued number you could get.\n</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> 2736\n<b>Output:</b> 7236\n<b>Explanation:</b> Swap the number 2 and the number 7.\n</pre>\n</p>\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b> 9973\n<b>Output:</b> 9973\n<b>Explanation:</b> No swap.\n</pre>\n</p>\n\n\n<p><b>Note:</b><br>\n<ol>\n<li>The given number is in the range [0, 10<sup>8</sup>]</li>\n</ol>\n</p>"
    },
    {
        "id": "990",
        "title": "Satisfiability of Equality Equations",
        "slug": "satisfiability-of-equality-equations",
        "difficulty": "Medium",
        "likes": 239,
        "dislikes": 3,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "687",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Union Find",
            "Graph"
        ],
        "content": "<p>Given an array <font face=\"monospace\">equations</font>&nbsp;of strings that represent relationships between variables, each string <code>equations[i]</code>&nbsp;has length <code>4</code> and takes one of two different forms: <code>&quot;a==b&quot;</code> or <code>&quot;a!=b&quot;</code>.&nbsp; Here, <code>a</code> and <code>b</code> are lowercase letters (not necessarily different) that represent one-letter variable names.</p>\n\n<p>Return <code>true</code>&nbsp;if and only if it is possible to assign integers to variable names&nbsp;so as to satisfy all the given equations.</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[&quot;a==b&quot;,&quot;b!=a&quot;]</span>\n<strong>Output: </strong><span id=\"example-output-1\">false</span>\n<strong>Explanation: </strong>If we assign say, a = 1 and b = 1, then the first equation is satisfied, but not the second.  There is no way to assign the variables to satisfy both equations.\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[&quot;b==a&quot;,&quot;a==b&quot;]</span>\n<strong>Output: </strong><span id=\"example-output-2\">true</span>\n<strong>Explanation: </strong>We could assign a = 1 and b = 1 to satisfy both equations.\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">[&quot;a==b&quot;,&quot;b==c&quot;,&quot;a==c&quot;]</span>\n<strong>Output: </strong><span id=\"example-output-3\">true</span>\n</pre>\n\n<div>\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-4-1\">[&quot;a==b&quot;,&quot;b!=c&quot;,&quot;c==a&quot;]</span>\n<strong>Output: </strong><span id=\"example-output-4\">false</span>\n</pre>\n\n<div>\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-5-1\">[&quot;c==c&quot;,&quot;b==d&quot;,&quot;x!=z&quot;]</span>\n<strong>Output: </strong><span id=\"example-output-5\">true</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= equations.length &lt;= 500</code></li>\n\t<li><code>equations[i].length == 4</code></li>\n\t<li><code>equations[i][0]</code> and <code>equations[i][3]</code> are lowercase letters</li>\n\t<li><code>equations[i][1]</code> is either <code>&#39;=&#39;</code> or <code>&#39;!&#39;</code></li>\n\t<li><code>equations[i][2]</code> is&nbsp;<code>&#39;=&#39;</code></li>\n</ol>\n</div>\n</div>\n</div>\n</div>\n</div>\n"
    },
    {
        "id": "278",
        "title": "First Bad Version",
        "slug": "first-bad-version",
        "difficulty": "Easy",
        "likes": 742,
        "dislikes": 458,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Find First and Last Position of Element in Sorted Array\", \"titleSlug\": \"find-first-and-last-position-of-element-in-sorted-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Search Insert Position\", \"titleSlug\": \"search-insert-position\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Guess Number Higher or Lower\", \"titleSlug\": \"guess-number-higher-or-lower\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "8",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Binary Search"
        ],
        "content": "<p>You are a product manager and currently leading a team to develop a new product. Unfortunately, the latest version of your product fails the quality check. Since each version is developed based on the previous version, all the versions after a bad version are also bad.</p>\n\n<p>Suppose you have <code>n</code> versions <code>[1, 2, ..., n]</code> and you want to find out the first bad one, which causes all the following ones to be bad.</p>\n\n<p>You are given an API <code>bool isBadVersion(version)</code> which will return whether <code>version</code> is bad. Implement a function to find the first bad version. You should minimize the number of calls to the API.</p>\n\n<p><b>Example:</b></p>\n\n<pre>\nGiven n = 5, and version = 4 is the first bad version.\n\n<code>call isBadVersion(3) -&gt; false\ncall isBadVersion(5)&nbsp;-&gt; true\ncall isBadVersion(4)&nbsp;-&gt; true\n\nThen 4 is the first bad version.&nbsp;</code>\n</pre>\n"
    },
    {
        "id": "1013",
        "title": "Partition Array Into Three Parts With Equal Sum",
        "slug": "partition-array-into-three-parts-with-equal-sum",
        "difficulty": "Easy",
        "likes": 177,
        "dislikes": 32,
        "hints": [
            "If we have three parts with the same sum, what is the sum of each?\r\nIf you can find the first part, can you find the second part?"
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Array"
        ],
        "content": "<p>Given an array <code>A</code> of integers, return <code>true</code> if and only if we can partition the array into three <strong>non-empty</strong> parts with equal sums.</p>\n\n<p>Formally, we can partition the array if we can find indexes <code>i+1 &lt; j</code> with <code>(A[0] + A[1] + ... + A[i] == A[i+1] + A[i+2] + ... + A[j-1] == A[j] + A[j-1] + ... + A[A.length - 1])</code></p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[0,2,1,-6,6,-7,9,1,2,0,1]</span>\n<strong>Output: </strong><span id=\"example-output-1\">true\n<strong>Explanation: </strong>0 + 2 + 1 = -6 + 6 - 7 + 9 + 1 = 2 + 0 + 1</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[0,2,1,-6,6,7,9,-1,2,0,1]</span>\n<strong>Output: </strong><span id=\"example-output-2\">false</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">[3,3,6,5,-2,2,5,1,-9,4]</span>\n<strong>Output: </strong><span id=\"example-output-3\">true\n<strong>Explanation: </strong>3 + 3 = 6 = 5 - 2 + 2 + 5 + 1 - 9 + 4</span>\n</pre>\n</div>\n</div>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>3 &lt;= A.length &lt;= 50000</code></li>\n\t<li><code>-10000 &lt;= A[i] &lt;= 10000</code></li>\n</ol>"
    },
    {
        "id": "887",
        "title": "Super Egg Drop",
        "slug": "super-egg-drop",
        "difficulty": "Hard",
        "likes": 438,
        "dislikes": 46,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "528",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math",
            "Binary Search",
            "Dynamic Programming"
        ],
        "content": "<p>You are given <code>K</code> eggs, and you have access to a building with <code>N</code> floors from <code>1</code> to <code>N</code>.&nbsp;</p>\n\n<p>Each egg is identical in function, and if an egg breaks, you cannot drop it&nbsp;again.</p>\n\n<p>You know that there exists a floor <code>F</code> with <code>0 &lt;= F &lt;= N</code> such that any egg dropped at a floor higher than <code>F</code> will break, and any egg dropped at or below floor <code>F</code> will not break.</p>\n\n<p>Each <em>move</em>, you may take an egg (if you have an unbroken one) and drop it from any floor <code>X</code> (with&nbsp;<code>1 &lt;= X &lt;= N</code>).&nbsp;</p>\n\n<p>Your goal is to know&nbsp;<strong>with certainty</strong>&nbsp;what the value of <code>F</code> is.</p>\n\n<p>What is the minimum number of moves that you need to know with certainty&nbsp;what <code>F</code> is, regardless of the initial value of <code>F</code>?</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>K = <span id=\"example-input-1-1\">1</span>, N = <span id=\"example-input-1-2\">2</span>\n<strong>Output: </strong><span id=\"example-output-1\">2</span>\n<strong>Explanation: </strong>\nDrop the egg from floor 1.  If it breaks, we know with certainty that F = 0.\nOtherwise, drop the egg from floor 2.  If it breaks, we know with certainty that F = 1.\nIf it didn&#39;t break, then we know with certainty F = 2.\nHence, we needed 2 moves in the worst case to know what F is with certainty.\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>K = <span id=\"example-input-2-1\">2</span>, N = 6\n<strong>Output: </strong><span id=\"example-output-2\">3</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>K = <span id=\"example-input-3-1\">3</span>, N = <span id=\"example-input-3-2\">14</span>\n<strong>Output: </strong><span id=\"example-output-3\">4</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= K &lt;= 100</code></li>\n\t<li><code>1 &lt;= N &lt;= 10000</code></li>\n</ol>\n</div>\n</div>\n</div>\n"
    },
    {
        "id": "75",
        "title": "Sort Colors",
        "slug": "sort-colors",
        "difficulty": "Medium",
        "likes": 1935,
        "dislikes": 170,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Sort List\", \"titleSlug\": \"sort-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Wiggle Sort\", \"titleSlug\": \"wiggle-sort\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Wiggle Sort II\", \"titleSlug\": \"wiggle-sort-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "716",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Two Pointers",
            "Sort"
        ],
        "content": "<p>Given an array with <em>n</em> objects colored red, white or blue, sort them <strong><a href=\"https://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\">in-place</a>&nbsp;</strong>so that objects of the same color are adjacent, with the colors in the order red, white and blue.</p>\n\n<p>Here, we will use the integers 0, 1, and 2 to represent the color red, white, and blue respectively.</p>\n\n<p><strong>Note:</strong>&nbsp;You are not suppose to use the library&#39;s sort function for this problem.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input:</strong> [2,0,2,1,1,0]\n<strong>Output:</strong> [0,0,1,1,2,2]</pre>\n\n<p><strong>Follow up:</strong></p>\n\n<ul>\n\t<li>A rather straight forward solution is a two-pass algorithm using counting sort.<br />\n\tFirst, iterate the array counting number of 0&#39;s, 1&#39;s, and 2&#39;s, then overwrite array with total number of 0&#39;s, then 1&#39;s and followed by 2&#39;s.</li>\n\t<li>Could you come up with a&nbsp;one-pass algorithm using only constant space?</li>\n</ul>\n"
    },
    {
        "id": "70",
        "title": "Climbing Stairs",
        "slug": "climbing-stairs",
        "difficulty": "Easy",
        "likes": 2603,
        "dislikes": 92,
        "hints": [
            "To reach nth step, what could have been your previous steps? (Think about the step sizes)"
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Min Cost Climbing Stairs\", \"titleSlug\": \"min-cost-climbing-stairs\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Fibonacci Number\", \"titleSlug\": \"fibonacci-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"N-th Tribonacci Number\", \"titleSlug\": \"n-th-tribonacci-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "84",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>You are climbing a stair case. It takes <em>n</em> steps to reach to the top.</p>\n\n<p>Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?</p>\n\n<p><strong>Note:</strong> Given <em>n</em> will be a positive integer.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> 2\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> There are two ways to climb to the top.\n1. 1 step + 1 step\n2. 2 steps\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> 3\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> There are three ways to climb to the top.\n1. 1 step + 1 step + 1 step\n2. 1 step + 2 steps\n3. 2 steps + 1 step\n</pre>\n"
    },
    {
        "id": "773",
        "title": "Sliding Puzzle",
        "slug": "sliding-puzzle",
        "difficulty": "Hard",
        "likes": 375,
        "dislikes": 14,
        "hints": [
            "Perform a breadth-first-search, where the nodes are the puzzle boards and edges are if two puzzle boards can be transformed into one another with one move."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "402",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Breadth-first Search"
        ],
        "content": "<p>On a 2x3 <code>board</code>, there are 5 tiles represented by the integers 1 through 5, and an empty square represented by 0.</p>\n\n<p>A move consists of choosing <code>0</code>&nbsp;and a 4-directionally adjacent number and swapping it.</p>\n\n<p>The state of the board is <em>solved</em> if and only if the <code>board</code> is <code>[[1,2,3],[4,5,0]].</code></p>\n\n<p>Given a puzzle board, return the least number of moves required so that the state of the board is solved. If it is impossible for the state of the board to be solved, return -1.</p>\n\n<p><strong>Examples:</strong></p>\n\n<pre>\n<strong>Input:</strong> board = [[1,2,3],[4,0,5]]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> Swap the 0 and the 5 in one move.\n</pre>\n\n<pre>\n<strong>Input:</strong> board = [[1,2,3],[5,4,0]]\n<strong>Output:</strong> -1\n<strong>Explanation:</strong> No number of moves will make the board solved.\n</pre>\n\n<pre>\n<strong>Input:</strong> board = [[4,1,2],[5,0,3]]\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> 5 is the smallest number of moves that solves the board.\nAn example path:\nAfter move 0: [[4,1,2],[5,0,3]]\nAfter move 1: [[4,1,2],[0,5,3]]\nAfter move 2: [[0,1,2],[4,5,3]]\nAfter move 3: [[1,0,2],[4,5,3]]\nAfter move 4: [[1,2,0],[4,5,3]]\nAfter move 5: [[1,2,3],[4,5,0]]\n</pre>\n\n<pre>\n<strong>Input:</strong> board = [[3,2,4],[1,5,0]]\n<strong>Output:</strong> 14\n</pre>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li><code>board</code> will be a 2 x 3 array as described above.</li>\n\t<li><code>board[i][j]</code> will be a permutation of <code>[0, 1, 2, 3, 4, 5]</code>.</li>\n</ul>\n"
    },
    {
        "id": "606",
        "title": "Construct String from Binary Tree",
        "slug": "construct-string-from-binary-tree",
        "difficulty": "Easy",
        "likes": 574,
        "dislikes": 798,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Construct Binary Tree from String\", \"titleSlug\": \"construct-binary-tree-from-string\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find Duplicate Subtrees\", \"titleSlug\": \"find-duplicate-subtrees\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "152",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String",
            "Tree"
        ],
        "content": "<p>You need to construct a string consists of parenthesis and integers from a binary tree with the preorder traversing way.</p>\n\n<p>The null node needs to be represented by empty parenthesis pair \"()\". And you need to omit all the empty parenthesis pairs that don't affect the one-to-one mapping relationship between the string and the original binary tree.</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> Binary tree: [1,2,3,4]\n       1\n     /   \\\n    2     3\n   /    \n  4     \n\n<b>Output:</b> \"1(2(4))(3)\"\n<br/><b>Explanation:</b> Originallay it needs to be \"1(2(4)())(3()())\", <br/>but you need to omit all the unnecessary empty parenthesis pairs. <br/>And it will be \"1(2(4))(3)\".\n</pre>\n</p>\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b> Binary tree: [1,2,3,null,4]\n       1\n     /   \\\n    2     3\n     \\  \n      4 \n\n<b>Output:</b> \"1(2()(4))(3)\"\n<br/><b>Explanation:</b> Almost the same as the first example, <br/>except we can't omit the first parenthesis pair to break the one-to-one mapping relationship between the input and the output.\n</pre>\n</p>"
    },
    {
        "id": "720",
        "title": "Longest Word in Dictionary",
        "slug": "longest-word-in-dictionary",
        "difficulty": "Easy",
        "likes": 396,
        "dislikes": 497,
        "hints": [
            "For every word in the input list, we can check whether all prefixes of that word are in the input list by using a Set."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Longest Word in Dictionary through Deleting\", \"titleSlug\": \"longest-word-in-dictionary-through-deleting\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Implement Magic Dictionary\", \"titleSlug\": \"implement-magic-dictionary\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "284",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Hash Table",
            "Trie"
        ],
        "content": "<p>Given a list of strings <code>words</code> representing an English Dictionary, find the longest word in <code>words</code> that can be built one character at a time by other words in <code>words</code>.  If there is more than one possible answer, return the longest word with the smallest lexicographical order.</p>  If there is no answer, return the empty string.\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> \nwords = [\"w\",\"wo\",\"wor\",\"worl\", \"world\"]\n<b>Output:</b> \"world\"\n<b>Explanation:</b> \nThe word \"world\" can be built one character at a time by \"w\", \"wo\", \"wor\", and \"worl\".\n</pre>\n</p>\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b> \nwords = [\"a\", \"banana\", \"app\", \"appl\", \"ap\", \"apply\", \"apple\"]\n<b>Output:</b> \"apple\"\n<b>Explanation:</b> \nBoth \"apply\" and \"apple\" can be built from other words in the dictionary. However, \"apple\" is lexicographically smaller than \"apply\".\n</pre>\n</p>\n\n<p><b>Note:</b>\n<li>All the strings in the input will only contain lowercase letters.</li>\n<li>The length of <code>words</code> will be in the range <code>[1, 1000]</code>.</li>\n<li>The length of <code>words[i]</code> will be in the range <code>[1, 30]</code>.</li>\n</p>"
    },
    {
        "id": "182",
        "title": "Duplicate Emails",
        "slug": "duplicate-emails",
        "difficulty": "Easy",
        "likes": 313,
        "dislikes": 21,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "214",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [],
        "content": "<p>Write a SQL query to find all duplicate emails in a table named <code>Person</code>.</p>\n\n<pre>\n+----+---------+\n| Id | Email   |\n+----+---------+\n| 1  | a@b.com |\n| 2  | c@d.com |\n| 3  | a@b.com |\n+----+---------+\n</pre>\n\n<p>For example, your query should return the following for the above table:</p>\n\n<pre>\n+---------+\n| Email   |\n+---------+\n| a@b.com |\n+---------+\n</pre>\n\n<p><strong>Note</strong>: All emails are in lowercase.</p>\n"
    },
    {
        "id": "13",
        "title": "Roman to Integer",
        "slug": "roman-to-integer",
        "difficulty": "Easy",
        "likes": 1429,
        "dislikes": 2847,
        "hints": [
            "I - 1</br>\r\nV - 5</br>\r\nX - 10</br>\r\nL - 50</br>\r\nC - 100</br>\r\nD - 500</br>\r\nM - 1000</br>",
            "<b>Rules:</b></br>\r\n* If I comes before V or X, subtract 1 eg: IV = 4 and IX = 9</br>\r\n* If X comes before L or C, subtract 10 eg: XL = 40 and XC = 90</br>\r\n* If C comes before D or M, subtract 100 eg: CD = 400 and CM = 900</br>"
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Integer to Roman\", \"titleSlug\": \"integer-to-roman\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Math",
            "String"
        ],
        "content": "<p>Roman numerals are represented by seven different symbols:&nbsp;<code>I</code>, <code>V</code>, <code>X</code>, <code>L</code>, <code>C</code>, <code>D</code> and <code>M</code>.</p>\n\n<pre>\n<strong>Symbol</strong>       <strong>Value</strong>\nI             1\nV             5\nX             10\nL             50\nC             100\nD             500\nM             1000</pre>\n\n<p>For example,&nbsp;two is written as <code>II</code>&nbsp;in Roman numeral, just two one&#39;s added together. Twelve is written as, <code>XII</code>, which is simply <code>X</code> + <code>II</code>. The number twenty seven is written as <code>XXVII</code>, which is <code>XX</code> + <code>V</code> + <code>II</code>.</p>\n\n<p>Roman numerals are usually written largest to smallest from left to right. However, the numeral for four is not <code>IIII</code>. Instead, the number four is written as <code>IV</code>. Because the one is before the five we subtract it making four. The same principle applies to the number nine, which is written as <code>IX</code>. There are six instances where subtraction is used:</p>\n\n<ul>\n\t<li><code>I</code> can be placed before <code>V</code> (5) and <code>X</code> (10) to make 4 and 9.&nbsp;</li>\n\t<li><code>X</code> can be placed before <code>L</code> (50) and <code>C</code> (100) to make 40 and 90.&nbsp;</li>\n\t<li><code>C</code> can be placed before <code>D</code> (500) and <code>M</code> (1000) to make 400 and 900.</li>\n</ul>\n\n<p>Given a roman numeral, convert it to an integer. Input is guaranteed to be within the range from 1 to 3999.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong>&nbsp;&quot;III&quot;\n<strong>Output:</strong> 3</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong>&nbsp;&quot;IV&quot;\n<strong>Output:</strong> 4</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong>&nbsp;&quot;IX&quot;\n<strong>Output:</strong> 9</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong>&nbsp;&quot;LVIII&quot;\n<strong>Output:</strong> 58\n<strong>Explanation:</strong> L = 50, V= 5, III = 3.\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong>&nbsp;&quot;MCMXCIV&quot;\n<strong>Output:</strong> 1994\n<strong>Explanation:</strong> M = 1000, CM = 900, XC = 90 and IV = 4.</pre>\n"
    },
    {
        "id": "354",
        "title": "Russian Doll Envelopes",
        "slug": "russian-doll-envelopes",
        "difficulty": "Hard",
        "likes": 658,
        "dislikes": 29,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Longest Increasing Subsequence\", \"titleSlug\": \"longest-increasing-subsequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Binary Search",
            "Dynamic Programming"
        ],
        "content": "<p>You have a number of envelopes with widths and heights given as a pair of integers <code>(w, h)</code>. One envelope can fit into another if and only if both the width and height of one envelope is greater than the width and height of the other envelope.</p>\n\n<p>What is the maximum number of envelopes can you Russian doll? (put one inside other)</p>\n\n<p><b>Note:</b><br />\nRotation is not allowed.</p>\n\n<p><strong>Example:</strong></p>\n\n<div>\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[[5,4],[6,4],[6,7],[2,3]]</span>\n<strong>Output: </strong><span id=\"example-output-1\">3 \n<strong>Explanation: T</strong></span>he maximum number of envelopes you can Russian doll is <code>3</code> ([2,3] =&gt; [5,4] =&gt; [6,7]).\n</pre>\n</div>\n"
    },
    {
        "id": "1145",
        "title": "Binary Tree Coloring Game",
        "slug": "binary-tree-coloring-game",
        "difficulty": "Medium",
        "likes": 112,
        "dislikes": 28,
        "hints": [
            "The best move y must be immediately adjacent to x, since it locks out that subtree.",
            "Can you count each of (up to) 3 different subtrees neighboring x?"
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Tree",
            "Depth-first Search"
        ],
        "content": "<p>Two players play a turn based game on a binary tree.&nbsp; We are given&nbsp;the <code>root</code> of this binary tree, and the number of nodes <code>n</code>&nbsp;in the tree.&nbsp; <code>n</code> is odd, and&nbsp;each node has a distinct value from <code>1</code> to <code>n</code>.</p>\n\n<p>Initially, the first player names a value <code>x</code> with <code>1 &lt;= x &lt;= n</code>, and the second player names a value <code>y</code> with <code>1 &lt;= y &lt;= n</code> and <code>y != x</code>.&nbsp; The first player colors the node with value <code>x</code> red, and the second player colors the node with value <code>y</code> blue.</p>\n\n<p>Then, the players take turns starting with the first player.&nbsp; In each turn, that player chooses a node of their color (red if player 1, blue if player 2) and colors an <strong>uncolored</strong> neighbor of the chosen node (either the left child, right child, or parent of the chosen node.)</p>\n\n<p>If (and only if)&nbsp;a player cannot choose such a node in this way, they must pass their turn.&nbsp; If both players pass their turn, the game ends, and the winner is the player that colored more nodes.</p>\n\n<p>You are the second player.&nbsp; If it is possible to choose such a <code>y</code>&nbsp;to ensure you win the game, return <code>true</code>.&nbsp; If it is not possible, return <code>false</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"./img/binary-tree-coloring-game_1.png\" style=\"width: 300px; height: 186px;\" />\n<pre>\n<strong>Input:</strong> root = [1,2,3,4,5,6,7,8,9,10,11], n = 11, x = 3\n<strong>Output:</strong> true\n<strong>Explanation: </strong>The second player can choose the node with value 2.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>root</code> is the root of a binary tree with <code>n</code> nodes and distinct node values from <code>1</code> to <code>n</code>.</li>\n\t<li><code>n</code> is odd.</li>\n\t<li><code>1 &lt;= x &lt;= n&nbsp;&lt;= 100</code></li>\n</ul>\n"
    },
    {
        "id": "592",
        "title": "Fraction Addition and Subtraction",
        "slug": "fraction-addition-and-subtraction",
        "difficulty": "Medium",
        "likes": 126,
        "dislikes": 248,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Solve the Equation\", \"titleSlug\": \"solve-the-equation\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "140",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math"
        ],
        "content": "<p>Given a string representing an expression of fraction addition and subtraction, you need to return the calculation result in string format. The final result should be <a href = \"https://en.wikipedia.org/wiki/Irreducible_fraction\">irreducible fraction</a>. If your final result is an integer, say <code>2</code>, you need to change it to the format of fraction that has denominator <code>1</code>. So in this case, <code>2</code> should be converted to <code>2/1</code>.</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b>\"-1/2+1/2\"\n<b>Output:</b> \"0/1\"\n</pre>\n</p>\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b>\"-1/2+1/2+1/3\"\n<b>Output:</b> \"1/3\"\n</pre>\n</p>\n\n<p><b>Example 3:</b><br />\n<pre>\n<b>Input:</b>\"1/3-1/2\"\n<b>Output:</b> \"-1/6\"\n</pre>\n</p>\n\n<p><b>Example 4:</b><br />\n<pre>\n<b>Input:</b>\"5/3+1/3\"\n<b>Output:</b> \"2/1\"\n</pre>\n</p>\n\n<p><b>Note:</b><br>\n<ol>\n<li>The input string only contains <code>'0'</code> to <code>'9'</code>, <code>'/'</code>, <code>'+'</code> and <code>'-'</code>. So does the output.</li>\n<li>Each fraction (input and output) has format <code>\u00b1numerator/denominator</code>. If the first input fraction or the output is positive, then <code>'+'</code> will be omitted.</li>\n<li>The input only contains valid <b>irreducible fractions</b>, where the <b>numerator</b> and <b>denominator</b> of each fraction will always be in the range [1,10]. If the denominator is 1, it means this fraction is actually an integer in a fraction format defined above.</li> \n<li>The number of given fractions will be in the range [1,10].</li>\n<li>The numerator and denominator of the <b>final result</b> are guaranteed to be valid and in the range of 32-bit int.</li>\n</ol>\n</p>"
    },
    {
        "id": "874",
        "title": "Walking Robot Simulation",
        "slug": "walking-robot-simulation",
        "difficulty": "Easy",
        "likes": 86,
        "dislikes": 517,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "513",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Greedy"
        ],
        "content": "<p>A robot on an infinite grid starts at point (0, 0) and faces north.&nbsp; The robot can receive one of three possible types of commands:</p>\n\n<ul>\n\t<li><code>-2</code>: turn left 90 degrees</li>\n\t<li><code>-1</code>: turn right 90 degrees</li>\n\t<li><code>1 &lt;= x &lt;= 9</code>: move forward <code>x</code> units</li>\n</ul>\n\n<p>Some of the grid squares are obstacles.&nbsp;</p>\n\n<p>The <code>i</code>-th obstacle is at grid point <code>(obstacles[i][0], obstacles[i][1])</code></p>\n\n<p>If the robot would try to move onto them, the robot stays on the previous grid square instead (but still continues following the rest of the route.)</p>\n\n<p>Return the <strong>square</strong> of the maximum Euclidean distance that the robot will be from the origin.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>commands = <span id=\"example-input-1-1\">[4,-1,3]</span>, obstacles = <span id=\"example-input-1-2\">[]</span>\n<strong>Output: </strong><span id=\"example-output-1\">25</span>\n<span>Explanation: </span>robot will go to (3, 4)\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>commands = <span id=\"example-input-2-1\">[4,-1,4,-2,4]</span>, obstacles = <span id=\"example-input-2-2\">[[2,4]]</span>\n<strong>Output: </strong><span id=\"example-output-2\">65</span>\n<strong>Explanation</strong>: robot will be stuck at (1, 4) before turning left and going to (1, 8)\n</pre>\n</div>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>0 &lt;= commands.length &lt;= 10000</code></li>\n\t<li><code>0 &lt;= obstacles.length &lt;= 10000</code></li>\n\t<li><code>-30000 &lt;= obstacle[i][0] &lt;= 30000</code></li>\n\t<li><code>-30000 &lt;= obstacle[i][1] &lt;= 30000</code></li>\n\t<li>The answer is guaranteed to be less than <code>2 ^ 31</code>.</li>\n</ol>\n"
    },
    {
        "id": "8",
        "title": "String to Integer (atoi)",
        "slug": "string-to-integer-atoi",
        "difficulty": "Medium",
        "likes": 1075,
        "dislikes": 6708,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Reverse Integer\", \"titleSlug\": \"reverse-integer\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Valid Number\", \"titleSlug\": \"valid-number\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Math",
            "String"
        ],
        "content": "<p>Implement <code><span>atoi</span></code> which&nbsp;converts a string to an integer.</p>\n\n<p>The function first discards as many whitespace characters as necessary until the first non-whitespace character is found. Then, starting from this character, takes an optional initial plus or minus sign followed by as many numerical digits as possible, and interprets them as a numerical value.</p>\n\n<p>The string can contain additional characters after those that form the integral number, which are ignored and have no effect on the behavior of this function.</p>\n\n<p>If the first sequence of non-whitespace characters in str is not a valid integral number, or if no such sequence exists because either str is empty or it contains only whitespace characters, no conversion is performed.</p>\n\n<p>If no valid conversion could be performed, a zero value is returned.</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>Only the space character <code>&#39; &#39;</code> is considered as whitespace character.</li>\n\t<li>Assume we are dealing with an environment which could only store integers within the 32-bit signed integer range: [&minus;2<sup>31</sup>,&nbsp; 2<sup>31&nbsp;</sup>&minus; 1]. If the numerical value is out of the range of representable values, INT_MAX (2<sup>31&nbsp;</sup>&minus; 1) or INT_MIN (&minus;2<sup>31</sup>) is returned.</li>\n</ul>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> &quot;42&quot;\n<strong>Output:</strong> 42\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> &quot;   -42&quot;\n<strong>Output:</strong> -42\n<strong>Explanation:</strong> The first non-whitespace character is &#39;-&#39;, which is the minus sign.\n&nbsp;            Then take as many numerical digits as possible, which gets 42.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> &quot;4193 with words&quot;\n<strong>Output:</strong> 4193\n<strong>Explanation:</strong> Conversion stops at digit &#39;3&#39; as the next character is not a numerical digit.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> &quot;words and 987&quot;\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> The first non-whitespace character is &#39;w&#39;, which is not a numerical \n&nbsp;            digit or a +/- sign. Therefore no valid conversion could be performed.</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> &quot;-91283472332&quot;\n<strong>Output:</strong> -2147483648\n<strong>Explanation:</strong> The number &quot;-91283472332&quot; is out of the range of a 32-bit signed integer.\n&nbsp;            Thefore INT_MIN (&minus;2<sup>31</sup>) is returned.</pre>\n"
    },
    {
        "id": "1144",
        "title": "Decrease Elements To Make Array Zigzag",
        "slug": "decrease-elements-to-make-array-zigzag",
        "difficulty": "Medium",
        "likes": 42,
        "dislikes": 61,
        "hints": [
            "Do each case (even indexed is greater, odd indexed is greater) separately. In say the even case, you should decrease each even-indexed element until it is lower than its immediate neighbors."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Array"
        ],
        "content": "<p>Given an array <code>nums</code> of integers, a <em>move</em>&nbsp;consists of choosing any element and <strong>decreasing it by 1</strong>.</p>\n\n<p>An array <code>A</code> is a&nbsp;<em>zigzag array</em>&nbsp;if either:</p>\n\n<ul>\n\t<li>Every even-indexed element is greater than adjacent elements, ie.&nbsp;<code>A[0] &gt; A[1] &lt; A[2] &gt; A[3] &lt; A[4] &gt; ...</code></li>\n\t<li>OR, every odd-indexed element is greater than adjacent elements, ie.&nbsp;<code>A[0] &lt; A[1] &gt; A[2] &lt; A[3] &gt; A[4] &lt; ...</code></li>\n</ul>\n\n<p>Return the minimum number of moves to transform the given array <code>nums</code> into a zigzag array.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> We can decrease 2 to 0 or 3 to 1.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [9,6,1,6,2]\n<strong>Output:</strong> 4\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= nums[i] &lt;= 1000</code></li>\n</ul>\n"
    },
    {
        "id": "726",
        "title": "Number of Atoms",
        "slug": "number-of-atoms",
        "difficulty": "Hard",
        "likes": 247,
        "dislikes": 88,
        "hints": [
            "To parse formula[i:], when we see a `'('`, we will parse recursively whatever is inside the brackets (up to the correct closing ending bracket) and add it to our count, multiplying by the following multiplicity if there is one.\r\n\r\nOtherwise, we should see an uppercase character: we will parse the rest of the letters to get the name, and add that (plus the multiplicity if there is one.)"
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Decode String\", \"titleSlug\": \"decode-string\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Encode String with Shortest Length\", \"titleSlug\": \"encode-string-with-shortest-length\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Parse Lisp Expression\", \"titleSlug\": \"parse-lisp-expression\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "289",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Hash Table",
            "Stack",
            "Recursion"
        ],
        "content": "<p>Given a chemical <code>formula</code> (given as a string), return the count of each atom.\n</p><p>\nAn atomic element always starts with an uppercase character, then zero or more lowercase letters, representing the name.\n</p><p>\n1 or more digits representing the count of that element may follow if the count is greater than 1.  If the count is 1, no digits will follow.  For example, H2O and H2O2 are possible, but H1O2 is impossible.\n</p><p>\nTwo formulas concatenated together produce another formula.  For example, H2O2He3Mg4 is also a formula.  \n</p><p>\nA formula placed in parentheses, and a count (optionally added) is also a formula.  For example, (H2O2) and (H2O2)3 are formulas.\n</p><p>\nGiven a formula, output the count of all elements as a string in the following form: the first name (in sorted order), followed by its count (if that count is more than 1), followed by the second name (in sorted order), followed by its count (if that count is more than 1), and so on.</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> \nformula = \"H2O\"\n<b>Output:</b> \"H2O\"\n<b>Explanation:</b> \nThe count of elements are {'H': 2, 'O': 1}.\n</pre>\n</p>\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b> \nformula = \"Mg(OH)2\"\n<b>Output:</b> \"H2MgO2\"\n<b>Explanation:</b> \nThe count of elements are {'H': 2, 'Mg': 1, 'O': 2}.\n</pre>\n</p>\n\n<p><b>Example 3:</b><br />\n<pre>\n<b>Input:</b> \nformula = \"K4(ON(SO3)2)2\"\n<b>Output:</b> \"K4N2O14S4\"\n<b>Explanation:</b> \nThe count of elements are {'K': 4, 'N': 2, 'O': 14, 'S': 4}.\n</pre>\n</p>\n\n<p><b>Note:</b>\n<li>All atom names consist of lowercase letters, except for the first character which is uppercase.</li>\n<li>The length of <code>formula</code> will be in the range <code>[1, 1000]</code>.</li>\n<li><code>formula</code> will only consist of letters, digits, and round parentheses, and is a valid formula as defined in the problem.</li>\n</p>"
    },
    {
        "id": "279",
        "title": "Perfect Squares",
        "slug": "perfect-squares",
        "difficulty": "Medium",
        "likes": 1692,
        "dislikes": 141,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Count Primes\", \"titleSlug\": \"count-primes\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Ugly Number II\", \"titleSlug\": \"ugly-number-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Math",
            "Dynamic Programming",
            "Breadth-first Search"
        ],
        "content": "<p>Given a positive integer <i>n</i>, find the least number of perfect square numbers (for example, <code>1, 4, 9, 16, ...</code>) which sum to <i>n</i>.</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> <i>n</i> = <code>12</code>\n<b>Output:</b> 3 \n<strong>Explanation: </strong><code>12 = 4 + 4 + 4.</code></pre>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input:</b> <i>n</i> = <code>13</code>\n<b>Output:</b> 2\n<strong>Explanation: </strong><code>13 = 4 + 9.</code></pre>"
    },
    {
        "id": "1156",
        "title": "Swap For Longest Repeated Character Substring",
        "slug": "swap-for-longest-repeated-character-substring",
        "difficulty": "Medium",
        "likes": 122,
        "dislikes": 7,
        "hints": [
            "There are two cases:  a block of characters, or two blocks of characters between one different character. \r\n By keeping a run-length encoded version of the string, we can easily check these cases."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "String"
        ],
        "content": "<p>Given a string <code>text</code>, we are allowed to swap two of the characters in the string. Find the length of the longest substring with repeated characters.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> text = &quot;ababa&quot;\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> We can swap the first &#39;b&#39; with the last &#39;a&#39;, or the last &#39;b&#39; with the first &#39;a&#39;. Then, the longest repeated character substring is &quot;aaa&quot;, which its length is 3.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> text = &quot;aaabaaa&quot;\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> Swap &#39;b&#39; with the last &#39;a&#39; (or the first &#39;a&#39;), and we get longest repeated character substring &quot;aaaaaa&quot;, which its length is 6.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> text = &quot;aaabbaaa&quot;\n<strong>Output:</strong> 4\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> text = &quot;aaaaa&quot;\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> No need to swap, longest repeated character substring is &quot;aaaaa&quot;, length is 5.\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> text = &quot;abcdef&quot;\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= text.length &lt;= 20000</code></li>\n\t<li><code>text</code> consist of lowercase English characters only.</li>\n</ul>"
    },
    {
        "id": "627",
        "title": "Swap Salary",
        "slug": "swap-salary",
        "difficulty": "Easy",
        "likes": 335,
        "dislikes": 240,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "177",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [],
        "content": "<p>Given a table <code>salary</code>, such as the one below, that has m=male and f=female values. Swap all f and m values (i.e., change all f values to m and vice versa) with a <strong>single update statement</strong> and no intermediate temp table.</p>\n\n<p>Note that you must write a single update statement, <strong>DO NOT</strong> write any select statement for this problem.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n| id | name | sex | salary |\n|----|------|-----|--------|\n| 1  | A    | m   | 2500   |\n| 2  | B    | f   | 1500   |\n| 3  | C    | m   | 5500   |\n| 4  | D    | f   | 500    |\n</pre>\nAfter running your <strong>update</strong> statement, the above salary table should have the following rows:\n\n<pre>\n| id | name | sex | salary |\n|----|------|-----|--------|\n| 1  | A    | f   | 2500   |\n| 2  | B    | m   | 1500   |\n| 3  | C    | f   | 5500   |\n| 4  | D    | m   | 500    |\n</pre>\n"
    },
    {
        "id": "372",
        "title": "Super Pow",
        "slug": "super-pow",
        "difficulty": "Medium",
        "likes": 144,
        "dislikes": 597,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Pow(x, n)\", \"titleSlug\": \"powx-n\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Math"
        ],
        "content": "<p>Your task is to calculate <i>a</i><sup><i>b</i></sup> mod 1337 where <i>a</i> is a positive integer and <i>b</i> is an extremely large positive integer given in the form of an array.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<div>\n<pre>\n<strong>Input: </strong>a = <span id=\"example-input-1-1\">2</span>, b = <span id=\"example-input-1-2\">[3]</span>\n<strong>Output: </strong><span id=\"example-output-1\">8</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>a = <span id=\"example-input-2-1\">2</span>, b = <span id=\"example-input-2-2\">[1,0]</span>\n<strong>Output: </strong><span id=\"example-output-2\">1024</span>\n</pre>\n</div>\n</div>"
    },
    {
        "id": "1032",
        "title": "Stream of Characters",
        "slug": "stream-of-characters",
        "difficulty": "Hard",
        "likes": 123,
        "dislikes": 32,
        "hints": [
            "Put the words into a trie, and manage a set of pointers within that trie."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Trie"
        ],
        "content": "<p>Implement the <code>StreamChecker</code> class as follows:</p>\n\n<ul>\n\t<li><code>StreamChecker(words)</code>: Constructor, init the data structure with the given words.</li>\n\t<li><code>query(letter)</code>: returns true if and only if for some <code>k &gt;= 1</code>, the last <code>k</code>&nbsp;characters queried (in order from oldest to newest, including this letter just queried) spell one of the words in the given list.</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\nStreamChecker streamChecker = new StreamChecker([&quot;cd&quot;,&quot;f&quot;,&quot;kl&quot;]); // init the dictionary.\nstreamChecker.query(&#39;a&#39;);          // return false\nstreamChecker.query(&#39;b&#39;);          // return false\nstreamChecker.query(&#39;c&#39;);          // return false\nstreamChecker.query(&#39;d&#39;);          // return true, because &#39;cd&#39; is in the wordlist\nstreamChecker.query(&#39;e&#39;);          // return false\nstreamChecker.query(&#39;f&#39;);          // return true, because &#39;f&#39; is in the wordlist\nstreamChecker.query(&#39;g&#39;);          // return false\nstreamChecker.query(&#39;h&#39;);          // return false\nstreamChecker.query(&#39;i&#39;);          // return false\nstreamChecker.query(&#39;j&#39;);          // return false\nstreamChecker.query(&#39;k&#39;);          // return false\nstreamChecker.query(&#39;l&#39;);          // return true, because &#39;kl&#39; is in the wordlist\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= words.length &lt;= 2000</code></li>\n\t<li><code>1 &lt;= words[i].length &lt;= 2000</code></li>\n\t<li>Words will only consist of lowercase English letters.</li>\n\t<li>Queries will only consist of lowercase English letters.</li>\n\t<li>The number of queries is at most&nbsp;40000.</li>\n</ul>\n"
    },
    {
        "id": "52",
        "title": "N-Queens II",
        "slug": "n-queens-ii",
        "difficulty": "Hard",
        "likes": 324,
        "dislikes": 124,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"N-Queens\", \"titleSlug\": \"n-queens\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "655",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Backtracking"
        ],
        "content": "<p>The <em>n</em>-queens puzzle is the problem of placing <em>n</em> queens on an <em>n</em>&times;<em>n</em> chessboard such that no two queens attack each other.</p>\n\n<p><img src=\"./img/n-queens-ii_1.png\" style=\"width: 258px; height: 276px;\" /></p>\n\n<p>Given an integer&nbsp;<em>n</em>, return the number of&nbsp;distinct solutions to the&nbsp;<em>n</em>-queens puzzle.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input:</strong> 4\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> There are two distinct solutions to the 4-queens puzzle as shown below.\n[\n&nbsp;[&quot;.Q..&quot;, &nbsp;// Solution 1\n&nbsp; &quot;...Q&quot;,\n&nbsp; &quot;Q...&quot;,\n&nbsp; &quot;..Q.&quot;],\n\n&nbsp;[&quot;..Q.&quot;, &nbsp;// Solution 2\n&nbsp; &quot;Q...&quot;,\n&nbsp; &quot;...Q&quot;,\n&nbsp; &quot;.Q..&quot;]\n]\n</pre>\n"
    },
    {
        "id": "787",
        "title": "Cheapest Flights Within K Stops",
        "slug": "cheapest-flights-within-k-stops",
        "difficulty": "Medium",
        "likes": 910,
        "dislikes": 34,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Maximum Vacation Days\", \"titleSlug\": \"maximum-vacation-days\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "418",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming",
            "Heap",
            "Breadth-first Search"
        ],
        "content": "<p>There are <code>n</code> cities connected by&nbsp;<code>m</code> flights. Each fight starts from city&nbsp;<code>u </code>and arrives at&nbsp;<code>v</code> with a price <code>w</code>.</p>\n\n<p>Now given all the cities and flights, together with starting city <code>src</code> and the destination&nbsp;<code>dst</code>, your task is to find the cheapest price from <code>src</code> to <code>dst</code> with up to <code>k</code> stops. If there is no such route, output <code>-1</code>.</p>\n\n<pre>\n<strong>Example 1:</strong>\n<strong>Input:</strong> \nn = 3, edges = [[0,1,100],[1,2,100],[0,2,500]]\nsrc = 0, dst = 2, k = 1\n<strong>Output:</strong> 200\n<strong>Explanation:</strong> \nThe graph looks like this:\n<img alt=\"\" src=\"./img/cheapest-flights-within-k-stops_1.png\" style=\"height:180px; width:246px\" />\n\nThe cheapest price from city <code>0</code> to city <code>2</code> with at most 1 stop costs 200, as marked red in the picture.</pre>\n\n<pre>\n<strong>Example 2:</strong>\n<strong>Input:</strong> \nn = 3, edges = [[0,1,100],[1,2,100],[0,2,500]]\nsrc = 0, dst = 2, k = 0\n<strong>Output:</strong> 500\n<strong>Explanation:</strong> \nThe graph looks like this:\n<img alt=\"\" src=\"./img/cheapest-flights-within-k-stops_1.png\" style=\"height:180px; width:246px\" />\n\nThe cheapest price from city <code>0</code> to city <code>2</code> with at most 0 stop costs 500, as marked blue in the picture.</pre>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>The number of&nbsp;nodes&nbsp;<code>n</code> will be&nbsp;in range <code>[1, 100]</code>, with nodes labeled from <code>0</code> to <code>n</code><code> - 1</code>.</li>\n\t<li>The&nbsp;size of <code>flights</code> will be&nbsp;in range <code>[0, n * (n - 1) / 2]</code>.</li>\n\t<li>The format of each flight will be <code>(src, </code><code>dst</code><code>, price)</code>.</li>\n\t<li>The price of each flight will be in the range <code>[1, 10000]</code>.</li>\n\t<li><code>k</code> is in the range of <code>[0, n - 1]</code>.</li>\n\t<li>There&nbsp;will&nbsp;not&nbsp;be&nbsp;any&nbsp;duplicated&nbsp;flights or&nbsp;self&nbsp;cycles.</li>\n</ul>\n"
    },
    {
        "id": "771",
        "title": "Jewels and Stones",
        "slug": "jewels-and-stones",
        "difficulty": "Easy",
        "likes": 1583,
        "dislikes": 298,
        "hints": [
            "For each stone, check if it is a jewel."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "404",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Hash Table"
        ],
        "content": "<p>You&#39;re given strings <code>J</code> representing the types of stones that are jewels, and <code>S</code> representing the stones you have.&nbsp; Each character in <code>S</code> is a type of stone you have.&nbsp; You want to know how many of the stones you have are also jewels.</p>\n\n<p>The letters in <code>J</code> are guaranteed distinct, and all characters in <code>J</code> and <code>S</code> are letters. Letters are case sensitive, so <code>&quot;a&quot;</code> is considered a different type of stone from <code>&quot;A&quot;</code>.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> J = &quot;aA&quot;, S = &quot;aAAbbbb&quot;\n<strong>Output:</strong> 3\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> J = &quot;z&quot;, S = &quot;ZZ&quot;\n<strong>Output:</strong> 0\n</pre>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li><code>S</code> and <code>J</code> will consist of letters and have length at most 50.</li>\n\t<li>The characters in <code>J</code> are distinct.</li>\n</ul>\n"
    },
    {
        "id": "226",
        "title": "Invert Binary Tree",
        "slug": "invert-binary-tree",
        "difficulty": "Easy",
        "likes": 1982,
        "dislikes": 35,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "37",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree"
        ],
        "content": "<p>Invert a binary tree.</p>\n\n<p><strong>Example:</strong></p>\n\n<p>Input:</p>\n\n<pre>\n     4\n   /   \\\n  2     7\n / \\   / \\\n1   3 6   9</pre>\n\n<p>Output:</p>\n\n<pre>\n     4\n   /   \\\n  7     2\n / \\   / \\\n9   6 3   1</pre>\n\n<p><strong>Trivia:</strong><br />\nThis problem was inspired by <a href=\"https://twitter.com/mxcl/status/608682016205344768\" target=\"_blank\">this original tweet</a> by <a href=\"https://twitter.com/mxcl\" target=\"_blank\">Max Howell</a>:</p>\n\n<blockquote>Google: 90% of our engineers use the software you wrote (Homebrew), but you can&rsquo;t invert a binary tree on a whiteboard so f*** off.</blockquote>\n"
    },
    {
        "id": "921",
        "title": "Minimum Add to Make Parentheses Valid",
        "slug": "minimum-add-to-make-parentheses-valid",
        "difficulty": "Medium",
        "likes": 339,
        "dislikes": 27,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "586",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Stack",
            "Greedy"
        ],
        "content": "<p>Given a string&nbsp;<code>S</code> of <code>&#39;(&#39;</code> and <code>&#39;)&#39;</code> parentheses, we add the minimum number of parentheses ( <code>&#39;(&#39;</code> or <code>&#39;)&#39;</code>, and in any positions ) so that the resulting parentheses string is valid.</p>\n\n<p>Formally, a parentheses string is valid if and only if:</p>\n\n<ul>\n\t<li>It is the empty string, or</li>\n\t<li>It can be written as <code>AB</code>&nbsp;(<code>A</code> concatenated with <code>B</code>), where <code>A</code> and <code>B</code> are valid strings, or</li>\n\t<li>It can be written as <code>(A)</code>, where <code>A</code> is a valid string.</li>\n</ul>\n\n<p>Given a parentheses string, return the minimum number of parentheses we must add to make the resulting string valid.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">&quot;())&quot;</span>\n<strong>Output: </strong><span id=\"example-output-1\">1</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">&quot;(((&quot;</span>\n<strong>Output: </strong><span id=\"example-output-2\">3</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">&quot;()&quot;</span>\n<strong>Output: </strong><span id=\"example-output-3\">0</span>\n</pre>\n\n<div>\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-4-1\">&quot;()))((&quot;</span>\n<strong>Output: </strong><span id=\"example-output-4\">4</span></pre>\n\n<p>&nbsp;</p>\n</div>\n</div>\n</div>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>S.length &lt;= 1000</code></li>\n\t<li><code>S</code> only consists of <code>&#39;(&#39;</code> and <code>&#39;)&#39;</code> characters.</li>\n</ol>\n\n<div>\n<div>\n<div>\n<div>&nbsp;</div>\n</div>\n</div>\n</div>"
    },
    {
        "id": "477",
        "title": "Total Hamming Distance",
        "slug": "total-hamming-distance",
        "difficulty": "Medium",
        "likes": 585,
        "dislikes": 41,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Hamming Distance\", \"titleSlug\": \"hamming-distance\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "80",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Bit Manipulation"
        ],
        "content": "<p>The <a href=\"https://en.wikipedia.org/wiki/Hamming_distance\" target=\"_blank\">Hamming distance</a> between two integers is the number of positions at which the corresponding bits are different.</p>\n\n<p>Now your job is to find the total Hamming distance between all pairs of the given numbers.</p\u0010\u0010\u0010\u0010>\n\n\n<p><b>Example:</b><br />\n<pre>\n<b>Input:</b> 4, 14, 2\n\n<b>Output:</b> 6\n\n<b>Explanation:</b> In binary representation, the 4 is 0100, 14 is 1110, and 2 is 0010 (just\nshowing the four bits relevant in this case). So the answer will be:\nHammingDistance(4, 14) + HammingDistance(4, 2) + HammingDistance(14, 2) = 2 + 2 + 2 = 6.\n</pre>\n</p>\n\n<p><b>Note:</b><br>\n<ol>\n<li>Elements of the given array are in the range of <code>0 </code> to <code>10^9</code>\n<li>Length of the array will not exceed <code>10^4</code>. </li>\n</ol>\n</p>"
    },
    {
        "id": "863",
        "title": "All Nodes Distance K in Binary Tree",
        "slug": "all-nodes-distance-k-in-binary-tree",
        "difficulty": "Medium",
        "likes": 982,
        "dislikes": 18,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "498",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree",
            "Depth-first Search",
            "Breadth-first Search"
        ],
        "content": "<p>We are given a binary tree (with root node&nbsp;<code>root</code>), a <code>target</code> node, and an integer value <code>K</code>.</p>\n\n<p>Return a list of the values of all&nbsp;nodes that have a distance <code>K</code> from the <code>target</code> node.&nbsp; The answer can be returned in any order.</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>root = <span id=\"example-input-1-1\">[3,5,1,6,2,0,8,null,null,7,4]</span>, target = <span id=\"example-input-1-2\">5</span>, K = <span id=\"example-input-1-3\">2</span>\n\n<strong>Output: </strong><span id=\"example-output-1\">[7,4,1]</span>\n\n<strong>Explanation: </strong>\nThe nodes that are a distance 2 from the target node (with value 5)\nhave values 7, 4, and 1.\n\n<img alt=\"\" src=\"./img/all-nodes-distance-k-in-binary-tree_1.png\" style=\"width: 280px; height: 240px;\" />\n\nNote that the inputs &quot;root&quot; and &quot;target&quot; are actually TreeNodes.\nThe descriptions of the inputs above are just serializations of these objects.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li>The given tree is non-empty.</li>\n\t<li>Each node in the tree has unique values&nbsp;<code>0 &lt;= node.val &lt;= 500</code>.</li>\n\t<li>The <code>target</code>&nbsp;node is a node in the tree.</li>\n\t<li><code>0 &lt;= K &lt;= 1000</code>.</li>\n</ol>\n</div>\n"
    },
    {
        "id": "964",
        "title": "Least Operators to Express Number",
        "slug": "least-operators-to-express-number",
        "difficulty": "Hard",
        "likes": 111,
        "dislikes": 37,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "649",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math",
            "Dynamic Programming"
        ],
        "content": "<p>Given a single positive integer <code>x</code>, we will write an expression of the form <code>x (op1) x (op2) x (op3) x ...</code>&nbsp;where each operator <code>op1</code>, <code>op2</code>, etc. is either addition, subtraction, multiplication, or division (<code>+</code>, <code>-</code>, <code>*</code>, or <code>/)</code>.&nbsp; For example, with <code>x = 3</code>, we might write <code>3 * 3 / 3 + 3 - 3</code>&nbsp;which is a value of <font face=\"monospace\">3</font>.</p>\n\n<p>When writing such an expression, we adhere to the following conventions:</p>\n\n<ol>\n\t<li>The division operator (<code>/</code>) returns rational numbers.</li>\n\t<li>There are no parentheses placed anywhere.</li>\n\t<li>We use the usual order of operations: multiplication and division happens before addition and subtraction.</li>\n\t<li>It&#39;s not allowed to use the unary negation&nbsp;operator (<code>-</code>).&nbsp; For example, &quot;<code>x&nbsp;- x</code>&quot;&nbsp;is a valid expression as it only uses subtraction, but &quot;<code>-x +&nbsp;x</code>&quot; is not because it uses negation.</li>\n</ol>\n\n<p>We would like to write an expression with the least number of operators such that the expression equals the given <code>target</code>.&nbsp; Return the least number of operators used.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>x = <span id=\"example-input-1-1\">3</span>, target = <span id=\"example-input-1-2\">19</span>\n<strong>Output: </strong><span id=\"example-output-1\">5</span>\n<strong>Explanation: </strong><span id=\"example-output-1\">3 * 3 + 3 * 3 + 3 / 3.  The expression contains 5 operations.</span>\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<div>\n<pre>\n<strong>Input: </strong>x = <span id=\"example-input-2-1\">5</span>, target = <span id=\"example-input-2-2\">501</span>\n<strong>Output: </strong><span id=\"example-output-2\">8</span>\n<strong>Explanation: </strong><span id=\"example-output-1\">5 * 5 * 5 * 5 - 5 * 5 * 5 + 5 / 5.  The expression contains 8 operations.</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>x = <span id=\"example-input-3-1\">100</span>, target = <span id=\"example-input-3-2\">100000000</span>\n<strong>Output: </strong><span id=\"example-output-3\">3</span>\n<strong>Explanation: </strong><span id=\"example-output-1\">100 * 100 * 100 * 100.  The expression contains 3 operations.</span></pre>\n\n<p>&nbsp;</p>\n</div>\n</div>\n</div>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= x &lt;= 100</code></li>\n\t<li><code>1 &lt;= target &lt;= 2 * 10^8</code></li>\n</ul>\n\n<div>\n<div>\n<div>&nbsp;</div>\n</div>\n</div>\n"
    },
    {
        "id": "191",
        "title": "Number of 1 Bits",
        "slug": "number-of-1-bits",
        "difficulty": "Easy",
        "likes": 498,
        "dislikes": 418,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Reverse Bits\", \"titleSlug\": \"reverse-bits\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Power of Two\", \"titleSlug\": \"power-of-two\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Counting Bits\", \"titleSlug\": \"counting-bits\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Binary Watch\", \"titleSlug\": \"binary-watch\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Hamming Distance\", \"titleSlug\": \"hamming-distance\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Binary Number with Alternating Bits\", \"titleSlug\": \"binary-number-with-alternating-bits\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Prime Number of Set Bits in Binary Representation\", \"titleSlug\": \"prime-number-of-set-bits-in-binary-representation\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "44",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Bit Manipulation"
        ],
        "content": "<p>Write a function that takes an unsigned integer and return&nbsp;the number of &#39;1&#39;&nbsp;bits it has (also known as the <a href=\"http://en.wikipedia.org/wiki/Hamming_weight\" target=\"_blank\">Hamming weight</a>).</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> 00000000000000000000000000001011\n<strong>Output:</strong> 3\n<strong>Explanation: </strong>The input binary string <code><strong>00000000000000000000000000001011</strong>&nbsp;has a total of three &#39;1&#39; bits.</code>\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> 00000000000000000000000010000000\n<strong>Output:</strong> 1\n<strong>Explanation: </strong>The input binary string <strong>00000000000000000000000010000000</strong>&nbsp;has a total of one &#39;1&#39; bit.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> 11111111111111111111111111111101\n<strong>Output:</strong> 31\n<strong>Explanation: </strong>The input binary string <strong>11111111111111111111111111111101</strong> has a total of thirty one &#39;1&#39; bits.</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>Note that in some languages such as Java, there is no unsigned integer type. In this case, the input will be given as signed integer type and should not affect your implementation, as the internal binary representation of the integer is the same whether it is signed or unsigned.</li>\n\t<li>In Java,&nbsp;the compiler represents the signed integers using <a href=\"https://en.wikipedia.org/wiki/Two%27s_complement\" target=\"_blank\">2&#39;s complement notation</a>. Therefore, in <strong>Example 3</strong>&nbsp;above the input represents the signed integer <code>-3</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><b>Follow up</b>:</p>\n\n<p>If this function is called many times, how would you optimize it?</p>\n"
    },
    {
        "id": "206",
        "title": "Reverse Linked List",
        "slug": "reverse-linked-list",
        "difficulty": "Easy",
        "likes": 2748,
        "dislikes": 69,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Reverse Linked List II\", \"titleSlug\": \"reverse-linked-list-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Binary Tree Upside Down\", \"titleSlug\": \"binary-tree-upside-down\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Palindrome Linked List\", \"titleSlug\": \"palindrome-linked-list\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "6",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Linked List"
        ],
        "content": "<p>Reverse a singly linked list.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input:</strong> 1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;NULL\n<strong>Output:</strong> 5-&gt;4-&gt;3-&gt;2-&gt;1-&gt;NULL\n</pre>\n\n<p><b>Follow up:</b></p>\n\n<p>A linked list can be reversed either iteratively or recursively. Could you implement both?</p>\n"
    },
    {
        "id": "500",
        "title": "Keyboard Row",
        "slug": "keyboard-row",
        "difficulty": "Easy",
        "likes": 429,
        "dislikes": 542,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Hash Table"
        ],
        "content": "<p>Given a List of words, return the words that can be typed using letters of <b>alphabet</b> on only one row&#39;s of American keyboard like the image below.</p>\n\n<p>&nbsp;</p>\n\n<p><img alt=\"\" src=\"./img/keyboard-row_1.png\" style=\"width: 100%; max-width: 600px\" /></p>\n&nbsp;\n\n<p><b>Example:</b></p>\n\n<pre>\n<b>Input:</b> [&quot;Hello&quot;, &quot;Alaska&quot;, &quot;Dad&quot;, &quot;Peace&quot;]\n<b>Output:</b> [&quot;Alaska&quot;, &quot;Dad&quot;]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b></p>\n\n<ol>\n\t<li>You may use one character in the keyboard more than once.</li>\n\t<li>You may assume the input string will only contain letters of alphabet.</li>\n</ol>\n"
    },
    {
        "id": "455",
        "title": "Assign Cookies",
        "slug": "assign-cookies",
        "difficulty": "Easy",
        "likes": 350,
        "dislikes": 69,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Greedy"
        ],
        "content": "<p>\nAssume you are an awesome parent and want to give your children some cookies. But, you should give each child at most one cookie. Each child i has a greed factor g<sub>i</sub>, which is the minimum size of a cookie that the child will be content with; and each cookie j has a size s<sub>j</sub>. If s<sub>j</sub> >= g<sub>i</sub>, we can assign the cookie j to the child i, and the child i will be content. Your goal is to maximize the number of your content children and output the maximum number.\n</p>\n\n<p><b>Note:</b><br />\nYou may assume the greed factor is always positive. <br />\nYou cannot assign more than one cookie to one child.\n</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> [1,2,3], [1,1]\n\n<b>Output:</b> 1\n\n<b>Explanation:</b> You have 3 children and 2 cookies. The greed factors of 3 children are 1, 2, 3. \nAnd even though you have 2 cookies, since their size is both 1, you could only make the child whose greed factor is 1 content.\nYou need to output 1.\n</pre>\n</p>\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b> [1,2], [1,2,3]\n\n<b>Output:</b> 2\n\n<b>Explanation:</b> You have 2 children and 3 cookies. The greed factors of 2 children are 1, 2. \nYou have 3 cookies and their sizes are big enough to gratify all of the children, \nYou need to output 2.\n</pre>\n</p>"
    },
    {
        "id": "1017",
        "title": "Convert to Base -2",
        "slug": "convert-to-base-2",
        "difficulty": "Medium",
        "likes": 89,
        "dislikes": 110,
        "hints": [
            "Figure out whether you need the ones digit placed or not, then shift by two."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Math"
        ],
        "content": "<p>Given a number <code>N</code>, return a string consisting of <code>&quot;0&quot;</code>s and <code>&quot;1&quot;</code>s&nbsp;that represents its value in base <code><strong>-2</strong></code>&nbsp;(negative two).</p>\n\n<p>The returned string must have no leading zeroes, unless the string is <code>&quot;0&quot;</code>.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">2</span>\n<strong>Output: </strong><span id=\"example-output-1\">&quot;110&quot;\n<strong>Explantion:</strong> (-2) ^ 2 + (-2) ^ 1 = 2</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">3</span>\n<strong>Output: </strong><span id=\"example-output-2\">&quot;111&quot;\n</span><span id=\"example-output-1\"><strong>Explantion:</strong> (-2) ^ 2 + (-2) ^ 1 + (-2) ^ 0</span><span> = 3</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">4</span>\n<strong>Output: </strong><span id=\"example-output-3\">&quot;100&quot;\n</span><span id=\"example-output-1\"><strong>Explantion:</strong> (-2) ^ 2 = 4</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong><span>Note:</span></strong></p>\n\n<ol>\n\t<li><span><code>0 &lt;= N &lt;= 10^9</code></span></li>\n</ol>\n</div>\n</div>\n</div>"
    },
    {
        "id": "87",
        "title": "Scramble String",
        "slug": "scramble-string",
        "difficulty": "Hard",
        "likes": 335,
        "dislikes": 539,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "String",
            "Dynamic Programming"
        ],
        "content": "<p>Given a string <em>s1</em>, we may represent it as a binary tree by partitioning it to two non-empty substrings recursively.</p>\n\n<p>Below is one possible representation of <em>s1</em> = <code>&quot;great&quot;</code>:</p>\n\n<pre>\n    great\n   /    \\\n  gr    eat\n / \\    /  \\\ng   r  e   at\n           / \\\n          a   t\n</pre>\n\n<p>To scramble the string, we may choose any non-leaf node and swap its two children.</p>\n\n<p>For example, if we choose the node <code>&quot;gr&quot;</code> and swap its two children, it produces a scrambled string <code>&quot;rgeat&quot;</code>.</p>\n\n<pre>\n    rgeat\n   /    \\\n  rg    eat\n / \\    /  \\\nr   g  e   at\n           / \\\n          a   t\n</pre>\n\n<p>We say that <code>&quot;rgeat&quot;</code> is a scrambled string of <code>&quot;great&quot;</code>.</p>\n\n<p>Similarly, if we continue to swap the children of nodes <code>&quot;eat&quot;</code> and <code>&quot;at&quot;</code>, it produces a scrambled string <code>&quot;rgtae&quot;</code>.</p>\n\n<pre>\n    rgtae\n   /    \\\n  rg    tae\n / \\    /  \\\nr   g  ta  e\n       / \\\n      t   a\n</pre>\n\n<p>We say that <code>&quot;rgtae&quot;</code> is a scrambled string of <code>&quot;great&quot;</code>.</p>\n\n<p>Given two strings <em>s1</em> and <em>s2</em> of the same length, determine if <em>s2</em> is a scrambled string of <em>s1</em>.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s1 = &quot;great&quot;, s2 = &quot;rgeat&quot;\n<strong>Output:</strong> true\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s1 = &quot;abcde&quot;, s2 = &quot;caebd&quot;\n<strong>Output:</strong> false</pre>\n"
    },
    {
        "id": "712",
        "title": "Minimum ASCII Delete Sum for Two Strings",
        "slug": "minimum-ascii-delete-sum-for-two-strings",
        "difficulty": "Medium",
        "likes": 626,
        "dislikes": 38,
        "hints": [
            "Let dp(i, j) be the answer for inputs s1[i:] and s2[j:]."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Edit Distance\", \"titleSlug\": \"edit-distance\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Longest Increasing Subsequence\", \"titleSlug\": \"longest-increasing-subsequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Delete Operation for Two Strings\", \"titleSlug\": \"delete-operation-for-two-strings\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "266",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>Given two strings <code>s1, s2</code>, find the lowest ASCII sum of deleted characters to make two strings equal.</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> s1 = \"sea\", s2 = \"eat\"\n<b>Output:</b> 231\n<b>Explanation:</b> Deleting \"s\" from \"sea\" adds the ASCII value of \"s\" (115) to the sum.\nDeleting \"t\" from \"eat\" adds 116 to the sum.\nAt the end, both strings are equal, and 115 + 116 = 231 is the minimum sum possible to achieve this.\n</pre>\n</p>\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b> s1 = \"delete\", s2 = \"leet\"\n<b>Output:</b> 403\n<b>Explanation:</b> Deleting \"dee\" from \"delete\" to turn the string into \"let\",\nadds 100[d]+101[e]+101[e] to the sum.  Deleting \"e\" from \"leet\" adds 101[e] to the sum.\nAt the end, both strings are equal to \"let\", and the answer is 100+101+101+101 = 403.\nIf instead we turned both strings into \"lee\" or \"eet\", we would get answers of 433 or 417, which are higher.\n</pre>\n</p>\n\n<p><b>Note:</b>\n<li><code>0 < s1.length, s2.length <= 1000</code>.</li>\n<li>All elements of each string will have an ASCII value in <code>[97, 122]</code>.</li> \n</p>"
    },
    {
        "id": "884",
        "title": "Uncommon Words from Two Sentences",
        "slug": "uncommon-words-from-two-sentences",
        "difficulty": "Easy",
        "likes": 257,
        "dislikes": 66,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "530",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Hash Table"
        ],
        "content": "<p>We are given two sentences <code>A</code> and <code>B</code>.&nbsp; (A <em>sentence</em>&nbsp;is a string of space separated words.&nbsp; Each <em>word</em> consists only of lowercase letters.)</p>\n\n<p>A word is <em>uncommon</em>&nbsp;if it appears exactly once in one of the sentences, and does not appear in the other sentence.</p>\n\n<p>Return a list of all uncommon words.&nbsp;</p>\n\n<p>You may return the list in any order.</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-1-1\">&quot;this apple is sweet&quot;</span>, B = <span id=\"example-input-1-2\">&quot;this apple is sour&quot;</span>\n<strong>Output: </strong><span id=\"example-output-1\">[&quot;sweet&quot;,&quot;sour&quot;]</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-2-1\">&quot;apple apple&quot;</span>, B = <span id=\"example-input-2-2\">&quot;banana&quot;</span>\n<strong>Output: </strong><span id=\"example-output-2\">[&quot;banana&quot;]</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>0 &lt;= A.length &lt;= 200</code></li>\n\t<li><code>0 &lt;= B.length &lt;= 200</code></li>\n\t<li><code>A</code> and <code>B</code> both contain only spaces and lowercase letters.</li>\n</ol>\n</div>\n</div>\n"
    },
    {
        "id": "234",
        "title": "Palindrome Linked List",
        "slug": "palindrome-linked-list",
        "difficulty": "Easy",
        "likes": 1924,
        "dislikes": 279,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Palindrome Number\", \"titleSlug\": \"palindrome-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Valid Palindrome\", \"titleSlug\": \"valid-palindrome\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Reverse Linked List\", \"titleSlug\": \"reverse-linked-list\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Linked List",
            "Two Pointers"
        ],
        "content": "<p>Given a singly linked list, determine if it is a palindrome.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> 1-&gt;2\n<strong>Output:</strong> false</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> 1-&gt;2-&gt;2-&gt;1\n<strong>Output:</strong> true</pre>\n\n<p><b>Follow up:</b><br />\nCould you do it in O(n) time and O(1) space?</p>\n"
    },
    {
        "id": "621",
        "title": "Task Scheduler",
        "slug": "task-scheduler",
        "difficulty": "Medium",
        "likes": 1901,
        "dislikes": 340,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Rearrange String k Distance Apart\", \"titleSlug\": \"rearrange-string-k-distance-apart\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Reorganize String\", \"titleSlug\": \"reorganize-string\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "172",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Greedy",
            "Queue"
        ],
        "content": "<p>Given a char array representing tasks CPU need to do. It contains capital letters A to Z where different letters represent different tasks. Tasks could be done without original order. Each task could be done in one interval. For each interval, CPU could finish one task or just be idle.</p>\n\n<p>However, there is a non-negative cooling interval <b>n</b> that means between two <b>same tasks</b>, there must be at least n intervals that CPU are doing different tasks or just be idle.</p>\n\n<p>You need to return the <b>least</b> number of intervals the CPU will take to finish all the given tasks.</p>\n\n<p>&nbsp;</p>\n\n<p><b>Example:</b></p>\n\n<pre>\n<b>Input:</b> tasks = [&quot;A&quot;,&quot;A&quot;,&quot;A&quot;,&quot;B&quot;,&quot;B&quot;,&quot;B&quot;], n = 2\n<b>Output:</b> 8\n<b>Explanation:</b> A -&gt; B -&gt; idle -&gt; A -&gt; B -&gt; idle -&gt; A -&gt; B.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b></p>\n\n<ol>\n\t<li>The number of tasks is in the range [1, 10000].</li>\n\t<li>The integer n is in the range [0, 100].</li>\n</ol>\n"
    },
    {
        "id": "473",
        "title": "Matchsticks to Square",
        "slug": "matchsticks-to-square",
        "difficulty": "Medium",
        "likes": 367,
        "dislikes": 42,
        "hints": [
            "Treat the matchsticks as an array. Can we split the array into 4 equal halves?",
            "Every matchstick can belong to either of the 4 sides. We don't know which one. Maybe try out all options!",
            "For every matchstick, we have to try out each of the 4 options i.e. which side it can belong to. We can make use of recursion for this.",
            "We don't really need to keep track of which matchsticks belong to a particular side during recursion. We just need to keep track of the <b>length</b> of each of the 4 sides.",
            "When all matchsticks have been used we simply need to see the length of all 4 sides. If they're equal, we have a square on our hands!"
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "540",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Depth-first Search"
        ],
        "content": "<p>Remember the story of Little Match Girl? By now, you know exactly what matchsticks the little match girl has, please find out a way you can make one square by using up all those matchsticks. You should not break any stick, but you can link them up, and each matchstick must be used <b>exactly</b> one time.</P>\n\n<p> Your input will be several matchsticks the girl has, represented with their stick length. Your output will either be true or false, to represent whether you could make one square using all the matchsticks the little match girl has.</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> [1,1,2,2,2]\n<b>Output:</b> true\n\n<b>Explanation:</b> You can form a square with length 2, one side of the square came two sticks with length 1.\n</pre>\n</p>\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b> [3,3,3,3,4]\n<b>Output:</b> false\n\n<b>Explanation:</b> You cannot find a way to form a square with all the matchsticks.\n</pre>\n</p>\n\n<p><b>Note:</b><br>\n<ol>\n<li>The length sum of the given matchsticks is in the range of <code>0</code> to <code>10^9</code>.\n<li>The length of the given matchstick array will not exceed <code>15</code>.</li>\n</ol>\n</p>"
    },
    {
        "id": "906",
        "title": "Super Palindromes",
        "slug": "super-palindromes",
        "difficulty": "Hard",
        "likes": 53,
        "dislikes": 134,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "562",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math"
        ],
        "content": "<p>Let&#39;s say a positive integer is a&nbsp;<em>superpalindrome</em>&nbsp;if it is a palindrome, and it is also the square of a palindrome.</p>\n\n<p>Now, given two positive&nbsp;integers <code>L</code> and <code>R</code> (represented as strings), return the number of superpalindromes in the inclusive range <code>[L, R]</code>.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>L = <span id=\"example-input-1-1\">&quot;4&quot;</span>, R = <span id=\"example-input-1-2\">&quot;1000&quot;</span>\n<strong>Output: </strong>4\n<span><strong>Explanation</strong>: </span>4, 9, 121, and 484 are superpalindromes.\nNote that 676 is not a superpalindrome: 26 * 26 = 676, but 26 is not a palindrome.</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= len(L) &lt;= 18</code></li>\n\t<li><code>1 &lt;= len(R) &lt;= 18</code></li>\n\t<li><code>L</code> and <code>R</code> are strings representing integers in the range <code>[1, 10^18)</code>.</li>\n\t<li><code>int(L) &lt;= int(R)</code></li>\n</ol>\n\n<div>\n<p>&nbsp;</p>\n</div>\n"
    },
    {
        "id": "746",
        "title": "Min Cost Climbing Stairs",
        "slug": "min-cost-climbing-stairs",
        "difficulty": "Easy",
        "likes": 1218,
        "dislikes": 285,
        "hints": [
            "Say f[i] is the final cost to climb to the top from step i.  Then f[i] = cost[i] + min(f[i+1], f[i+2])."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Climbing Stairs\", \"titleSlug\": \"climbing-stairs\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "347",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Dynamic Programming"
        ],
        "content": "<p>\nOn a staircase, the <code>i</code>-th step has some non-negative cost <code>cost[i]</code> assigned (0 indexed).\n</p><p>\nOnce you pay the cost, you can either climb one or two steps. You need to find minimum cost to reach the top of the floor, and you can either start from the step with index 0, or the step with index 1.\n</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> cost = [10, 15, 20]\n<b>Output:</b> 15\n<b>Explanation:</b> Cheapest is start on cost[1], pay that cost and go to the top.\n</pre>\n</p>\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b> cost = [1, 100, 1, 1, 1, 100, 1, 1, 100, 1]\n<b>Output:</b> 6\n<b>Explanation:</b> Cheapest is start on cost[0], and only step on 1s, skipping cost[3].\n</pre>\n</p>\n\n<p><b>Note:</b><br>\n<ol>\n<li><code>cost</code> will have a length in the range <code>[2, 1000]</code>.</li>\n<li>Every <code>cost[i]</code> will be an integer in the range <code>[0, 999]</code>.</li>\n</ol>\n</p>"
    },
    {
        "id": "55",
        "title": "Jump Game",
        "slug": "jump-game",
        "difficulty": "Medium",
        "likes": 2346,
        "dislikes": 226,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Jump Game II\", \"titleSlug\": \"jump-game-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "35",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Greedy"
        ],
        "content": "<p>Given an array of non-negative integers, you are initially positioned at the first index of the array.</p>\n\n<p>Each element in the array represents your maximum jump length at that position.</p>\n\n<p>Determine if you are able to reach the last index.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> [2,3,1,1,4]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> Jump 1 step from index 0 to 1, then 3 steps to the last index.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> [3,2,1,0,4]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> You will always arrive at index 3 no matter what. Its maximum\n&nbsp;            jump length is 0, which makes it impossible to reach the last index.\n</pre>\n"
    },
    {
        "id": "385",
        "title": "Mini Parser",
        "slug": "mini-parser",
        "difficulty": "Medium",
        "likes": 182,
        "dislikes": 648,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Flatten Nested List Iterator\", \"titleSlug\": \"flatten-nested-list-iterator\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Ternary Expression Parser\", \"titleSlug\": \"ternary-expression-parser\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Remove Comments\", \"titleSlug\": \"remove-comments\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "String",
            "Stack"
        ],
        "content": "<p>Given a nested list of integers represented as a string, implement a parser to deserialize it.</p>\n\n<p>Each element is either an integer, or a list -- whose elements may also be integers or other lists.</p>\n\n<p><b>Note:</b>\nYou may assume that the string is well-formed:\n<ul>\n<li>String is non-empty.</li>\n<li>String does not contain white spaces.</li>\n<li>String contains only digits <code>0-9</code>, <code>[</code>, <code>-</code> <code>,</code>, <code>]</code>.</li>\n</ul>\n</p>\n\n<p><b>Example 1:</b>\n<pre>\nGiven s = \"324\",\n\nYou should return a NestedInteger object which contains a single integer 324.\n</pre>\n</p>\n\n<p><b>Example 2:</b>\n<pre>\nGiven s = \"[123,[456,[789]]]\",\n\nReturn a NestedInteger object containing a nested list with 2 elements:\n\n1. An integer containing value 123.\n2. A nested list containing two elements:\n    i.  An integer containing value 456.\n    ii. A nested list with one element:\n         a. An integer containing value 789.\n</pre>\n</p>"
    },
    {
        "id": "736",
        "title": "Parse Lisp Expression",
        "slug": "parse-lisp-expression",
        "difficulty": "Hard",
        "likes": 180,
        "dislikes": 152,
        "hints": [
            "* If the expression starts with a digit or '-', it's an integer: return it.\r\n\r\n* If the expression starts with a letter, it's a variable.  Recall it by checking the current scope in reverse order.\r\n\r\n* Otherwise, group the tokens (variables or expressions) within this expression by counting the \"balance\" `bal` of the occurrences of `'('` minus the number of occurrences of `')'`.  When the balance is zero, we have ended a token.  For example, `(add 1 (add 2 3))` should have tokens `'1'` and `'(add 2 3)'`.\r\n\r\n* For add and mult expressions, evaluate each token and return the addition or multiplication of them.\r\n\r\n* For let expressions, evaluate each expression sequentially and assign it to the variable in the current scope, then return the evaluation of the final expression."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Ternary Expression Parser\", \"titleSlug\": \"ternary-expression-parser\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Number of Atoms\", \"titleSlug\": \"number-of-atoms\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Basic Calculator IV\", \"titleSlug\": \"basic-calculator-iv\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "305",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String"
        ],
        "content": "<p>\nYou are given a string <code>expression</code> representing a Lisp-like expression to return the integer value of.\n</p><p>\nThe syntax for these expressions is given as follows.\n</p><p>\n<li>An expression is either an integer, a let-expression, an add-expression, a mult-expression, or an assigned variable.  Expressions always evaluate to a single integer.</li>\n</p><p>\n<li>(An integer could be positive or negative.)</li>\n</p><p>\n<li>A let-expression takes the form <code>(let v1 e1 v2 e2 ... vn en expr)</code>, where <code>let</code> is always the string <code>\"let\"</code>, then there are 1 or more pairs of alternating variables and expressions, meaning that the first variable <code>v1</code> is assigned the value of the expression <code>e1</code>, the second variable <code>v2</code> is assigned the value of the expression <code>e2</code>, and so on <b>sequentially</b>; and then the value of this let-expression is the value of the expression <code>expr</code>.</li>\n</p><p>\n<li>An add-expression takes the form <code>(add e1 e2)</code> where <code>add</code> is always the string <code>\"add\"</code>, there are always two expressions <code>e1, e2</code>, and this expression evaluates to the addition of the evaluation of <code>e1</code> and the evaluation of <code>e2</code>.</li>\n</p><p>\n<li>A mult-expression takes the form <code>(mult e1 e2)</code> where <code>mult</code> is always the string <code>\"mult\"</code>, there are always two expressions <code>e1, e2</code>, and this expression evaluates to the multiplication of the evaluation of <code>e1</code> and the evaluation of <code>e2</code>.</li>\n</p><p>\n<li>For the purposes of this question, we will use a smaller subset of variable names.  A variable starts with a lowercase letter, then zero or more lowercase letters or digits.  Additionally for your convenience, the names \"add\", \"let\", or \"mult\" are protected and will never be used as variable names.</li>\n</p><p>\n<li>Finally, there is the concept of scope.  When an expression of a variable name is evaluated, <b>within the context of that evaluation</b>, the innermost scope (in terms of parentheses) is checked first for the value of that variable, and then outer scopes are checked sequentially.  It is guaranteed that every expression is legal.  Please see the examples for more details on scope.</li>\n</p>\n\n<p><b>Evaluation Examples:</b><br />\n<pre>\n<b>Input:</b> (add 1 2)\n<b>Output:</b> 3\n\n<b>Input:</b> (mult 3 (add 2 3))\n<b>Output:</b> 15\n\n<b>Input:</b> (let x 2 (mult x 5))\n<b>Output:</b> 10\n\n<b>Input:</b> (let x 2 (mult x (let x 3 y 4 (add x y))))\n<b>Output:</b> 14\n<b>Explanation:</b> In the expression (add x y), when checking for the value of the variable x,\nwe check from the innermost scope to the outermost in the context of the variable we are trying to evaluate.\nSince x = 3 is found first, the value of x is 3.\n\n<b>Input:</b> (let x 3 x 2 x)\n<b>Output:</b> 2\n<b>Explanation:</b> Assignment in let statements is processed sequentially.\n\n<b>Input:</b> (let x 1 y 2 x (add x y) (add x y))\n<b>Output:</b> 5\n<b>Explanation:</b> The first (add x y) evaluates as 3, and is assigned to x.\nThe second (add x y) evaluates as 3+2 = 5.\n\n<b>Input:</b> (let x 2 (add (let x 3 (let x 4 x)) x))\n<b>Output:</b> 6\n<b>Explanation:</b> Even though (let x 4 x) has a deeper scope, it is outside the context\nof the final x in the add-expression.  That final x will equal 2.\n\n<b>Input:</b> (let a1 3 b2 (add a1 1) b2) \n<b>Output</b> 4\n<b>Explanation:</b> Variable names can contain digits after the first character.\n\n</pre>\n\n<p><b>Note:</b>\n<li>The given string <code>expression</code> is well formatted: There are no leading or trailing spaces, there is only a single space separating different components of the string, and no space between adjacent parentheses.  The expression is guaranteed to be legal and evaluate to an integer.</li>\n<li>The length of <code>expression</code> is at most 2000.  (It is also non-empty, as that would not be a legal expression.)</li>\n<li>The answer and all intermediate calculations of that answer are guaranteed to fit in a 32-bit integer.</li>\n</p>"
    },
    {
        "id": "175",
        "title": "Combine Two Tables",
        "slug": "combine-two-tables",
        "difficulty": "Easy",
        "likes": 699,
        "dislikes": 98,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Employee Bonus\", \"titleSlug\": \"employee-bonus\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "206",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [],
        "content": "<p>Table: <code>Person</code></p>\n\n<pre>\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| PersonId    | int     |\n| FirstName   | varchar |\n| LastName    | varchar |\n+-------------+---------+\nPersonId is the primary key column for this table.\n</pre>\n\n<p>Table: <code>Address</code></p>\n\n<pre>\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| AddressId   | int     |\n| PersonId    | int     |\n| City        | varchar |\n| State       | varchar |\n+-------------+---------+\nAddressId is the primary key column for this table.\n</pre>\n\n<p>&nbsp;</p>\n\n<p>Write a SQL query for a report that provides the following information for each person in the Person table, regardless if there is an address for each of those people:</p>\n\n<pre>\nFirstName, LastName, City, State\n</pre>\n"
    },
    {
        "id": "620",
        "title": "Not Boring Movies",
        "slug": "not-boring-movies",
        "difficulty": "Easy",
        "likes": 193,
        "dislikes": 229,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "204",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [],
        "content": "X city opened a new cinema, many people would like to go to this cinema. The cinema also gives out a poster indicating the movies&rsquo; ratings and descriptions.\n<p>Please write a SQL query to output movies with an odd numbered ID and a description that is not &#39;boring&#39;. Order the result by rating.</p>\n\n<p>&nbsp;</p>\n\n<p>For example, table <code>cinema</code>:</p>\n\n<pre>\n+---------+-----------+--------------+-----------+\n|   id    | movie     |  description |  rating   |\n+---------+-----------+--------------+-----------+\n|   1     | War       |   great 3D   |   8.9     |\n|   2     | Science   |   fiction    |   8.5     |\n|   3     | irish     |   boring     |   6.2     |\n|   4     | Ice song  |   Fantacy    |   8.6     |\n|   5     | House card|   Interesting|   9.1     |\n+---------+-----------+--------------+-----------+\n</pre>\nFor the example above, the output should be:\n\n<pre>\n+---------+-----------+--------------+-----------+\n|   id    | movie     |  description |  rating   |\n+---------+-----------+--------------+-----------+\n|   5     | House card|   Interesting|   9.1     |\n|   1     | War       |   great 3D   |   8.9     |\n+---------+-----------+--------------+-----------+\n</pre>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "123",
        "title": "Best Time to Buy and Sell Stock III",
        "slug": "best-time-to-buy-and-sell-stock-iii",
        "difficulty": "Hard",
        "likes": 1315,
        "dislikes": 57,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Best Time to Buy and Sell Stock\", \"titleSlug\": \"best-time-to-buy-and-sell-stock\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Best Time to Buy and Sell Stock II\", \"titleSlug\": \"best-time-to-buy-and-sell-stock-ii\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Best Time to Buy and Sell Stock IV\", \"titleSlug\": \"best-time-to-buy-and-sell-stock-iv\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Maximum Sum of 3 Non-Overlapping Subarrays\", \"titleSlug\": \"maximum-sum-of-3-non-overlapping-subarrays\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Array",
            "Dynamic Programming"
        ],
        "content": "<p>Say you have an array for which the <em>i</em><sup>th</sup> element is the price of a given stock on day <em>i</em>.</p>\n\n<p>Design an algorithm to find the maximum profit. You may complete at most <em>two</em> transactions.</p>\n\n<p><strong>Note:&nbsp;</strong>You may not engage in multiple transactions at the same time (i.e., you must sell the stock before you buy again).</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> [3,3,5,0,0,3,1,4]\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> Buy on day 4 (price = 0) and sell on day 6 (price = 3), profit = 3-0 = 3.\n&nbsp;            Then buy on day 7 (price = 1) and sell on day 8 (price = 4), profit = 4-1 = 3.</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> [1,2,3,4,5]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4.\n&nbsp;            Note that you cannot buy on day 1, buy on day 2 and sell them later, as you are\n&nbsp;            engaging multiple transactions at the same time. You must sell before buying again.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> [7,6,4,3,1]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> In this case, no transaction is done, i.e. max profit = 0.</pre>\n"
    },
    {
        "id": "1023",
        "title": "Camelcase Matching",
        "slug": "camelcase-matching",
        "difficulty": "Medium",
        "likes": 87,
        "dislikes": 83,
        "hints": [
            "Given a single pattern and word, how can we solve it?",
            "One way to do it is using a DP (pos1, pos2) where pos1 is a pointer to the word and pos2 to the pattern and returns true if we can match the pattern with the given word.",
            "We have two scenarios: The first one is when `word[pos1] == pattern[pos2]`, then the transition will be just DP(pos1 + 1, pos2 + 1). The second scenario is when `word[pos1]` is lowercase then we can add this character to the pattern so that the transition is just DP(pos1 + 1, pos2)\r\nThe case base is `if (pos1 == n && pos2 == m) return true;` Where n and m are the sizes of the strings word and pattern respectively."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "String",
            "Trie"
        ],
        "content": "<p>A query word matches a given <code>pattern</code> if we can insert <strong>lowercase</strong> letters to the pattern word so that it equals the <code>query</code>. (We may insert each character at any position, and may insert 0 characters.)</p>\n\n<p>Given a list of <code>queries</code>, and a <code>pattern</code>, return an <code>answer</code> list of booleans, where <code>answer[i]</code> is true if and only if <code>queries[i]</code> matches the <code>pattern</code>.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>queries = <span id=\"example-input-1-1\">[&quot;FooBar&quot;,&quot;FooBarTest&quot;,&quot;FootBall&quot;,&quot;FrameBuffer&quot;,&quot;ForceFeedBack&quot;]</span>, pattern = <span id=\"example-input-1-2\">&quot;FB&quot;</span>\n<strong>Output: </strong><span id=\"example-output-1\">[true,false,true,true,false]</span>\n<strong>Explanation: </strong>\n&quot;FooBar&quot; can be generated like this &quot;F&quot; + &quot;oo&quot; + &quot;B&quot; + &quot;ar&quot;.\n&quot;FootBall&quot; can be generated like this &quot;F&quot; + &quot;oot&quot; + &quot;B&quot; + &quot;all&quot;.\n&quot;FrameBuffer&quot; can be generated like this &quot;F&quot; + &quot;rame&quot; + &quot;B&quot; + &quot;uffer&quot;.</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>queries = <span id=\"example-input-2-1\">[&quot;FooBar&quot;,&quot;FooBarTest&quot;,&quot;FootBall&quot;,&quot;FrameBuffer&quot;,&quot;ForceFeedBack&quot;]</span>, pattern = <span id=\"example-input-2-2\">&quot;FoBa&quot;</span>\n<strong>Output: </strong><span id=\"example-output-2\">[true,false,true,false,false]</span>\n<strong>Explanation: </strong>\n&quot;FooBar&quot; can be generated like this &quot;Fo&quot; + &quot;o&quot; + &quot;Ba&quot; + &quot;r&quot;.\n&quot;FootBall&quot; can be generated like this &quot;Fo&quot; + &quot;ot&quot; + &quot;Ba&quot; + &quot;ll&quot;.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>queries = <span id=\"example-input-3-1\">[&quot;FooBar&quot;,&quot;FooBarTest&quot;,&quot;FootBall&quot;,&quot;FrameBuffer&quot;,&quot;ForceFeedBack&quot;]</span>, pattern = <span id=\"example-input-3-2\">&quot;FoBaT&quot;</span>\n<strong>Output: </strong><span id=\"example-output-3\">[false,true,false,false,false]</span>\n<strong>Explanation: </strong>\n&quot;FooBarTest&quot; can be generated like this &quot;Fo&quot; + &quot;o&quot; + &quot;Ba&quot; + &quot;r&quot; + &quot;T&quot; + &quot;est&quot;.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= queries.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= queries[i].length &lt;= 100</code></li>\n\t<li><code>1 &lt;= pattern.length &lt;= 100</code></li>\n\t<li>All strings consists only of lower and upper case English letters.</li>\n</ol>"
    },
    {
        "id": "27",
        "title": "Remove Element",
        "slug": "remove-element",
        "difficulty": "Easy",
        "likes": 947,
        "dislikes": 2006,
        "hints": [
            "Try two pointers.",
            "Did you use the property of \"the order of elements can be changed\"?",
            "What happens when the elements to remove are rare?"
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Remove Duplicates from Sorted Array\", \"titleSlug\": \"remove-duplicates-from-sorted-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Remove Linked List Elements\", \"titleSlug\": \"remove-linked-list-elements\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Move Zeroes\", \"titleSlug\": \"move-zeroes\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "22",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Two Pointers"
        ],
        "content": "<p>Given an array <em>nums</em> and a value <em>val</em>, remove all instances of that value <a href=\"https://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\"><strong>in-place</strong></a> and return the new length.</p>\n\n<p>Do not allocate extra space for another array, you must do this by <strong>modifying the input array <a href=\"https://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\">in-place</a></strong> with O(1) extra memory.</p>\n\n<p>The order of elements can be changed. It doesn&#39;t matter what you leave beyond the new length.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\nGiven <em>nums</em> = <strong>[3,2,2,3]</strong>, <em>val</em> = <strong>3</strong>,\n\nYour function should return length = <strong>2</strong>, with the first two elements of <em>nums</em> being <strong>2</strong>.\n\nIt doesn&#39;t matter what you leave beyond the returned length.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\nGiven <em>nums</em> = <strong>[0,1,2,2,3,0,4,2]</strong>, <em>val</em> = <strong>2</strong>,\n\nYour function should return length = <strong><code>5</code></strong>, with the first five elements of <em><code>nums</code></em> containing&nbsp;<strong><code>0</code></strong>, <strong><code>1</code></strong>, <strong><code>3</code></strong>, <strong><code>0</code></strong>, and&nbsp;<strong>4</strong>.\n\nNote that the order of those five elements can be arbitrary.\n\nIt doesn&#39;t matter what values are set beyond&nbsp;the returned length.</pre>\n\n<p><strong>Clarification:</strong></p>\n\n<p>Confused why the returned value is an integer but your answer is an array?</p>\n\n<p>Note that the input array is passed in by <strong>reference</strong>, which means modification to the input array will be known to the caller as well.</p>\n\n<p>Internally you can think of this:</p>\n\n<pre>\n// <strong>nums</strong> is passed in by reference. (i.e., without making a copy)\nint len = removeElement(nums, val);\n\n// any modification to <strong>nums</strong> in your function would be known by the caller.\n// using the length returned by your function, it prints the first <strong>len</strong> elements.\nfor (int i = 0; i &lt; len; i++) {\n&nbsp; &nbsp; print(nums[i]);\n}</pre>\n"
    },
    {
        "id": "367",
        "title": "Valid Perfect Square",
        "slug": "valid-perfect-square",
        "difficulty": "Easy",
        "likes": 513,
        "dislikes": 114,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Sqrt(x)\", \"titleSlug\": \"sqrtx\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Sum of Square Numbers\", \"titleSlug\": \"sum-of-square-numbers\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Math",
            "Binary Search"
        ],
        "content": "<p>Given a positive integer <i>num</i>, write a function which returns True if <i>num</i> is a perfect square else False.</p>\n\n<p><b>Note:</b> <b>Do not</b> use any built-in library function such as <code>sqrt</code>.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<div>\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">16</span>\n<strong>Output: </strong><span id=\"example-output-1\">true</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">14</span>\n<strong>Output: </strong><span id=\"example-output-2\">false</span>\n</pre>\n</div>\n</div>"
    },
    {
        "id": "513",
        "title": "Find Bottom Left Tree Value",
        "slug": "find-bottom-left-tree-value",
        "difficulty": "Medium",
        "likes": 623,
        "dislikes": 107,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Tree",
            "Depth-first Search",
            "Breadth-first Search"
        ],
        "content": "<p>\nGiven a binary tree, find the leftmost value in the last row of the tree. \n</p>\n\n<p><b>Example 1:</b><br />\n<pre>\nInput:\n\n    2\n   / \\\n  1   3\n\nOutput:\n1\n</pre>\n</p>\n\n<p> <b> Example 2: </b><br>\n<pre>\nInput:\n\n        1\n       / \\\n      2   3\n     /   / \\\n    4   5   6\n       /\n      7\n\nOutput:\n7\n</pre>\n</p>\n\n<p><b>Note:</b>\nYou may assume the tree (i.e., the given root node) is not <b>NULL</b>.\n</p>"
    },
    {
        "id": "910",
        "title": "Smallest Range II",
        "slug": "smallest-range-ii",
        "difficulty": "Medium",
        "likes": 206,
        "dislikes": 124,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "566",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math",
            "Greedy"
        ],
        "content": "<p>Given an array <code>A</code> of integers, for each integer <code>A[i]</code> we need to choose <strong>either&nbsp;<code>x = -K</code>&nbsp;or <code>x = K</code></strong>, and add <code>x</code> to <code>A[i] <strong>(only once)</strong></code>.</p>\n\n<p>After this process, we have some array <code>B</code>.</p>\n\n<p>Return the smallest possible difference between the maximum value of <code>B</code>&nbsp;and the minimum value of <code>B</code>.</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-1-1\">[1]</span>, K = <span id=\"example-input-1-2\">0</span>\n<strong>Output: </strong><span id=\"example-output-1\">0</span>\n<span><strong>Explanation</strong>: B = [1]</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-2-1\">[0,10]</span>, K = <span id=\"example-input-2-2\">2</span>\n<strong>Output: </strong><span id=\"example-output-2\">6\n</span><span><strong>Explanation</strong>: B = [2,8]</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-3-1\">[1,3,6]</span>, K = <span id=\"example-input-3-2\">3</span>\n<strong>Output: </strong><span id=\"example-output-3\">3</span>\n<span><strong>Explanation</strong>: B = [4,6,3]</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 10000</code></li>\n\t<li><code>0 &lt;= A[i] &lt;= 10000</code></li>\n\t<li><code>0 &lt;= K &lt;= 10000</code></li>\n</ol>\n</div>\n</div>\n</div>"
    },
    {
        "id": "809",
        "title": "Expressive Words",
        "slug": "expressive-words",
        "difficulty": "Medium",
        "likes": 129,
        "dislikes": 396,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "442",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String"
        ],
        "content": "<p>Sometimes people repeat letters to represent extra feeling, such as &quot;hello&quot; -&gt; &quot;heeellooo&quot;, &quot;hi&quot; -&gt; &quot;hiiii&quot;.&nbsp; In these strings like &quot;heeellooo&quot;, we have <em>groups</em> of adjacent letters that are all the same:&nbsp; &quot;h&quot;, &quot;eee&quot;, &quot;ll&quot;, &quot;ooo&quot;.</p>\n\n<p>For some given string <code>S</code>, a query word is <em>stretchy</em> if it can be made to be equal to <code>S</code> by any&nbsp;number of&nbsp;applications of the following <em>extension</em> operation: choose a group consisting of&nbsp;characters <code>c</code>, and add some number of characters <code>c</code> to the group so that the size of the group is 3 or more.</p>\n\n<p>For example, starting with &quot;hello&quot;, we could do an extension on the group &quot;o&quot; to get &quot;hellooo&quot;, but we cannot get &quot;helloo&quot; since the group &quot;oo&quot; has size less than 3.&nbsp; Also, we could do another extension like &quot;ll&quot; -&gt; &quot;lllll&quot; to get &quot;helllllooo&quot;.&nbsp; If <code>S = &quot;helllllooo&quot;</code>, then the query word &quot;hello&quot; would be stretchy because of these two extension operations:&nbsp;<code>query = &quot;hello&quot; -&gt; &quot;hellooo&quot; -&gt;&nbsp;&quot;helllllooo&quot; = S</code>.</p>\n\n<p>Given a list of query words, return the number of words that are stretchy.&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<pre>\n<strong>Example:</strong>\n<strong>Input:</strong> \nS = &quot;heeellooo&quot;\nwords = [&quot;hello&quot;, &quot;hi&quot;, &quot;helo&quot;]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> \nWe can extend &quot;e&quot; and &quot;o&quot; in the word &quot;hello&quot; to get &quot;heeellooo&quot;.\nWe can&#39;t extend &quot;helo&quot; to get &quot;heeellooo&quot; because the group &quot;ll&quot; is not size 3 or more.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Notes: </strong></p>\n\n<ul>\n\t<li><code>0 &lt;= len(S) &lt;= 100</code>.</li>\n\t<li><code>0 &lt;= len(words) &lt;= 100</code>.</li>\n\t<li><code>0 &lt;= len(words[i]) &lt;= 100</code>.</li>\n\t<li><code>S</code> and all words in <code>words</code>&nbsp;consist only of&nbsp;lowercase letters</li>\n</ul>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "591",
        "title": "Tag Validator",
        "slug": "tag-validator",
        "difficulty": "Hard",
        "likes": 61,
        "dislikes": 316,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Add Bold Tag in String\", \"titleSlug\": \"add-bold-tag-in-string\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "153",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String",
            "Stack"
        ],
        "content": "<p>Given a string representing a code snippet, you need to implement a tag validator to parse the code and return whether it is valid. A code snippet is valid if all the following rules hold:<p>\n<ol>\n<li>The code must be wrapped in a <b>valid closed tag</b>. Otherwise, the code is invalid.</li>\n<li>A <b>closed tag</b> (not necessarily valid) has exactly the following format : <code>&lt;TAG_NAME&gt;TAG_CONTENT&lt;/TAG_NAME&gt;</code>. Among them, <code>&lt;TAG_NAME&gt;</code> is the start tag, and <code>&lt;/TAG_NAME&gt;</code> is the end tag. The TAG_NAME in start and end tags should be the same. A closed tag is <b>valid</b> if and only if the TAG_NAME and TAG_CONTENT are valid.</li>\n<li>A <b>valid</b> <code>TAG_NAME</code> only contain <b>upper-case letters</b>, and has length in range [1,9]. Otherwise, the <code>TAG_NAME</code> is <b>invalid</b>.</li>\n<li>A <b>valid</b> <code>TAG_CONTENT</code> may contain other <b>valid closed tags</b>, <b>cdata</b> and any characters (see note1) <b>EXCEPT</b> unmatched <code>&lt;</code>, unmatched start and end tag, and unmatched or closed tags with invalid TAG_NAME. Otherwise, the <code>TAG_CONTENT</code> is <b>invalid</b>.</li>\n<li>A start tag is unmatched if no end tag exists with the same TAG_NAME, and vice versa. However, you also need to consider the issue of unbalanced when tags are nested.</li>\n<li>A <code>&lt;</code> is unmatched if you cannot find a subsequent <code>></code>. And when you find a <code>&lt;</code> or <code>&lt;/</code>, all the subsequent characters until the next <code>></code> should be parsed as TAG_NAME  (not necessarily valid).</li>\n<li>The cdata has the following format : <code>&lt;![CDATA[CDATA_CONTENT]]&gt;</code>. The range of <code>CDATA_CONTENT</code> is defined as the characters between <code>&lt;![CDATA[</code> and the <b>first subsequent</b> <code>]]></code>. </li>\n<li><code>CDATA_CONTENT</code> may contain <b>any characters</b>. The function of cdata is to forbid the validator to parse <code>CDATA_CONTENT</code>, so even it has some characters that can be parsed as tag (no matter valid or invalid), you should treat it as <b>regular characters</b>. </li>\n</ol>\n\n<p><b>Valid Code Examples:</b><br />\n<pre>\n<b>Input:</b> \"&lt;DIV&gt;This is the first line &lt;![CDATA[&lt;div&gt;]]&gt;&lt;/DIV&gt;\"<br />\n<b>Output:</b> True<br />\n<b>Explanation:</b> <br>\nThe code is wrapped in a closed tag : &lt;DIV> and &lt;/DIV>. <br>\nThe TAG_NAME is valid, the TAG_CONTENT consists of some characters and cdata. <br>\nAlthough CDATA_CONTENT has unmatched start tag with invalid TAG_NAME, it should be considered as plain text, not parsed as tag.<br>\nSo TAG_CONTENT is valid, and then the code is valid. Thus return true.<br />\n\n<b>Input:</b> \"&lt;DIV>>>  ![cdata[]] &lt;![CDATA[&lt;div>]>]]>]]>>]&lt;/DIV>\"<br />\n<b>Output:</b> True<br />\n<b>Explanation:</b><br />\nWe first separate the code into : start_tag|tag_content|end_tag.<br />\nstart_tag -> <b>\"&lt;DIV&gt;\"</b><br />\nend_tag -> <b>\"&lt;/DIV>\"</b><br />\ntag_content could also be separated into : text1|cdata|text2.<br />\ntext1 -> <b>\">>  ![cdata[]] \"</b><br />\ncdata -> <b>\"&lt;![CDATA[&lt;div>]>]]>\"</b>, where the CDATA_CONTENT is <b>\"&lt;div>]>\"</b><br />\ntext2 -> <b>\"]]>>]\"</b><br />\n\nThe reason why start_tag is NOT <b>\"&lt;DIV>>>\"</b> is because of the rule 6.\nThe reason why cdata is NOT <b>\"&lt;![CDATA[&lt;div>]>]]>]]>\"</b> is because of the rule 7.\n</pre>\n</p>\n\n<p><b>Invalid Code Examples:</b><br />\n<pre>\n<b>Input:</b> \"&lt;A>  &lt;B> &lt;/A>   &lt;/B>\"\n<b>Output:</b> False\n<b>Explanation:</b> Unbalanced. If \"&lt;A>\" is closed, then \"&lt;B>\" must be unmatched, and vice versa.\n\n<b>Input:</b> \"&lt;DIV&gt;  div tag is not closed  &lt;DIV&gt;\"\n<b>Output:</b> False\n\n<b>Input:</b> \"&lt;DIV&gt;  unmatched &lt  &lt;/DIV&gt;\"\n<b>Output:</b> False\n\n<b>Input:</b> \"&lt;DIV&gt; closed tags with invalid tag name  &lt;b>123&lt;/b> &lt;/DIV&gt;\"\n<b>Output:</b> False\n\n<b>Input:</b> \"&lt;DIV&gt; unmatched tags with invalid tag name  &lt;/1234567890> and &lt;CDATA[[]]>  &lt;/DIV&gt;\"\n<b>Output:</b> False\n\n<b>Input:</b> \"&lt;DIV&gt;  unmatched start tag &lt;B>  and unmatched end tag &lt;/C>  &lt;/DIV&gt;\"\n<b>Output:</b> False\n</pre>\n</p>\n\n<p><b>Note:</b><br>\n<ol>\n<li>For simplicity, you could assume the input code (including the <b>any characters</b> mentioned above) only contain <code>letters</code>, <code>digits</code>, <code>'&lt;'</code>,<code>'>'</code>,<code>'/'</code>,<code>'!'</code>,<code>'['</code>,<code>']'</code> and <code>' '</code>.</li>\n</ol>\n</p>"
    },
    {
        "id": "1139",
        "title": "Largest 1-Bordered Square",
        "slug": "largest-1-bordered-square",
        "difficulty": "Medium",
        "likes": 64,
        "dislikes": 20,
        "hints": [
            "For each square, know how many ones are up, left, down, and right of this square. You can find it in O(N^2) using dynamic programming.",
            "Now for each square ( O(N^3) ), we can evaluate whether that square is 1-bordered in O(1)."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>Given a 2D <code>grid</code> of <code>0</code>s and <code>1</code>s, return the number of elements in&nbsp;the largest <strong>square</strong>&nbsp;subgrid that has all <code>1</code>s on its <strong>border</strong>, or <code>0</code> if such a subgrid&nbsp;doesn&#39;t exist in the <code>grid</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[1,1,1],[1,0,1],[1,1,1]]\n<strong>Output:</strong> 9\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> grid = [[1,1,0,0]]\n<strong>Output:</strong> 1\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= grid.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= grid[0].length &lt;= 100</code></li>\n\t<li><code>grid[i][j]</code> is <code>0</code> or <code>1</code></li>\n</ul>"
    },
    {
        "id": "458",
        "title": "Poor Pigs",
        "slug": "poor-pigs",
        "difficulty": "Hard",
        "likes": 314,
        "dislikes": 739,
        "hints": [
            "What if you only have one shot? Eg. 4 buckets, 15 mins to die, and 15 mins to test.",
            "How many states can we generate with x pigs and T tests?",
            "Find minimum <code>x</code> such that <code>(T+1)^x >= N</code>"
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "718",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math"
        ],
        "content": "<p>There are 1000 buckets, one and only one of them is poisonous, while the rest are filled with water. They all look identical. If a pig drinks the poison it will die within 15 minutes. What is the minimum amount of pigs you need to figure out which bucket is poisonous within one hour?</p>\n\n<p>Answer this question, and write an algorithm for the general case.</p>\n\n<p>&nbsp;</p>\n\n<p><b>General case: </b></p>\n\n<p>If there are <code>n</code> buckets and a pig drinking poison will die within <code>m</code> minutes, how many pigs (<code>x</code>) you need to figure out the <strong>poisonous</strong>&nbsp;bucket within <code>p</code> minutes? There is exactly one bucket with poison.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li>A pig can be allowed to drink simultaneously on as many buckets as one would like, and the feeding takes no time.</li>\n\t<li>After a pig has instantly finished drinking buckets, there has to be a <strong>cool down time</strong> of <em>m&nbsp;</em>minutes. During this time, only observation is allowed and no feedings at all.</li>\n\t<li>Any given bucket can be sampled an infinite number of times (by an unlimited number of pigs).</li>\n</ol>"
    },
    {
        "id": "4",
        "title": "Median of Two Sorted Arrays",
        "slug": "median-of-two-sorted-arrays",
        "difficulty": "Hard",
        "likes": 4937,
        "dislikes": 709,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "232",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Binary Search",
            "Divide and Conquer"
        ],
        "content": "<p>There are two sorted arrays <b>nums1</b> and <b>nums2</b> of size m and n respectively.</p>\n\n<p>Find the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).</p>\n\n<p>You may assume <strong>nums1</strong> and <strong>nums2</strong>&nbsp;cannot be both empty.</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\nnums1 = [1, 3]\nnums2 = [2]\n\nThe median is 2.0\n</pre>\n\n<p><b>Example 2:</b></p>\n\n<pre>\nnums1 = [1, 2]\nnums2 = [3, 4]\n\nThe median is (2 + 3)/2 = 2.5\n</pre>\n"
    },
    {
        "id": "1000",
        "title": "Minimum Cost to Merge Stones",
        "slug": "minimum-cost-to-merge-stones",
        "difficulty": "Hard",
        "likes": 254,
        "dislikes": 21,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Burst Balloons\", \"titleSlug\": \"burst-balloons\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Minimum Cost to Connect Sticks\", \"titleSlug\": \"minimum-cost-to-connect-sticks\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>There are <code>N</code> piles of stones arranged in a row.&nbsp; The <code>i</code>-th pile has <code>stones[i]</code> stones.</p>\n\n<p>A <em>move</em> consists of merging <strong>exactly&nbsp;<code>K</code>&nbsp;consecutive</strong> piles into one pile, and the cost of this move is equal to the total number of stones in these <code>K</code> piles.</p>\n\n<p>Find the minimum cost to merge all piles of stones into one pile.&nbsp; If it is impossible, return <code>-1</code>.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>stones = <span id=\"example-input-1-1\">[3,2,4,1]</span>, K = <span id=\"example-input-1-2\">2</span>\n<strong>Output: </strong><span id=\"example-output-1\">20</span>\n<strong>Explanation: </strong>\nWe start with [3, 2, 4, 1].\nWe merge [3, 2] for a cost of 5, and we are left with [5, 4, 1].\nWe merge [4, 1] for a cost of 5, and we are left with [5, 5].\nWe merge [5, 5] for a cost of 10, and we are left with [10].\nThe total cost was 20, and this is the minimum possible.\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>stones = <span id=\"example-input-2-1\">[3,2,4,1]</span>, K = <span id=\"example-input-2-2\">3</span>\n<strong>Output: </strong><span id=\"example-output-2\">-1</span>\n<strong>Explanation: </strong>After any merge operation, there are 2 piles left, and we can&#39;t merge anymore.  So the task is impossible.\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>stones = <span id=\"example-input-3-1\">[3,5,1,2,6]</span>, K = <span id=\"example-input-3-2\">3</span>\n<strong>Output: </strong><span id=\"example-output-3\">25</span>\n<strong>Explanation: </strong>\nWe start with [3, 5, 1, 2, 6].\nWe merge [5, 1, 2] for a cost of 8, and we are left with [3, 8, 6].\nWe merge [3, 8, 6] for a cost of 17, and we are left with [17].\nThe total cost was 25, and this is the minimum possible.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong><span>Note:</span></strong></p>\n\n<ul>\n\t<li><code><span>1 &lt;= stones.length &lt;= 30</span></code></li>\n\t<li><code><span>2 &lt;= K &lt;= 30</span></code></li>\n\t<li><code><span>1 &lt;= stones[i] &lt;= 100</span></code></li>\n</ul>\n</div>\n</div>\n</div>"
    },
    {
        "id": "128",
        "title": "Longest Consecutive Sequence",
        "slug": "longest-consecutive-sequence",
        "difficulty": "Hard",
        "likes": 2134,
        "dislikes": 111,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Binary Tree Longest Consecutive Sequence\", \"titleSlug\": \"binary-tree-longest-consecutive-sequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "280",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Union Find"
        ],
        "content": "<p>Given an unsorted array of integers, find the length of the longest consecutive elements sequence.</p>\n\n<p>Your algorithm should run in O(<em>n</em>) complexity.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input:</strong>&nbsp;[100, 4, 200, 1, 3, 2]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> The longest consecutive elements sequence is <code>[1, 2, 3, 4]</code>. Therefore its length is 4.\n</pre>\n"
    },
    {
        "id": "121",
        "title": "Best Time to Buy and Sell Stock",
        "slug": "best-time-to-buy-and-sell-stock",
        "difficulty": "Easy",
        "likes": 3073,
        "dislikes": 139,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Maximum Subarray\", \"titleSlug\": \"maximum-subarray\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Best Time to Buy and Sell Stock II\", \"titleSlug\": \"best-time-to-buy-and-sell-stock-ii\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Best Time to Buy and Sell Stock III\", \"titleSlug\": \"best-time-to-buy-and-sell-stock-iii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Best Time to Buy and Sell Stock IV\", \"titleSlug\": \"best-time-to-buy-and-sell-stock-iv\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Best Time to Buy and Sell Stock with Cooldown\", \"titleSlug\": \"best-time-to-buy-and-sell-stock-with-cooldown\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "51",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Dynamic Programming"
        ],
        "content": "<p>Say you have an array for which the <em>i</em><sup>th</sup> element is the price of a given stock on day <em>i</em>.</p>\n\n<p>If you were only permitted to complete at most one transaction (i.e., buy one and sell one share of the stock), design an algorithm to find the maximum profit.</p>\n\n<p>Note that you cannot sell a stock before you buy one.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> [7,1,5,3,6,4]\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> Buy on day 2 (price = 1) and sell on day 5 (price = 6), profit = 6-1 = 5.\n&nbsp;            Not 7-1 = 6, as selling price needs to be larger than buying price.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> [7,6,4,3,1]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> In this case, no transaction is done, i.e. max profit = 0.\n</pre>\n"
    },
    {
        "id": "870",
        "title": "Advantage Shuffle",
        "slug": "advantage-shuffle",
        "difficulty": "Medium",
        "likes": 292,
        "dislikes": 21,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "507",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Greedy"
        ],
        "content": "<p>Given two arrays <code>A</code> and <code>B</code> of equal size, the <em>advantage of <code>A</code> with respect to <code>B</code></em> is the number of indices <code>i</code>&nbsp;for which <code>A[i] &gt; B[i]</code>.</p>\n\n<p>Return <strong>any</strong> permutation of <code>A</code> that maximizes its advantage with respect to <code>B</code>.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-1-1\">[2,7,11,15]</span>, B = <span id=\"example-input-1-2\">[1,10,4,11]</span>\n<strong>Output: </strong><span id=\"example-output-1\">[2,11,7,15]</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-2-1\">[12,24,8,32]</span>, B = <span id=\"example-input-2-2\">[13,25,32,11]</span>\n<strong>Output: </strong><span id=\"example-output-2\">[24,32,8,12]</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length = B.length &lt;= 10000</code></li>\n\t<li><code>0 &lt;= A[i] &lt;= 10^9</code></li>\n\t<li><code>0 &lt;= B[i] &lt;= 10^9</code></li>\n</ol>\n</div>\n</div>\n"
    },
    {
        "id": "1157",
        "title": "Online Majority Element In Subarray",
        "slug": "online-majority-element-in-subarray",
        "difficulty": "Hard",
        "likes": 86,
        "dislikes": 14,
        "hints": [
            "What's special about a majority element ?",
            "A majority element appears more than half the length of the array number of times.",
            "If we tried a random index of the array, what's the probability that this index has a majority element ?",
            "It's more than 50% if that array has a majority element.",
            "Try a random index for a proper number of times so that the probability of not finding the answer tends to zero."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Array",
            "Binary Search",
            "Segment Tree"
        ],
        "content": "<p>Implementing the class <code>MajorityChecker</code>, which has the following API:</p>\n\n<ul>\n\t<li><code>MajorityChecker(int[] arr)</code> constructs an instance of MajorityChecker with the given array <code>arr</code>;</li>\n\t<li><code>int query(int left, int right, int threshold)</code>&nbsp;has arguments&nbsp;such that:\n\t<ul>\n\t\t<li><code>0 &lt;= left&nbsp;&lt;= right&nbsp;&lt; arr.length</code> representing a subarray of <code>arr</code>;</li>\n\t\t<li><code>2 * threshold &gt; right - left + 1</code>, ie. the threshold is always a strict majority of the length of&nbsp;the subarray</li>\n\t</ul>\n\t</li>\n</ul>\n\n<p>Each&nbsp;<code>query(...)</code> returns the element in <code>arr[left], arr[left+1], ..., arr[right]</code> that occurs at least <code>threshold</code> times, or <code>-1</code> if no such element exists.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\nMajorityChecker majorityChecker = new MajorityChecker([1,1,2,2,1,1]);\nmajorityChecker.query(0,5,4); // returns 1\nmajorityChecker.query(0,3,3); // returns -1\nmajorityChecker.query(2,3,2); // returns 2\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= arr.length &lt;=&nbsp;20000</code></li>\n\t<li><code>1 &lt;= arr[i]&nbsp;&lt;=&nbsp;20000</code></li>\n\t<li>For each query, <code>0 &lt;= left &lt;= right &lt; len(arr)</code></li>\n\t<li>For each query, <code>2 * threshold &gt; right - left + 1</code></li>\n\t<li>The number of queries is at most <code>10000</code></li>\n</ul>"
    },
    {
        "id": "827",
        "title": "Making A Large Island",
        "slug": "making-a-large-island",
        "difficulty": "Hard",
        "likes": 297,
        "dislikes": 9,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "456",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Depth-first Search"
        ],
        "content": "<p>In a 2D grid of <code>0</code>s and <code>1</code>s, we change at most one <code>0</code> to a <code>1</code>.</p>\n\n<p>After, what is the size of the largest island?&nbsp;(An island is a 4-directionally connected group of <code>1</code>s).</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>[[1, 0], [0, 1]]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> Change one 0 to 1 and connect two 1s, then we get an island with area = 3.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>[[1, 1], [1, 0]]\n<strong>Output:</strong> 4\n<strong>Explanation: </strong>Change the 0 to 1 and make the island bigger, only one island with area = 4.</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>[[1, 1], [1, 1]]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> Can&#39;t change any 0 to 1, only one island with area = 4.</pre>\n\n<p>&nbsp;</p>\n\n<p>Notes:</p>\n\n<ul>\n\t<li><code>1 &lt;= grid.length = grid[0].length &lt;= 50</code>.</li>\n\t<li><code>0 &lt;= grid[i][j] &lt;= 1</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "479",
        "title": "Largest Palindrome Product",
        "slug": "largest-palindrome-product",
        "difficulty": "Hard",
        "likes": 73,
        "dislikes": 1243,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [],
        "content": "<p>Find the largest palindrome made from the product of two n-digit numbers.</p>\n\n<p>Since the result could be very large, you should return the largest palindrome mod 1337.</p>\n\n<p>&nbsp;</p>\n\n<p><b>Example:</b></p>\n\n<p>Input: 2</p>\n\n<p>Output: 987</p>\n\n<p>Explanation: 99 x 91 = 9009, 9009 % 1337 = 987</p>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b></p>\n\n<p>The range of n is [1,8].</p>\n"
    },
    {
        "id": "1117",
        "title": "Building H2O",
        "slug": "building-h2o",
        "difficulty": "Medium",
        "likes": 72,
        "dislikes": 15,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [],
        "content": "<p>There are two kinds of threads, <code>oxygen</code> and <code>hydrogen</code>. Your goal is to group these threads to form water molecules.&nbsp;There is a barrier where each thread has to&nbsp;wait until a complete molecule can be formed. Hydrogen and oxygen threads will be given <code>releaseHydrogen</code>&nbsp;and <code>releaseOxygen</code>&nbsp;methods respectively, which will allow them to pass the barrier. These threads should pass the barrier in groups of three, and they must be able to immediately bond with each other to form a water molecule.&nbsp;You must guarantee that all the threads from one molecule bond <em>before</em> any other threads from the next molecule do.</p>\n\n<p>In other words:</p>\n\n<ul>\n\t<li>If an oxygen thread arrives at the barrier when no hydrogen threads are present, it has to wait for two hydrogen threads.</li>\n\t<li>If a hydrogen thread arrives at the barrier when no other threads are present, it has to wait for an oxygen thread and another hydrogen thread.</li>\n</ul>\n\n<p>We don&rsquo;t have to worry about matching the threads up explicitly; that is, the threads do not necessarily know which other threads they are paired up with. The key is just that threads pass the barrier in complete sets; thus, if we examine the sequence of threads that bond and divide them into groups of three, each group should contain one oxygen and two hydrogen threads.</p>\n\n<p>Write synchronization code for oxygen and hydrogen molecules that enforces these constraints.</p>\n\n<div>\n<p>&nbsp;</p>\n</div>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">&quot;HOH&quot;</span>\n<strong>Output: </strong><span id=\"example-output-1\">&quot;HHO&quot;\n<strong>Explanation:</strong> &quot;HOH&quot; and &quot;OHH&quot; are also valid answers.</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">&quot;OOHHHH&quot;</span>\n<strong>Output: </strong><span id=\"example-output-1\">&quot;HHOHHO&quot;\n<strong>Explanation:</strong> &quot;HOHHHO&quot;, &quot;OHHHHO&quot;, &quot;HHOHOH&quot;, &quot;HOHHOH&quot;, &quot;OHHHOH&quot;, &quot;HHOOHH&quot;, &quot;HOHOHH&quot; and &quot;OHHOHH&quot; are also valid answers.</span>\n</pre>\n</div>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>Total length of input string will be 3<em>n</em>, where 1 &le;&nbsp;<em>n</em>&nbsp;&le; 20.</li>\n\t<li>Total number of <code>H</code> will be 2<em>n</em>&nbsp;in the input string.</li>\n\t<li>Total number of <code>O</code> will&nbsp;be <em>n</em>&nbsp;in the input&nbsp;string.</li>\n</ul>\n"
    },
    {
        "id": "185",
        "title": "Department Top Three Salaries",
        "slug": "department-top-three-salaries",
        "difficulty": "Hard",
        "likes": 384,
        "dislikes": 84,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "212",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [],
        "content": "<p>The <code>Employee</code> table holds all employees. Every employee has an Id, and there is also a column for the department Id.</p>\n\n<pre>\n+----+-------+--------+--------------+\n| Id | Name  | Salary | DepartmentId |\n+----+-------+--------+--------------+\n| 1  | Joe   | 85000  | 1            |\n| 2  | Henry | 80000  | 2            |\n| 3  | Sam   | 60000  | 2            |\n| 4  | Max   | 90000  | 1            |\n| 5  | Janet | 69000  | 1            |\n| 6  | Randy | 85000  | 1            |\n| 7  | Will  | 70000  | 1            |\n+----+-------+--------+--------------+\n</pre>\n\n<p>The <code>Department</code> table holds all departments of the company.</p>\n\n<pre>\n+----+----------+\n| Id | Name     |\n+----+----------+\n| 1  | IT       |\n| 2  | Sales    |\n+----+----------+\n</pre>\n\n<p>Write a SQL query to find employees who earn the top three salaries in each of the department. For the above tables, your SQL query should return the following rows (order of rows does not matter).</p>\n\n<pre>\n+------------+----------+--------+\n| Department | Employee | Salary |\n+------------+----------+--------+\n| IT         | Max      | 90000  |\n| IT         | Randy    | 85000  |\n| IT         | Joe      | 85000  |\n| IT         | Will     | 70000  |\n| Sales      | Henry    | 80000  |\n| Sales      | Sam      | 60000  |\n+------------+----------+--------+\n</pre>\n\n<p><strong>Explanation:</strong></p>\n\n<p>In IT department, Max earns the highest salary, both Randy and Joe earn the second highest salary, and Will earns the third highest salary. There are only two employees in the Sales department, Henry earns the highest salary while Sam earns the second highest salary.</p>\n"
    },
    {
        "id": "832",
        "title": "Flipping an Image",
        "slug": "flipping-an-image",
        "difficulty": "Easy",
        "likes": 590,
        "dislikes": 125,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "467",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array"
        ],
        "content": "<p>Given a binary matrix <code>A</code>, we want to flip the image horizontally, then invert it, and return the resulting image.</p>\n\n<p>To flip an image horizontally means that each row of the image is reversed.&nbsp; For example, flipping&nbsp;<code>[1, 1, 0]</code>&nbsp;horizontally results in&nbsp;<code>[0, 1, 1]</code>.</p>\n\n<p>To invert an image means&nbsp;that each <code>0</code> is replaced by <code>1</code>, and each <code>1</code> is replaced by <code>0</code>.&nbsp;For example, inverting&nbsp;<code>[0, 1, 1]</code>&nbsp;results in&nbsp;<code>[1, 0, 0]</code>.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>[[1,1,0],[1,0,1],[0,0,0]]\n<strong>Output: </strong>[[1,0,0],[0,1,0],[1,1,1]]\n<strong>Explanation:</strong> First reverse each row: [[0,1,1],[1,0,1],[0,0,0]].\nThen, invert the image: [[1,0,0],[0,1,0],[1,1,1]]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>[[1,1,0,0],[1,0,0,1],[0,1,1,1],[1,0,1,0]]\n<strong>Output: </strong>[[1,1,0,0],[0,1,1,0],[0,0,0,1],[1,0,1,0]]\n<strong>Explanation:</strong> First reverse each row: [[0,0,1,1],[1,0,0,1],[1,1,1,0],[0,1,0,1]].\nThen invert the image: [[1,1,0,0],[0,1,1,0],[0,0,0,1],[1,0,1,0]]\n</pre>\n\n<p><strong>Notes:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= A.length = A[0].length &lt;= 20</code></li>\n\t<li><code>0 &lt;= A[i][j]<font face=\"sans-serif, Arial, Verdana, Trebuchet MS\">&nbsp;&lt;=&nbsp;</font>1</code></li>\n</ul>\n"
    },
    {
        "id": "830",
        "title": "Positions of Large Groups",
        "slug": "positions-of-large-groups",
        "difficulty": "Easy",
        "likes": 233,
        "dislikes": 64,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "463",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array"
        ],
        "content": "<p>In a string&nbsp;<code>S</code>&nbsp;of lowercase letters, these letters form consecutive groups of the same character.</p>\n\n<p>For example, a string like <code>S = &quot;abbxxxxzyy&quot;</code> has the groups <code>&quot;a&quot;</code>, <code>&quot;bb&quot;</code>, <code>&quot;xxxx&quot;</code>, <code>&quot;z&quot;</code> and&nbsp;<code>&quot;yy&quot;</code>.</p>\n\n<p>Call a group <em>large</em> if it has 3 or more characters.&nbsp; We would like the starting and ending positions of every large group.</p>\n\n<p>The final answer should be in lexicographic order.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>&quot;abbxxxxzzy&quot;\n<strong>Output: </strong>[[3,6]]\n<strong>Explanation</strong>: <code>&quot;xxxx&quot; is the single </code>large group with starting  3 and ending positions 6.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>&quot;abc&quot;\n<strong>Output: </strong>[]\n<strong>Explanation</strong>: We have &quot;a&quot;,&quot;b&quot; and &quot;c&quot; but no large group.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>&quot;abcdddeeeeaabbbcd&quot;\n<strong>Output: </strong>[[3,5],[6,9],[12,14]]</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:&nbsp;</strong>&nbsp;<code>1 &lt;= S.length &lt;= 1000</code></p>\n"
    },
    {
        "id": "58",
        "title": "Length of Last Word",
        "slug": "length-of-last-word",
        "difficulty": "Easy",
        "likes": 433,
        "dislikes": 1786,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "String"
        ],
        "content": "<p>Given a string <i>s</i> consists of upper/lower-case alphabets and empty space characters <code>&#39; &#39;</code>, return the length of last word in the string.</p>\n\n<p>If the last word does not exist, return 0.</p>\n\n<p><b>Note:</b> A word is defined as a character sequence consists of non-space characters only.</p>\n\n<p><b>Example:</b></p>\n\n<pre>\n<b>Input:</b> &quot;Hello World&quot;\n<b>Output:</b> 5\n</pre>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "991",
        "title": "Broken Calculator",
        "slug": "broken-calculator",
        "difficulty": "Medium",
        "likes": 181,
        "dislikes": 54,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"2 Keys Keyboard\", \"titleSlug\": \"2-keys-keyboard\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "690",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math",
            "Greedy"
        ],
        "content": "<p>On a broken calculator that has a number showing on its display, we can perform two operations:</p>\n\n<ul>\n\t<li><strong>Double</strong>: Multiply the number on the display by 2, or;</li>\n\t<li><strong>Decrement</strong>: Subtract 1 from the number on the display.</li>\n</ul>\n\n<p>Initially, the calculator is displaying the number <code>X</code>.</p>\n\n<p>Return the minimum number of operations needed to display the number <code>Y</code>.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>X = <span id=\"example-input-1-1\">2</span>, Y = <span id=\"example-input-1-2\">3</span>\n<strong>Output: </strong><span id=\"example-output-1\">2</span>\n<strong>Explanation: </strong>Use double operation and then decrement operation {2 -&gt; 4 -&gt; 3}.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>X = <span id=\"example-input-2-1\">5</span>, Y = <span id=\"example-input-2-2\">8</span>\n<strong>Output: </strong><span id=\"example-output-2\">2</span>\n<strong>Explanation: </strong>Use decrement and then double {5 -&gt; 4 -&gt; 8}.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>X = <span id=\"example-input-3-1\">3</span>, Y = <span id=\"example-input-3-2\">10</span>\n<strong>Output: </strong><span id=\"example-output-3\">3</span>\n<strong>Explanation: </strong> Use double, decrement and double {3 -&gt; 6 -&gt; 5 -&gt; 10}.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input: </strong>X = <span id=\"example-input-4-1\">1024</span>, Y = <span id=\"example-input-4-2\">1</span>\n<strong>Output: </strong><span id=\"example-output-4\">1023</span>\n<strong>Explanation: </strong>Use decrement operations 1023 times.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= X &lt;= 10^9</code></li>\n\t<li><code>1 &lt;= Y &lt;= 10^9</code></li>\n</ol>"
    },
    {
        "id": "803",
        "title": "Bricks Falling When Hit",
        "slug": "bricks-falling-when-hit",
        "difficulty": "Hard",
        "likes": 331,
        "dislikes": 96,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "433",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Union Find"
        ],
        "content": "<p>We have a grid of 1s and 0s; the 1s in a cell represent bricks.&nbsp; A brick will not drop if and only if it is directly connected to the top of the grid, or at least one of its (4-way) adjacent bricks will not drop.</p>\n\n<p>We will do some erasures&nbsp;sequentially. Each time we want to do the erasure at the location (i, j), the brick (if it exists) on that location will disappear, and then some other bricks may&nbsp;drop because of that&nbsp;erasure.</p>\n\n<p>Return an array representing the number of bricks that will drop after each erasure in sequence.</p>\n\n<pre>\n<strong>Example 1:</strong>\n<strong>Input:</strong> \ngrid = [[1,0,0,0],[1,1,1,0]]\nhits = [[1,0]]\n<strong>Output:</strong> [2]\n<strong>Explanation: </strong>\nIf we erase the brick at (1, 0), the brick at (1, 1) and (1, 2) will drop. So we should return 2.</pre>\n\n<pre>\n<strong>Example 2:</strong>\n<strong>Input:</strong> \ngrid = [[1,0,0,0],[1,1,0,0]]\nhits = [[1,1],[1,0]]\n<strong>Output:</strong> [0,0]\n<strong>Explanation: </strong>\nWhen we erase the brick at (1, 0), the brick at (1, 1) has already disappeared due to the last move. So each erasure will cause no bricks dropping.  Note that the erased brick (1, 0) will not be counted as a dropped brick.</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>The number of rows and columns in the grid will be in the range&nbsp;[1, 200].</li>\n\t<li>The number of erasures will not exceed the area of the grid.</li>\n\t<li>It is guaranteed that each erasure will be different from any other erasure, and located inside the grid.</li>\n\t<li>An erasure may refer to a location with no brick - if it does, no bricks drop.</li>\n</ul>\n"
    },
    {
        "id": "509",
        "title": "Fibonacci Number",
        "slug": "fibonacci-number",
        "difficulty": "Easy",
        "likes": 268,
        "dislikes": 157,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Climbing Stairs\", \"titleSlug\": \"climbing-stairs\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Split Array into Fibonacci Sequence\", \"titleSlug\": \"split-array-into-fibonacci-sequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Length of Longest Fibonacci Subsequence\", \"titleSlug\": \"length-of-longest-fibonacci-subsequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"N-th Tribonacci Number\", \"titleSlug\": \"n-th-tribonacci-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "762",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array"
        ],
        "content": "<p>The&nbsp;<b>Fibonacci numbers</b>, commonly denoted&nbsp;<code>F(n)</code>&nbsp;form a sequence, called the&nbsp;<b>Fibonacci sequence</b>, such that each number is the sum of the two preceding ones, starting from <code>0</code> and <code>1</code>. That is,</p>\n\n<pre>\nF(0) = 0,&nbsp; &nbsp;F(1)&nbsp;= 1\nF(N) = F(N - 1) + F(N - 2), for N &gt; 1.\n</pre>\n\n<p>Given <code>N</code>, calculate <code>F(N)</code>.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> 2\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> F(2) = F(1) + F(0) = 1 + 0 = 1.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> 3\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> F(3) = F(2) + F(1) = 1 + 1 = 2.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> 4\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> F(4) = F(3) + F(2) = 2 + 1 = 3.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<p>0 &le; <code>N</code> &le; 30.</p>\n"
    },
    {
        "id": "1162",
        "title": "As Far from Land as Possible",
        "slug": "as-far-from-land-as-possible",
        "difficulty": "Medium",
        "likes": 115,
        "dislikes": 7,
        "hints": [
            "Can you think of this problem in a backwards way ?",
            "Imagine expanding outward from each land cell. What kind of search does that ?",
            "Use BFS starting from all land cells in the same time.",
            "When do you reach the furthest water cell?"
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Shortest Distance from All Buildings\", \"titleSlug\": \"shortest-distance-from-all-buildings\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Breadth-first Search",
            "Graph"
        ],
        "content": "<p>Given an N x N <code>grid</code>&nbsp;containing only values <code>0</code> and <code>1</code>, where&nbsp;<code>0</code> represents water&nbsp;and <code>1</code> represents land, find a water cell such that its distance to the nearest land cell is maximized and return the distance.</p>\n\n<p>The distance used in this problem is the <em>Manhattan distance</em>:&nbsp;the distance between two cells <code>(x0, y0)</code> and <code>(x1, y1)</code> is <code>|x0 - x1| + |y0 - y1|</code>.</p>\n\n<p>If no land or water exists in the grid, return <code>-1</code>.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<p><strong><img alt=\"\" src=\"./img/as-far-from-land-as-possible_1.JPG\" style=\"width: 185px; height: 87px;\" /></strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[[1,0,1],[0,0,0],[1,0,1]]</span>\n<strong>Output: </strong><span id=\"example-output-1\">2</span>\n<strong>Explanation: </strong>\nThe cell (1, 1) is as far as possible from all the land with distance 2.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<p><strong><img alt=\"\" src=\"./img/as-far-from-land-as-possible_2.JPG\" style=\"width: 184px; height: 87px;\" /></strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[[1,0,0],[0,0,0],[0,0,0]]</span>\n<strong>Output: </strong><span id=\"example-output-2\">4</span>\n<strong>Explanation: </strong>\nThe cell (2, 2) is as far as possible from all the land with distance 4.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><span><strong>Note:</strong></span></p>\n\n<ol>\n\t<li><span><code>1 &lt;= grid.length == grid[0].length&nbsp;&lt;= 100</code></span></li>\n\t<li><span><code>grid[i][j]</code>&nbsp;is <code>0</code> or <code>1</code></span></li>\n</ol>\n"
    },
    {
        "id": "179",
        "title": "Largest Number",
        "slug": "largest-number",
        "difficulty": "Medium",
        "likes": 1180,
        "dislikes": 153,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "339",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Sort"
        ],
        "content": "<p>Given a list of non negative integers, arrange them such that they form the largest number.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> <code>[10,2]</code>\n<strong>Output:</strong> &quot;<code>210&quot;</code></pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> <code>[3,30,34,5,9]</code>\n<strong>Output:</strong> &quot;<code>9534330&quot;</code>\n</pre>\n\n<p><strong>Note:</strong> The result may be very large, so you need to return a string instead of an integer.</p>\n"
    },
    {
        "id": "189",
        "title": "Rotate Array",
        "slug": "rotate-array",
        "difficulty": "Easy",
        "likes": 1583,
        "dislikes": 649,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Rotate List\", \"titleSlug\": \"rotate-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Reverse Words in a String II\", \"titleSlug\": \"reverse-words-in-a-string-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "59",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array"
        ],
        "content": "<p>Given an array, rotate the array to the right by <em>k</em> steps, where&nbsp;<em>k</em>&nbsp;is non-negative.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> <code>[1,2,3,4,5,6,7]</code> and <em>k</em> = 3\n<strong>Output:</strong> <code>[5,6,7,1,2,3,4]</code>\n<strong>Explanation:</strong>\nrotate 1 steps to the right: <code>[7,1,2,3,4,5,6]</code>\nrotate 2 steps to the right: <code>[6,7,1,2,3,4,5]\n</code>rotate 3 steps to the right: <code>[5,6,7,1,2,3,4]</code>\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> <code>[-1,-100,3,99]</code> and <em>k</em> = 2\n<strong>Output:</strong> [3,99,-1,-100]\n<strong>Explanation:</strong> \nrotate 1 steps to the right: [99,-1,-100,3]\nrotate 2 steps to the right: [3,99,-1,-100]\n</pre>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>Try to come up as many solutions as you can, there are at least 3 different ways to solve this problem.</li>\n\t<li>Could you do it in-place with O(1) extra space?</li>\n</ul>"
    },
    {
        "id": "598",
        "title": "Range Addition II",
        "slug": "range-addition-ii",
        "difficulty": "Easy",
        "likes": 208,
        "dislikes": 486,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Range Addition\", \"titleSlug\": \"range-addition\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "146",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math"
        ],
        "content": "<p>Given an m * n matrix <b>M</b> initialized with all <b>0</b>'s and several update operations.</p>\n<p>Operations are represented by a 2D array, and each operation is represented by an array with two <b>positive</b> integers <b>a</b> and <b>b</b>, which means <b>M[i][j]</b> should be <b>added by one</b> for all <b>0 <= i < a</b> and <b>0 <= j < b</b>. </p>\n<p>You need to count and return the number of maximum integers in the matrix after performing all the operations.</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> \nm = 3, n = 3\noperations = [[2,2],[3,3]]\n<b>Output:</b> 4\n<b>Explanation:</b> \nInitially, M = \n[[0, 0, 0],\n [0, 0, 0],\n [0, 0, 0]]\n\nAfter performing [2,2], M = \n[[1, 1, 0],\n [1, 1, 0],\n [0, 0, 0]]\n\nAfter performing [3,3], M = \n[[2, 2, 1],\n [2, 2, 1],\n [1, 1, 1]]\n\nSo the maximum integer in M is 2, and there are four of it in M. So return 4.\n</pre>\n</p>\n\n<p><b>Note:</b><br>\n<ol>\n<li>The range of m and n is [1,40000].</li>\n<li>The range of a is [1,m], and the range of b is [1,n].</li>\n<li>The range of operations size won't exceed 10,000.</li>\n</ol>\n</p>"
    },
    {
        "id": "1095",
        "title": "Find in Mountain Array",
        "slug": "find-in-mountain-array",
        "difficulty": "Hard",
        "likes": 102,
        "dislikes": 13,
        "hints": [
            "Based on whether A[i-1] < A[i] < A[i+1], A[i-1] < A[i] > A[i+1], or A[i-1] > A[i] > A[i+1], we are either at the left side, peak, or right side of the mountain.  We can binary search to find the peak.\r\nAfter finding the peak, we can binary search two more times to find whether the value occurs on either side of the peak."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Peak Index in a Mountain Array\", \"titleSlug\": \"peak-index-in-a-mountain-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Binary Search"
        ],
        "content": "<p><em>(This problem is an&nbsp;<strong>interactive problem</strong>.)</em></p>\n\n<p>You may recall that an array&nbsp;<code>A</code> is a <em>mountain array</em> if and only if:</p>\n\n<ul>\n\t<li><code>A.length &gt;= 3</code></li>\n\t<li>There exists some&nbsp;<code>i</code>&nbsp;with&nbsp;<code>0 &lt; i&nbsp;&lt; A.length - 1</code>&nbsp;such that:\n\t<ul>\n\t\t<li><code>A[0] &lt; A[1] &lt; ... A[i-1] &lt; A[i]</code></li>\n\t\t<li><code>A[i] &gt; A[i+1] &gt; ... &gt; A[A.length - 1]</code></li>\n\t</ul>\n\t</li>\n</ul>\n\n<p>Given a mountain&nbsp;array <code>mountainArr</code>, return the <strong>minimum</strong>&nbsp;<code>index</code> such that <code>mountainArr.get(index) == target</code>.&nbsp; If such an <code>index</code>&nbsp;doesn&#39;t exist, return <code>-1</code>.</p>\n\n<p><strong>You can&#39;t access the mountain array directly.</strong>&nbsp; You may only access the array using a&nbsp;<code>MountainArray</code>&nbsp;interface:</p>\n\n<ul>\n\t<li><code>MountainArray.get(k)</code> returns the element of the array at index <code>k</code>&nbsp;(0-indexed).</li>\n\t<li><code>MountainArray.length()</code>&nbsp;returns the length of the array.</li>\n</ul>\n\n<p>Submissions making more than <code>100</code> calls to&nbsp;<code>MountainArray.get</code>&nbsp;will be judged <em>Wrong Answer</em>.&nbsp; Also, any solutions that attempt to circumvent the judge&nbsp;will result in disqualification.</p>\n\n<ol>\n</ol>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> array = [1,2,3,4,5,3,1], target = 3\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> 3 exists in the array, at index=2 and index=5. Return the minimum index, which is 2.</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> array = [0,1,2,4,2,1], target = 3\n<strong>Output:</strong> -1\n<strong>Explanation:</strong> 3 does not exist in <code>the array,</code> so we return -1.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ol>\n\t<li><code>3 &lt;= mountain_arr.length() &lt;= 10000</code></li>\n\t<li><code>0 &lt;= target &lt;= 10^9</code></li>\n\t<li><code>0 &lt;= mountain_arr.get(index) &lt;=&nbsp;10^9</code></li>\n</ol>"
    },
    {
        "id": "629",
        "title": "K Inverse Pairs Array",
        "slug": "k-inverse-pairs-array",
        "difficulty": "Hard",
        "likes": 226,
        "dislikes": 73,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "185",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>Given two integers <code>n</code> and <code>k</code>, find how many different arrays consist of numbers from <code>1</code> to <code>n</code> such that there are exactly <code>k</code> inverse pairs.</p>\n\n<p>We define an inverse pair as following: For <code>i<sub>th</sub></code> and <code>j<sub>th</sub></code> element in the array, if <code>i</code> &lt; <code>j</code> and <code>a[i]</code> &gt; <code>a[j]</code> then it&#39;s an inverse pair; Otherwise, it&#39;s not.</p>\n\n<p>Since the answer may be very large, the answer should be modulo 10<sup>9</sup> + 7.</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> n = 3, k = 0\n<b>Output:</b> 1\n<b>Explanation:</b> \nOnly the array [1,2,3] which consists of numbers from 1 to 3 has exactly 0 inverse pair.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input:</b> n = 3, k = 1\n<b>Output:</b> 2\n<b>Explanation:</b> \nThe array [1,3,2] and [2,1,3] have exactly 1 inverse pair.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b></p>\n\n<ol>\n\t<li>The integer <code>n</code> is in the range [1, 1000] and <code>k</code> is in the range [0, 1000].</li>\n</ol>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "993",
        "title": "Cousins in Binary Tree",
        "slug": "cousins-in-binary-tree",
        "difficulty": "Easy",
        "likes": 269,
        "dislikes": 19,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Binary Tree Level Order Traversal\", \"titleSlug\": \"binary-tree-level-order-traversal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "695",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree",
            "Breadth-first Search"
        ],
        "content": "<p>In a binary tree, the root node is at depth <code>0</code>, and children of each depth <code>k</code> node are at depth <code>k+1</code>.</p>\n\n<p>Two nodes of a binary tree are <em>cousins</em> if they have the same depth, but have <strong>different parents</strong>.</p>\n\n<p>We are given the <code>root</code> of a binary tree with unique values, and the values <code>x</code>&nbsp;and <code>y</code>&nbsp;of two different nodes in the tree.</p>\n\n<p>Return&nbsp;<code>true</code>&nbsp;if and only if the nodes corresponding to the values <code>x</code> and <code>y</code> are cousins.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:<br />\n<img alt=\"\" src=\"./img/cousins-in-binary-tree_1.png\" style=\"width: 180px; height: 160px;\" /></strong></p>\n\n<pre>\n<strong>Input: </strong>root = <span id=\"example-input-1-1\">[1,2,3,4]</span>, x = <span id=\"example-input-1-2\">4</span>, y = <span id=\"example-input-1-3\">3</span>\n<strong>Output: </strong><span id=\"example-output-1\">false</span>\n</pre>\n\n<div>\n<p><strong>Example 2:<br />\n<img alt=\"\" src=\"./img/cousins-in-binary-tree_2.png\" style=\"width: 201px; height: 160px;\" /></strong></p>\n\n<pre>\n<strong>Input: </strong>root = <span id=\"example-input-2-1\">[1,2,3,null,4,null,5]</span>, x = <span id=\"example-input-2-2\">5</span>, y = <span id=\"example-input-2-3\">4</span>\n<strong>Output: </strong><span id=\"example-output-2\">true</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<p><strong><img alt=\"\" src=\"./img/cousins-in-binary-tree_3.png\" style=\"width: 156px; height: 160px;\" /></strong></p>\n\n<pre>\n<strong>Input: </strong>root = <span id=\"example-input-3-1\">[1,2,3,null,4]</span>, x = 2, y = 3\n<strong>Output: </strong><span id=\"example-output-3\">false</span></pre>\n\n<p>&nbsp;</p>\n</div>\n</div>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li>The number of nodes in the tree will be between <code>2</code> and <code>100</code>.</li>\n\t<li>Each node has a unique integer value from <code>1</code> to <code>100</code>.</li>\n</ol>\n\n<div>\n<div>\n<div>&nbsp;</div>\n</div>\n</div>"
    },
    {
        "id": "976",
        "title": "Largest Perimeter Triangle",
        "slug": "largest-perimeter-triangle",
        "difficulty": "Easy",
        "likes": 198,
        "dislikes": 25,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Largest Triangle Area\", \"titleSlug\": \"largest-triangle-area\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "665",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math",
            "Sort"
        ],
        "content": "<p>Given an array <code>A</code> of positive lengths, return the largest perimeter of a triangle with <strong>non-zero area</strong>, formed from 3 of these lengths.</p>\n\n<p>If it is impossible to form any&nbsp;triangle of non-zero area, return <code>0</code>.</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[2,1,2]</span>\n<strong>Output: </strong><span id=\"example-output-1\">5</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[1,2,1]</span>\n<strong>Output: </strong><span id=\"example-output-2\">0</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">[3,2,3,4]</span>\n<strong>Output: </strong><span id=\"example-output-3\">10</span>\n</pre>\n\n<div>\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-4-1\">[3,6,2,3]</span>\n<strong>Output: </strong><span id=\"example-output-4\">8</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>3 &lt;= A.length &lt;= 10000</code></li>\n\t<li><code>1 &lt;= A[i] &lt;= 10^6</code></li>\n</ol>\n</div>\n</div>\n</div>\n</div>"
    },
    {
        "id": "389",
        "title": "Find the Difference",
        "slug": "find-the-difference",
        "difficulty": "Easy",
        "likes": 554,
        "dislikes": 242,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Single Number\", \"titleSlug\": \"single-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Hash Table",
            "Bit Manipulation"
        ],
        "content": "<p>\nGiven two strings <b><i>s</i></b> and <b><i>t</i></b> which consist of only lowercase letters.</p>\n\n<p>String <b><i>t</i></b> is generated by random shuffling string <b><i>s</i></b> and then add one more letter at a random position.</p>\n\n<p>Find the letter that was added in <b><i>t</i></b>.</p>\n\n<p><b>Example:</b>\n<pre>\nInput:\ns = \"abcd\"\nt = \"abcde\"\n\nOutput:\ne\n\nExplanation:\n'e' is the letter that was added.\n</pre>"
    },
    {
        "id": "969",
        "title": "Pancake Sorting",
        "slug": "pancake-sorting",
        "difficulty": "Medium",
        "likes": 179,
        "dislikes": 216,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "657",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Sort"
        ],
        "content": "<p>Given an array <code>A</code>, we can perform a&nbsp;<em>pancake flip</em>:&nbsp;We choose some positive integer&nbsp;<code><strong>k</strong> &lt;= A.length</code>, then reverse the order of the first <strong>k</strong> elements of <code>A</code>.&nbsp; We want to perform zero or more pancake flips (doing them one after another in succession) to sort the array <code>A</code>.</p>\n\n<p>Return the k-values corresponding to a sequence of pancake flips that sort <code>A</code>.&nbsp; Any&nbsp;valid answer that sorts the array within <code>10 * A.length</code> flips will be judged as correct.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[3,2,4,1]</span>\n<strong>Output: </strong><span id=\"example-output-1\">[4,2,4,3]</span>\n<strong>Explanation: </strong>\nWe perform 4 pancake flips, with k values 4, 2, 4, and 3.\nStarting state: A = [3, 2, 4, 1]\nAfter 1st flip (k=4): A = [1, 4, 2, 3]\nAfter 2nd flip (k=2): A = [4, 1, 2, 3]\nAfter 3rd flip (k=4): A = [3, 2, 1, 4]\nAfter 4th flip (k=3): A = [1, 2, 3, 4], which is sorted. \n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[1,2,3]</span>\n<strong>Output: </strong><span id=\"example-output-2\">[]</span>\n<strong>Explanation: </strong>The input is already sorted, so there is no need to flip anything.\nNote that other answers, such as [3, 3], would also be accepted.\n</pre>\n\n<p>&nbsp;</p>\n</div>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 100</code></li>\n\t<li><code>A[i]</code> is a permutation of <code>[1, 2, ..., A.length]</code></li>\n</ol>\n"
    },
    {
        "id": "538",
        "title": "Convert BST to Greater Tree",
        "slug": "convert-bst-to-greater-tree",
        "difficulty": "Easy",
        "likes": 1443,
        "dislikes": 93,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "281",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree"
        ],
        "content": "<p>Given a Binary Search Tree (BST), convert it to a Greater Tree such that every key of the original BST is changed to the original key plus sum of all keys greater than the original key in BST.</p>\n\n<p>\n<b>Example:</b>\n<pre>\n<b>Input:</b> The root of a Binary Search Tree like this:\n              5\n            /   \\\n           2     13\n\n<b>Output:</b> The root of a Greater Tree like this:\n             18\n            /   \\\n          20     13\n</pre>\n</p>"
    },
    {
        "id": "59",
        "title": "Spiral Matrix II",
        "slug": "spiral-matrix-ii",
        "difficulty": "Medium",
        "likes": 541,
        "dislikes": 86,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Spiral Matrix\", \"titleSlug\": \"spiral-matrix\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Array"
        ],
        "content": "<p>Given a positive integer <em>n</em>, generate a square matrix filled with elements from 1 to <em>n</em><sup>2</sup> in spiral order.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input:</strong> 3\n<strong>Output:</strong>\n[\n [ 1, 2, 3 ],\n [ 8, 9, 4 ],\n [ 7, 6, 5 ]\n]\n</pre>\n"
    },
    {
        "id": "764",
        "title": "Largest Plus Sign",
        "slug": "largest-plus-sign",
        "difficulty": "Medium",
        "likes": 299,
        "dislikes": 68,
        "hints": [
            "For each direction such as \"left\", find left[r][c] = the number of 1s you will see before a zero starting at r, c and walking left.  You can find this in N^2 time with a dp.  The largest plus sign at r, c is just the minimum of left[r][c], up[r][c] etc."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Maximal Square\", \"titleSlug\": \"maximal-square\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "375",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>\nIn a 2D <code>grid</code> from (0, 0) to (N-1, N-1), every cell contains a <code>1</code>, except those cells in the given list <code>mines</code> which are <code>0</code>.  What is the largest axis-aligned plus sign of <code>1</code>s contained in the grid?  Return the order of the plus sign.  If there is none, return 0.\n</p><p>\nAn \"<i>axis-aligned plus sign of <code>1</code>s</i> of order <b>k</b>\" has some center <code>grid[x][y] = 1</code> along with 4 arms of length <code>k-1</code> going up, down, left, and right, and made of <code>1</code>s.  This is demonstrated in the diagrams below.  Note that there could be <code>0</code>s or <code>1</code>s beyond the arms of the plus sign, only the relevant area of the plus sign is checked for 1s.\n</p><p>\n\n<p><b>Examples of Axis-Aligned Plus Signs of Order k:</b><br /><pre>\nOrder 1:\n000\n0<b>1</b>0\n000\n\nOrder 2:\n00000\n00<b>1</b>00\n0<b>111</b>0\n00<b>1</b>00\n00000\n\nOrder 3:\n0000000\n000<b>1</b>000\n000<b>1</b>000\n0<b>11111</b>0\n000<b>1</b>000\n000<b>1</b>000\n0000000\n</pre></p>\n\n<p><b>Example 1:</b><br /><pre>\n<b>Input:</b> N = 5, mines = [[4, 2]]\n<b>Output:</b> 2\n<b>Explanation:</b>\n11111\n11111\n1<b>1</b>111\n<b>111</b>11\n1<b>1</b>011\nIn the above grid, the largest plus sign can only be order 2.  One of them is marked in bold.\n</pre></p>\n\n<p><b>Example 2:</b><br /><pre>\n<b>Input:</b> N = 2, mines = []\n<b>Output:</b> 1\n<b>Explanation:</b>\nThere is no plus sign of order 2, but there is of order 1.\n</pre></p>\n\n<p><b>Example 3:</b><br /><pre>\n<b>Input:</b> N = 1, mines = [[0, 0]]\n<b>Output:</b> 0\n<b>Explanation:</b>\nThere is no plus sign, so return 0.\n</pre></p>\n\n<p><b>Note:</b><br><ol>\n<li><code>N</code> will be an integer in the range <code>[1, 500]</code>.</li>\n<li><code>mines</code> will have length at most <code>5000</code>.</li>\n<li><code>mines[i]</code> will be length 2 and consist of integers in the range <code>[0, N-1]</code>.</li>\n<li><i>(Additionally, programs submitted in C, C++, or C# will be judged with a slightly smaller time limit.)</i></li>\n</ol></p>"
    },
    {
        "id": "808",
        "title": "Soup Servings",
        "slug": "soup-servings",
        "difficulty": "Medium",
        "likes": 104,
        "dislikes": 378,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "441",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>There are two types of soup: type A and type B. Initially we have <code>N</code> ml of each type of soup. There are four kinds of operations:</p>\n\n<ol>\n\t<li>Serve&nbsp;100 ml of soup A and 0 ml of soup B</li>\n\t<li>Serve&nbsp;75 ml of soup A and 25&nbsp;ml of soup B</li>\n\t<li>Serve 50 ml of soup A and 50 ml of soup B</li>\n\t<li>Serve 25&nbsp;ml of soup A and 75&nbsp;ml of soup B</li>\n</ol>\n\n<p>When we serve some soup, we give it to someone and we no longer have it.&nbsp; Each turn,&nbsp;we will choose from the four operations with equal probability 0.25. If the remaining volume of soup is not enough to complete the operation, we will serve&nbsp;as much as we can.&nbsp; We stop once we no longer have some quantity of both types of soup.</p>\n\n<p>Note that we do not have the operation where all 100 ml&#39;s of soup B are used first.&nbsp;&nbsp;</p>\n\n<p>Return the probability that soup A will be empty&nbsp;first, plus half the probability that A and B become empty at the same time.</p>\n\n<p>&nbsp;</p>\n\n<pre>\n<strong>Example:</strong>\n<strong>Input:</strong> N = 50\n<strong>Output:</strong> 0.625\n<strong>Explanation:</strong> \nIf we choose the first two operations, A will become empty first. For the third operation, A and B will become empty at the same time. For the fourth operation, B will become empty first. So the total probability of A becoming empty first plus half the probability that A and B become empty at the same time, is 0.25 * (1 + 1 + 0.5 + 0) = 0.625.\n\n</pre>\n\n<p><strong>Notes: </strong></p>\n\n<ul>\n\t<li><code>0 &lt;= N &lt;= 10^9</code>.&nbsp;</li>\n\t<li>Answers within&nbsp;<code>10^-6</code>&nbsp;of the true value will be accepted as correct.</li>\n</ul>\n"
    },
    {
        "id": "725",
        "title": "Split Linked List in Parts",
        "slug": "split-linked-list-in-parts",
        "difficulty": "Medium",
        "likes": 406,
        "dislikes": 84,
        "hints": [
            "If there are N nodes in the list, and k parts, then every part has N/k elements, except the first N%k parts have an extra one."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Rotate List\", \"titleSlug\": \"rotate-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Odd Even Linked List\", \"titleSlug\": \"odd-even-linked-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "292",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Linked List"
        ],
        "content": "<p>Given a (singly) linked list with head node <code>root</code>, write a function to split the linked list into <code>k</code> consecutive linked list \"parts\".\n</p><p>\nThe length of each part should be as equal as possible: no two parts should have a size differing by more than 1.  This may lead to some parts being null.\n</p><p>\nThe parts should be in order of occurrence in the input list, and parts occurring earlier should always have a size greater than or equal parts occurring later.\n</p><p>\nReturn a List of ListNode's representing the linked list parts that are formed.\n</p>\n\nExamples\n1->2->3->4, k = 5 // 5 equal parts\n[ [1], \n[2],\n[3],\n[4],\nnull ]\n\n<p><b>Example 1:</b><br />\n<pre style=\"white-space: pre-line\">\n<b>Input:</b> \nroot = [1, 2, 3], k = 5\n<b>Output:</b> [[1],[2],[3],[],[]]\n<b>Explanation:</b>\nThe input and each element of the output are ListNodes, not arrays.\nFor example, the input root has root.val = 1, root.next.val = 2, \\root.next.next.val = 3, and root.next.next.next = null.\nThe first element output[0] has output[0].val = 1, output[0].next = null.\nThe last element output[4] is null, but it's string representation as a ListNode is [].\n</pre>\n</p>\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b> \nroot = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], k = 3\n<b>Output:</b> [[1, 2, 3, 4], [5, 6, 7], [8, 9, 10]]\n<b>Explanation:</b>\nThe input has been split into consecutive parts with size difference at most 1, and earlier parts are a larger size than the later parts.\n</pre>\n</p>\n\n<p><b>Note:</b>\n<li>The length of <code>root</code> will be in the range <code>[0, 1000]</code>.</li>\n<li>Each value of a node in the input will be an integer in the range <code>[0, 999]</code>.</li>\n<li><code>k</code> will be an integer in the range <code>[1, 50]</code>.</li>\n</p>"
    },
    {
        "id": "136",
        "title": "Single Number",
        "slug": "single-number",
        "difficulty": "Easy",
        "likes": 2819,
        "dislikes": 105,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Single Number II\", \"titleSlug\": \"single-number-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Single Number III\", \"titleSlug\": \"single-number-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Missing Number\", \"titleSlug\": \"missing-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Find the Duplicate Number\", \"titleSlug\": \"find-the-duplicate-number\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find the Difference\", \"titleSlug\": \"find-the-difference\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "234",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Hash Table",
            "Bit Manipulation"
        ],
        "content": "<p>Given a <strong>non-empty</strong>&nbsp;array of integers, every element appears <em>twice</em> except for one. Find that single one.</p>\n\n<p><strong>Note:</strong></p>\n\n<p>Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> [2,2,1]\n<strong>Output:</strong> 1\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> [4,1,2,1,2]\n<strong>Output:</strong> 4\n</pre>\n"
    },
    {
        "id": "381",
        "title": "Insert Delete GetRandom O(1) - Duplicates allowed",
        "slug": "insert-delete-getrandom-o1-duplicates-allowed",
        "difficulty": "Hard",
        "likes": 487,
        "dislikes": 48,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Insert Delete GetRandom O(1)\", \"titleSlug\": \"insert-delete-getrandom-o1\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "745",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Hash Table",
            "Design"
        ],
        "content": "<p>Design a data structure that supports all following operations in <i>average</i> <b>O(1)</b> time.</p>\n<b>Note: Duplicate elements are allowed.</b>\n<p>\n<ol>\n<li><code>insert(val)</code>: Inserts an item val to the collection.</li>\n<li><code>remove(val)</code>: Removes an item val from the collection if present.</li>\n<li><code>getRandom</code>: Returns a random element from current collection of elements. The probability of each element being returned is <b>linearly related</b> to the number of same value the collection contains.</li>\n</ol>\n</p>\n\n<p><b>Example:</b>\n<pre>\n// Init an empty collection.\nRandomizedCollection collection = new RandomizedCollection();\n\n// Inserts 1 to the collection. Returns true as the collection did not contain 1.\ncollection.insert(1);\n\n// Inserts another 1 to the collection. Returns false as the collection contained 1. Collection now contains [1,1].\ncollection.insert(1);\n\n// Inserts 2 to the collection, returns true. Collection now contains [1,1,2].\ncollection.insert(2);\n\n// getRandom should return 1 with the probability 2/3, and returns 2 with the probability 1/3.\ncollection.getRandom();\n\n// Removes 1 from the collection, returns true. Collection now contains [1,2].\ncollection.remove(1);\n\n// getRandom should return 1 and 2 both equally likely.\ncollection.getRandom();\n</pre>\n</p>"
    },
    {
        "id": "636",
        "title": "Exclusive Time of Functions",
        "slug": "exclusive-time-of-functions",
        "difficulty": "Medium",
        "likes": 496,
        "dislikes": 814,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "220",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Stack"
        ],
        "content": "<p>On a <strong>single threaded</strong> CPU, we execute some functions.&nbsp; Each function has a unique id between <code>0</code> and <code>N-1</code>.</p>\n\n<p>We store logs in timestamp order that describe when a function is entered or exited.</p>\n\n<p>Each log is a string with this format: <code>&quot;{function_id}:{&quot;start&quot; | &quot;end&quot;}:{timestamp}&quot;</code>.&nbsp; For example, <code>&quot;0:start:3&quot;</code>&nbsp;means the function with id <code>0</code> <strong>started at the beginning</strong> of timestamp <code>3</code>.&nbsp; <code>&quot;1:end:2&quot;</code> means the function with id <code>1</code> <strong>ended at the end</strong> of timestamp <code>2</code>.</p>\n\n<p>A function&#39;s <em>exclusive time</em>&nbsp;is the number of units of time spent in this function.&nbsp; Note that this does <strong>not</strong> include any recursive&nbsp;calls to child functions.</p>\n\n<p>The CPU is <strong>single threaded</strong> which means that only one function is being executed at a given time unit.</p>\n\n<p>Return the exclusive time of each function, sorted by their function id.</p>\n\n<p>&nbsp;</p>\n\n<p><b>Example 1:</b></p>\n\n<p><b><img alt=\"\" src=\"./img/exclusive-time-of-functions_1.png\" style=\"width: 500px; height: 218px;\" /></b></p>\n\n<pre>\n<b>Input:</b>\nn = 2\nlogs = [&quot;0:start:0&quot;,&quot;1:start:2&quot;,&quot;1:end:5&quot;,&quot;0:end:6&quot;]\n<b>Output: </b>[3, 4]\n<b>Explanation:</b>\nFunction 0 starts at the beginning of time 0, then it executes 2 units of time and reaches the end of time 1.\nNow function 1 starts at the beginning of time 2, executes 4 units of time and ends at time 5.\nFunction 0 is running again at the beginning of time 6, and also ends at the end of time 6, thus executing for 1 unit of time. \nSo function 0 spends 2 + 1 = 3 units of total time executing, and function 1 spends 4 units of total time executing.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b></p>\n\n<ol>\n\t<li><code>1 &lt;= n &lt;= 100</code></li>\n\t<li>Two functions won&#39;t start or end at the same time.</li>\n\t<li>Functions will always log when they exit.</li>\n</ol>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "524",
        "title": "Longest Word in Dictionary through Deleting",
        "slug": "longest-word-in-dictionary-through-deleting",
        "difficulty": "Medium",
        "likes": 369,
        "dislikes": 190,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Longest Word in Dictionary\", \"titleSlug\": \"longest-word-in-dictionary\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "129",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Two Pointers",
            "Sort"
        ],
        "content": "<p>\nGiven a string and a string dictionary, find the longest string in the dictionary that can be formed by deleting some characters of the given string. If there are more than one possible results, return the longest word with the smallest lexicographical order. If there is no possible result, return the empty string.\n</p>\n<p><b>Example 1:</b><br>\n<pre>\n<b>Input:</b>\ns = \"abpcplea\", d = [\"ale\",\"apple\",\"monkey\",\"plea\"]\n\n<b>Output:</b> \n\"apple\"\n</pre>\n</p>\n\n</p>\n<p><b>Example 2:</b><br>\n<pre>\n<b>Input:</b>\ns = \"abpcplea\", d = [\"a\",\"b\",\"c\"]\n\n<b>Output:</b> \n\"a\"\n</pre>\n</p>\n\n<p><b>Note:</b><br>\n<ol>\n<li>All the strings in the input will only contain lower-case letters.</li>\n<li>The size of the dictionary won't exceed 1,000.</li>\n<li>The length of all the strings in the input won't exceed 1,000.</li>\n</ol>\n</p>"
    },
    {
        "id": "236",
        "title": "Lowest Common Ancestor of a Binary Tree",
        "slug": "lowest-common-ancestor-of-a-binary-tree",
        "difficulty": "Medium",
        "likes": 2310,
        "dislikes": 144,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Lowest Common Ancestor of a Binary Search Tree\", \"titleSlug\": \"lowest-common-ancestor-of-a-binary-search-tree\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "615",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree"
        ],
        "content": "<p>Given a binary tree, find the lowest common ancestor (LCA) of two given nodes in the tree.</p>\n\n<p>According to the <a href=\"https://en.wikipedia.org/wiki/Lowest_common_ancestor\" target=\"_blank\">definition of LCA on Wikipedia</a>: &ldquo;The lowest common ancestor is defined between two nodes p&nbsp;and q&nbsp;as the lowest node in T that has both p&nbsp;and q&nbsp;as descendants (where we allow <b>a node to be a descendant of itself</b>).&rdquo;</p>\n\n<p>Given the following binary tree:&nbsp; root =&nbsp;[3,5,1,6,2,0,8,null,null,7,4]</p>\n<img alt=\"\" src=\"./img/lowest-common-ancestor-of-a-binary-tree_1.png\" style=\"width: 200px; height: 190px;\" />\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [3,5,1,6,2,0,8,null,null,7,4], p = 5, q = 1\n<strong>Output:</strong> 3\n<strong>Explanation: </strong>The LCA of nodes <code>5</code> and <code>1</code> is <code>3.</code>\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [3,5,1,6,2,0,8,null,null,7,4], p = 5, q = 4\n<strong>Output:</strong> 5\n<strong>Explanation: </strong>The LCA of nodes <code>5</code> and <code>4</code> is <code>5</code>, since a node can be a descendant of itself according to the LCA definition.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>All of the nodes&#39; values will be unique.</li>\n\t<li>p and q are different and both values will&nbsp;exist in the binary tree.</li>\n</ul>\n"
    },
    {
        "id": "900",
        "title": "RLE Iterator",
        "slug": "rle-iterator",
        "difficulty": "Medium",
        "likes": 146,
        "dislikes": 61,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "552",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array"
        ],
        "content": "<p>Write an iterator that iterates through a run-length encoded sequence.</p>\n\n<p>The iterator is initialized by <code>RLEIterator(int[] A)</code>, where <code>A</code> is a run-length encoding of some&nbsp;sequence.&nbsp; More specifically,&nbsp;for all even <code>i</code>,&nbsp;<code>A[i]</code> tells us the number of times that the non-negative integer value <code>A[i+1]</code> is repeated in the sequence.</p>\n\n<p>The iterator supports one function:&nbsp;<code>next(int n)</code>, which exhausts the next <code>n</code> elements&nbsp;(<code>n &gt;= 1</code>) and returns the last element exhausted in this way.&nbsp; If there is no element left to exhaust, <code>next</code>&nbsp;returns <code>-1</code> instead.</p>\n\n<p>For example, we start with <code>A = [3,8,0,9,2,5]</code>, which is a run-length encoding of the sequence <code>[8,8,8,5,5]</code>.&nbsp; This is because the sequence can be read as&nbsp;&quot;three eights, zero nines, two fives&quot;.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[&quot;RLEIterator&quot;,&quot;next&quot;,&quot;next&quot;,&quot;next&quot;,&quot;next&quot;]</span>, <span id=\"example-input-1-2\">[[[3,8,0,9,2,5]],[2],[1],[1],[2]]</span>\n<strong>Output: </strong><span id=\"example-output-1\">[null,8,8,5,-1]</span>\n<strong>Explanation: </strong>\nRLEIterator is initialized with RLEIterator([3,8,0,9,2,5]).\nThis maps to the sequence [8,8,8,5,5].\nRLEIterator.next is then called 4 times:\n\n.next(2) exhausts 2 terms of the sequence, returning 8.  The remaining sequence is now [8, 5, 5].\n\n.next(1) exhausts 1 term of the sequence, returning 8.  The remaining sequence is now [5, 5].\n\n.next(1) exhausts 1 term of the sequence, returning 5.  The remaining sequence is now [5].\n\n.next(2) exhausts 2 terms, returning -1.  This is because the first term exhausted was 5,\nbut the second term did not exist.  Since the last term exhausted does not exist, we return -1.\n\n</pre>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>0 &lt;= A.length &lt;= 1000</code></li>\n\t<li><code>A.length</code>&nbsp;is an even integer.</li>\n\t<li><code>0 &lt;= A[i] &lt;= 10^9</code></li>\n\t<li>There are at most <code>1000</code> calls to <code>RLEIterator.next(int n)</code> per test case.</li>\n\t<li>Each call to&nbsp;<code>RLEIterator.next(int n)</code>&nbsp;will have <code>1 &lt;= n &lt;= 10^9</code>.</li>\n</ol>\n"
    },
    {
        "id": "719",
        "title": "Find K-th Smallest Pair Distance",
        "slug": "find-k-th-smallest-pair-distance",
        "difficulty": "Hard",
        "likes": 611,
        "dislikes": 21,
        "hints": [
            "Binary search for the answer.  How can you check how many pairs have distance <= X?"
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Find K Pairs with Smallest Sums\", \"titleSlug\": \"find-k-pairs-with-smallest-sums\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Kth Smallest Element in a Sorted Matrix\", \"titleSlug\": \"kth-smallest-element-in-a-sorted-matrix\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find K Closest Elements\", \"titleSlug\": \"find-k-closest-elements\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Kth Smallest Number in Multiplication Table\", \"titleSlug\": \"kth-smallest-number-in-multiplication-table\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"K-th Smallest Prime Fraction\", \"titleSlug\": \"k-th-smallest-prime-fraction\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "270",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Binary Search",
            "Heap"
        ],
        "content": "<p>Given an integer array, return the k-th smallest <b>distance</b> among all the pairs. The distance of a pair (A, B) is defined as the absolute difference between A and B. </p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b>\nnums = [1,3,1]\nk = 1\n<b>Output: 0</b> \n<b>Explanation:</b>\nHere are all the pairs:\n(1,3) -> 2\n(1,1) -> 0\n(3,1) -> 2\nThen the 1st smallest distance pair is (1,1), and its distance is 0.\n</pre>\n</p>\n\n<p><b>Note:</b><br>\n<ol>\n<li><code>2 <= len(nums) <= 10000</code>.</li>\n<li><code>0 <= nums[i] < 1000000</code>.</li>\n<li><code>1 <= k <= len(nums) * (len(nums) - 1) / 2</code>.</li>\n</ol>\n</p>"
    },
    {
        "id": "135",
        "title": "Candy",
        "slug": "candy",
        "difficulty": "Hard",
        "likes": 595,
        "dislikes": 130,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "90",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Greedy"
        ],
        "content": "<p>There are <em>N</em> children standing in a line. Each child is assigned a rating value.</p>\n\n<p>You are giving candies to these children subjected to the following requirements:</p>\n\n<ul>\n\t<li>Each child must have at least one candy.</li>\n\t<li>Children with a higher rating get more candies than their neighbors.</li>\n</ul>\n\n<p>What is the minimum candies you must give?</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> [1,0,2]\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> You can allocate to the first, second and third child with 2, 1, 2 candies respectively.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> [1,2,2]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> You can allocate to the first, second and third child with 1, 2, 1 candies respectively.\n             The third child gets 1 candy because it satisfies the above two conditions.\n</pre>\n"
    },
    {
        "id": "227",
        "title": "Basic Calculator II",
        "slug": "basic-calculator-ii",
        "difficulty": "Medium",
        "likes": 836,
        "dislikes": 144,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Basic Calculator\", \"titleSlug\": \"basic-calculator\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Expression Add Operators\", \"titleSlug\": \"expression-add-operators\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Basic Calculator III\", \"titleSlug\": \"basic-calculator-iii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "String"
        ],
        "content": "<p>Implement a basic calculator to evaluate a simple expression string.</p>\n\n<p>The expression string contains only <b>non-negative</b> integers, <code>+</code>, <code>-</code>, <code>*</code>, <code>/</code> operators and empty spaces <code> </code>. The integer division should truncate toward zero.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>&quot;3+2*2&quot;\n<strong>Output:</strong> 7\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> &quot; 3/2 &quot;\n<strong>Output:</strong> 1</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> &quot; 3+5 / 2 &quot;\n<strong>Output:</strong> 5\n</pre>\n\n<p><b>Note:</b></p>\n\n<ul>\n\t<li>You may assume that the given expression is always valid.</li>\n\t<li><b>Do not</b> use the <code>eval</code> built-in library function.</li>\n</ul>\n"
    },
    {
        "id": "3",
        "title": "Longest Substring Without Repeating Characters",
        "slug": "longest-substring-without-repeating-characters",
        "difficulty": "Medium",
        "likes": 6287,
        "dislikes": 357,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Longest Substring with At Most Two Distinct Characters\", \"titleSlug\": \"longest-substring-with-at-most-two-distinct-characters\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Longest Substring with At Most K Distinct Characters\", \"titleSlug\": \"longest-substring-with-at-most-k-distinct-characters\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Subarrays with K Different Integers\", \"titleSlug\": \"subarrays-with-k-different-integers\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "36",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Hash Table",
            "Two Pointers",
            "String",
            "Sliding Window"
        ],
        "content": "<p>Given a string, find the length of the <b>longest substring</b> without repeating characters.</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">&quot;abcabcbb&quot;</span>\n<strong>Output: </strong><span id=\"example-output-1\">3 \n<strong>Explanation:</strong></span> The answer is <code>&quot;abc&quot;</code>, with the length of 3. \n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">&quot;bbbbb&quot;</span>\n<strong>Output: </strong><span id=\"example-output-2\">1\n</span><span id=\"example-output-1\"><strong>Explanation: </strong>T</span>he answer is <code>&quot;b&quot;</code>, with the length of 1.\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">&quot;pwwkew&quot;</span>\n<strong>Output: </strong><span id=\"example-output-3\">3\n</span><span id=\"example-output-1\"><strong>Explanation: </strong></span>The answer is <code>&quot;wke&quot;</code>, with the length of 3. \n             Note that the answer must be a <b>substring</b>, <code>&quot;pwke&quot;</code> is a <i>subsequence</i> and not a substring.\n</pre>\n</div>\n</div>\n</div>\n"
    },
    {
        "id": "563",
        "title": "Binary Tree Tilt",
        "slug": "binary-tree-tilt",
        "difficulty": "Easy",
        "likes": 358,
        "dislikes": 823,
        "hints": [
            "Don't think too much, this is an easy problem. Take some small tree as an example.",
            "Can a parent node use the values of its child nodes? How will you implement it?",
            "May be recursion and tree traversal can help you in implementing.",
            "What about postorder traversal, using values of left and right childs?"
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "115",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree"
        ],
        "content": "<p>Given a binary tree, return the tilt of the <b>whole tree</b>.</p>\n\n<p>The tilt of a <b>tree node</b> is defined as the <b>absolute difference</b> between the sum of all left subtree node values and the sum of all right subtree node values. Null node has tilt 0.</p>\n\n<p>The tilt of the <b>whole tree</b> is defined as the sum of all nodes' tilt.</p>\n\n<p><b>Example:</b><br />\n<pre>\n<b>Input:</b> \n         1\n       /   \\\n      2     3\n<b>Output:</b> 1\n<b>Explanation:</b> \nTilt of node 2 : 0\nTilt of node 3 : 0\nTilt of node 1 : |2-3| = 1\nTilt of binary tree : 0 + 0 + 1 = 1\n</pre>\n</p>\n\n<p><b>Note:</b>\n<ol>\n<li>The sum of node values in any subtree won't exceed the range of 32-bit integer. </li>\n<li>All the tilt values won't exceed the range of 32-bit integer.</li>\n</ol>\n</p>"
    },
    {
        "id": "724",
        "title": "Find Pivot Index",
        "slug": "find-pivot-index",
        "difficulty": "Easy",
        "likes": 699,
        "dislikes": 170,
        "hints": [
            "We can precompute prefix sums P[i] = nums[0] + nums[1] + ... + nums[i-1].\r\nThen for each index, the left sum is P[i], and the right sum is P[P.length - 1] - P[i] - nums[i]."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Subarray Sum Equals K\", \"titleSlug\": \"subarray-sum-equals-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "291",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array"
        ],
        "content": "<p>Given an array of integers <code>nums</code>, write a method that returns the &quot;pivot&quot; index of this array.</p>\n\n<p>We define the pivot index as the index where the sum of the numbers to the left of the index is equal to the sum of the numbers to the right of the index.</p>\n\n<p>If no such index exists, we should return -1. If there are multiple pivot indexes, you should return the left-most pivot index.</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> \nnums = [1, 7, 3, 6, 5, 6]\n<b>Output:</b> 3\n<b>Explanation:</b> \nThe sum of the numbers to the left of index 3 (nums[3] = 6) is equal to the sum of numbers to the right of index 3.\nAlso, 3 is the first index where this occurs.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input:</b> \nnums = [1, 2, 3]\n<b>Output:</b> -1\n<b>Explanation:</b> \nThere is no index that satisfies the conditions in the problem statement.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b></p>\n\n<ul>\n\t<li>The length of <code>nums</code> will be in the range <code>[0, 10000]</code>.</li>\n\t<li>Each element <code>nums[i]</code> will be an integer in the range <code>[-1000, 1000]</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "56",
        "title": "Merge Intervals",
        "slug": "merge-intervals",
        "difficulty": "Medium",
        "likes": 2482,
        "dislikes": 192,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Insert Interval\", \"titleSlug\": \"insert-interval\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Meeting Rooms\", \"titleSlug\": \"meeting-rooms\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Meeting Rooms II\", \"titleSlug\": \"meeting-rooms-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Teemo Attacking\", \"titleSlug\": \"teemo-attacking\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Add Bold Tag in String\", \"titleSlug\": \"add-bold-tag-in-string\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Range Module\", \"titleSlug\": \"range-module\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Employee Free Time\", \"titleSlug\": \"employee-free-time\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Partition Labels\", \"titleSlug\": \"partition-labels\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Interval List Intersections\", \"titleSlug\": \"interval-list-intersections\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "294",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Sort"
        ],
        "content": "<p>Given a collection of intervals, merge all overlapping intervals.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> [[1,3],[2,6],[8,10],[15,18]]\n<strong>Output:</strong> [[1,6],[8,10],[15,18]]\n<strong>Explanation:</strong> Since intervals [1,3] and [2,6] overlaps, merge them into [1,6].\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> [[1,4],[4,5]]\n<strong>Output:</strong> [[1,5]]\n<strong>Explanation:</strong> Intervals [1,4] and [4,5] are considered overlapping.</pre>\n\n<p><strong>NOTE:</strong>&nbsp;input types have been changed on April 15, 2019. Please reset to default code definition to get new method signature.</p>\n"
    },
    {
        "id": "402",
        "title": "Remove K Digits",
        "slug": "remove-k-digits",
        "difficulty": "Medium",
        "likes": 1092,
        "dislikes": 66,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Create Maximum Number\", \"titleSlug\": \"create-maximum-number\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Monotone Increasing Digits\", \"titleSlug\": \"monotone-increasing-digits\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "768",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Stack",
            "Greedy"
        ],
        "content": "<p>Given a non-negative integer <i>num</i> represented as a string, remove <i>k</i> digits from the number so that the new number is the smallest possible.\n</p>\n\n<p><b>Note:</b><br />\n<ul>\n<li>The length of <i>num</i> is less than 10002 and will be &ge; <i>k</i>.</li>\n<li>The given <i>num</i> does not contain any leading zero.</li>\n</ul>\n</b>\n</p>\n\n<p><b>Example 1:</b>\n<pre>\nInput: num = \"1432219\", k = 3\nOutput: \"1219\"\nExplanation: Remove the three digits 4, 3, and 2 to form the new number 1219 which is the smallest.\n</pre>\n</p>\n\n<p><b>Example 2:</b>\n<pre>\nInput: num = \"10200\", k = 1\nOutput: \"200\"\nExplanation: Remove the leading 1 and the number is 200. Note that the output must not contain leading zeroes.\n</pre>\n</p>\n\n<p><b>Example 3:</b>\n<pre>\nInput: num = \"10\", k = 2\nOutput: \"0\"\nExplanation: Remove all the digits from the number and it is left with nothing which is 0.\n</pre>\n</p>"
    },
    {
        "id": "138",
        "title": "Copy List with Random Pointer",
        "slug": "copy-list-with-random-pointer",
        "difficulty": "Medium",
        "likes": 1837,
        "dislikes": 483,
        "hints": [
            "Just iterate the linked list and create copies of the nodes on the go. Since a node can be referenced from multiple nodes due to the random pointers, make sure you are not making multiple copies of the same node.",
            "You may want to use extra space to keep <b>old node ---> new node</b> mapping to prevent creating multiples copies of same node.",
            "We can avoid using extra space for old node ---> new node mapping, by tweaking the original linked list. Simply interweave the nodes of the old and copied list. \r\nFor e.g.\r\n<pre>\r\nOld List: A --> B --> C --> D\r\nInterWeaved List: A --> A' --> B --> B' --> C --> C' --> D --> D'\r\n</pre>",
            "The interweaving is done using <b>next</b> pointers and we can make use of interweaved structure to get the correct reference nodes for <b>random</b> pointers."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Clone Graph\", \"titleSlug\": \"clone-graph\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "556",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Hash Table",
            "Linked List"
        ],
        "content": "<p>A linked list is given such that each node contains an additional random pointer which could point to any node in the list or null.</p>\n\n<p>Return a <a href=\"https://en.wikipedia.org/wiki/Object_copying#Deep_copy\" target=\"_blank\"><strong>deep copy</strong></a> of the list.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<p><strong><img alt=\"\" src=\"./img/copy-list-with-random-pointer_1.png\" style=\"width: 375px; height: 129px;\" /></strong></p>\n\n<pre>\n<strong>Input:\n</strong><span id=\"example-input-1-1\">{&quot;$id&quot;:&quot;1&quot;,&quot;next&quot;:{&quot;$id&quot;:&quot;2&quot;,&quot;next&quot;:null,&quot;random&quot;:{&quot;$ref&quot;:&quot;2&quot;},&quot;val&quot;:2},&quot;random&quot;:{&quot;$ref&quot;:&quot;2&quot;},&quot;val&quot;:1}\n</span>\n<b>Explanation:\n</b>Node 1&#39;s value is 1, both of its next and random pointer points to Node 2.\nNode 2&#39;s value is 2, its next pointer points to null and its random pointer points to itself.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li>You must return the <strong>copy of the given head</strong>&nbsp;as a reference to the cloned list.</li>\n</ol>\n"
    },
    {
        "id": "316",
        "title": "Remove Duplicate Letters",
        "slug": "remove-duplicate-letters",
        "difficulty": "Hard",
        "likes": 871,
        "dislikes": 80,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "761",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Stack",
            "Greedy"
        ],
        "content": "<p>Given a string which contains only lowercase letters, remove duplicate letters so that every letter appears once and only once. You must make sure your result is the smallest in lexicographical order among all possible results.</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> <code>&quot;bcabc&quot;</code>\n<b>Output:</b> <code>&quot;abc&quot;</code>\n</pre>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input:</b> <code>&quot;cbacdcbc&quot;</code>\n<b>Output:</b> <code>&quot;acdb&quot;</code>\n</pre>\n"
    },
    {
        "id": "530",
        "title": "Minimum Absolute Difference in BST",
        "slug": "minimum-absolute-difference-in-bst",
        "difficulty": "Easy",
        "likes": 596,
        "dislikes": 43,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"K-diff Pairs in an Array\", \"titleSlug\": \"k-diff-pairs-in-an-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Tree"
        ],
        "content": "<p>Given a binary search tree with non-negative values, find the minimum <a href=\"https://en.wikipedia.org/wiki/Absolute_difference\">absolute difference</a> between values of any two nodes.</p>\n\n<p><b>Example:</b></p>\n\n<pre>\n<b>Input:</b>\n\n   1\n    \\\n     3\n    /\n   2\n\n<b>Output:</b>\n1\n\n<b>Explanation:</b>\nThe minimum absolute difference is 1, which is the difference between 2 and 1 (or between 2 and 3).\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b> There are at least two nodes in this BST.</p>"
    },
    {
        "id": "25",
        "title": "Reverse Nodes in k-Group",
        "slug": "reverse-nodes-in-k-group",
        "difficulty": "Hard",
        "likes": 1368,
        "dislikes": 276,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Swap Nodes in Pairs\", \"titleSlug\": \"swap-nodes-in-pairs\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Linked List"
        ],
        "content": "<p>Given a linked list, reverse the nodes of a linked list <em>k</em> at a time and return its modified list.</p>\n\n<p><em>k</em> is a positive integer and is less than or equal to the length of the linked list. If the number of nodes is not a multiple of <em>k</em> then left-out nodes in the end should remain as it is.</p>\n\n<ul>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<p>Given this linked list: <code>1-&gt;2-&gt;3-&gt;4-&gt;5</code></p>\n\n<p>For <em>k</em> = 2, you should return: <code>2-&gt;1-&gt;4-&gt;3-&gt;5</code></p>\n\n<p>For <em>k</em> = 3, you should return: <code>3-&gt;2-&gt;1-&gt;4-&gt;5</code></p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>Only constant extra memory is allowed.</li>\n\t<li>You may not alter the values in the list&#39;s nodes, only nodes itself may be changed.</li>\n</ul>\n"
    },
    {
        "id": "453",
        "title": "Minimum Moves to Equal Array Elements",
        "slug": "minimum-moves-to-equal-array-elements",
        "difficulty": "Easy",
        "likes": 407,
        "dislikes": 630,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Minimum Moves to Equal Array Elements II\", \"titleSlug\": \"minimum-moves-to-equal-array-elements-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "77",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math"
        ],
        "content": "<p>Given a <b>non-empty</b> integer array of size <i>n</i>, find the minimum number of moves required to make all array elements equal, where a move is incrementing <i>n</i> - 1 elements by 1.</p>\n\n<p><b>Example:</b>\n<pre>\n<b>Input:</b>\n[1,2,3]\n\n<b>Output:</b>\n3\n\n<b>Explanation:</b>\nOnly three moves are needed (remember each move increments two elements):\n\n[1,2,3]  =>  [2,3,3]  =>  [3,4,3]  =>  [4,4,4]\n</pre>\n</p>"
    },
    {
        "id": "76",
        "title": "Minimum Window Substring",
        "slug": "minimum-window-substring",
        "difficulty": "Hard",
        "likes": 2723,
        "dislikes": 181,
        "hints": [
            "Use two pointers to create a window of letters in <b>S</b>, which would have all the characters from <b>T</b>.",
            "Since you have to find the minimum window in <b>S</b> which has all the characters from <b>T</b>, you need to expand and contract the window using the two pointers and keep checking the window for all the characters. This approach is also called Sliding Window Approach.\r\n\r\n<br><br>\r\n<pre>\r\nL ------------------------ R , Suppose this is the window that contains all characters of <b>T</b> \r\n                          \r\n&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp L----------------- R , this is the contracted window. We found a smaller window that still contains all the characters in <b>T</b>\r\n\r\nWhen the window is no longer valid, start expanding again using the right pointer. </pre>"
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Substring with Concatenation of All Words\", \"titleSlug\": \"substring-with-concatenation-of-all-words\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Minimum Size Subarray Sum\", \"titleSlug\": \"minimum-size-subarray-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Sliding Window Maximum\", \"titleSlug\": \"sliding-window-maximum\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Permutation in String\", \"titleSlug\": \"permutation-in-string\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Smallest Range Covering Elements from K Lists\", \"titleSlug\": \"smallest-range-covering-elements-from-k-lists\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Minimum Window Subsequence\", \"titleSlug\": \"minimum-window-subsequence\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "541",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Hash Table",
            "Two Pointers",
            "String",
            "Sliding Window"
        ],
        "content": "<p>Given a string S and a string T, find the minimum window in S which will contain all the characters in T in complexity O(n).</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input: S</strong> = &quot;ADOBECODEBANC&quot;, <strong>T</strong> = &quot;ABC&quot;\n<strong>Output:</strong> &quot;BANC&quot;\n</pre>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>If there is no such window in S that covers all characters in T, return the empty string <code>&quot;&quot;</code>.</li>\n\t<li>If there is such window, you are guaranteed that there will always be only one unique minimum window in S.</li>\n</ul>\n"
    },
    {
        "id": "184",
        "title": "Department Highest Salary",
        "slug": "department-highest-salary",
        "difficulty": "Medium",
        "likes": 322,
        "dislikes": 82,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Highest Grade For Each Student\", \"titleSlug\": \"highest-grade-for-each-student\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "213",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [],
        "content": "<p>The <code>Employee</code> table holds all employees. Every employee has an Id, a salary, and there is also a column for the department Id.</p>\n\n<pre>\n+----+-------+--------+--------------+\n| Id | Name  | Salary | DepartmentId |\n+----+-------+--------+--------------+\n| 1  | Joe   | 70000  | 1            |\n| 2 &nbsp;| Jim &nbsp; | 90000 &nbsp;| 1 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;|\n| 3  | Henry | 80000  | 2            |\n| 4  | Sam   | 60000  | 2            |\n| 5  | Max   | 90000  | 1            |\n+----+-------+--------+--------------+\n</pre>\n\n<p>The <code>Department</code> table holds all departments of the company.</p>\n\n<pre>\n+----+----------+\n| Id | Name     |\n+----+----------+\n| 1  | IT       |\n| 2  | Sales    |\n+----+----------+\n</pre>\n\n<p>Write a SQL query to find employees who have the highest salary in each of the departments.&nbsp;For the above tables, your SQL query should return the following rows (order of rows does not matter).</p>\n\n<pre>\n+------------+----------+--------+\n| Department | Employee | Salary |\n+------------+----------+--------+\n| IT         | Max      | 90000  |\n| IT &nbsp; &nbsp; &nbsp; &nbsp; | Jim &nbsp; &nbsp; &nbsp;| 90000 &nbsp;|\n| Sales      | Henry    | 80000  |\n+------------+----------+--------+\n</pre>\n\n<p><strong>Explanation:</strong></p>\n\n<p>Max and Jim both have&nbsp;the highest salary in the IT department and Henry has the highest salary in the Sales department.</p>\n"
    },
    {
        "id": "957",
        "title": "Prison Cells After N Days",
        "slug": "prison-cells-after-n-days",
        "difficulty": "Medium",
        "likes": 178,
        "dislikes": 326,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "643",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Hash Table"
        ],
        "content": "<p>There are 8 prison cells in a row, and each cell is either occupied or vacant.</p>\n\n<p>Each day, whether the cell is occupied or vacant changes according to the following rules:</p>\n\n<ul>\n\t<li>If a cell has two adjacent neighbors that are both occupied or both vacant,&nbsp;then the cell becomes occupied.</li>\n\t<li>Otherwise, it becomes vacant.</li>\n</ul>\n\n<p>(Note that because the prison is a row, the first and the last cells in the row can&#39;t have two adjacent neighbors.)</p>\n\n<p>We describe the current state of the prison&nbsp;in the following way:&nbsp;<code>cells[i] == 1</code> if the <code>i</code>-th cell is occupied, else <code>cells[i] == 0</code>.</p>\n\n<p>Given the initial state of the prison, return the state of the prison after <code>N</code> days (and <code>N</code> such changes described above.)</p>\n\n<p>&nbsp;</p>\n\n<div>\n<ol>\n</ol>\n</div>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>cells = <span id=\"example-input-1-1\">[0,1,0,1,1,0,0,1]</span>, N = <span id=\"example-input-1-2\">7</span>\n<strong>Output: </strong><span id=\"example-output-1\">[0,0,1,1,0,0,0,0]</span>\n<strong>Explanation: \n</strong><span id=\"example-output-1\">The following table summarizes the state of the prison on each day:\nDay 0: [0, 1, 0, 1, 1, 0, 0, 1]\nDay 1: [0, 1, 1, 0, 0, 0, 0, 0]\nDay 2: [0, 0, 0, 0, 1, 1, 1, 0]\nDay 3: [0, 1, 1, 0, 0, 1, 0, 0]\nDay 4: [0, 0, 0, 0, 0, 1, 0, 0]\nDay 5: [0, 1, 1, 1, 0, 1, 0, 0]\nDay 6: [0, 0, 1, 0, 1, 1, 0, 0]\nDay 7: [0, 0, 1, 1, 0, 0, 0, 0]</span>\n\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>cells = <span id=\"example-input-2-1\">[1,0,0,1,0,0,1,0]</span>, N = <span id=\"example-input-2-2\">1000000000</span>\n<strong>Output: </strong><span id=\"example-output-2\">[0,0,1,1,1,1,1,0]</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>cells.length == 8</code></li>\n\t<li><code>cells[i]</code> is in <code>{0, 1}</code></li>\n\t<li><code>1 &lt;= N &lt;= 10^9</code></li>\n</ol>\n</div>\n</div>\n"
    },
    {
        "id": "654",
        "title": "Maximum Binary Tree",
        "slug": "maximum-binary-tree",
        "difficulty": "Medium",
        "likes": 1235,
        "dislikes": 161,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Maximum Binary Tree II\", \"titleSlug\": \"maximum-binary-tree-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "227",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree"
        ],
        "content": "<p>\nGiven an integer array with no duplicates. A maximum tree building on this array is defined as follow:\n<ol>\n<li>The root is the maximum number in the array. </li>\n<li>The left subtree is the maximum tree constructed from left part subarray divided by the maximum number.</li>\n<li>The right subtree is the maximum tree constructed from right part subarray divided by the maximum number.</li> \n</ol>\n</p>\n\n<p>\nConstruct the maximum tree by the given array and output the root node of this tree.\n</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> [3,2,1,6,0,5]\n<b>Output:</b> return the tree root node representing the following tree:\n\n      6\n    /   \\\n   3     5\n    \\    / \n     2  0   \n       \\\n        1\n</pre>\n</p>\n\n<p><b>Note:</b><br>\n<ol>\n<li>The size of the given array will be in the range [1,1000].</li>\n</ol>\n</p>"
    },
    {
        "id": "344",
        "title": "Reverse String",
        "slug": "reverse-string",
        "difficulty": "Easy",
        "likes": 862,
        "dislikes": 558,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Reverse Vowels of a String\", \"titleSlug\": \"reverse-vowels-of-a-string\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Reverse String II\", \"titleSlug\": \"reverse-string-ii\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Two Pointers",
            "String"
        ],
        "content": "<p>Write a function that reverses a string. The input string is given as an array of characters <code>char[]</code>.</p>\n\n<p>Do not allocate extra space for another array, you must do this by <strong>modifying the input array&nbsp;<a href=\"https://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\">in-place</a></strong> with O(1) extra memory.</p>\n\n<p>You may assume all the characters consist of <a href=\"https://en.wikipedia.org/wiki/ASCII#Printable_characters\" target=\"_blank\">printable ascii characters</a>.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[&quot;h&quot;,&quot;e&quot;,&quot;l&quot;,&quot;l&quot;,&quot;o&quot;]</span>\n<strong>Output: </strong><span id=\"example-output-1\">[&quot;o&quot;,&quot;l&quot;,&quot;l&quot;,&quot;e&quot;,&quot;h&quot;]</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[&quot;H&quot;,&quot;a&quot;,&quot;n&quot;,&quot;n&quot;,&quot;a&quot;,&quot;h&quot;]</span>\n<strong>Output: </strong><span id=\"example-output-2\">[&quot;h&quot;,&quot;a&quot;,&quot;n&quot;,&quot;n&quot;,&quot;a&quot;,&quot;H&quot;]</span>\n</pre>\n</div>\n</div>\n"
    },
    {
        "id": "457",
        "title": "Circular Array Loop",
        "slug": "circular-array-loop",
        "difficulty": "Medium",
        "likes": 181,
        "dislikes": 998,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Array",
            "Two Pointers"
        ],
        "content": "<p>You are given a <b>circular</b> array <code>nums</code> of positive and negative integers. If a number <i>k</i> at an index is positive, then move forward <i>k</i> steps. Conversely, if it&#39;s negative (-<i>k</i>), move backward <i>k</i>&nbsp;steps. Since the array is circular, you may assume that the last element&#39;s next element is the first element, and the first element&#39;s previous element is the last element.</p>\n\n<p>Determine if there is a loop (or a cycle) in <code>nums</code>. A cycle must start and end at the same index and the cycle&#39;s length &gt; 1. Furthermore, movements in a cycle must all follow a single direction. In other words, a cycle must not consist of both forward and backward movements.</p>\n\n<p>&nbsp;</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> [2,-1,1,2,2]\n<b>Output:</b> true\n<b>Explanation:</b> There is a cycle, from index 0 -&gt; 2 -&gt; 3 -&gt; 0. The cycle&#39;s length is 3.\n</pre>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input:</b> [-1,2]\n<b>Output:</b> false\n<b>Explanation:</b> The movement from index 1 -&gt; 1 -&gt; 1 ... is not a cycle, because the cycle&#39;s length is 1. By definition the cycle&#39;s length must be greater than 1.\n</pre>\n\n<p><b>Example 3:</b></p>\n\n<pre>\n<b>Input:</b> [-2,1,-1,-2,-2]\n<b>Output:</b> false\n<b>Explanation:</b> The movement from index 1 -&gt; 2 -&gt; 1 -&gt; ... is not a cycle, because movement from index 1 -&gt; 2 is a forward movement, but movement from index 2 -&gt; 1 is a backward movement. All movements in a cycle must follow a single direction.</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b></p>\n\n<ol>\n\t<li>-1000 &le;&nbsp;nums[i] &le;&nbsp;1000</li>\n\t<li>nums[i] &ne;&nbsp;0</li>\n\t<li>1 &le;&nbsp;nums.length &le; 5000</li>\n</ol>\n\n<p>&nbsp;</p>\n\n<p><b>Follow up:</b></p>\n\n<p>Could you solve it in <b>O(n)</b> time complexity and&nbsp;<strong>O(1)</strong> extra space complexity?</p>"
    },
    {
        "id": "300",
        "title": "Longest Increasing Subsequence",
        "slug": "longest-increasing-subsequence",
        "difficulty": "Medium",
        "likes": 2922,
        "dislikes": 68,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Increasing Triplet Subsequence\", \"titleSlug\": \"increasing-triplet-subsequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Russian Doll Envelopes\", \"titleSlug\": \"russian-doll-envelopes\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Maximum Length of Pair Chain\", \"titleSlug\": \"maximum-length-of-pair-chain\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Number of Longest Increasing Subsequence\", \"titleSlug\": \"number-of-longest-increasing-subsequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum ASCII Delete Sum for Two Strings\", \"titleSlug\": \"minimum-ascii-delete-sum-for-two-strings\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "82",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Binary Search",
            "Dynamic Programming"
        ],
        "content": "<p>Given an unsorted array of integers, find the length of longest increasing subsequence.</p>\n\n<p><b>Example:</b></p>\n\n<pre>\n<b>Input:</b> <code>[10,9,2,5,3,7,101,18]\n</code><b>Output: </b>4 \n<strong>Explanation: </strong>The longest increasing subsequence is <code>[2,3,7,101]</code>, therefore the length is <code>4</code>. </pre>\n\n<p><strong>Note: </strong></p>\n\n<ul>\n\t<li>There may be more than one LIS combination, it is only necessary for you to return the length.</li>\n\t<li>Your algorithm should run in O(<i>n<sup>2</sup></i>) complexity.</li>\n</ul>\n\n<p><b>Follow up:</b> Could you improve it to O(<i>n</i> log <i>n</i>) time complexity?</p>\n"
    },
    {
        "id": "41",
        "title": "First Missing Positive",
        "slug": "first-missing-positive",
        "difficulty": "Hard",
        "likes": 2018,
        "dislikes": 636,
        "hints": [
            "Think about how you would solve the problem in non-constant space.  Can you apply that logic to the existing space?",
            "We don't care about duplicates or non-positive integers",
            "Remember that O(2n) = O(n)"
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Missing Number\", \"titleSlug\": \"missing-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Find the Duplicate Number\", \"titleSlug\": \"find-the-duplicate-number\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find All Numbers Disappeared in an Array\", \"titleSlug\": \"find-all-numbers-disappeared-in-an-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Couples Holding Hands\", \"titleSlug\": \"couples-holding-hands\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "681",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array"
        ],
        "content": "<p>Given an unsorted integer array, find the smallest missing&nbsp;positive integer.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\nInput: [1,2,0]\nOutput: 3\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\nInput: [3,4,-1,1]\nOutput: 2\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\nInput: [7,8,9,11,12]\nOutput: 1\n</pre>\n\n<p><strong>Note:</strong></p>\n\n<p>Your algorithm should run in <em>O</em>(<em>n</em>) time and uses constant extra space.</p>\n"
    },
    {
        "id": "331",
        "title": "Verify Preorder Serialization of a Binary Tree",
        "slug": "verify-preorder-serialization-of-a-binary-tree",
        "difficulty": "Medium",
        "likes": 556,
        "dislikes": 32,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "756",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Stack"
        ],
        "content": "<p>One way to serialize a binary tree is to use pre-order traversal. When we encounter a non-null node, we record the node&#39;s value. If it is a null node, we record using a sentinel value such as <code>#</code>.</p>\n\n<pre>\n     _9_\n    /   \\\n   3     2\n  / \\   / \\\n 4   1  #  6\n/ \\ / \\   / \\\n# # # #   # #\n</pre>\n\n<p>For example, the above binary tree can be serialized to the string <code>&quot;9,3,4,#,#,1,#,#,2,#,6,#,#&quot;</code>, where <code>#</code> represents a null node.</p>\n\n<p>Given a string of comma separated values, verify whether it is a correct preorder traversal serialization of a binary tree. Find an algorithm without reconstructing the tree.</p>\n\n<p>Each comma separated value in the string must be either an integer or a character <code>&#39;#&#39;</code> representing <code>null</code> pointer.</p>\n\n<p>You may assume that the input format is always valid, for example it could never contain two consecutive commas such as <code>&quot;1,,3&quot;</code>.</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<strong>Input: </strong><code>&quot;9,3,4,#,#,1,#,#,2,#,6,#,#&quot;</code>\n<strong>Output: </strong><code>true</code></pre>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<strong>Input: </strong><code>&quot;1,#&quot;</code>\n<strong>Output: </strong><code>false</code>\n</pre>\n\n<p><b>Example 3:</b></p>\n\n<pre>\n<strong>Input: </strong><code>&quot;9,#,#,1&quot;</code>\n<strong>Output: </strong><code>false</code></pre>"
    },
    {
        "id": "295",
        "title": "Find Median from Data Stream",
        "slug": "find-median-from-data-stream",
        "difficulty": "Hard",
        "likes": 1408,
        "dislikes": 27,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Sliding Window Median\", \"titleSlug\": \"sliding-window-median\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "85",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Heap",
            "Design"
        ],
        "content": "<p>Median is the middle value in an ordered integer list. If the size of the list is even, there is no middle value. So the median is the mean of the two middle value.</p>\nFor example,\n\n<p><code>[2,3,4]</code>, the median is <code>3</code></p>\n\n<p><code>[2,3]</code>, the median is <code>(2 + 3) / 2 = 2.5</code></p>\n\n<p>Design a data structure that supports the following two operations:</p>\n\n<ul>\n\t<li>void addNum(int num) - Add a integer number from the data stream to the data structure.</li>\n\t<li>double findMedian() - Return the median of all elements so far.</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\naddNum(1)\naddNum(2)\nfindMedian() -&gt; 1.5\naddNum(3) \nfindMedian() -&gt; 2\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Follow up:</strong></p>\n\n<ol>\n\t<li>If all integer numbers from the stream are between 0&nbsp;and 100, how would you optimize it?</li>\n\t<li>If 99% of all integer numbers from the stream are between 0 and 100, how would you optimize it?</li>\n</ol>\n"
    },
    {
        "id": "310",
        "title": "Minimum Height Trees",
        "slug": "minimum-height-trees",
        "difficulty": "Medium",
        "likes": 1165,
        "dislikes": 71,
        "hints": [
            "How many MHTs can a graph have at most?"
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Course Schedule\", \"titleSlug\": \"course-schedule\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Course Schedule II\", \"titleSlug\": \"course-schedule-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Breadth-first Search",
            "Graph"
        ],
        "content": "<p>For an undirected graph with tree characteristics, we can choose any node as the root. The result graph is then a rooted tree. Among all possible rooted trees, those with minimum height are called minimum height trees (MHTs). Given such a graph, write a function to find all the MHTs and return a list of their root labels.</p>\n\n<p><b>Format</b><br />\nThe graph contains <code>n</code> nodes which are labeled from <code>0</code> to <code>n - 1</code>. You will be given the number <code>n</code> and a list of undirected <code>edges</code> (each edge is a pair of labels).</p>\n\n<p>You can assume that no duplicate edges will appear in <code>edges</code>. Since all edges are undirected, <code>[0, 1]</code> is the same as <code>[1, 0]</code> and thus will not appear together in <code>edges</code>.</p>\n\n<p><b>Example 1 :</b></p>\n\n<pre>\n<strong>Input:</strong> <code>n = 4</code>, <code>edges = [[1, 0], [1, 2], [1, 3]]</code>\n\n        0\n        |\n        1\n       / \\\n      2   3 \n\n<strong>Output:</strong> <code>[1]</code>\n</pre>\n\n<p><b>Example 2 :</b></p>\n\n<pre>\n<strong>Input:</strong> <code>n = 6</code>, <code>edges = [[0, 3], [1, 3], [2, 3], [4, 3], [5, 4]]</code>\n\n     0  1  2\n      \\ | /\n        3\n        |\n        4\n        |\n        5 \n\n<strong>Output:</strong> <code>[3, 4]</code></pre>\n\n<p><b>Note</b>:</p>\n\n<ul>\n\t<li>According to the <a href=\"https://en.wikipedia.org/wiki/Tree_(graph_theory)\" target=\"_blank\">definition of tree on Wikipedia</a>: &ldquo;a tree is an undirected graph in which any two vertices are connected by <i>exactly</i> one path. In other words, any connected graph without simple cycles is a tree.&rdquo;</li>\n\t<li>The height of a rooted tree is the number of edges on the longest downward path between the root and a leaf.</li>\n</ul>\n"
    },
    {
        "id": "546",
        "title": "Remove Boxes",
        "slug": "remove-boxes",
        "difficulty": "Hard",
        "likes": 412,
        "dislikes": 39,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Strange Printer\", \"titleSlug\": \"strange-printer\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "98",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming",
            "Depth-first Search"
        ],
        "content": "<p>Given several boxes with different colors represented by different positive numbers. <br />\nYou may experience several rounds to remove boxes until there is no box left. Each time you can choose some continuous boxes with the same color (composed of k boxes, k >= 1), remove them and get <code>k*k</code> points.<br />\nFind the maximum points you can get.\n</p>\n\n<p><b>Example 1:</b><br>\nInput: \n<pre>\n[1, 3, 2, 2, 2, 3, 4, 3, 1]\n</pre>\nOutput:\n<pre>\n23\n</pre>\nExplanation: \n<pre>\n[1, 3, 2, 2, 2, 3, 4, 3, 1] \n----> [1, 3, 3, 4, 3, 1] (3*3=9 points) \n----> [1, 3, 3, 3, 1] (1*1=1 points) \n----> [1, 1] (3*3=9 points) \n----> [] (2*2=4 points)\n</pre>\n</p>\n\n<p><b>Note:</b>\nThe number of boxes <code>n</code> would not exceed 100.\n</p>\n"
    },
    {
        "id": "559",
        "title": "Maximum Depth of N-ary Tree",
        "slug": "maximum-depth-of-n-ary-tree",
        "difficulty": "Easy",
        "likes": 438,
        "dislikes": 23,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Maximum Depth of Binary Tree\", \"titleSlug\": \"maximum-depth-of-binary-tree\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "576",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree",
            "Depth-first Search",
            "Breadth-first Search"
        ],
        "content": "<p>Given a n-ary tree, find its maximum depth.</p>\n\n<p>The maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.</p>\n\n<p>For example, given a <code>3-ary</code> tree:</p>\n&nbsp;\n\n<p><img src=\"./img/maximum-depth-of-n-ary-tree_1.png\" style=\"width: 100%; max-width: 300px;\" /></p>\n\n<p>&nbsp;</p>\n\n<p>We should return its max depth, which is 3.</p>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b></p>\n\n<ol>\n\t<li>The depth of the tree is at most <code>1000</code>.</li>\n\t<li>The total number of nodes is at most <code>5000</code>.</li>\n</ol>\n"
    },
    {
        "id": "318",
        "title": "Maximum Product of Word Lengths",
        "slug": "maximum-product-of-word-lengths",
        "difficulty": "Medium",
        "likes": 591,
        "dislikes": 49,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "763",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Bit Manipulation"
        ],
        "content": "<p>Given a string array <code>words</code>, find the maximum value of <code>length(word[i]) * length(word[j])</code> where the two words do not share common letters. You may assume that each word will contain only lower case letters. If no such two words exist, return 0.</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> <code>[&quot;abcw&quot;,&quot;baz&quot;,&quot;foo&quot;,&quot;bar&quot;,&quot;xtfn&quot;,&quot;abcdef&quot;]</code>\n<b>Output: </b><code>16 \n<strong>Explanation: </strong></code>The two words can be <code>&quot;abcw&quot;, &quot;xtfn&quot;</code><span style=\"font-family: sans-serif, Arial, Verdana, &quot;Trebuchet MS&quot;;\">.</span></pre>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input:</b> <code>[&quot;a&quot;,&quot;ab&quot;,&quot;abc&quot;,&quot;d&quot;,&quot;cd&quot;,&quot;bcd&quot;,&quot;abcd&quot;]</code>\n<b>Output: </b><code>4 \n<strong>Explanation: </strong></code>The two words can be <code>&quot;ab&quot;, &quot;cd&quot;</code><span style=\"font-family: sans-serif, Arial, Verdana, &quot;Trebuchet MS&quot;;\">.</span></pre>\n\n<p><b>Example 3:</b></p>\n\n<pre>\n<b>Input:</b> <code>[&quot;a&quot;,&quot;aa&quot;,&quot;aaa&quot;,&quot;aaaa&quot;]</code>\n<b>Output: </b><code>0 \n<strong>Explanation: </strong></code>No such pair of words.\n</pre>\n"
    },
    {
        "id": "104",
        "title": "Maximum Depth of Binary Tree",
        "slug": "maximum-depth-of-binary-tree",
        "difficulty": "Easy",
        "likes": 1541,
        "dislikes": 59,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Balanced Binary Tree\", \"titleSlug\": \"balanced-binary-tree\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Minimum Depth of Binary Tree\", \"titleSlug\": \"minimum-depth-of-binary-tree\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Maximum Depth of N-ary Tree\", \"titleSlug\": \"maximum-depth-of-n-ary-tree\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "575",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree",
            "Depth-first Search"
        ],
        "content": "<p>Given a binary tree, find its maximum depth.</p>\n\n<p>The maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.</p>\n\n<p><strong>Note:</strong>&nbsp;A leaf is a node with no children.</p>\n\n<p><strong>Example:</strong></p>\n\n<p>Given binary tree <code>[3,9,20,null,null,15,7]</code>,</p>\n\n<pre>\n    3\n   / \\\n  9  20\n    /  \\\n   15   7</pre>\n\n<p>return its depth = 3.</p>\n"
    },
    {
        "id": "423",
        "title": "Reconstruct Original Digits from English",
        "slug": "reconstruct-original-digits-from-english",
        "difficulty": "Medium",
        "likes": 129,
        "dislikes": 466,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "691",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math"
        ],
        "content": "<p>Given a <b>non-empty</b> string containing an out-of-order English representation of digits <code>0-9</code>, output the digits in ascending order.</p>\n\n<p><b>Note:</b><br />\n<ol>\n<li>Input contains only lowercase English letters.</li>\n<li>Input is guaranteed to be valid and can be transformed to its original digits. That means invalid inputs such as \"abc\" or \"zerone\" are not permitted.</li>\n<li>Input length is less than 50,000.</li>\n</ol>\n</p>\n\n<p><b>Example 1:</b><br />\n<pre>\nInput: \"owoztneoer\"\n\nOutput: \"012\"\n</pre>\n</p>\n\n<p><b>Example 2:</b><br />\n<pre>\nInput: \"fviefuro\"\n\nOutput: \"45\"\n</pre>\n</p>"
    },
    {
        "id": "502",
        "title": "IPO",
        "slug": "ipo",
        "difficulty": "Hard",
        "likes": 223,
        "dislikes": 22,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "739",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Heap",
            "Greedy"
        ],
        "content": "<p>\nSuppose LeetCode will start its IPO soon. In order to sell a good price of its shares to Venture Capital, LeetCode would like to work on some projects to increase its capital before the IPO. Since it has limited resources, it can only finish at most <b>k</b> distinct projects before the IPO. Help LeetCode design the best way to maximize its total capital after finishing at most <b>k</b> distinct projects. \n</p>\n\n<p>\nYou are given several projects. For each project <b>i</b>, it has a pure profit <b>P<sub>i</sub></b> and a minimum capital of <b>C<sub>i</sub></b> is needed to start the corresponding project. Initially, you have <b>W</b> capital. When you finish a project, you will obtain its pure profit and the profit will be added to your total capital.\n</p>\n\n<p>\nTo sum up, pick a list of at most <b>k</b> distinct projects from given projects to maximize your final capital, and output your final maximized capital.\n</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> k=2, W=0, Profits=[1,2,3], Capital=[0,1,1].\n\n<b>Output:</b> 4\n\n<b>Explanation:</b> Since your initial capital is 0, you can only start the project indexed 0.\n             After finishing it you will obtain profit 1 and your capital becomes 1.\n             With capital 1, you can either start the project indexed 1 or the project indexed 2.\n             Since you can choose at most 2 projects, you need to finish the project indexed 2 to get the maximum capital.\n             Therefore, output the final maximized capital, which is 0 + 1 + 3 = 4.\n</pre>\n</p>\n\n<p><b>Note:</b><br>\n<ol>\n<li>You may assume all numbers in the input are non-negative integers.</li>\n<li>The length of Profits array and Capital array will not exceed 50,000.</li>\n<li>The answer is guaranteed to fit in a 32-bit signed integer.</li>\n</ol>\n</p>"
    },
    {
        "id": "29",
        "title": "Divide Two Integers",
        "slug": "divide-two-integers",
        "difficulty": "Medium",
        "likes": 762,
        "dislikes": 3694,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Math",
            "Binary Search"
        ],
        "content": "<p>Given two integers <code>dividend</code> and <code>divisor</code>, divide two integers without using multiplication, division and mod operator.</p>\n\n<p>Return the quotient after dividing <code>dividend</code> by <code>divisor</code>.</p>\n\n<p>The integer division should truncate toward zero.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> dividend = 10, divisor = 3\n<strong>Output:</strong> 3</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> dividend = 7, divisor = -3\n<strong>Output:</strong> -2</pre>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>Both dividend and divisor&nbsp;will be&nbsp;32-bit&nbsp;signed integers.</li>\n\t<li>The divisor will never be 0.</li>\n\t<li>Assume we are dealing with an environment which could only store integers within the 32-bit signed integer range: [&minus;2<sup>31</sup>, &nbsp;2<sup>31</sup> &minus; 1]. For the purpose of this problem, assume that your function returns 2<sup>31</sup> &minus; 1 when the division result&nbsp;overflows.</li>\n</ul>\n"
    },
    {
        "id": "854",
        "title": "K-Similar Strings",
        "slug": "k-similar-strings",
        "difficulty": "Hard",
        "likes": 197,
        "dislikes": 22,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Couples Holding Hands\", \"titleSlug\": \"couples-holding-hands\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "491",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Breadth-first Search",
            "Graph"
        ],
        "content": "<p>Strings&nbsp;<code>A</code> and <code>B</code> are <code>K</code>-similar (for some non-negative integer <code>K</code>) if we can swap the positions of two letters in <code>A</code> exactly <code>K</code>&nbsp;times so that the resulting string equals <code>B</code>.</p>\n\n<p>Given two anagrams <code>A</code> and <code>B</code>, return the smallest <code>K</code>&nbsp;for which <code>A</code> and <code>B</code> are <code>K</code>-similar.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-1-1\">&quot;ab&quot;</span>, B = <span id=\"example-input-1-2\">&quot;ba&quot;</span>\n<strong>Output: </strong><span id=\"example-output-1\">1</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-2-1\">&quot;abc&quot;</span>, B = <span id=\"example-input-2-2\">&quot;bca&quot;</span>\n<strong>Output: </strong><span id=\"example-output-2\">2</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-3-1\">&quot;abac&quot;</span>, B = <span id=\"example-input-3-2\">&quot;baca&quot;</span>\n<strong>Output: </strong><span id=\"example-output-3\">2</span>\n</pre>\n\n<div>\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-4-1\">&quot;aabc&quot;</span>, B = <span id=\"example-input-4-2\">&quot;abca&quot;</span>\n<strong>Output: </strong><span id=\"example-output-4\">2</span></pre>\n</div>\n</div>\n</div>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length == B.length &lt;= 20</code></li>\n\t<li><code>A</code> and <code>B</code> contain only lowercase letters from the set <code>{&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;}</code></li>\n</ol>\n"
    },
    {
        "id": "130",
        "title": "Surrounded Regions",
        "slug": "surrounded-regions",
        "difficulty": "Medium",
        "likes": 907,
        "dislikes": 475,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Number of Islands\", \"titleSlug\": \"number-of-islands\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Walls and Gates\", \"titleSlug\": \"walls-and-gates\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Depth-first Search",
            "Breadth-first Search",
            "Union Find"
        ],
        "content": "<p>Given a 2D board containing <code>&#39;X&#39;</code> and <code>&#39;O&#39;</code> (<strong>the letter O</strong>), capture all regions surrounded by <code>&#39;X&#39;</code>.</p>\n\n<p>A region is captured by flipping all <code>&#39;O&#39;</code>s into <code>&#39;X&#39;</code>s in that surrounded region.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\nX X X X\nX O O X\nX X O X\nX O X X\n</pre>\n\n<p>After running your function, the board should be:</p>\n\n<pre>\nX X X X\nX X X X\nX X X X\nX O X X\n</pre>\n\n<p><strong>Explanation:</strong></p>\n\n<p>Surrounded regions shouldn&rsquo;t be on the border, which means that any <code>&#39;O&#39;</code>&nbsp;on the border of the board are not flipped to <code>&#39;X&#39;</code>. Any <code>&#39;O&#39;</code>&nbsp;that is not on the border and it is not connected to an <code>&#39;O&#39;</code>&nbsp;on the border will be flipped to <code>&#39;X&#39;</code>. Two cells are connected if they are adjacent cells connected horizontally or vertically.</p>\n"
    },
    {
        "id": "242",
        "title": "Valid Anagram",
        "slug": "valid-anagram",
        "difficulty": "Easy",
        "likes": 831,
        "dislikes": 116,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Group Anagrams\", \"titleSlug\": \"group-anagrams\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Palindrome Permutation\", \"titleSlug\": \"palindrome-permutation\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Find All Anagrams in a String\", \"titleSlug\": \"find-all-anagrams-in-a-string\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "5",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Hash Table",
            "Sort"
        ],
        "content": "<p>Given two strings <em>s</em> and <em>t&nbsp;</em>, write a function to determine if <em>t</em> is an anagram of <em>s</em>.</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> <em>s</em> = &quot;anagram&quot;, <em>t</em> = &quot;nagaram&quot;\n<b>Output:</b> true\n</pre>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input:</b> <em>s</em> = &quot;rat&quot;, <em>t</em> = &quot;car&quot;\n<b>Output: </b>false\n</pre>\n\n<p><strong>Note:</strong><br />\nYou may assume the string contains only lowercase alphabets.</p>\n\n<p><strong>Follow up:</strong><br />\nWhat if the inputs contain unicode characters? How would you adapt your solution to such case?</p>\n"
    },
    {
        "id": "675",
        "title": "Cut Off Trees for Golf Event",
        "slug": "cut-off-trees-for-golf-event",
        "difficulty": "Hard",
        "likes": 334,
        "dislikes": 188,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "277",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Breadth-first Search"
        ],
        "content": "<p>You are asked to cut off trees in a forest for a golf event. The forest is represented as a non-negative 2D map, in this map:</p>\n\n<ol>\n\t<li><code>0</code> represents the <code>obstacle</code> can&#39;t be reached.</li>\n\t<li><code>1</code> represents the <code>ground</code> can be walked through.</li>\n\t<li><code>The place with number bigger than 1</code> represents a <code>tree</code> can be walked through, and this positive number represents the tree&#39;s height.</li>\n</ol>\n\n<p>&nbsp;</p>\n\n<p>You are asked to cut off <b>all</b> the trees in this forest in the order of tree&#39;s height - always cut off the tree with lowest height first. And after cutting, the original place has the tree will become a grass (value 1).</p>\n\n<p>You will start from the point (0, 0) and you should output the minimum steps <b>you need to walk</b> to cut off all the trees. If you can&#39;t cut off all the trees, output -1 in that situation.</p>\n\n<p>You are guaranteed that no two <code>trees</code> have the same height and there is at least one tree needs to be cut off.</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> \n[\n [1,2,3],\n [0,0,4],\n [7,6,5]\n]\n<b>Output:</b> 6\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input:</b> \n[\n [1,2,3],\n [0,0,0],\n [7,6,5]\n]\n<b>Output:</b> -1\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Example 3:</b></p>\n\n<pre>\n<b>Input:</b> \n[\n [2,3,4],\n [0,0,5],\n [8,7,6]\n]\n<b>Output:</b> 6\n<b>Explanation:</b> You started from the point (0,0) and you can cut off the tree in (0,0) directly without walking.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Hint</b>: size of the given matrix will not exceed 50x50.</p>\n"
    },
    {
        "id": "1037",
        "title": "Valid Boomerang",
        "slug": "valid-boomerang",
        "difficulty": "Easy",
        "likes": 45,
        "dislikes": 151,
        "hints": [
            "3 points form a boomerang if and only if the triangle formed from them has non-zero area."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Math"
        ],
        "content": "<p>A <em>boomerang</em> is a set of 3 points that are all distinct and <strong>not</strong> in a straight line.</p>\n\n<p>Given a list&nbsp;of three points in the plane, return whether these points are a boomerang.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[[1,1],[2,3],[3,2]]</span>\n<strong>Output: </strong><span id=\"example-output-1\">true</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[[1,1],[2,2],[3,3]]</span>\n<strong>Output: </strong><span id=\"example-output-2\">false</span></pre>\n</div>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>points.length == 3</code></li>\n\t<li><code>points[i].length == 2</code></li>\n\t<li><code>0 &lt;= points[i][j] &lt;= 100</code></li>\n</ol>\n\n<div>\n<div>&nbsp;</div>\n</div>"
    },
    {
        "id": "463",
        "title": "Island Perimeter",
        "slug": "island-perimeter",
        "difficulty": "Easy",
        "likes": 1209,
        "dislikes": 89,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Max Area of Island\", \"titleSlug\": \"max-area-of-island\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Flood Fill\", \"titleSlug\": \"flood-fill\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Coloring A Border\", \"titleSlug\": \"coloring-a-border\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Hash Table"
        ],
        "content": "<p>You are given a map in form of a two-dimensional integer grid where 1 represents land and 0 represents water.</p>\n\n<p>Grid cells are connected horizontally/vertically (not diagonally). The grid is completely surrounded by water, and there is exactly one island (i.e., one or more connected land cells).</p>\n\n<p>The island doesn&#39;t have &quot;lakes&quot; (water inside that isn&#39;t connected to the water around the island). One cell is a square with side length 1. The grid is rectangular, width and height don&#39;t exceed 100. Determine the perimeter of the island.</p>\n\n<p>&nbsp;</p>\n\n<p><b>Example:</b></p>\n\n<pre>\n<strong>Input:</strong>\n[[0,1,0,0],\n [1,1,1,0],\n [0,1,0,0],\n [1,1,0,0]]\n\n<strong>Output:</strong> 16\n\n<strong>Explanation:</strong> The perimeter is the 16 yellow stripes in the image below:\n\n<img src=\"./img/island-perimeter_1.png\" style=\"width: 221px; height: 213px;\" />\n</pre>\n"
    },
    {
        "id": "216",
        "title": "Combination Sum III",
        "slug": "combination-sum-iii",
        "difficulty": "Medium",
        "likes": 692,
        "dislikes": 37,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Combination Sum\", \"titleSlug\": \"combination-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Array",
            "Backtracking"
        ],
        "content": "<div>\n<p>Find all possible combinations of <i><b>k</b></i> numbers that add up to a number <i><b>n</b></i>, given that only numbers from 1 to 9 can be used and each combination should be a unique set of numbers.</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>All numbers will be positive integers.</li>\n\t<li>The solution set must not contain duplicate combinations.</li>\n</ul>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> <i><b>k</b></i> = 3, <i><b>n</b></i> = 7\n<strong>Output:</strong> [[1,2,4]]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> <i><b>k</b></i> = 3, <i><b>n</b></i> = 9\n<strong>Output:</strong> [[1,2,6], [1,3,5], [2,3,4]]\n</pre>\n</div>"
    },
    {
        "id": "782",
        "title": "Transform to Chessboard",
        "slug": "transform-to-chessboard",
        "difficulty": "Hard",
        "likes": 90,
        "dislikes": 100,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "412",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Math"
        ],
        "content": "<p>An N x N <code>board</code> contains only <code>0</code>s and <code>1</code>s. In each move, you can swap any 2 rows with each other, or any 2 columns with each other.</p>\n\n<p>What is the minimum number of moves to transform the board into a &quot;chessboard&quot; - a board where no <code>0</code>s and no <code>1</code>s are 4-directionally adjacent? If the task is impossible, return -1.</p>\n\n<pre>\n<strong>Examples:</strong>\n<strong>Input:</strong> board = [[0,1,1,0],[0,1,1,0],[1,0,0,1],[1,0,0,1]]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong>\nOne potential sequence of moves is shown below, from left to right:\n\n0110     1010     1010\n0110 --&gt; 1010 --&gt; 0101\n1001     0101     1010\n1001     0101     0101\n\nThe first move swaps the first and second column.\nThe second move swaps the second and third row.\n\n\n<strong>Input:</strong> board = [[0, 1], [1, 0]]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong>\nAlso note that the board with 0 in the top left corner,\n01\n10\n\nis also a valid chessboard.\n\n<strong>Input:</strong> board = [[1, 0], [1, 0]]\n<strong>Output:</strong> -1\n<strong>Explanation:</strong>\nNo matter what sequence of moves you make, you cannot end with a valid chessboard.\n</pre>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li><code>board</code> will have the same number of rows and columns, a number in the range <code>[2, 30]</code>.</li>\n\t<li><code>board[i][j]</code> will be only <code>0</code>s or <code>1</code>s.</li>\n</ul>\n"
    },
    {
        "id": "1025",
        "title": "Divisor Game",
        "slug": "divisor-game",
        "difficulty": "Easy",
        "likes": 141,
        "dislikes": 414,
        "hints": [
            "If the current number is even, we can always subtract a 1 to make it odd.  If the current number is odd, we must subtract an odd number to make it even."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Math",
            "Dynamic Programming"
        ],
        "content": "<p>Alice and Bob take turns playing a game, with Alice starting first.</p>\n\n<p>Initially, there is a number <code>N</code>&nbsp;on the chalkboard.&nbsp; On each player&#39;s turn, that player makes a <em>move</em>&nbsp;consisting of:</p>\n\n<ul>\n\t<li>Choosing&nbsp;any <code>x</code> with <code>0 &lt; x &lt; N</code> and <code>N % x == 0</code>.</li>\n\t<li>Replacing&nbsp;the number&nbsp;<code>N</code>&nbsp;on the chalkboard with <code>N - x</code>.</li>\n</ul>\n\n<p>Also, if a player cannot make a move, they lose the game.</p>\n\n<p>Return <code>True</code> if and only if Alice wins the game, assuming both players play optimally.</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">2</span>\n<strong>Output: </strong><span id=\"example-output-1\">true</span>\n<strong>Explanation:</strong> Alice chooses 1, and Bob has no more moves.\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">3</span>\n<strong>Output: </strong><span id=\"example-output-2\">false</span>\n<strong>Explanation:</strong> Alice chooses 1, Bob chooses 1, and Alice has no more moves.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= N &lt;= 1000</code></li>\n</ol>\n</div>\n</div>"
    },
    {
        "id": "1049",
        "title": "Last Stone Weight II",
        "slug": "last-stone-weight-ii",
        "difficulty": "Medium",
        "likes": 203,
        "dislikes": 8,
        "hints": [
            "Think of the final answer as a sum of weights with + or - sign symbols infront of each weight.  Actually, all sums with 1 of each sign symbol are possible.",
            "Use dynamic programming: for every possible sum with N stones, those sums +x or -x is possible with N+1 stones, where x is the value of the newest stone.  (This overcounts sums that are all positive or all negative, but those don't matter.)"
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>We have a collection of rocks, each rock has a positive integer weight.</p>\n\n<p>Each turn, we choose <strong>any two rocks</strong>&nbsp;and smash them together.&nbsp; Suppose the stones have weights <code>x</code> and <code>y</code> with <code>x &lt;= y</code>.&nbsp; The result of this smash is:</p>\n\n<ul>\n\t<li>If <code>x == y</code>, both stones are totally destroyed;</li>\n\t<li>If <code>x != y</code>, the stone of weight <code>x</code> is totally destroyed, and the stone of weight <code>y</code> has new weight <code>y-x</code>.</li>\n</ul>\n\n<p>At the end, there is at most 1 stone left.&nbsp; Return the <strong>smallest possible</strong> weight of this stone (the weight is&nbsp;0 if there are no stones left.)</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>[2,7,4,1,8,1]\n<strong>Output: </strong>1\n<strong>Explanation: </strong>\nWe can combine 2 and 4 to get 2 so the array converts to [2,7,1,8,1] then,\nwe can combine 7 and 8 to get 1 so the array converts to [2,1,1,1] then,\nwe can combine 2 and 1 to get 1 so the array converts to [1,1,1] then,\nwe can combine 1 and 1 to get 0 so the array converts to [1] then that&#39;s the optimal value.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= stones.length &lt;= 30</code></li>\n\t<li><code>1 &lt;= stones[i] &lt;= 100</code></li>\n</ol>"
    },
    {
        "id": "498",
        "title": "Diagonal Traverse",
        "slug": "diagonal-traverse",
        "difficulty": "Medium",
        "likes": 398,
        "dislikes": 250,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [],
        "content": "<p>Given a matrix of M x N elements (M rows, N columns), return all elements of the matrix in diagonal order as shown in the below image.</p>\n\n<p>&nbsp;</p>\n\n<p><b>Example:</b></p>\n\n<pre>\n<b>Input:</b>\n[\n [ 1, 2, 3 ],\n [ 4, 5, 6 ],\n [ 7, 8, 9 ]\n]\n\n<b>Output:</b>  [1,2,4,7,5,3,6,8,9]\n\n<b>Explanation:</b>\n<img src=\"./img/diagonal-traverse_1.png\" style=\"width: 220px;\" />\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b></p>\n\n<p>The total number of elements of the given matrix will not exceed 10,000.</p>\n"
    },
    {
        "id": "822",
        "title": "Card Flipping Game",
        "slug": "card-flipping-game",
        "difficulty": "Medium",
        "likes": 53,
        "dislikes": 363,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "452",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [],
        "content": "<p>On a table are <code>N</code> cards, with a positive integer printed on the front and back of each card (possibly different).</p>\n\n<p>We flip any number of cards, and after we choose one&nbsp;card.&nbsp;</p>\n\n<p>If the number <code>X</code> on the back of the chosen&nbsp;card is not on the front of any card, then this number X is good.</p>\n\n<p>What is the smallest number that is good?&nbsp; If no number is good, output <code>0</code>.</p>\n\n<p>Here, <code>fronts[i]</code> and <code>backs[i]</code> represent the number on the front and back of card <code>i</code>.&nbsp;</p>\n\n<p>A&nbsp;flip swaps the front and back numbers, so the value on the front is now on the back and vice versa.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input:</strong> fronts = [1,2,4,4,7], backs = [1,3,4,1,3]\n<strong>Output:</strong> <code>2</code>\n<strong>Explanation:</strong> If we flip the second card, the fronts are <code>[1,3,4,4,7]</code> and the backs are <code>[1,2,4,1,3]</code>.\nWe choose the second card, which has number 2 on the back, and it isn&#39;t on the front of any card, so <code>2</code> is good.</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= fronts.length == backs.length&nbsp;&lt;=&nbsp;1000</code>.</li>\n\t<li><code>1 &lt;=&nbsp;fronts[i]&nbsp;&lt;= 2000</code>.</li>\n\t<li><code>1 &lt;= backs[i]&nbsp;&lt;= 2000</code>.</li>\n</ol>\n"
    },
    {
        "id": "240",
        "title": "Search a 2D Matrix II",
        "slug": "search-a-2d-matrix-ii",
        "difficulty": "Medium",
        "likes": 1766,
        "dislikes": 54,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Search a 2D Matrix\", \"titleSlug\": \"search-a-2d-matrix\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "341",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Binary Search",
            "Divide and Conquer"
        ],
        "content": "<p>Write an efficient algorithm that searches for a value in an <i>m</i> x <i>n</i> matrix. This matrix has the following properties:</p>\n\n<ul>\n\t<li>Integers in each row are sorted in ascending from left to right.</li>\n\t<li>Integers in each column are sorted in ascending from top to bottom.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<p>Consider the following matrix:</p>\n\n<pre>\n[\n  [1,   4,  7, 11, 15],\n  [2,   5,  8, 12, 19],\n  [3,   6,  9, 16, 22],\n  [10, 13, 14, 17, 24],\n  [18, 21, 23, 26, 30]\n]\n</pre>\n\n<p>Given&nbsp;target&nbsp;=&nbsp;<code>5</code>, return&nbsp;<code>true</code>.</p>\n\n<p>Given&nbsp;target&nbsp;=&nbsp;<code>20</code>, return&nbsp;<code>false</code>.</p>\n"
    },
    {
        "id": "400",
        "title": "Nth Digit",
        "slug": "nth-digit",
        "difficulty": "Medium",
        "likes": 278,
        "dislikes": 907,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Math"
        ],
        "content": "<p>Find the <i>n</i><sup>th</sup> digit of the infinite integer sequence 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, ... </p>\n\n<p><b>Note:</b><br />\n<i>n</i> is positive and will fit within the range of a 32-bit signed integer (<i>n</i> < 2<sup>31</sup>).\n</p>\n\n<p><b>Example 1:</b>\n<pre>\n<b>Input:</b>\n3\n\n<b>Output:</b>\n3\n</pre>\n</p>\n\n<p><b>Example 2:</b>\n<pre>\n<b>Input:</b>\n11\n\n<b>Output:</b>\n0\n\n<b>Explanation:</b>\nThe 11th digit of the sequence 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, ... is a 0, which is part of the number 10.\n</pre>\n</p>"
    },
    {
        "id": "790",
        "title": "Domino and Tromino Tiling",
        "slug": "domino-and-tromino-tiling",
        "difficulty": "Medium",
        "likes": 273,
        "dislikes": 139,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "420",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>We have two types of tiles: a 2x1 domino shape, and an &quot;L&quot; tromino shape. These shapes may be rotated.</p>\n\n<pre>\nXX  &lt;- domino\n\nXX  &lt;- &quot;L&quot; tromino\nX\n</pre>\n\n<p>Given N, how many ways are there to tile a 2 x N board? <strong>Return your answer modulo 10^9 + 7</strong>.</p>\n\n<p>(In a tiling, every square must be covered by a tile. Two tilings are different if and only if there are two 4-directionally adjacent cells on the board such that exactly one of the tilings has both squares occupied by a tile.)</p>\n\n\n<pre>\n<strong>Example:</strong>\n<strong>Input:</strong> 3\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> \nThe five different ways are listed below, different letters indicates different tiles:\nXYZ XXZ XYY XXY XYY\nXYZ YYZ XZZ XYY XXY</pre>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>N&nbsp; will be in range <code>[1, 1000]</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "684",
        "title": "Redundant Connection",
        "slug": "redundant-connection",
        "difficulty": "Medium",
        "likes": 770,
        "dislikes": 199,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Redundant Connection II\", \"titleSlug\": \"redundant-connection-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Accounts Merge\", \"titleSlug\": \"accounts-merge\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "250",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree",
            "Union Find",
            "Graph"
        ],
        "content": "<p>\nIn this problem, a tree is an <b>undirected</b> graph that is connected and has no cycles.\n</p><p>\nThe given input is a graph that started as a tree with N nodes (with distinct values 1, 2, ..., N), with one additional edge added.  The added edge has two different vertices chosen from 1 to N, and was not an edge that already existed.\n</p><p>\nThe resulting graph is given as a 2D-array of <code>edges</code>.  Each element of <code>edges</code> is a pair <code>[u, v]</code> with <code>u < v</code>, that represents an <b>undirected</b> edge connecting nodes <code>u</code> and <code>v</code>.\n</p><p>\nReturn an edge that can be removed so that the resulting graph is a tree of N nodes.  If there are multiple answers, return the answer that occurs last in the given 2D-array.  The answer edge <code>[u, v]</code> should be in the same format, with <code>u < v</code>.\n</p><p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> [[1,2], [1,3], [2,3]]\n<b>Output:</b> [2,3]\n<b>Explanation:</b> The given undirected graph will be like this:\n  1\n / \\\n2 - 3\n</pre>\n</p>\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b> [[1,2], [2,3], [3,4], [1,4], [1,5]]\n<b>Output:</b> [1,4]\n<b>Explanation:</b> The given undirected graph will be like this:\n5 - 1 - 2\n    |   |\n    4 - 3\n</pre>\n</p>\n<p><b>Note:</b><br />\n<li>The size of the input 2D-array will be between 3 and 1000.</li>\n<li>Every integer represented in the 2D-array will be between 1 and N, where N is the size of the input array.</li>\n</p>\n\n<br />\n\n<p>\n<b><font color=\"red\">Update (2017-09-26):</font></b><br>\nWe have overhauled the problem description + test cases and specified clearly the graph is an <b><i>undirected</i></b> graph. For the <b><i>directed</i></b> graph follow up please see <b><a href=\"https://leetcode.com/problems/redundant-connection-ii/description/\">Redundant Connection II</a></b>). We apologize for any inconvenience caused.\n</p>"
    },
    {
        "id": "177",
        "title": "Nth Highest Salary",
        "slug": "nth-highest-salary",
        "difficulty": "Medium",
        "likes": 282,
        "dislikes": 223,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [],
        "content": "<p>Write a SQL query to get the <em>n</em><sup>th</sup> highest salary from the <code>Employee</code> table.</p>\n\n<pre>\n+----+--------+\n| Id | Salary |\n+----+--------+\n| 1  | 100    |\n| 2  | 200    |\n| 3  | 300    |\n+----+--------+\n</pre>\n\n<p>For example, given the above Employee table, the <em>n</em><sup>th</sup> highest salary where <em>n</em> = 2 is <code>200</code>. If there is no <em>n</em><sup>th</sup> highest salary, then the query should return <code>null</code>.</p>\n\n<pre>\n+------------------------+\n| getNthHighestSalary(2) |\n+------------------------+\n| 200                    |\n+------------------------+\n</pre>\n"
    },
    {
        "id": "690",
        "title": "Employee Importance",
        "slug": "employee-importance",
        "difficulty": "Easy",
        "likes": 438,
        "dislikes": 461,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Nested List Weight Sum\", \"titleSlug\": \"nested-list-weight-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "303",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Hash Table",
            "Depth-first Search",
            "Breadth-first Search"
        ],
        "content": "<p>You are given a data structure of employee information, which includes the employee&#39;s <b>unique id</b>, his <b>importance value</b> and his <b>direct</b> subordinates&#39; id.</p>\n\n<p>For example, employee 1 is the leader of employee 2, and employee 2 is the leader of employee 3. They have importance value 15, 10 and 5, respectively. Then employee 1 has a data structure like [1, 15, [2]], and employee 2 has [2, 10, [3]], and employee 3 has [3, 5, []]. Note that although employee 3 is also a subordinate of employee 1, the relationship is <b>not direct</b>.</p>\n\n<p>Now given the employee information of a company, and an employee id, you need to return the total importance value of this employee and all his subordinates.</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> [[1, 5, [2, 3]], [2, 3, []], [3, 3, []]], 1\n<b>Output:</b> 11\n<b>Explanation:</b>\nEmployee 1 has importance value 5, and he has two direct subordinates: employee 2 and employee 3. They both have importance value 3. So the total importance value of employee 1 is 5 + 3 + 3 = 11.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b></p>\n\n<ol>\n\t<li>One employee has at most one <b>direct</b> leader and may have several subordinates.</li>\n\t<li>The maximum number of employees won&#39;t exceed 2000.</li>\n</ol>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "967",
        "title": "Numbers With Same Consecutive Differences",
        "slug": "numbers-with-same-consecutive-differences",
        "difficulty": "Medium",
        "likes": 107,
        "dislikes": 35,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "650",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>Return all <strong>non-negative</strong> integers of length <code>N</code> such that the absolute difference between every two consecutive digits is <code>K</code>.</p>\n\n<p>Note that <strong>every</strong> number in the answer <strong>must not</strong> have leading zeros <strong>except</strong> for the number <code>0</code> itself. For example, <code>01</code> has one leading zero and is invalid, but <code>0</code> is valid.</p>\n\n<p>You may return the answer in any order.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>N = <span id=\"example-input-1-1\">3</span>, K = <span id=\"example-input-1-2\">7</span>\n<strong>Output: </strong><span id=\"example-output-1\">[181,292,707,818,929]</span>\n<strong>Explanation: </strong>Note that 070 is not a valid number, because it has leading zeroes.\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>N = <span id=\"example-input-2-1\">2</span>, K = <span id=\"example-input-2-2\">1</span>\n<strong>Output: </strong><span id=\"example-output-2\">[10,12,21,23,32,34,43,45,54,56,65,67,76,78,87,89,98]</span></pre>\n\n<p>&nbsp;</p>\n</div>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= N &lt;= 9</code></li>\n\t<li><code>0 &lt;= K &lt;= 9</code></li>\n</ol>\n"
    },
    {
        "id": "639",
        "title": "Decode Ways II",
        "slug": "decode-ways-ii",
        "difficulty": "Hard",
        "likes": 293,
        "dislikes": 392,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Decode Ways\", \"titleSlug\": \"decode-ways\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "198",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>\nA message containing letters from <code>A-Z</code> is being encoded to numbers using the following mapping way:\n</p>\n\n<pre>\n'A' -> 1\n'B' -> 2\n...\n'Z' -> 26\n</pre>\n\n<p>\nBeyond that, now the encoded string can also contain the character '*', which can be treated as one of the numbers from 1 to 9.\n</p>\n\n\n<p>\nGiven the encoded message containing digits and the character '*', return the total number of ways to decode it.\n</p>\n\n<p>\nAlso, since the answer may be very large, you should return the output mod 10<sup>9</sup> + 7.\n</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> \"*\"\n<b>Output:</b> 9\n<b>Explanation:</b> The encoded message can be decoded to the string: \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\".\n</pre>\n</p>\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b> \"1*\"\n<b>Output:</b> 9 + 9 = 18\n</pre>\n</p>\n\n<p><b>Note:</b><br>\n<ol>\n<li>The length of the input string will fit in range [1, 10<sup>5</sup>].</li>\n<li>The input string will only contain the character '*' and digits '0' - '9'.</li>\n</ol>\n</p>"
    },
    {
        "id": "111",
        "title": "Minimum Depth of Binary Tree",
        "slug": "minimum-depth-of-binary-tree",
        "difficulty": "Easy",
        "likes": 842,
        "dislikes": 463,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Binary Tree Level Order Traversal\", \"titleSlug\": \"binary-tree-level-order-traversal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Depth of Binary Tree\", \"titleSlug\": \"maximum-depth-of-binary-tree\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "602",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree",
            "Depth-first Search",
            "Breadth-first Search"
        ],
        "content": "<p>Given a binary tree, find its minimum depth.</p>\n\n<p>The minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node.</p>\n\n<p><strong>Note:</strong>&nbsp;A leaf is a node with no children.</p>\n\n<p><strong>Example:</strong></p>\n\n<p>Given binary tree <code>[3,9,20,null,null,15,7]</code>,</p>\n\n<pre>\n    3\n   / \\\n  9  20\n    /  \\\n   15   7</pre>\n\n<p>return its minimum&nbsp;depth = 2.</p>\n"
    },
    {
        "id": "693",
        "title": "Binary Number with Alternating Bits",
        "slug": "binary-number-with-alternating-bits",
        "difficulty": "Easy",
        "likes": 322,
        "dislikes": 72,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Number of 1 Bits\", \"titleSlug\": \"number-of-1-bits\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "259",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Bit Manipulation"
        ],
        "content": "<p>Given a positive integer, check whether it has alternating bits: namely, if two adjacent bits will always have different values.</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> 5\n<b>Output:</b> True\n<b>Explanation:</b>\nThe binary representation of 5 is: 101\n</pre>\n</p>\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b> 7\n<b>Output:</b> False\n<b>Explanation:</b>\nThe binary representation of 7 is: 111.\n</pre>\n</p>\n\n<p><b>Example 3:</b><br />\n<pre>\n<b>Input:</b> 11\n<b>Output:</b> False\n<b>Explanation:</b>\nThe binary representation of 11 is: 1011.\n</pre>\n</p>\n\n<p><b>Example 4:</b><br />\n<pre>\n<b>Input:</b> 10\n<b>Output:</b> True\n<b>Explanation:</b>\nThe binary representation of 10 is: 1010.\n</pre>\n</p>"
    },
    {
        "id": "786",
        "title": "K-th Smallest Prime Fraction",
        "slug": "k-th-smallest-prime-fraction",
        "difficulty": "Hard",
        "likes": 248,
        "dislikes": 14,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Kth Smallest Element in a Sorted Matrix\", \"titleSlug\": \"kth-smallest-element-in-a-sorted-matrix\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Kth Smallest Number in Multiplication Table\", \"titleSlug\": \"kth-smallest-number-in-multiplication-table\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Find K-th Smallest Pair Distance\", \"titleSlug\": \"find-k-th-smallest-pair-distance\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "427",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Binary Search",
            "Heap"
        ],
        "content": "<p>A sorted list <code>A</code> contains 1, plus some number of primes.&nbsp; Then, for every p &lt; q in the list, we consider the fraction p/q.</p>\n\n<p>What is the <code>K</code>-th smallest fraction considered?&nbsp; Return your answer as an array of ints, where <code>answer[0] = p</code> and <code>answer[1] = q</code>.</p>\n\n<pre>\n<strong>Examples:</strong>\n<strong>Input:</strong> A = [1, 2, 3, 5], K = 3\n<strong>Output:</strong> [2, 5]\n<strong>Explanation:</strong>\nThe fractions to be considered in sorted order are:\n1/5, 1/3, 2/5, 1/2, 3/5, 2/3.\nThe third fraction is 2/5.\n\n<strong>Input:</strong> A = [1, 7], K = 1\n<strong>Output:</strong> [1, 7]\n</pre>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li><code>A</code> will have length between <code>2</code> and <code>2000</code>.</li>\n\t<li>Each <code>A[i]</code> will be between <code>1</code> and <code>30000</code>.</li>\n\t<li><code>K</code> will be between <code>1</code> and <code>A.length * (A.length - 1) / 2</code>.</li>\n</ul>"
    },
    {
        "id": "167",
        "title": "Two Sum II - Input array is sorted",
        "slug": "two-sum-ii-input-array-is-sorted",
        "difficulty": "Easy",
        "likes": 1062,
        "dislikes": 436,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Two Sum\", \"titleSlug\": \"two-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Two Sum IV - Input is a BST\", \"titleSlug\": \"two-sum-iv-input-is-a-bst\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Two Sum Less Than K\", \"titleSlug\": \"two-sum-less-than-k\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "20",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Two Pointers",
            "Binary Search"
        ],
        "content": "<p>Given an array of integers that is already <strong><em>sorted in ascending order</em></strong>, find two numbers such that they add up to a specific target number.</p>\n\n<p>The function twoSum should return indices of the two numbers such that they add up to the target, where index1 must be less than index2.</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>Your returned answers (both index1 and index2) are not zero-based.</li>\n\t<li>You may assume that each input would have <em>exactly</em> one solution and you may not use the <em>same</em> element twice.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input:</strong> numbers = [2,7,11,15], target = 9\n<strong>Output:</strong> [1,2]\n<strong>Explanation:</strong> The sum of 2 and 7 is 9. Therefore index1 = 1, index2 = 2.</pre>\n"
    },
    {
        "id": "63",
        "title": "Unique Paths II",
        "slug": "unique-paths-ii",
        "difficulty": "Medium",
        "likes": 988,
        "dislikes": 165,
        "hints": [
            "The robot can only move either down or right. Hence any cell in the first row can only be reached from the cell left to it. However, if any cell has an obstacle, you don't let that cell contribute to any path. So, for the first row, the number of ways will simply be \r\n\r\n<pre>\r\nif obstacleGrid[i][j] is not an obstacle\r\n     obstacleGrid[i,j] = obstacleGrid[i,j - 1] \r\nelse\r\n     obstacleGrid[i,j] = 0\r\n</pre>\r\n\r\nYou can do a similar processing for finding out the number of ways of reaching the cells in the first column.",
            "For any other cell, we can find out the number of ways of reaching it, by making use of the number of ways of reaching the cell directly above it and the cell to the left of it in the grid. This is because these are the only two directions from which the robot can come to the current cell.",
            "Since we are making use of pre-computed values along the iteration, this becomes a dynamic programming problem.\r\n\r\n<pre>\r\nif obstacleGrid[i][j] is not an obstacle\r\n     obstacleGrid[i,j] = obstacleGrid[i,j - 1]  + obstacleGrid[i - 1][j]\r\nelse\r\n     obstacleGrid[i,j] = 0\r\n</pre>\r\n\r\n</pre>"
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Unique Paths\", \"titleSlug\": \"unique-paths\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Unique Paths III\", \"titleSlug\": \"unique-paths-iii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "597",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Dynamic Programming"
        ],
        "content": "<p>A robot is located at the top-left corner of a <em>m</em> x <em>n</em> grid (marked &#39;Start&#39; in the diagram below).</p>\n\n<p>The robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked &#39;Finish&#39; in the diagram below).</p>\n\n<p>Now consider if some obstacles are added to the grids. How many unique paths would there be?</p>\n\n<p><img src=\"./img/unique-paths-ii_1.png\" style=\"width: 400px; height: 183px;\" /></p>\n\n<p>An obstacle and empty space is marked as <code>1</code> and <code>0</code> respectively in the grid.</p>\n\n<p><strong>Note:</strong> <em>m</em> and <em>n</em> will be at most 100.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:\n</strong>[\n&nbsp; [0,0,0],\n&nbsp; [0,1,0],\n&nbsp; [0,0,0]\n]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong>\nThere is one obstacle in the middle of the 3x3 grid above.\nThere are two ways to reach the bottom-right corner:\n1. Right -&gt; Right -&gt; Down -&gt; Down\n2. Down -&gt; Down -&gt; Right -&gt; Right\n</pre>\n"
    },
    {
        "id": "452",
        "title": "Minimum Number of Arrows to Burst Balloons",
        "slug": "minimum-number-of-arrows-to-burst-balloons",
        "difficulty": "Medium",
        "likes": 563,
        "dislikes": 27,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Meeting Rooms II\", \"titleSlug\": \"meeting-rooms-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Non-overlapping Intervals\", \"titleSlug\": \"non-overlapping-intervals\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "725",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Greedy"
        ],
        "content": "<p>There are a number of spherical balloons spread in two-dimensional space. For each balloon, provided input is the start and end coordinates of the horizontal diameter. Since it&#39;s horizontal, y-coordinates don&#39;t matter and hence the x-coordinates of start and end of the diameter suffice. Start is always smaller than end. There will be at most 10<sup>4</sup> balloons.</p>\n\n<p>An arrow can be shot up exactly vertically from different points along the x-axis. A balloon with x<sub>start</sub> and x<sub>end</sub> bursts by an arrow shot at x if x<sub>start</sub> &le; x &le; x<sub>end</sub>. There is no limit to the number of arrows that can be shot. An arrow once shot keeps travelling up infinitely. The problem is to find the minimum number of arrows that must be shot to burst all balloons.</p>\n\n<p><b>Example:</b></p>\n\n<pre>\n<b>Input:</b>\n[[10,16], [2,8], [1,6], [7,12]]\n\n<b>Output:</b>\n2\n\n<b>Explanation:</b>\nOne way is to shoot one arrow for example at x = 6 (bursting the balloons [2,8] and [1,6]) and another arrow at x = 11 (bursting the other two balloons).\n</pre>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "593",
        "title": "Valid Square",
        "slug": "valid-square",
        "difficulty": "Medium",
        "likes": 147,
        "dislikes": 296,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "139",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math"
        ],
        "content": "<p>Given the coordinates of four points in 2D space, return whether the four points could construct a square.</p>\n\n<p>The coordinate (x,y) of a point is represented by an integer array with two integers.</p>\n\n<p><b>Example:</b></p>\n\n<pre>\n<b>Input:</b> p1 = [0,0], p2 = [1,1], p3 = [1,0], p4 = [0,1]\n<b>Output:</b> True\n</pre>\n\n<p>&nbsp;</p>\n\n<p>Note:</p>\n\n<ol>\n\t<li>All the input integers are in the range [-10000, 10000].</li>\n\t<li>A valid square has four equal sides with positive length and four equal angles (90-degree angles).</li>\n\t<li>Input points have no order.</li>\n</ol>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "717",
        "title": "1-bit and 2-bit Characters",
        "slug": "1-bit-and-2-bit-characters",
        "difficulty": "Easy",
        "likes": 283,
        "dislikes": 726,
        "hints": [
            "Keep track of where the next character starts.  At the end, you want to know if you started on the last bit."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Gray Code\", \"titleSlug\": \"gray-code\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "271",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array"
        ],
        "content": "<p>We have two special characters. The first character can be represented by one bit <code>0</code>. The second character can be represented by two bits (<code>10</code> or <code>11</code>).  </p>\n\n<p>Now given a string represented by several bits. Return whether the last character must be a one-bit character or not. The given string will always end with a zero.</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> \nbits = [1, 0, 0]\n<b>Output:</b> True\n<b>Explanation:</b> \nThe only way to decode it is two-bit character and one-bit character. So the last character is one-bit character.\n</pre>\n</p>\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b> \nbits = [1, 1, 1, 0]\n<b>Output:</b> False\n<b>Explanation:</b> \nThe only way to decode it is two-bit character and two-bit character. So the last character is NOT one-bit character.\n</pre>\n</p>\n\n<p><b>Note:</b>\n<li><code>1 <= len(bits) <= 1000</code>.</li>\n<li><code>bits[i]</code> is always <code>0</code> or <code>1</code>.</li>\n</p>"
    },
    {
        "id": "7",
        "title": "Reverse Integer",
        "slug": "reverse-integer",
        "difficulty": "Easy",
        "likes": 2413,
        "dislikes": 3748,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"String to Integer (atoi)\", \"titleSlug\": \"string-to-integer-atoi\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Reverse Bits\", \"titleSlug\": \"reverse-bits\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "485",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math"
        ],
        "content": "<p>Given a 32-bit signed integer, reverse digits of an integer.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> 123\n<strong>Output:</strong> 321\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> -123\n<strong>Output:</strong> -321\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> 120\n<strong>Output:</strong> 21\n</pre>\n\n<p><strong>Note:</strong><br />\nAssume we are dealing with an environment which could only store integers within the 32-bit signed integer range: [&minus;2<sup>31</sup>,&nbsp; 2<sup>31&nbsp;</sup>&minus; 1]. For the purpose of this problem, assume that your function returns 0 when the reversed integer overflows.</p>\n"
    },
    {
        "id": "881",
        "title": "Boats to Save People",
        "slug": "boats-to-save-people",
        "difficulty": "Medium",
        "likes": 306,
        "dislikes": 23,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "525",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Two Pointers",
            "Greedy"
        ],
        "content": "<p>The <code>i</code>-th person has weight <code>people[i]</code>, and each boat can carry a maximum weight of <code>limit</code>.</p>\n\n<p>Each boat carries at most 2 people at the same time, provided the sum of the&nbsp;weight of those people is at most <code>limit</code>.</p>\n\n<p>Return the minimum number of boats to carry every given person.&nbsp; (It is guaranteed each person can be carried by a boat.)</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>people = <span id=\"example-input-1-1\">[1,2]</span>, limit = <span id=\"example-input-1-2\">3</span>\n<strong>Output: </strong><span id=\"example-output-1\">1</span>\n<strong>Explanation: </strong>1 boat (1, 2)\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>people = <span id=\"example-input-2-1\">[3,2,2,1]</span>, limit = <span id=\"example-input-2-2\">3</span>\n<strong>Output: </strong><span id=\"example-output-2\">3</span>\n<strong>Explanation</strong>: 3 boats (1, 2), (2) and (3)\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>people = <span id=\"example-input-3-1\">[3,5,3,4]</span>, limit = <span id=\"example-input-3-2\">5</span>\n<strong>Output: </strong><span id=\"example-output-3\">4</span>\n<strong>Explanation</strong>: 4 boats (3), (3), (4), (5)</pre>\n\n<p><strong>Note</strong>:</p>\n\n<ul>\n\t<li><code>1 &lt;=&nbsp;people.length &lt;= 50000</code></li>\n\t<li><code>1 &lt;= people[i] &lt;=&nbsp;limit &lt;= 30000</code></li>\n</ul>\n</div>\n</div>\n</div>\n"
    },
    {
        "id": "861",
        "title": "Score After Flipping Matrix",
        "slug": "score-after-flipping-matrix",
        "difficulty": "Medium",
        "likes": 295,
        "dislikes": 79,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "497",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Greedy"
        ],
        "content": "<p>We have a two dimensional matrix&nbsp;<code>A</code> where each value is <code>0</code> or <code>1</code>.</p>\n\n<p>A move consists of choosing any row or column, and toggling each value in that row or column: changing all <code>0</code>s to <code>1</code>s, and all <code>1</code>s to <code>0</code>s.</p>\n\n<p>After making any number of moves, every row of this matrix is interpreted as a binary number, and the score of the matrix is the sum of these numbers.</p>\n\n<p>Return the highest possible&nbsp;score.</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[[0,0,1,1],[1,0,1,0],[1,1,0,0]]</span>\n<strong>Output: </strong><span id=\"example-output-1\">39</span>\n<strong>Explanation:\n</strong>Toggled to <span id=\"example-input-1-1\">[[1,1,1,1],[1,0,0,1],[1,1,1,1]].\n0b1111 + 0b1001 + 0b1111 = 15 + 9 + 15 = 39</span></pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 20</code></li>\n\t<li><code>1 &lt;= A[0].length &lt;= 20</code></li>\n\t<li><code>A[i][j]</code>&nbsp;is <code>0</code> or <code>1</code>.</li>\n</ol>\n</div>\n"
    },
    {
        "id": "942",
        "title": "DI String Match",
        "slug": "di-string-match",
        "difficulty": "Easy",
        "likes": 514,
        "dislikes": 184,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "620",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math"
        ],
        "content": "<p>Given a string <code>S</code> that <strong>only</strong> contains &quot;I&quot; (increase) or &quot;D&quot; (decrease), let <code>N = S.length</code>.</p>\n\n<p>Return <strong>any</strong> permutation <code>A</code> of <code>[0, 1, ..., N]</code> such that for all <code>i = 0,&nbsp;..., N-1</code>:</p>\n\n<ul>\n\t<li>If <code>S[i] == &quot;I&quot;</code>, then <code>A[i] &lt; A[i+1]</code></li>\n\t<li>If <code>S[i] == &quot;D&quot;</code>, then <code>A[i] &gt; A[i+1]</code></li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">&quot;IDID&quot;</span>\n<strong>Output: </strong><span id=\"example-output-1\">[0,4,1,3,2]</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">&quot;III&quot;</span>\n<strong>Output: </strong><span id=\"example-output-2\">[0,1,2,3]</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">&quot;DDI&quot;</span>\n<strong>Output: </strong><span id=\"example-output-3\">[3,2,0,1]</span></pre>\n</div>\n</div>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= S.length &lt;= 10000</code></li>\n\t<li><code>S</code> only contains characters <code>&quot;I&quot;</code> or <code>&quot;D&quot;</code>.</li>\n</ol>"
    },
    {
        "id": "1005",
        "title": "Maximize Sum Of Array After K Negations",
        "slug": "maximize-sum-of-array-after-k-negations",
        "difficulty": "Easy",
        "likes": 142,
        "dislikes": 22,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Greedy"
        ],
        "content": "<p>Given an array <code>A</code> of integers, we <strong>must</strong>&nbsp;modify the array in the following way: we choose an <code>i</code>&nbsp;and replace&nbsp;<code>A[i]</code> with <code>-A[i]</code>, and we repeat this process <code>K</code> times in total.&nbsp; (We may choose the same index <code>i</code> multiple times.)</p>\n\n<p>Return the largest possible sum of the array after modifying it in this way.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-1-1\">[4,2,3]</span>, K = <span id=\"example-input-1-2\">1</span>\n<strong>Output: </strong><span id=\"example-output-1\">5\n<strong>Explanation: </strong>Choose indices (1,) and A becomes [4,-2,3].</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-2-1\">[3,-1,0,2]</span>, K = <span id=\"example-input-2-2\">3</span>\n<strong>Output: </strong>6\n<span id=\"example-output-1\"><strong>Explanation: </strong>Choose indices (1, 2, 2) and A becomes [3,1,0,2].</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-3-1\">[2,-3,-1,5,-4]</span>, K = <span id=\"example-input-3-2\">2</span>\n<strong>Output: </strong><span id=\"example-output-3\">13\n</span><span id=\"example-output-1\"><strong>Explanation: </strong>Choose indices (1, 4) and A becomes [2,3,-1,5,4].</span>\n</pre>\n</div>\n</div>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 10000</code></li>\n\t<li><code>1 &lt;= K &lt;= 10000</code></li>\n\t<li><code>-100 &lt;= A[i] &lt;= 100</code></li>\n</ol>\n"
    },
    {
        "id": "532",
        "title": "K-diff Pairs in an Array",
        "slug": "k-diff-pairs-in-an-array",
        "difficulty": "Easy",
        "likes": 392,
        "dislikes": 894,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Minimum Absolute Difference in BST\", \"titleSlug\": \"minimum-absolute-difference-in-bst\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Array",
            "Two Pointers"
        ],
        "content": "<p>\nGiven an array of integers and an integer <b>k</b>, you need to find the number of <b>unique</b> k-diff pairs in the array. Here a <b>k-diff</b> pair is defined as an integer pair (i, j), where <b>i</b> and <b>j</b> are both numbers in the array and their <a href = \"https://en.wikipedia.org/wiki/Absolute_difference\">absolute difference</a> is <b>k</b>.\n</p>\n\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> [3, 1, 4, 1, 5], k = 2\n<b>Output:</b> 2\n<b>Explanation: </b>There are two 2-diff pairs in the array, (1, 3) and (3, 5).</br>Although we have two 1s in the input, we should only return the number of <b>unique</b> pairs.\n</pre>\n</p>\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b>[1, 2, 3, 4, 5], k = 1\n<b>Output: </b>4\n<b>Explanation:</b> There are four 1-diff pairs in the array, (1, 2), (2, 3), (3, 4) and (4, 5).\n</pre>\n</p>\n\n<p><b>Example 3:</b><br />\n<pre>\n<b>Input: </b>[1, 3, 1, 5, 4], k = 0\n<b>Output: </b>1\n<b>Explanation:</b> There is one 0-diff pair in the array, (1, 1).\n</pre>\n</p>\n\n<p><b>Note:</b><br>\n<ol>\n<li>The pairs (i, j) and (j, i) count as the same pair.</li>\n<li>The length of the array won't exceed 10,000.</li>\n<li>All the integers in the given input belong to the range: [-1e7, 1e7].</li>\n</ol>\n</p>"
    },
    {
        "id": "899",
        "title": "Orderly Queue",
        "slug": "orderly-queue",
        "difficulty": "Hard",
        "likes": 121,
        "dislikes": 148,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "544",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math",
            "String"
        ],
        "content": "<p>A string <code>S</code> of lowercase letters is given.&nbsp; Then, we may make any number of <em>moves</em>.</p>\n\n<p>In each move, we&nbsp;choose one&nbsp;of the first <code>K</code> letters (starting from the left), remove it,&nbsp;and place it at the end of the string.</p>\n\n<p>Return the lexicographically smallest string we could have after any number of moves.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>S = <span id=\"example-input-1-1\">&quot;cba&quot;</span>, K = <span id=\"example-input-1-2\">1</span>\n<strong>Output: </strong><span id=\"example-output-1\">&quot;acb&quot;</span>\n<strong>Explanation: </strong>\nIn the first move, we move the 1st character (&quot;c&quot;) to the end, obtaining the string &quot;bac&quot;.\nIn the second move, we move the 1st character (&quot;b&quot;) to the end, obtaining the final result &quot;acb&quot;.\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>S = <span id=\"example-input-2-1\">&quot;baaca&quot;</span>, K = <span id=\"example-input-2-2\">3</span>\n<strong>Output: </strong><span id=\"example-output-2\">&quot;aaabc&quot;</span>\n<strong>Explanation: </strong>\nIn the first move, we move the 1st character (&quot;b&quot;) to the end, obtaining the string &quot;aacab&quot;.\nIn the second move, we move the 3rd character (&quot;c&quot;) to the end, obtaining the final result &quot;aaabc&quot;.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= K &lt;= S.length&nbsp;&lt;= 1000</code></li>\n\t<li><code>S</code>&nbsp;consists of lowercase letters only.</li>\n</ol>\n</div>\n</div>\n"
    },
    {
        "id": "845",
        "title": "Longest Mountain in Array",
        "slug": "longest-mountain-in-array",
        "difficulty": "Medium",
        "likes": 367,
        "dislikes": 14,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "478",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Two Pointers"
        ],
        "content": "<p>Let&#39;s call any (contiguous) subarray B (of A)&nbsp;a <em>mountain</em> if the following properties hold:</p>\n\n<ul>\n\t<li><code>B.length &gt;= 3</code></li>\n\t<li>There exists some <code>0 &lt; i&nbsp;&lt; B.length - 1</code> such that <code>B[0] &lt; B[1] &lt; ... B[i-1] &lt; B[i] &gt; B[i+1] &gt; ... &gt; B[B.length - 1]</code></li>\n</ul>\n\n<p>(Note that B could be any subarray of A, including the entire array A.)</p>\n\n<p>Given an array <code>A</code>&nbsp;of integers,&nbsp;return the length of the longest&nbsp;<em>mountain</em>.&nbsp;</p>\n\n<p>Return <code>0</code> if there is no mountain.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>[2,1,4,7,3,2,5]\n<strong>Output: </strong>5\n<strong>Explanation: </strong>The largest mountain is [1,4,7,3,2] which has length 5.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>[2,2,2]\n<strong>Output: </strong>0\n<strong>Explanation: </strong>There is no mountain.\n</pre>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>0 &lt;= A.length &lt;= 10000</code></li>\n\t<li><code>0 &lt;= A[i] &lt;= 10000</code></li>\n</ol>\n\n<p><strong>Follow up:</strong></p>\n\n<ul>\n\t<li>Can you solve it using only one pass?</li>\n\t<li>Can you solve it in <code>O(1)</code> space?</li>\n</ul>\n"
    },
    {
        "id": "18",
        "title": "4Sum",
        "slug": "4sum",
        "difficulty": "Medium",
        "likes": 1240,
        "dislikes": 247,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Two Sum\", \"titleSlug\": \"two-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"3Sum\", \"titleSlug\": \"3sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"4Sum II\", \"titleSlug\": \"4sum-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Array",
            "Hash Table",
            "Two Pointers"
        ],
        "content": "<p>Given an array <code>nums</code> of <em>n</em> integers and an integer <code>target</code>, are there elements <em>a</em>, <em>b</em>, <em>c</em>, and <em>d</em> in <code>nums</code> such that <em>a</em> + <em>b</em> + <em>c</em> + <em>d</em> = <code>target</code>? Find all unique quadruplets in the array which gives the sum of <code>target</code>.</p>\n\n<p><strong>Note:</strong></p>\n\n<p>The solution set must not contain duplicate quadruplets.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\nGiven array nums = [1, 0, -1, 0, -2, 2], and target = 0.\n\nA solution set is:\n[\n  [-1,  0, 0, 1],\n  [-2, -1, 1, 2],\n  [-2,  0, 0, 2]\n]\n</pre>\n"
    },
    {
        "id": "996",
        "title": "Number of Squareful Arrays",
        "slug": "number-of-squareful-arrays",
        "difficulty": "Hard",
        "likes": 174,
        "dislikes": 13,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Permutations II\", \"titleSlug\": \"permutations-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "698",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math",
            "Backtracking",
            "Graph"
        ],
        "content": "<p>Given an array <code>A</code> of non-negative integers, the array is <em>squareful</em> if for every pair of adjacent elements, their sum is a perfect square.</p>\n\n<p>Return the number of permutations of A that are squareful.&nbsp; Two permutations <code>A1</code> and <code>A2</code> differ if and only if there is some index <code>i</code> such that <code>A1[i] != A2[i]</code>.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[1,17,8]</span>\n<strong>Output: </strong><span id=\"example-output-1\">2</span>\n<strong>Explanation: </strong>\n[1,8,17] and [17,8,1] are the valid permutations.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[2,2,2]</span>\n<strong>Output: </strong><span id=\"example-output-2\">1</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 12</code></li>\n\t<li><code>0 &lt;= A[i] &lt;= 1e9</code></li>\n</ol>"
    },
    {
        "id": "199",
        "title": "Binary Tree Right Side View",
        "slug": "binary-tree-right-side-view",
        "difficulty": "Medium",
        "likes": 1250,
        "dislikes": 64,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Populating Next Right Pointers in Each Node\", \"titleSlug\": \"populating-next-right-pointers-in-each-node\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Boundary of Binary Tree\", \"titleSlug\": \"boundary-of-binary-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "274",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree",
            "Depth-first Search",
            "Breadth-first Search"
        ],
        "content": "<p>Given a binary tree, imagine yourself standing on the <em>right</em> side of it, return the values of the nodes you can see ordered from top to bottom.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input:</strong>&nbsp;[1,2,3,null,5,null,4]\n<strong>Output:</strong>&nbsp;[1, 3, 4]\n<strong>Explanation:\n</strong>\n   1            &lt;---\n /   \\\n2     3         &lt;---\n \\     \\\n  5     4       &lt;---\n</pre>"
    },
    {
        "id": "78",
        "title": "Subsets",
        "slug": "subsets",
        "difficulty": "Medium",
        "likes": 2289,
        "dislikes": 56,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Subsets II\", \"titleSlug\": \"subsets-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Generalized Abbreviation\", \"titleSlug\": \"generalized-abbreviation\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Letter Case Permutation\", \"titleSlug\": \"letter-case-permutation\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Array",
            "Backtracking",
            "Bit Manipulation"
        ],
        "content": "<p>Given a set of <strong>distinct</strong> integers, <em>nums</em>, return all possible subsets (the power set).</p>\n\n<p><strong>Note:</strong> The solution set must not contain duplicate subsets.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1,2,3]\n<strong>Output:</strong>\n[\n  [3],\n&nbsp; [1],\n&nbsp; [2],\n&nbsp; [1,2,3],\n&nbsp; [1,3],\n&nbsp; [2,3],\n&nbsp; [1,2],\n&nbsp; []\n]</pre>\n"
    },
    {
        "id": "472",
        "title": "Concatenated Words",
        "slug": "concatenated-words",
        "difficulty": "Hard",
        "likes": 313,
        "dislikes": 72,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Word Break II\", \"titleSlug\": \"word-break-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Dynamic Programming",
            "Depth-first Search",
            "Trie"
        ],
        "content": "Given a list of words (<b>without duplicates</b>), please write a program that returns all concatenated words in the given list of words.\n<p>A concatenated word is defined as a string that is comprised entirely of at least two shorter words in the given array.</p>\n\n<p><b>Example:</b><br />\n<pre>\n<b>Input:</b> [\"cat\",\"cats\",\"catsdogcats\",\"dog\",\"dogcatsdog\",\"hippopotamuses\",\"rat\",\"ratcatdogcat\"]\n\n<b>Output:</b> [\"catsdogcats\",\"dogcatsdog\",\"ratcatdogcat\"]\n\n<b>Explanation:</b> \"catsdogcats\" can be concatenated by \"cats\", \"dog\" and \"cats\"; <br> \"dogcatsdog\" can be concatenated by \"dog\", \"cats\" and \"dog\"; <br>\"ratcatdogcat\" can be concatenated by \"rat\", \"cat\", \"dog\" and \"cat\".\n</pre>\n</p>\n\n<p><b>Note:</b><br>\n<ol>\n<li>The number of elements of the given array will not exceed <code>10,000 </code>\n<li>The length sum of elements in the given array will not exceed <code>600,000</code>. </li>\n<li>All the input string will only include lower case letters.</li>\n<li>The returned elements order does not matter. </li>\n</ol>\n</p>"
    },
    {
        "id": "752",
        "title": "Open the Lock",
        "slug": "open-the-lock",
        "difficulty": "Medium",
        "likes": 460,
        "dislikes": 26,
        "hints": [
            "We can think of this problem as a shortest path problem on a graph: there are `10000` nodes (strings `'0000'` to `'9999'`), and there is an edge between two nodes if they differ in one digit, that digit differs by 1 (wrapping around, so `'0'` and `'9'` differ by 1), and if *both* nodes are not in `deadends`."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "354",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Breadth-first Search"
        ],
        "content": "<p>\nYou have a lock in front of you with 4 circular wheels.  Each wheel has 10 slots: <code>'0', '1', '2', '3', '4', '5', '6', '7', '8', '9'</code>.  The wheels can rotate freely and wrap around: for example we can turn <code>'9'</code> to be <code>'0'</code>, or <code>'0'</code> to be <code>'9'</code>.  Each move consists of turning one wheel one slot.\n</p><p>\nThe lock initially starts at <code>'0000'</code>, a string representing the state of the 4 wheels.\n</p><p>\nYou are given a list of <code>deadends</code> dead ends, meaning if the lock displays any of these codes, the wheels of the lock will stop turning and you will be unable to open it.\n</p><p>\nGiven a <code>target</code> representing the value of the wheels that will unlock the lock, return the minimum total number of turns required to open the lock, or -1 if it is impossible.\n</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> deadends = [\"0201\",\"0101\",\"0102\",\"1212\",\"2002\"], target = \"0202\"\n<b>Output:</b> 6\n<b>Explanation:</b>\nA sequence of valid moves would be \"0000\" -> \"1000\" -> \"1100\" -> \"1200\" -> \"1201\" -> \"1202\" -> \"0202\".\nNote that a sequence like \"0000\" -> \"0001\" -> \"0002\" -> \"0102\" -> \"0202\" would be invalid,\nbecause the wheels of the lock become stuck after the display becomes the dead end \"0102\".\n</pre>\n</p>\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b> deadends = [\"8888\"], target = \"0009\"\n<b>Output:</b> 1\n<b>Explanation:</b>\nWe can turn the last wheel in reverse to move from \"0000\" -> \"0009\".\n</pre>\n</p>\n\n<p><b>Example 3:</b><br />\n<pre>\n<b>Input:</b> deadends = [\"8887\",\"8889\",\"8878\",\"8898\",\"8788\",\"8988\",\"7888\",\"9888\"], target = \"8888\"\n<b>Output:</b> -1\n<b>Explanation:</b>\nWe can't reach the target without getting stuck.\n</pre>\n</p>\n\n<p><b>Example 4:</b><br />\n<pre>\n<b>Input:</b> deadends = [\"0000\"], target = \"8888\"\n<b>Output:</b> -1\n</pre>\n</p>\n\n<p><b>Note:</b><br>\n<ol>\n<li>The length of <code>deadends</code> will be in the range <code>[1, 500]</code>.</li>\n<li><code>target</code> will not be in the list <code>deadends</code>.</li>\n<li>Every string in <code>deadends</code> and the string <code>target</code> will be a string of 4 digits from the 10,000 possibilities <code>'0000'</code> to <code>'9999'</code>.</li>\n</ol>\n</p>"
    },
    {
        "id": "1010",
        "title": "Pairs of Songs With Total Durations Divisible by 60",
        "slug": "pairs-of-songs-with-total-durations-divisible-by-60",
        "difficulty": "Easy",
        "likes": 234,
        "dislikes": 18,
        "hints": [
            "We only need to consider each song length modulo 60.",
            "We can count the number of songs with (length % 60) equal to r, and store that in an array of size 60."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Array"
        ],
        "content": "<p>In a list of songs, the <code>i</code>-th&nbsp;song has a duration of&nbsp;<code>time[i]</code> seconds.&nbsp;</p>\n\n<p>Return the number of pairs of songs for which their total&nbsp;duration in seconds is divisible by <code>60</code>.&nbsp; Formally, we want the number of&nbsp;indices <code>i &lt; j</code> with <code>(time[i] + time[j]) % 60 == 0</code>.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[30,20,150,100,40]</span>\n<strong>Output: </strong><span id=\"example-output-1\">3</span>\n<strong>Explanation: </strong>Three pairs have a total duration divisible by 60:\n(time[0] = 30, time[2] = 150): total duration 180\n(time[1] = 20, time[3] = 100): total duration 120\n(time[1] = 20, time[4] = 40): total duration 60\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[60,60,60]</span>\n<strong>Output: </strong><span id=\"example-output-2\">3</span>\n<strong>Explanation: </strong>All three pairs have a total duration of 120, which is divisible by 60.\n</pre>\n</div>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= time.length &lt;= 60000</code></li>\n\t<li><code>1 &lt;= time[i] &lt;= 500</code></li>\n</ol>"
    },
    {
        "id": "113",
        "title": "Path Sum II",
        "slug": "path-sum-ii",
        "difficulty": "Medium",
        "likes": 1056,
        "dislikes": 38,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Path Sum\", \"titleSlug\": \"path-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Binary Tree Paths\", \"titleSlug\": \"binary-tree-paths\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Path Sum III\", \"titleSlug\": \"path-sum-iii\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Path Sum IV\", \"titleSlug\": \"path-sum-iv\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Tree",
            "Depth-first Search"
        ],
        "content": "<p>Given a binary tree and a sum, find all root-to-leaf paths where each path&#39;s sum equals the given sum.</p>\n\n<p><strong>Note:</strong>&nbsp;A leaf is a node with no children.</p>\n\n<p><strong>Example:</strong></p>\n\n<p>Given the below binary tree and <code>sum = 22</code>,</p>\n\n<pre>\n      <strong>5</strong>\n     <strong>/ \\</strong>\n    <strong>4   8</strong>\n   <strong>/</strong>   / <strong>\\</strong>\n  <strong>11</strong>  13  <strong>4</strong>\n /  <strong>\\</strong>    <strong>/</strong> \\\n7    <strong>2</strong>  <strong>5</strong>   1\n</pre>\n\n<p>Return:</p>\n\n<pre>\n[\n   [5,4,11,2],\n   [5,8,4,5]\n]\n</pre>\n"
    },
    {
        "id": "946",
        "title": "Validate Stack Sequences",
        "slug": "validate-stack-sequences",
        "difficulty": "Medium",
        "likes": 331,
        "dislikes": 9,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "623",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Stack"
        ],
        "content": "<p>Given two sequences <code>pushed</code> and <code>popped</code>&nbsp;<strong>with distinct values</strong>,&nbsp;return <code>true</code> if and only if this could have been the result of a sequence of push and pop operations on an initially empty stack.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>pushed = <span id=\"example-input-1-1\">[1,2,3,4,5]</span>, popped = <span id=\"example-input-1-2\">[4,5,3,2,1]</span>\n<strong>Output: </strong><span id=\"example-output-1\">true</span>\n<strong>Explanation: </strong>We might do the following sequence:\npush(1), push(2), push(3), push(4), pop() -&gt; 4,\npush(5), pop() -&gt; 5, pop() -&gt; 3, pop() -&gt; 2, pop() -&gt; 1\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>pushed = <span id=\"example-input-2-1\">[1,2,3,4,5]</span>, popped = <span id=\"example-input-2-2\">[4,3,5,1,2]</span>\n<strong>Output: </strong><span id=\"example-output-2\">false</span>\n<strong>Explanation: </strong>1 cannot be popped before 2.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>0 &lt;= pushed.length == popped.length &lt;= 1000</code></li>\n\t<li><code>0 &lt;= pushed[i], popped[i] &lt; 1000</code></li>\n\t<li><code>pushed</code> is a permutation of <code>popped</code>.</li>\n\t<li><code>pushed</code> and <code>popped</code> have distinct values.</li>\n</ol>\n</div>\n</div>"
    },
    {
        "id": "86",
        "title": "Partition List",
        "slug": "partition-list",
        "difficulty": "Medium",
        "likes": 791,
        "dislikes": 212,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "654",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Linked List",
            "Two Pointers"
        ],
        "content": "<p>Given a linked list and a value <em>x</em>, partition it such that all nodes less than <em>x</em> come before nodes greater than or equal to <em>x</em>.</p>\n\n<p>You should preserve the original relative order of the nodes in each of the two partitions.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input:</strong> head = 1-&gt;4-&gt;3-&gt;2-&gt;5-&gt;2, <em>x</em> = 3\n<strong>Output:</strong> 1-&gt;2-&gt;2-&gt;4-&gt;3-&gt;5\n</pre>\n"
    },
    {
        "id": "99",
        "title": "Recover Binary Search Tree",
        "slug": "recover-binary-search-tree",
        "difficulty": "Hard",
        "likes": 934,
        "dislikes": 51,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "746",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree",
            "Depth-first Search"
        ],
        "content": "<p>Two elements of a binary search tree (BST) are swapped by mistake.</p>\n\n<p>Recover the tree without changing its structure.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> [1,3,null,null,2]\n\n&nbsp;  1\n&nbsp; /\n&nbsp;3\n&nbsp; \\\n&nbsp;  2\n\n<strong>Output:</strong> [3,1,null,null,2]\n\n&nbsp;  3\n&nbsp; /\n&nbsp;1\n&nbsp; \\\n&nbsp;  2\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> [3,1,4,null,null,2]\n\n  3\n / \\\n1   4\n&nbsp;  /\n&nbsp; 2\n\n<strong>Output:</strong> [2,1,4,null,null,3]\n\n  2\n / \\\n1   4\n&nbsp;  /\n &nbsp;3\n</pre>\n\n<p><strong>Follow up:</strong></p>\n\n<ul>\n\t<li>A solution using O(<em>n</em>) space is pretty straight forward.</li>\n\t<li>Could you devise a constant space solution?</li>\n</ul>\n"
    },
    {
        "id": "483",
        "title": "Smallest Good Base",
        "slug": "smallest-good-base",
        "difficulty": "Hard",
        "likes": 97,
        "dislikes": 268,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Math",
            "Binary Search"
        ],
        "content": "<p>For an integer n, we call k&gt;=2 a <i><b>good base</b></i> of n, if all digits of n base k are 1.</p>\n\n<p>Now given a string representing n, you should return the smallest good base of n in string format.</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> &quot;13&quot;\n<b>Output:</b> &quot;3&quot;\n<b>Explanation:</b> 13 base 3 is 111.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input:</b> &quot;4681&quot;\n<b>Output:</b> &quot;8&quot;\n<b>Explanation:</b> 4681 base 8 is 11111.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Example 3:</b></p>\n\n<pre>\n<b>Input:</b> &quot;1000000000000000000&quot;\n<b>Output:</b> &quot;999999999999999999&quot;\n<b>Explanation:</b> 1000000000000000000 base 999999999999999999 is 11.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b></p>\n\n<ol>\n\t<li>The range of n is [3, 10^18].</li>\n\t<li>The string representing n is always valid and will not have leading zeros.</li>\n</ol>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "183",
        "title": "Customers Who Never Order",
        "slug": "customers-who-never-order",
        "difficulty": "Easy",
        "likes": 267,
        "dislikes": 34,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "218",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [],
        "content": "<p>Suppose that a website contains two tables, the <code>Customers</code> table and the <code>Orders</code> table. Write a SQL query to find all customers who never order anything.</p>\n\n<p>Table: <code>Customers</code>.</p>\n\n<pre>\n+----+-------+\n| Id | Name  |\n+----+-------+\n| 1  | Joe   |\n| 2  | Henry |\n| 3  | Sam   |\n| 4  | Max   |\n+----+-------+\n</pre>\n\n<p>Table: <code>Orders</code>.</p>\n\n<pre>\n+----+------------+\n| Id | CustomerId |\n+----+------------+\n| 1  | 3          |\n| 2  | 1          |\n+----+------------+\n</pre>\n\n<p>Using the above tables as example, return the following:</p>\n\n<pre>\n+-----------+\n| Customers |\n+-----------+\n| Henry     |\n| Max       |\n+-----------+\n</pre>\n"
    },
    {
        "id": "692",
        "title": "Top K Frequent Words",
        "slug": "top-k-frequent-words",
        "difficulty": "Medium",
        "likes": 892,
        "dislikes": 85,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Top K Frequent Elements\", \"titleSlug\": \"top-k-frequent-elements\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"K Closest Points to Origin\", \"titleSlug\": \"k-closest-points-to-origin\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "275",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Hash Table",
            "Heap",
            "Trie"
        ],
        "content": "<p>Given a non-empty list of words, return the <i>k</i> most frequent elements.</p>\n<p>Your answer should be sorted by frequency from highest to lowest. If two words have the same frequency, then the word with the lower alphabetical order comes first.</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> [\"i\", \"love\", \"leetcode\", \"i\", \"love\", \"coding\"], k = 2\n<b>Output:</b> [\"i\", \"love\"]\n<b>Explanation:</b> \"i\" and \"love\" are the two most frequent words.\n    Note that \"i\" comes before \"love\" due to a lower alphabetical order.\n</pre>\n</p>\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b> [\"the\", \"day\", \"is\", \"sunny\", \"the\", \"the\", \"the\", \"sunny\", \"is\", \"is\"], k = 4\n<b>Output:</b> [\"the\", \"is\", \"sunny\", \"day\"]\n<b>Explanation:</b> \"the\", \"is\", \"sunny\" and \"day\" are the four most frequent words,\n    with the number of occurrence being 4, 3, 2 and 1 respectively.\n</pre>\n</p>\n\n<p><b>Note:</b><br>\n<ol>\n<li>You may assume <i>k</i> is always valid, 1 &le; <i>k</i> &le; number of unique elements.</li>\n<li>Input words contain only lowercase letters.</li>\n</ol>\n</p>\n\n<p><b>Follow up:</b><br />\n<ol>\n<li>Try to solve it in <i>O</i>(<i>n</i> log <i>k</i>) time and <i>O</i>(<i>n</i>) extra space.</li>\n</ol>\n</p>"
    },
    {
        "id": "819",
        "title": "Most Common Word",
        "slug": "most-common-word",
        "difficulty": "Easy",
        "likes": 358,
        "dislikes": 879,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "450",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String"
        ],
        "content": "<p>Given a paragraph&nbsp;and a list of banned words, return the most frequent word that is not in the list of banned words.&nbsp; It is guaranteed there is at least one word that isn&#39;t banned, and that the answer is unique.</p>\n\n<p>Words in the list of banned words are given in lowercase, and free of punctuation.&nbsp; Words in the paragraph are not case sensitive.&nbsp; The answer is in lowercase.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input:</strong> \nparagraph = &quot;Bob hit a ball, the hit BALL flew far after it was hit.&quot;\nbanned = [&quot;hit&quot;]\n<strong>Output:</strong> &quot;ball&quot;\n<strong>Explanation:</strong> \n&quot;hit&quot; occurs 3 times, but it is a banned word.\n&quot;ball&quot; occurs twice (and no other word does), so it is the most frequent non-banned word in the paragraph. \nNote that words in the paragraph are not case sensitive,\nthat punctuation is ignored (even if adjacent to words, such as &quot;ball,&quot;), \nand that &quot;hit&quot; isn&#39;t the answer even though it occurs more because it is banned.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note: </strong></p>\n\n<ul>\n\t<li><code>1 &lt;= paragraph.length &lt;= 1000</code>.</li>\n\t<li><code>0 &lt;= banned.length &lt;= 100</code>.</li>\n\t<li><code>1 &lt;= banned[i].length &lt;= 10</code>.</li>\n\t<li>The answer is unique, and written in lowercase (even if its occurrences in <code>paragraph</code>&nbsp;may have&nbsp;uppercase symbols, and even if it is a proper noun.)</li>\n\t<li><code>paragraph</code> only consists of letters, spaces, or the punctuation symbols <code>!?&#39;,;.</code></li>\n\t<li>There are no hyphens or hyphenated words.</li>\n\t<li>Words only consist of letters, never apostrophes or other punctuation symbols.</li>\n</ul>\n"
    },
    {
        "id": "729",
        "title": "My Calendar I",
        "slug": "my-calendar-i",
        "difficulty": "Medium",
        "likes": 420,
        "dislikes": 27,
        "hints": [
            "Store the events as a sorted list of intervals.  If none of the events conflict, then the new event can be added."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"My Calendar II\", \"titleSlug\": \"my-calendar-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"My Calendar III\", \"titleSlug\": \"my-calendar-iii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "297",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array"
        ],
        "content": "<p>Implement a <code>MyCalendar</code> class to store your events. A new event can be added if adding the event will not cause a double booking.</p>\n\n<p>Your class will have the method, <code>book(int start, int end)</code>. Formally, this represents a booking on the half open interval <code>[start, end)</code>, the range of real numbers <code>x</code> such that <code>start &lt;= x &lt; end</code>.</p>\n\n<p>A <i>double booking</i> happens when two events have some non-empty intersection (ie., there is some time that is common to both events.)</p>\n\n<p>For each call to the method <code>MyCalendar.book</code>, return <code>true</code> if the event can be added to the calendar successfully without causing a double booking. Otherwise, return <code>false</code> and do not add the event to the calendar.</p>\nYour class will be called like this: <code>MyCalendar cal = new MyCalendar();</code> <code>MyCalendar.book(start, end)</code>\n\n<p><b>Example 1:</b></p>\n\n<pre>\nMyCalendar();\nMyCalendar.book(10, 20); // returns true\nMyCalendar.book(15, 25); // returns false\nMyCalendar.book(20, 30); // returns true\n<b>Explanation:</b> \nThe first event can be booked.  The second can&#39;t because time 15 is already booked by another event.\nThe third event can be booked, as the first event takes every time less than 20, but not including 20.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b></p>\n\n<ul>\n\t<li>The number of calls to <code>MyCalendar.book</code> per test case will be at most <code>1000</code>.</li>\n\t<li>In calls to <code>MyCalendar.book(start, end)</code>, <code>start</code> and <code>end</code> are integers in the range <code>[0, 10^9]</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "217",
        "title": "Contains Duplicate",
        "slug": "contains-duplicate",
        "difficulty": "Easy",
        "likes": 465,
        "dislikes": 565,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Contains Duplicate II\", \"titleSlug\": \"contains-duplicate-ii\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Contains Duplicate III\", \"titleSlug\": \"contains-duplicate-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "23",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Hash Table"
        ],
        "content": "<p>Given an array of integers, find if the array contains any duplicates.</p>\n\n<p>Your function should return true if any value appears at least twice in the array, and it should return false if every element is distinct.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> [1,2,3,1]\n<strong>Output:</strong> true</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>[1,2,3,4]\n<strong>Output:</strong> false</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>[1,1,1,3,3,4,3,2,4,2]\n<strong>Output:</strong> true</pre>\n"
    },
    {
        "id": "476",
        "title": "Number Complement",
        "slug": "number-complement",
        "difficulty": "Easy",
        "likes": 585,
        "dislikes": 75,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Bit Manipulation"
        ],
        "content": "<p>Given a positive integer, output its complement number. The complement strategy is to flip the bits of its binary representation.</p>\n\n<p><b>Note:</b><br>\n<ol>\n<li>The given integer is guaranteed to fit within the range of a 32-bit signed integer.</li>\n<li>You could assume no leading zero bit in the integer\u2019s binary representation.</li>\n</ol>\n</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> 5\n<b>Output:</b> 2\n<b>Explanation:</b> The binary representation of 5 is 101 (no leading zero bits), and its complement is 010. So you need to output 2.\n</pre>\n</p>\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b> 1\n<b>Output:</b> 0\n<b>Explanation:</b> The binary representation of 1 is 1 (no leading zero bits), and its complement is 0. So you need to output 0.\n</pre>\n</p>"
    },
    {
        "id": "1027",
        "title": "Longest Arithmetic Sequence",
        "slug": "longest-arithmetic-sequence",
        "difficulty": "Medium",
        "likes": 253,
        "dislikes": 16,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>Given an array <code>A</code> of integers, return the <strong>length</strong> of the longest arithmetic subsequence in <code>A</code>.</p>\n\n<p>Recall that a <em>subsequence</em> of <code>A</code> is a list <code>A[i_1], A[i_2], ..., A[i_k]</code> with <code>0 &lt;= i_1 &lt; i_2 &lt; ... &lt; i_k &lt;= A.length - 1</code>, and that a sequence <code>B</code>&nbsp;is <em>arithmetic</em> if <code>B[i+1] - B[i]</code> are all the same value (for <code>0 &lt;= i &lt; B.length - 1</code>).</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[3,6,9,12]</span>\n<strong>Output: </strong><span id=\"example-output-1\">4</span>\n<strong>Explanation: </strong>\nThe whole array is an arithmetic sequence with steps of length = 3.\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[9,4,7,2,10]</span>\n<strong>Output: </strong><span id=\"example-output-2\">3</span>\n<strong>Explanation: </strong>\nThe longest arithmetic subsequence is [4,7,10].\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">[20,1,15,3,10,5,8]</span>\n<strong>Output: </strong><span id=\"example-output-3\">4</span>\n<strong>Explanation: </strong>\nThe longest arithmetic subsequence is [20,15,10,5].\n</pre>\n</div>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>2 &lt;= A.length &lt;= 2000</code></li>\n\t<li><code>0 &lt;= A[i] &lt;= 10000</code></li>\n</ol>\n</div>"
    },
    {
        "id": "1012",
        "title": "Numbers With Repeated Digits",
        "slug": "numbers-with-repeated-digits",
        "difficulty": "Hard",
        "likes": 99,
        "dislikes": 33,
        "hints": [
            "How many numbers with no duplicate digits?  How many numbers with K digits and no duplicates?",
            "How many numbers with same length as N?  How many numbers with same prefix as N?"
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Math",
            "Dynamic Programming"
        ],
        "content": "<p>Given a positive integer <code>N</code>, return the number of positive integers less than or equal to <code>N</code> that have at least 1 repeated digit.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">20</span>\n<strong>Output: </strong><span id=\"example-output-1\">1</span>\n<strong>Explanation: </strong>The only positive number (&lt;= 20) with at least 1 repeated digit is 11.\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">100</span>\n<strong>Output: </strong><span id=\"example-output-2\">10</span>\n<strong>Explanation: </strong>The positive numbers (&lt;= 100) with atleast 1 repeated digit are 11, 22, 33, 44, 55, 66, 77, 88, 99, and 100.\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">1000</span>\n<strong>Output: </strong><span id=\"example-output-3\">262</span>\n</pre>\n</div>\n\n<p>&nbsp;</p>\n\n<p><strong><span>Note:</span></strong></p>\n\n<ol>\n\t<li><code>1 &lt;= N &lt;= 10^9</code></li>\n</ol>\n</div>\n</div>"
    },
    {
        "id": "695",
        "title": "Max Area of Island",
        "slug": "max-area-of-island",
        "difficulty": "Medium",
        "likes": 1239,
        "dislikes": 64,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Number of Islands\", \"titleSlug\": \"number-of-islands\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Island Perimeter\", \"titleSlug\": \"island-perimeter\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "260",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Depth-first Search"
        ],
        "content": "<p>Given a non-empty 2D array <code>grid</code> of 0&#39;s and 1&#39;s, an <b>island</b> is a group of <code>1</code>&#39;s (representing land) connected 4-directionally (horizontal or vertical.) You may assume all four edges of the grid are surrounded by water.</p>\n\n<p>Find the maximum area of an island in the given 2D array. (If there is no island, the maximum area is 0.)</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n[[0,0,1,0,0,0,0,1,0,0,0,0,0],\n [0,0,0,0,0,0,0,1,1,1,0,0,0],\n [0,1,1,0,1,0,0,0,0,0,0,0,0],\n [0,1,0,0,1,1,0,0,<b>1</b>,0,<b>1</b>,0,0],\n [0,1,0,0,1,1,0,0,<b>1</b>,<b>1</b>,<b>1</b>,0,0],\n [0,0,0,0,0,0,0,0,0,0,<b>1</b>,0,0],\n [0,0,0,0,0,0,0,1,1,1,0,0,0],\n [0,0,0,0,0,0,0,1,1,0,0,0,0]]\n</pre>\nGiven the above grid, return <code>6</code>. Note the answer is not 11, because the island must be connected 4-directionally.\n\n<p><b>Example 2:</b></p>\n\n<pre>\n[[0,0,0,0,0,0,0,0]]</pre>\nGiven the above grid, return <code>0</code>.\n\n<p><b>Note:</b> The length of each dimension in the given <code>grid</code> does not exceed 50.</p>\n"
    },
    {
        "id": "441",
        "title": "Arranging Coins",
        "slug": "arranging-coins",
        "difficulty": "Easy",
        "likes": 219,
        "dislikes": 493,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Math",
            "Binary Search"
        ],
        "content": "<p>You have a total of <i>n</i> coins that you want to form in a staircase shape, where every <i>k</i>-th row must have exactly <i>k</i> coins.</p>\n \n<p>Given <i>n</i>, find the total number of <b>full</b> staircase rows that can be formed.</p>\n\n<p><i>n</i> is a non-negative integer and fits within the range of a 32-bit signed integer.</p>\n\n<p><b>Example 1:</b>\n<pre>\nn = 5\n\nThe coins can form the following rows:\n\u00a4\n\u00a4 \u00a4\n\u00a4 \u00a4\n\nBecause the 3rd row is incomplete, we return 2.\n</pre>\n</p>\n\n<p><b>Example 2:</b>\n<pre>\nn = 8\n\nThe coins can form the following rows:\n\u00a4\n\u00a4 \u00a4\n\u00a4 \u00a4 \u00a4\n\u00a4 \u00a4\n\nBecause the 4th row is incomplete, we return 3.\n</pre>\n</p>"
    },
    {
        "id": "658",
        "title": "Find K Closest Elements",
        "slug": "find-k-closest-elements",
        "difficulty": "Medium",
        "likes": 791,
        "dislikes": 164,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Guess Number Higher or Lower\", \"titleSlug\": \"guess-number-higher-or-lower\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Guess Number Higher or Lower II\", \"titleSlug\": \"guess-number-higher-or-lower-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find K-th Smallest Pair Distance\", \"titleSlug\": \"find-k-th-smallest-pair-distance\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "229",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Binary Search"
        ],
        "content": "<p>\nGiven a sorted array, two integers <code>k</code> and <code>x</code>, find the <code>k</code> closest elements to <code>x</code> in the array.  The result should also be sorted in ascending order.\nIf there is a tie,  the smaller elements are always preferred.\n</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> [1,2,3,4,5], k=4, x=3\n<b>Output:</b> [1,2,3,4]\n</pre>\n</p>\n\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b> [1,2,3,4,5], k=4, x=-1\n<b>Output:</b> [1,2,3,4]\n</pre>\n</p>\n\n<p><b>Note:</b><br>\n<ol>\n<li>The value k is positive and will always be smaller than the length of the sorted array.</li>\n<li> Length of the given array is positive and will not exceed 10<sup>4</sup></li>\n<li> Absolute value of elements in the array and x will not exceed 10<sup>4</sup></li>\n</ol>\n</p>\n\n<hr />\n\n<p>\n<b><font color=\"red\">UPDATE (2017/9/19):</font></b><br />\nThe <i>arr</i> parameter had been changed to an <b>array of integers</b> (instead of a list of integers). <b><i>Please reload the code definition to get the latest changes</i></b>.\n</p>"
    },
    {
        "id": "264",
        "title": "Ugly Number II",
        "slug": "ugly-number-ii",
        "difficulty": "Medium",
        "likes": 1077,
        "dislikes": 71,
        "hints": [
            "The naive approach is to call <code>isUgly</code> for every number until you reach the n<sup>th</sup> one. Most numbers are <i>not</i> ugly. Try to focus your effort on generating only the ugly ones.",
            "An ugly number must be multiplied by either 2, 3, or 5 from a smaller ugly number.",
            "The key is how to maintain the order of the ugly numbers. Try a similar approach of merging from three sorted lists: L<sub>1</sub>, L<sub>2</sub>, and L<sub>3</sub>.",
            "Assume you have U<sub>k</sub>, the k<sup>th</sup> ugly number. Then U<sub>k+1</sub> must be Min(L<sub>1</sub> * 2, L<sub>2</sub> * 3, L<sub>3</sub> * 5)."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Merge k Sorted Lists\", \"titleSlug\": \"merge-k-sorted-lists\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Count Primes\", \"titleSlug\": \"count-primes\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Ugly Number\", \"titleSlug\": \"ugly-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Perfect Squares\", \"titleSlug\": \"perfect-squares\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Super Ugly Number\", \"titleSlug\": \"super-ugly-number\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "750",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math",
            "Dynamic Programming",
            "Heap"
        ],
        "content": "<p>Write a program to find the <code>n</code>-th ugly number.</p>\n\n<p>Ugly numbers are<strong> positive numbers</strong> whose prime factors only include <code>2, 3, 5</code>.&nbsp;</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 10\n<strong>Output:</strong> 12\n<strong>Explanation: </strong><code>1, 2, 3, 4, 5, 6, 8, 9, 10, 12</code> is the sequence of the first <code>10</code> ugly numbers.</pre>\n\n<p><strong>Note: </strong>&nbsp;</p>\n\n<ol>\n\t<li><code>1</code> is typically treated as an ugly number.</li>\n\t<li><code>n</code> <b>does not exceed 1690</b>.</li>\n</ol>"
    },
    {
        "id": "928",
        "title": "Minimize Malware Spread II",
        "slug": "minimize-malware-spread-ii",
        "difficulty": "Hard",
        "likes": 106,
        "dislikes": 29,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "593",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Depth-first Search",
            "Union Find",
            "Graph"
        ],
        "content": "<p>(This problem is the same as <em>Minimize Malware Spread</em>, with the differences bolded.)</p>\n\n<p>In a network of nodes, each node <code>i</code> is directly connected to another node <code>j</code> if and only if&nbsp;<code>graph[i][j] = 1</code>.</p>\n\n<p>Some nodes <code>initial</code> are initially infected by malware.&nbsp; Whenever two nodes are directly connected and at least one of those two nodes is infected by malware, both nodes will be infected by malware.&nbsp; This spread of malware will continue until no more nodes can be infected in this manner.</p>\n\n<p>Suppose <code>M(initial)</code>&nbsp;is the final number of nodes infected with malware in the entire network, after the spread of malware stops.</p>\n\n<p>We will&nbsp;remove one node from the initial list, <strong>completely removing it and any connections from this node to any other node</strong>.&nbsp; Return the node that if removed, would minimize&nbsp;<code>M(initial)</code>.&nbsp; If multiple nodes could be removed to minimize <code>M(initial)</code>, return such a node with the smallest index.</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>graph = <span id=\"example-input-1-1\">[[1,1,0],[1,1,0],[0,0,1]]</span>, initial = <span id=\"example-input-1-2\">[0,1]</span>\n<strong>Output: </strong><span id=\"example-output-1\">0</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>graph = <span id=\"example-input-2-1\">[[1,1,0],[1,1,1],[0,1,1]]</span>, initial = <span id=\"example-input-2-2\">[0,1]</span>\n<strong>Output: </strong><span id=\"example-output-2\">1</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>graph = <span id=\"example-input-3-1\">[[1,1,0,0],[1,1,1,0],[0,1,1,1],[0,0,1,1]]</span>, initial = <span id=\"example-input-3-2\">[0,1]</span>\n<strong>Output: </strong><span id=\"example-output-3\">1</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt; graph.length = graph[0].length &lt;= 300</code></li>\n\t<li><code>0 &lt;= graph[i][j] == graph[j][i] &lt;= 1</code></li>\n\t<li><code>graph[i][i] = 1</code></li>\n\t<li><code>1 &lt;= initial.length &lt; graph.length</code></li>\n\t<li><code>0 &lt;= initial[i] &lt; graph.length</code></li>\n</ol>\n</div>\n</div>\n</div>"
    },
    {
        "id": "1122",
        "title": "Relative Sort Array",
        "slug": "relative-sort-array",
        "difficulty": "Easy",
        "likes": 196,
        "dislikes": 16,
        "hints": [
            "Using a hashmap, we can map the values of arr2 to their position in arr2.",
            "After, we can use a custom sorting function."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Array",
            "Sort"
        ],
        "content": "<p>Given two arrays <code>arr1</code> and <code>arr2</code>, the elements of <code>arr2</code> are distinct, and all elements in <code>arr2</code> are also in <code>arr1</code>.</p>\n\n<p>Sort the elements of <code>arr1</code> such that the relative ordering of items in <code>arr1</code> are the same as in <code>arr2</code>.&nbsp; Elements that don&#39;t appear in <code>arr2</code> should be placed at the end of <code>arr1</code> in <strong>ascending</strong> order.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> arr1 = [2,3,1,3,2,4,6,7,9,2,19], arr2 = [2,1,4,3,9,6]\n<strong>Output:</strong> [2,2,2,1,4,3,3,9,6,7,19]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>arr1.length, arr2.length &lt;= 1000</code></li>\n\t<li><code>0 &lt;= arr1[i], arr2[i] &lt;= 1000</code></li>\n\t<li>Each&nbsp;<code>arr2[i]</code>&nbsp;is&nbsp;distinct.</li>\n\t<li>Each&nbsp;<code>arr2[i]</code> is in <code>arr1</code>.</li>\n</ul>\n"
    },
    {
        "id": "931",
        "title": "Minimum Falling Path Sum",
        "slug": "minimum-falling-path-sum",
        "difficulty": "Medium",
        "likes": 325,
        "dislikes": 36,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "598",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>Given a <strong>square</strong> array of integers <code>A</code>, we want the <strong>minimum</strong> sum of a <em>falling path</em> through <code>A</code>.</p>\n\n<p>A falling path starts at any element in the first row, and chooses one element from each row.&nbsp; The next row&#39;s choice must be in a column that is different from the previous row&#39;s column by at most one.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[[1,2,3],[4,5,6],[7,8,9]]</span>\n<strong>Output: </strong><span id=\"example-output-1\">12</span>\n<strong>Explanation: </strong>\nThe possible falling paths are:\n</pre>\n\n<ul>\n\t<li><code>[1,4,7], [1,4,8], [1,5,7], [1,5,8], [1,5,9]</code></li>\n\t<li><code>[2,4,7], [2,4,8], [2,5,7], [2,5,8], [2,5,9], [2,6,8], [2,6,9]</code></li>\n\t<li><code>[3,5,7], [3,5,8], [3,5,9], [3,6,8], [3,6,9]</code></li>\n</ul>\n\n<p>The falling path with the smallest sum is <code>[1,4,7]</code>, so the answer is <code>12</code>.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length == A[0].length &lt;= 100</code></li>\n\t<li><code>-100 &lt;= A[i][j] &lt;= 100</code></li>\n</ol>"
    },
    {
        "id": "153",
        "title": "Find Minimum in Rotated Sorted Array",
        "slug": "find-minimum-in-rotated-sorted-array",
        "difficulty": "Medium",
        "likes": 1192,
        "dislikes": 178,
        "hints": [
            "Array was originally in ascending order. Now that the array is rotated, there would be a point in the array where there is a small deflection from the increasing sequence. eg. The array would be something like [4, 5, 6, 7, 0, 1, 2].",
            "You can divide the search space into two and see which direction to go.\r\nCan you think of an algorithm which has O(logN) search complexity?",
            "<ol>\r\n<li>All the elements to the left of inflection point > first element of the array.</li>\r\n<li>All the elements to the right of inflection point < first element of the array.</li>\r\n<ol>"
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Search in Rotated Sorted Array\", \"titleSlug\": \"search-in-rotated-sorted-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find Minimum in Rotated Sorted Array II\", \"titleSlug\": \"find-minimum-in-rotated-sorted-array-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "549",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Binary Search"
        ],
        "content": "<p>Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.</p>\n\n<p>(i.e., &nbsp;<code>[0,1,2,4,5,6,7]</code>&nbsp;might become &nbsp;<code>[4,5,6,7,0,1,2]</code>).</p>\n\n<p>Find the minimum element.</p>\n\n<p>You may assume no duplicate exists in the array.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> [3,4,5,1,2] \n<strong>Output:</strong> 1\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> [4,5,6,7,0,1,2]\n<strong>Output:</strong> 0\n</pre>\n"
    },
    {
        "id": "1138",
        "title": "Alphabet Board Path",
        "slug": "alphabet-board-path",
        "difficulty": "Medium",
        "likes": 59,
        "dislikes": 33,
        "hints": [
            "Create a hashmap from letter to position on the board.",
            "Now for each letter, try moving there in steps, where at each step you check if it is inside the boundaries of the board."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Hash Table",
            "String"
        ],
        "content": "<p>On an alphabet board, we start at position <code>(0, 0)</code>, corresponding to character&nbsp;<code>board[0][0]</code>.</p>\n\n<p>Here, <code>board = [&quot;abcde&quot;, &quot;fghij&quot;, &quot;klmno&quot;, &quot;pqrst&quot;, &quot;uvwxy&quot;, &quot;z&quot;]</code>, as shown in the diagram below.</p>\n\n<p><img alt=\"\" src=\"./img/alphabet-board-path_1.png\" style=\"width: 250px; height: 317px;\" /></p>\n\n<p>We may make the following moves:</p>\n\n<ul>\n\t<li><code>&#39;U&#39;</code> moves our position up one row, if the position exists on the board;</li>\n\t<li><code>&#39;D&#39;</code> moves our position down one row, if the position exists on the board;</li>\n\t<li><code>&#39;L&#39;</code> moves our position left one column, if the position exists on the board;</li>\n\t<li><code>&#39;R&#39;</code> moves our position right one column, if the position exists on the board;</li>\n\t<li><code>&#39;!&#39;</code>&nbsp;adds the character <code>board[r][c]</code> at our current position <code>(r, c)</code>&nbsp;to the&nbsp;answer.</li>\n</ul>\n\n<p>(Here, the only positions that exist on the board are positions with letters on them.)</p>\n\n<p>Return a sequence of moves that makes our answer equal to <code>target</code>&nbsp;in the minimum number of moves.&nbsp; You may return any path that does so.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> target = \"leet\"\n<strong>Output:</strong> \"DDR!UURRR!!DDD!\"\n</pre><p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> target = \"code\"\n<strong>Output:</strong> \"RR!DDRR!UUL!R!\"\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= target.length &lt;= 100</code></li>\n\t<li><code>target</code> consists only of English lowercase letters.</li>\n</ul>"
    },
    {
        "id": "741",
        "title": "Cherry Pickup",
        "slug": "cherry-pickup",
        "difficulty": "Hard",
        "likes": 502,
        "dislikes": 39,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Minimum Path Sum\", \"titleSlug\": \"minimum-path-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Dungeon Game\", \"titleSlug\": \"dungeon-game\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "311",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>In a N x N <code>grid</code> representing a field of cherries, each cell is one of three possible integers.</p>\n\n<p>&nbsp;</p>\n\n<ul>\n\t<li>0 means the cell is empty, so you can pass through;</li>\n\t<li>1 means the cell contains a cherry, that you can pick up and pass through;</li>\n\t<li>-1 means the cell contains a thorn that blocks your way.</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p>Your task is to collect maximum number of cherries possible by following the rules below:</p>\n\n<p>&nbsp;</p>\n\n<ul>\n\t<li>Starting at the position (0, 0) and reaching (N-1, N-1) by moving right or down through valid path cells (cells with value 0 or 1);</li>\n\t<li>After reaching (N-1, N-1), returning to (0, 0) by moving left or up through valid path cells;</li>\n\t<li>When passing through a path cell containing a cherry, you pick it up and the cell becomes an empty cell (0);</li>\n\t<li>If there is no valid path between (0, 0) and (N-1, N-1), then no cherries can be collected.</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> grid =\n[[0, 1, -1],\n [1, 0, -1],\n [1, 1,  1]]\n<b>Output:</b> 5\n<b>Explanation:</b> \nThe player started at (0, 0) and went down, down, right right to reach (2, 2).\n4 cherries were picked up during this single trip, and the matrix becomes [[0,1,-1],[0,0,-1],[0,0,0]].\nThen, the player went left, up, up, left to return home, picking up one more cherry.\nThe total number of cherries picked up is 5, and this is the maximum possible.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b></p>\n\n<ul>\n\t<li><code>grid</code> is an <code>N</code> by <code>N</code> 2D array, with <code>1 &lt;= N &lt;= 50</code>.</li>\n\t<li>Each <code>grid[i][j]</code> is an integer in the set <code>{-1, 0, 1}</code>.</li>\n\t<li>It is guaranteed that grid[0][0] and grid[N-1][N-1] are not -1.</li>\n\t<li>\n\t<p>&nbsp;</p>\n\t</li>\n</ul>\n"
    },
    {
        "id": "1170",
        "title": "Compare Strings by Frequency of the Smallest Character",
        "slug": "compare-strings-by-frequency-of-the-smallest-character",
        "difficulty": "Easy",
        "likes": 35,
        "dislikes": 64,
        "hints": [
            "For each string from words calculate the leading count and store it in an array, then sort the integer array.",
            "For each string from queries calculate the leading count \"p\" and in base of the sorted array calculated on the step 1 do a binary search to count the number of items greater than \"p\"."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Array",
            "String"
        ],
        "content": "<p>Let&#39;s define a function <code>f(s)</code> over a non-empty string <code>s</code>, which calculates the frequency of the smallest character in <code>s</code>. For example,&nbsp;if <code>s = &quot;dcce&quot;</code> then <code>f(s) = 2</code> because the smallest character is <code>&quot;c&quot;</code> and its frequency is 2.</p>\n\n<p>Now, given string arrays <code>queries</code>&nbsp;and <code>words</code>, return an integer array <code>answer</code>, where each <code>answer[i]</code>&nbsp;is the number of words such that <code>f(queries[i])</code>&nbsp;&lt; <code>f(W)</code>, where <code>W</code>&nbsp;is a word in <code>words</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> queries = [&quot;cbd&quot;], words = [&quot;zaaaz&quot;]\n<strong>Output:</strong> [1]\n<strong>Explanation:</strong> On the first query we have f(&quot;cbd&quot;) = 1, f(&quot;zaaaz&quot;) = 3 so f(&quot;cbd&quot;) &lt; f(&quot;zaaaz&quot;).\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> queries = [&quot;bbb&quot;,&quot;cc&quot;], words = [&quot;a&quot;,&quot;aa&quot;,&quot;aaa&quot;,&quot;aaaa&quot;]\n<strong>Output:</strong> [1,2]\n<strong>Explanation:</strong> On the first query only f(&quot;bbb&quot;) &lt; f(&quot;aaaa&quot;). On the second query both f(&quot;aaa&quot;) and f(&quot;aaaa&quot;) are both &gt; f(&quot;cc&quot;).\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= queries.length &lt;= 2000</code></li>\n\t<li><code>1 &lt;= words.length &lt;= 2000</code></li>\n\t<li><code>1 &lt;= queries[i].length, words[i].length &lt;= 10</code></li>\n\t<li><code>queries[i][j]</code>, <code>words[i][j]</code> are English lowercase letters.</li>\n</ul>\n"
    },
    {
        "id": "31",
        "title": "Next Permutation",
        "slug": "next-permutation",
        "difficulty": "Medium",
        "likes": 2144,
        "dislikes": 689,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Permutations\", \"titleSlug\": \"permutations\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Permutations II\", \"titleSlug\": \"permutations-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Permutation Sequence\", \"titleSlug\": \"permutation-sequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Palindrome Permutation II\", \"titleSlug\": \"palindrome-permutation-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "58",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array"
        ],
        "content": "<p>Implement <strong>next permutation</strong>, which rearranges numbers into the lexicographically next greater permutation of numbers.</p>\n\n<p>If such arrangement is not possible, it must rearrange it as the lowest possible order (ie, sorted in ascending order).</p>\n\n<p>The replacement must be <strong><a href=\"http://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\">in-place</a></strong> and use only constant&nbsp;extra memory.</p>\n\n<p>Here are some examples. Inputs are in the left-hand column and its corresponding outputs are in the right-hand column.</p>\n\n<p><code>1,2,3</code> &rarr; <code>1,3,2</code><br />\n<code>3,2,1</code> &rarr; <code>1,2,3</code><br />\n<code>1,1,5</code> &rarr; <code>1,5,1</code></p>\n"
    },
    {
        "id": "151",
        "title": "Reverse Words in a String",
        "slug": "reverse-words-in-a-string",
        "difficulty": "Medium",
        "likes": 638,
        "dislikes": 2405,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Reverse Words in a String II\", \"titleSlug\": \"reverse-words-in-a-string-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "String"
        ],
        "content": "<p>Given an input string, reverse the string word by word.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> &quot;<code>the sky is blue</code>&quot;\n<strong>Output:&nbsp;</strong>&quot;<code>blue is sky the</code>&quot;\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> &quot; &nbsp;hello world! &nbsp;&quot;\n<strong>Output:&nbsp;</strong>&quot;world! hello&quot;\n<strong>Explanation:</strong> Your reversed string should not contain leading or trailing spaces.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> &quot;a good &nbsp; example&quot;\n<strong>Output:&nbsp;</strong>&quot;example good a&quot;\n<strong>Explanation:</strong> You need to reduce multiple spaces between two words to a single space in the reversed string.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>A word is defined as a sequence of non-space characters.</li>\n\t<li>Input string may contain leading or trailing spaces. However, your reversed string should not contain leading or trailing spaces.</li>\n\t<li>You need to reduce multiple spaces between two words to a single space in the reversed string.</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>Follow up:</strong></p>\n\n<p>For C programmers, try to solve it <em>in-place</em> in <em>O</em>(1) extra space.</p>"
    },
    {
        "id": "171",
        "title": "Excel Sheet Column Number",
        "slug": "excel-sheet-column-number",
        "difficulty": "Easy",
        "likes": 617,
        "dislikes": 118,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Excel Sheet Column Title\", \"titleSlug\": \"excel-sheet-column-title\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Math"
        ],
        "content": "<p>Given a column title as appear in an Excel sheet, return its corresponding column number.</p>\n\n<p>For example:</p>\n\n<pre>\n    A -&gt; 1\n    B -&gt; 2\n    C -&gt; 3\n    ...\n    Z -&gt; 26\n    AA -&gt; 27\n    AB -&gt; 28 \n    ...\n</pre>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> &quot;A&quot;\n<strong>Output:</strong> 1\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>&quot;AB&quot;\n<strong>Output:</strong> 28\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>&quot;ZY&quot;\n<strong>Output:</strong> 701\n</pre>"
    },
    {
        "id": "992",
        "title": "Subarrays with K Different Integers",
        "slug": "subarrays-with-k-different-integers",
        "difficulty": "Hard",
        "likes": 413,
        "dislikes": 8,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Longest Substring Without Repeating Characters\", \"titleSlug\": \"longest-substring-without-repeating-characters\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Longest Substring with At Most Two Distinct Characters\", \"titleSlug\": \"longest-substring-with-at-most-two-distinct-characters\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Longest Substring with At Most K Distinct Characters\", \"titleSlug\": \"longest-substring-with-at-most-k-distinct-characters\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "689",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Hash Table",
            "Two Pointers",
            "Sliding Window"
        ],
        "content": "<p>Given an array <code>A</code> of positive integers, call a (contiguous, not necessarily distinct) subarray of <code>A</code> <em>good</em> if the number of different integers in that subarray is exactly <code>K</code>.</p>\n\n<p>(For example, <code>[1,2,3,1,2]</code> has <code>3</code> different integers: <code>1</code>, <code>2</code>, and <code>3</code>.)</p>\n\n<p>Return the number of good subarrays of <code>A</code>.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-1-1\">[1,2,1,2,3]</span>, K = <span id=\"example-input-1-2\">2</span>\n<strong>Output: </strong><span id=\"example-output-1\">7</span>\n<strong>Explanation: </strong>Subarrays formed with exactly 2 different integers: [1,2], [2,1], [1,2], [2,3], [1,2,1], [2,1,2], [1,2,1,2].\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-2-1\">[1,2,1,3,4]</span>, K = <span id=\"example-input-2-2\">3</span>\n<strong>Output: </strong><span id=\"example-output-2\">3</span>\n<strong>Explanation: </strong>Subarrays formed with exactly 3 different integers: [1,2,1,3], [2,1,3], [1,3,4].\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 20000</code></li>\n\t<li><code>1 &lt;= A[i] &lt;= A.length</code></li>\n\t<li><code>1 &lt;= K &lt;= A.length</code></li>\n</ol>"
    },
    {
        "id": "461",
        "title": "Hamming Distance",
        "slug": "hamming-distance",
        "difficulty": "Easy",
        "likes": 1388,
        "dislikes": 130,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Number of 1 Bits\", \"titleSlug\": \"number-of-1-bits\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Total Hamming Distance\", \"titleSlug\": \"total-hamming-distance\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Bit Manipulation"
        ],
        "content": "<p>The <a href=\"https://en.wikipedia.org/wiki/Hamming_distance\" target=\"_blank\">Hamming distance</a> between two integers is the number of positions at which the corresponding bits are different.</p>\n\n<p>Given two integers <code>x</code> and <code>y</code>, calculate the Hamming distance.</p>\n\n<p><b>Note:</b><br />\n0 &le; <code>x</code>, <code>y</code> &lt; 2<sup>31</sup>.\n</p>\n\n<p><b>Example:</b>\n<pre>\n<b>Input:</b> x = 1, y = 4\n\n<b>Output:</b> 2\n\n<b>Explanation:</b>\n1   (0 0 0 1)\n4   (0 1 0 0)\n       &uarr;   &uarr;\n\nThe above arrows point to positions where the corresponding bits are different.\n</pre>\n</p>"
    },
    {
        "id": "888",
        "title": "Fair Candy Swap",
        "slug": "fair-candy-swap",
        "difficulty": "Easy",
        "likes": 345,
        "dislikes": 88,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "532",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array"
        ],
        "content": "<p>Alice and Bob have candy bars of different sizes: <code>A[i]</code> is the size of the <code>i</code>-th bar of candy that Alice has, and <code>B[j]</code> is the size of the <code>j</code>-th bar of candy that Bob has.</p>\n\n<p>Since they are friends, they would like to exchange one candy bar each so that after the exchange, they both have the same total&nbsp;amount of candy.&nbsp; (<em>The total amount of candy&nbsp;a person has is the sum of the sizes of candy&nbsp;bars they have.</em>)</p>\n\n<p>Return an integer array <code>ans</code>&nbsp;where <code>ans[0]</code> is the size of the candy bar that Alice must exchange, and <code>ans[1]</code> is the size of the candy bar that Bob must exchange.</p>\n\n<p>If there are multiple answers, you may return any one of them.&nbsp; It is guaranteed an answer exists.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-1-1\">[1,1]</span>, B = <span id=\"example-input-1-2\">[2,2]</span>\n<strong>Output: </strong><span id=\"example-output-1\">[1,2]</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-2-1\">[1,2]</span>, B = <span id=\"example-input-2-2\">[2,3]</span>\n<strong>Output: </strong><span id=\"example-output-2\">[1,2]</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-3-1\">[2]</span>, B = <span id=\"example-input-3-2\">[1,3]</span>\n<strong>Output: </strong><span id=\"example-output-3\">[2,3]</span>\n</pre>\n\n<div>\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-4-1\">[1,2,5]</span>, B = <span id=\"example-input-4-2\">[2,4]</span>\n<strong>Output: </strong><span id=\"example-output-4\">[5,4]</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong><span>Note:</span></strong></p>\n\n<ul>\n\t<li><span><code>1 &lt;= A.length &lt;= 10000</code></span></li>\n\t<li><span><code>1 &lt;= B.length &lt;= 10000</code></span></li>\n\t<li><code><span>1 &lt;= A[i] &lt;= 100000</span></code></li>\n\t<li><code><span>1 &lt;= B[i] &lt;= 100000</span></code></li>\n\t<li>It is guaranteed that Alice and Bob have different total amounts of&nbsp;candy.</li>\n\t<li>It is guaranteed there exists an&nbsp;answer.</li>\n</ul>\n</div>\n</div>\n</div>\n</div>\n"
    },
    {
        "id": "508",
        "title": "Most Frequent Subtree Sum",
        "slug": "most-frequent-subtree-sum",
        "difficulty": "Medium",
        "likes": 429,
        "dislikes": 86,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Subtree of Another Tree\", \"titleSlug\": \"subtree-of-another-tree\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Hash Table",
            "Tree"
        ],
        "content": "<p>\nGiven the root of a tree, you are asked to find the most frequent subtree sum. The subtree sum of a node is defined as the sum of all the node values formed by the subtree rooted at that node (including the node itself). So what is the most frequent subtree sum value? If there is a tie, return all the values with the highest frequency in any order.\n</p>\n\n<p><b>Examples 1</b><br>\nInput:\n<pre>\n  5\n /  \\\n2   -3\n</pre>\nreturn [2, -3, 4], since all the values happen only once, return all of them in any order.\n</p>\n\n<p><b>Examples 2</b><br>\nInput:\n<pre>\n  5\n /  \\\n2   -5\n</pre>\nreturn [2], since 2 happens twice, however -5 only occur once.\n</p>\n\n<p><b>Note:</b>\nYou may assume the sum of values in any subtree is in the range of 32-bit signed integer.\n</p>"
    },
    {
        "id": "637",
        "title": "Average of Levels in Binary Tree",
        "slug": "average-of-levels-in-binary-tree",
        "difficulty": "Easy",
        "likes": 879,
        "dislikes": 128,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Binary Tree Level Order Traversal\", \"titleSlug\": \"binary-tree-level-order-traversal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Binary Tree Level Order Traversal II\", \"titleSlug\": \"binary-tree-level-order-traversal-ii\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "197",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree"
        ],
        "content": "Given a non-empty binary tree, return the average value of the nodes on each level in the form of an array.\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b>\n    3\n   / \\\n  9  20\n    /  \\\n   15   7\n<b>Output:</b> [3, 14.5, 11]\n<b>Explanation:</b>\nThe average value of nodes on level 0 is 3,  on level 1 is 14.5, and on level 2 is 11. Hence return [3, 14.5, 11].\n</pre>\n</p>\n\n<p><b>Note:</b><br>\n<ol>\n<li>The range of node's value is in the range of 32-bit signed integer.</li>\n</ol>\n</p>"
    },
    {
        "id": "131",
        "title": "Palindrome Partitioning",
        "slug": "palindrome-partitioning",
        "difficulty": "Medium",
        "likes": 1105,
        "dislikes": 45,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Palindrome Partitioning II\", \"titleSlug\": \"palindrome-partitioning-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Backtracking"
        ],
        "content": "<p>Given a string <em>s</em>, partition <em>s</em> such that every substring of the partition is a palindrome.</p>\n\n<p>Return all possible palindrome partitioning of <em>s</em>.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input:</strong>&nbsp;&quot;aab&quot;\n<strong>Output:</strong>\n[\n  [&quot;aa&quot;,&quot;b&quot;],\n  [&quot;a&quot;,&quot;a&quot;,&quot;b&quot;]\n]\n</pre>\n"
    },
    {
        "id": "721",
        "title": "Accounts Merge",
        "slug": "accounts-merge",
        "difficulty": "Medium",
        "likes": 754,
        "dislikes": 202,
        "hints": [
            "For every pair of emails in the same account, draw an edge between those emails.  The problem is about enumerating the connected components of this graph."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Redundant Connection\", \"titleSlug\": \"redundant-connection\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Sentence Similarity\", \"titleSlug\": \"sentence-similarity\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Sentence Similarity II\", \"titleSlug\": \"sentence-similarity-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "286",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Depth-first Search",
            "Union Find"
        ],
        "content": "<p>Given a list <code>accounts</code>, each element <code>accounts[i]</code> is a list of strings, where the first element <code>accounts[i][0]</code> is a <i>name</i>, and the rest of the elements are <i>emails</i> representing emails of the account.</p>\n\n<p>Now, we would like to merge these accounts.  Two accounts definitely belong to the same person if there is some email that is common to both accounts.  Note that even if two accounts have the same name, they may belong to different people as people could have the same name.  A person can have any number of accounts initially, but all of their accounts definitely have the same name.</p>\n\n<p>After merging the accounts, return the accounts in the following format: the first element of each account is the name, and the rest of the elements are emails <b>in sorted order</b>.  The accounts themselves can be returned in any order.</p>\n\n<p><b>Example 1:</b><br />\n<pre style=\"white-space: pre-wrap\">\n<b>Input:</b> \naccounts = [[\"John\", \"johnsmith@mail.com\", \"john00@mail.com\"], [\"John\", \"johnnybravo@mail.com\"], [\"John\", \"johnsmith@mail.com\", \"john_newyork@mail.com\"], [\"Mary\", \"mary@mail.com\"]]\n<b>Output:</b> [[\"John\", 'john00@mail.com', 'john_newyork@mail.com', 'johnsmith@mail.com'],  [\"John\", \"johnnybravo@mail.com\"], [\"Mary\", \"mary@mail.com\"]]\n<b>Explanation:</b> \nThe first and third John's are the same person as they have the common email \"johnsmith@mail.com\".\nThe second John and Mary are different people as none of their email addresses are used by other accounts.\nWe could return these lists in any order, for example the answer [['Mary', 'mary@mail.com'], ['John', 'johnnybravo@mail.com'], \n['John', 'john00@mail.com', 'john_newyork@mail.com', 'johnsmith@mail.com']] would still be accepted.\n</pre>\n</p>\n\n<p><b>Note:</b>\n<li>The length of <code>accounts</code> will be in the range <code>[1, 1000]</code>.</li>\n<li>The length of <code>accounts[i]</code> will be in the range <code>[1, 10]</code>.</li>\n<li>The length of <code>accounts[i][j]</code> will be in the range <code>[1, 30]</code>.</li>\n</p>"
    },
    {
        "id": "127",
        "title": "Word Ladder",
        "slug": "word-ladder",
        "difficulty": "Medium",
        "likes": 1783,
        "dislikes": 887,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Word Ladder II\", \"titleSlug\": \"word-ladder-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Minimum Genetic Mutation\", \"titleSlug\": \"minimum-genetic-mutation\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "699",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Breadth-first Search"
        ],
        "content": "<p>Given two words (<em>beginWord</em> and <em>endWord</em>), and a dictionary&#39;s word list, find the length of shortest transformation sequence from <em>beginWord</em> to <em>endWord</em>, such that:</p>\n\n<ol>\n\t<li>Only one letter can be changed at a time.</li>\n\t<li>Each transformed word must exist in the word list. Note that <em>beginWord</em> is <em>not</em> a transformed word.</li>\n</ol>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>Return 0 if there is no such transformation sequence.</li>\n\t<li>All words have the same length.</li>\n\t<li>All words contain only lowercase alphabetic characters.</li>\n\t<li>You may assume no duplicates in the word list.</li>\n\t<li>You may assume <em>beginWord</em> and <em>endWord</em> are non-empty and are not the same.</li>\n</ul>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong>\nbeginWord = &quot;hit&quot;,\nendWord = &quot;cog&quot;,\nwordList = [&quot;hot&quot;,&quot;dot&quot;,&quot;dog&quot;,&quot;lot&quot;,&quot;log&quot;,&quot;cog&quot;]\n\n<strong>Output: </strong>5\n\n<strong>Explanation:</strong> As one shortest transformation is &quot;hit&quot; -&gt; &quot;hot&quot; -&gt; &quot;dot&quot; -&gt; &quot;dog&quot; -&gt; &quot;cog&quot;,\nreturn its length 5.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong>\nbeginWord = &quot;hit&quot;\nendWord = &quot;cog&quot;\nwordList = [&quot;hot&quot;,&quot;dot&quot;,&quot;dog&quot;,&quot;lot&quot;,&quot;log&quot;]\n\n<strong>Output:</strong>&nbsp;0\n\n<strong>Explanation:</strong>&nbsp;The endWord &quot;cog&quot; is not in wordList, therefore no possible<strong>&nbsp;</strong>transformation.\n</pre>\n\n<ul>\n</ul>\n"
    },
    {
        "id": "214",
        "title": "Shortest Palindrome",
        "slug": "shortest-palindrome",
        "difficulty": "Hard",
        "likes": 741,
        "dislikes": 88,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Longest Palindromic Substring\", \"titleSlug\": \"longest-palindromic-substring\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Implement strStr()\", \"titleSlug\": \"implement-strstr\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Palindrome Pairs\", \"titleSlug\": \"palindrome-pairs\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "174",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String"
        ],
        "content": "<p>Given a string <em><b>s</b></em>, you are allowed to convert it to a palindrome by adding characters in front of it. Find and return the shortest palindrome you can find by performing this transformation.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><code>&quot;aacecaaa&quot;</code>\n<strong>Output:</strong> <code>&quot;aaacecaaa&quot;</code>\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><code>&quot;abcd&quot;</code>\n<strong>Output:</strong> <code>&quot;dcbabcd&quot;</code></pre>"
    },
    {
        "id": "49",
        "title": "Group Anagrams",
        "slug": "group-anagrams",
        "difficulty": "Medium",
        "likes": 1989,
        "dislikes": 127,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Valid Anagram\", \"titleSlug\": \"valid-anagram\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Group Shifted Strings\", \"titleSlug\": \"group-shifted-strings\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "236",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Hash Table",
            "String"
        ],
        "content": "<p>Given an array of strings, group anagrams together.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input:</strong> <code>[&quot;eat&quot;, &quot;tea&quot;, &quot;tan&quot;, &quot;ate&quot;, &quot;nat&quot;, &quot;bat&quot;]</code>,\n<strong>Output:</strong>\n[\n  [&quot;ate&quot;,&quot;eat&quot;,&quot;tea&quot;],\n  [&quot;nat&quot;,&quot;tan&quot;],\n  [&quot;bat&quot;]\n]</pre>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>All inputs will be in lowercase.</li>\n\t<li>The order of your output does not&nbsp;matter.</li>\n</ul>\n"
    },
    {
        "id": "939",
        "title": "Minimum Area Rectangle",
        "slug": "minimum-area-rectangle",
        "difficulty": "Medium",
        "likes": 329,
        "dislikes": 63,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "612",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Hash Table"
        ],
        "content": "<p>Given a set of points in the xy-plane, determine the minimum area of a rectangle formed from these points, with sides parallel to the x and y axes.</p>\n\n<p>If there isn&#39;t any rectangle, return 0.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[[1,1],[1,3],[3,1],[3,3],[2,2]]</span>\n<strong>Output: </strong><span id=\"example-output-1\">4</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[[1,1],[1,3],[3,1],[3,3],[4,1],[4,3]]</span>\n<strong>Output: </strong><span id=\"example-output-2\">2</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note</strong>:</p>\n\n<ol>\n\t<li><code>1 &lt;= points.length &lt;= 500</code></li>\n\t<li><code>0 &lt;=&nbsp;points[i][0] &lt;=&nbsp;40000</code></li>\n\t<li><code>0 &lt;=&nbsp;points[i][1] &lt;=&nbsp;40000</code></li>\n\t<li>All points are distinct.</li>\n</ol>\n</div>\n</div>"
    },
    {
        "id": "1006",
        "title": "Clumsy Factorial",
        "slug": "clumsy-factorial",
        "difficulty": "Medium",
        "likes": 48,
        "dislikes": 100,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Math"
        ],
        "content": "<p>Normally, the factorial of a positive integer <code>n</code>&nbsp;is the product of all positive integers less than or equal to <code>n</code>.&nbsp; For example, <code>factorial(10) = 10 * 9 * 8 * 7 * 6 * 5 * 4 * 3 * 2 * 1</code>.</p>\n\n<p>We instead make a <em>clumsy factorial:</em>&nbsp;using the integers in decreasing order, we&nbsp;swap out the multiply operations for a fixed rotation of operations:&nbsp;multiply (*), divide (/), add (+) and subtract (-) in this order.</p>\n\n<p>For example, <code>clumsy(10) = 10 * 9 / 8 + 7 - 6 * 5 / 4 + 3 - 2 * 1</code>.&nbsp; However, these operations are still applied using the usual order of operations of arithmetic: we do all multiplication and division steps before any addition or subtraction steps, and multiplication and division steps are processed left to right.</p>\n\n<p>Additionally, the division that we use is <em>floor division</em>&nbsp;such that&nbsp;<code>10 * 9 / 8</code>&nbsp;equals&nbsp;<code>11</code>.&nbsp; This guarantees the result is&nbsp;an integer.</p>\n\n<p><code><font face=\"sans-serif, Arial, Verdana, Trebuchet MS\">Implement the&nbsp;</font>clumsy</code>&nbsp;function&nbsp;as defined above: given an integer <code>N</code>, it returns the clumsy factorial of <code>N</code>.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>4\n<strong>Output:</strong>&nbsp;7\n<strong>Explanation:</strong> 7 = 4 * 3 / 2 + 1\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">10\n</span><strong>Output: </strong><span id=\"example-output-1\">12\n</span><strong>Explanation: </strong>12 = 10 * 9 / 8 + 7 - 6 * 5 / 4 + 3 - 2 * 1\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= N &lt;= 10000</code></li>\n\t<li><code>-2^31 &lt;= answer &lt;= 2^31 - 1</code>&nbsp; (The answer is guaranteed to fit within a 32-bit integer.)</li>\n</ol>\n"
    },
    {
        "id": "1036",
        "title": "Escape a Large Maze",
        "slug": "escape-a-large-maze",
        "difficulty": "Hard",
        "likes": 109,
        "dislikes": 72,
        "hints": [
            "If we become stuck, there's either a loop around the source or around the target.",
            "If there is a loop around say, the source, what is the maximum number of squares it can have?"
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Breadth-first Search"
        ],
        "content": "<p>In a 1 million by 1 million grid, the coordinates of each grid square are <code>(x, y)</code> with <code>0 &lt;= x, y &lt; 10^6</code>.</p>\n\n<p>We start at the <code>source</code> square and want to reach the <code>target</code> square.&nbsp; Each move, we can walk to a 4-directionally adjacent square in the grid that isn&#39;t in the given list of <code>blocked</code> squares.</p>\n\n<p>Return <code>true</code> if and only if it is possible to reach the target square through a sequence of moves.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>blocked = <span id=\"example-input-1-1\">[[0,1],[1,0]]</span>, source = <span id=\"example-input-1-2\">[0,0]</span>, target = <span id=\"example-input-1-3\">[0,2]</span>\n<strong>Output: </strong><span id=\"example-output-1\">false</span>\n<strong>Explanation: </strong>\nThe target square is inaccessible starting from the source square, because we can&#39;t walk outside the grid.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>blocked = <span id=\"example-input-2-1\">[]</span>, source = <span id=\"example-input-2-2\">[0,0]</span>, target = <span id=\"example-input-2-3\">[999999,999999]</span>\n<strong>Output: </strong><span id=\"example-output-2\">true</span>\n<strong>Explanation: </strong>\nBecause there are no blocked cells, it&#39;s possible to reach the target square.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>0 &lt;= blocked.length &lt;= 200</code></li>\n\t<li><code>blocked[i].length == 2</code></li>\n\t<li><code>0 &lt;= blocked[i][j] &lt; 10^6</code></li>\n\t<li><code>source.length == target.length == 2</code></li>\n\t<li><code>0 &lt;= source[i][j], target[i][j] &lt; 10^6</code></li>\n\t<li><code>source != target</code></li>\n</ol>\n"
    },
    {
        "id": "290",
        "title": "Word Pattern",
        "slug": "word-pattern",
        "difficulty": "Easy",
        "likes": 733,
        "dislikes": 94,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Isomorphic Strings\", \"titleSlug\": \"isomorphic-strings\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Word Pattern II\", \"titleSlug\": \"word-pattern-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Hash Table"
        ],
        "content": "<p>Given a <code>pattern</code> and a string <code>str</code>, find if <code>str</code> follows the same pattern.</p>\n\n<p>Here <b>follow</b> means a full match, such that there is a bijection between a letter in <code>pattern</code> and a <b>non-empty</b> word in <code>str</code>.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> pattern = <code>&quot;abba&quot;</code>, str = <code>&quot;dog cat cat dog&quot;</code>\n<strong>Output:</strong> true</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong>pattern = <code>&quot;abba&quot;</code>, str = <code>&quot;dog cat cat fish&quot;</code>\n<strong>Output:</strong> false</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> pattern = <code>&quot;aaaa&quot;</code>, str = <code>&quot;dog cat cat dog&quot;</code>\n<strong>Output:</strong> false</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> pattern = <code>&quot;abba&quot;</code>, str = <code>&quot;dog dog dog dog&quot;</code>\n<strong>Output:</strong> false</pre>\n\n<p><b>Notes:</b><br />\nYou may assume <code>pattern</code> contains only lowercase letters, and <code>str</code> contains lowercase letters that may be separated by a single space.</p>\n"
    },
    {
        "id": "93",
        "title": "Restore IP Addresses",
        "slug": "restore-ip-addresses",
        "difficulty": "Medium",
        "likes": 772,
        "dislikes": 321,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"IP to CIDR\", \"titleSlug\": \"ip-to-cidr\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "673",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String",
            "Backtracking"
        ],
        "content": "<p>Given a string containing only digits, restore it by returning all possible valid IP address combinations.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input:</strong> &quot;25525511135&quot;\n<strong>Output:</strong> <code>[&quot;255.255.11.135&quot;, &quot;255.255.111.35&quot;]\n</code></pre>\n"
    },
    {
        "id": "144",
        "title": "Binary Tree Preorder Traversal",
        "slug": "binary-tree-preorder-traversal",
        "difficulty": "Medium",
        "likes": 907,
        "dislikes": 45,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Binary Tree Inorder Traversal\", \"titleSlug\": \"binary-tree-inorder-traversal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Verify Preorder Sequence in Binary Search Tree\", \"titleSlug\": \"verify-preorder-sequence-in-binary-search-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"N-ary Tree Preorder Traversal\", \"titleSlug\": \"n-ary-tree-preorder-traversal\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "594",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Stack",
            "Tree"
        ],
        "content": "<p>Given a binary tree, return the <em>preorder</em> traversal of its nodes&#39; values.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input:</strong>&nbsp;<code>[1,null,2,3]</code>\n   1\n    \\\n     2\n    /\n   3\n\n<strong>Output:</strong>&nbsp;<code>[1,2,3]</code>\n</pre>\n\n<p><strong>Follow up:</strong> Recursive solution is trivial, could you do it iteratively?</p>\n"
    },
    {
        "id": "215",
        "title": "Kth Largest Element in an Array",
        "slug": "kth-largest-element-in-an-array",
        "difficulty": "Medium",
        "likes": 2368,
        "dislikes": 189,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Wiggle Sort II\", \"titleSlug\": \"wiggle-sort-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Top K Frequent Elements\", \"titleSlug\": \"top-k-frequent-elements\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Third Maximum Number\", \"titleSlug\": \"third-maximum-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Kth Largest Element in a Stream\", \"titleSlug\": \"kth-largest-element-in-a-stream\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"K Closest Points to Origin\", \"titleSlug\": \"k-closest-points-to-origin\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "660",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Divide and Conquer",
            "Heap"
        ],
        "content": "<p>Find the <strong>k</strong>th largest element in an unsorted array. Note that it is the kth largest element in the sorted order, not the kth distinct element.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> <code>[3,2,1,5,6,4] </code>and k = 2\n<strong>Output:</strong> 5\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> <code>[3,2,3,1,2,4,5,5,6] </code>and k = 4\n<strong>Output:</strong> 4</pre>\n\n<p><strong>Note: </strong><br />\nYou may assume k is always valid, 1 &le; k &le; array&#39;s length.</p>\n"
    },
    {
        "id": "963",
        "title": "Minimum Area Rectangle II",
        "slug": "minimum-area-rectangle-ii",
        "difficulty": "Medium",
        "likes": 79,
        "dislikes": 130,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "648",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math",
            "Geometry"
        ],
        "content": "<p>Given a set of points in the xy-plane, determine the minimum area of <strong>any</strong> rectangle formed from these points, with sides <strong>not necessarily parallel</strong> to the x and y axes.</p>\n\n<p>If there isn&#39;t any rectangle, return 0.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<p><img alt=\"\" src=\"./img/minimum-area-rectangle-ii_1.png\" style=\"width: 150px; height: 151px;\" /></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[[1,2],[2,1],[1,0],[0,1]]</span>\n<strong>Output: </strong><span id=\"example-output-1\">2.00000\n<strong>Explanation:</strong> </span><span>The minimum area rectangle occurs at [1,2],[2,1],[1,0],[0,1], with an area of 2.</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<p><img alt=\"\" src=\"./img/minimum-area-rectangle-ii_2.png\" style=\"width: 150px; height: 94px;\" /></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[[0,1],[2,1],[1,1],[1,0],[2,0]]</span>\n<strong>Output: </strong><span id=\"example-output-2\">1.00000\n</span><strong>Explanation:</strong> The minimum area rectangle occurs at [1,0],[1,1],[2,1],[2,0], with an area of 1.\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<p><img alt=\"\" src=\"./img/minimum-area-rectangle-ii_3.png\" style=\"width: 160px; height: 167px;\" /></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">[[0,3],[1,2],[3,1],[1,3],[2,1]]</span>\n<strong>Output: </strong><span id=\"example-output-3\">0\n</span><span><strong>Explanation:</strong> There is no possible rectangle to form from these points.</span>\n</pre>\n\n<div>\n<p><strong>Example 4:</strong></p>\n\n<p><img alt=\"\" src=\"./img/minimum-area-rectangle-ii_4.png\" style=\"width: 160px; height: 155px;\" /></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-4-1\">[[3,1],[1,1],[0,1],[2,1],[3,3],[3,2],[0,2],[2,3]]</span>\n<strong>Output: </strong><span id=\"example-output-4\">2.00000\n</span><span><strong>Explanation:</strong> The minimum area rectangle occurs at [2,1],[2,3],[3,3],[3,1], with an area of 2.</span>\n</pre>\n</div>\n\n<p>&nbsp;</p>\n</div>\n</div>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= points.length &lt;= 50</code></li>\n\t<li><code>0 &lt;=&nbsp;points[i][0] &lt;=&nbsp;40000</code></li>\n\t<li><code>0 &lt;=&nbsp;points[i][1] &lt;=&nbsp;40000</code></li>\n\t<li>All points are distinct.</li>\n\t<li>Answers within <code>10^-5</code> of the actual value will be accepted as correct.</li>\n</ol>\n"
    },
    {
        "id": "1140",
        "title": "Stone Game II",
        "slug": "stone-game-ii",
        "difficulty": "Medium",
        "likes": 116,
        "dislikes": 24,
        "hints": [
            "Use dynamic programming: the states are (i, m) for the answer of piles[i:] and that given m."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>Alex&nbsp;and Lee continue their&nbsp;games with piles of stones.&nbsp; There are a number of&nbsp;piles&nbsp;<strong>arranged in a row</strong>, and each pile has a positive integer number of stones&nbsp;<code>piles[i]</code>.&nbsp; The objective of the game is to end with the most&nbsp;stones.&nbsp;</p>\n\n<p>Alex and Lee take turns, with Alex starting first.&nbsp; Initially, <code>M = 1</code>.</p>\n\n<p>On each player&#39;s turn, that player&nbsp;can take <strong>all the stones</strong> in the <strong>first</strong> <code>X</code> remaining piles, where <code>1 &lt;= X &lt;= 2M</code>.&nbsp; Then, we set&nbsp;<code>M = max(M, X)</code>.</p>\n\n<p>The game continues until all the stones have been taken.</p>\n\n<p>Assuming Alex and Lee play optimally, return the maximum number of stones Alex can get.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> piles = [2,7,9,4,4]\n<strong>Output:</strong> 10\n<strong>Explanation:</strong>  If Alex takes one pile at the beginning, Lee takes two piles, then Alex takes 2 piles again. Alex can get 2 + 4 + 4 = 10 piles in total. If Alex takes two piles at the beginning, then Lee can take all three piles left. In this case, Alex get 2 + 7 = 9 piles in total. So we return 10 since it&#39;s larger. \n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= piles.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= piles[i]&nbsp;&lt;= 10 ^ 4</code></li>\n</ul>"
    },
    {
        "id": "273",
        "title": "Integer to English Words",
        "slug": "integer-to-english-words",
        "difficulty": "Hard",
        "likes": 623,
        "dislikes": 1737,
        "hints": [
            "Did you see a pattern in dividing the number into chunk of words? For example, 123 and 123000.",
            "Group the number by thousands (3 digits). You can write a helper function that takes a number less than 1000 and convert just that chunk to words.",
            "There are many edge cases. What are some good test cases? Does your code work with input such as 0? Or 1000010? (middle chunk is zero and should not be printed out)"
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Integer to Roman\", \"titleSlug\": \"integer-to-roman\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "627",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math",
            "String"
        ],
        "content": "<p>Convert a non-negative integer to its english words representation. Given input is guaranteed to be less than 2<sup>31</sup> - 1.</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> 123\n<b>Output:</b> &quot;One Hundred Twenty Three&quot;\n</pre>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input:</b> 12345\n<b>Output:</b> &quot;Twelve Thousand Three Hundred Forty Five&quot;</pre>\n\n<p><b>Example 3:</b></p>\n\n<pre>\n<b>Input:</b> 1234567\n<b>Output:</b> &quot;One Million Two Hundred Thirty Four Thousand Five Hundred Sixty Seven&quot;\n</pre>\n\n<p><b>Example 4:</b></p>\n\n<pre>\n<b>Input:</b> 1234567891\n<b>Output:</b> &quot;One Billion Two Hundred Thirty Four Million Five Hundred Sixty Seven Thousand Eight Hundred Ninety One&quot;\n</pre>\n"
    },
    {
        "id": "722",
        "title": "Remove Comments",
        "slug": "remove-comments",
        "difficulty": "Medium",
        "likes": 184,
        "dislikes": 597,
        "hints": [
            "Carefully parse each line according to the following rules:\r\n\r\n* If we start a block comment and we aren't in a block, then we will skip over the next two characters and change our state to be in a block.\r\n\r\n* If we end a block comment and we are in a block, then we will skip over the next two characters and change our state to be *not* in a block.\r\n\r\n* If we start a line comment and we aren't in a block, then we will ignore the rest of the line.\r\n\r\n* If we aren't in a block comment (and it wasn't the start of a comment), we will record the character we are at.\r\n\r\n* At the end of each line, if we aren't in a block, we will record the line."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Mini Parser\", \"titleSlug\": \"mini-parser\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Ternary Expression Parser\", \"titleSlug\": \"ternary-expression-parser\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "285",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String"
        ],
        "content": "<p>Given a C++ program, remove comments from it. The program <code>source</code> is an array where <code>source[i]</code> is the <code>i</code>-th line of the source code.  This represents the result of splitting the original source code string by the newline character <code>\\n</code>.</p>\n\n<p>In C++, there are two types of comments, line comments, and block comments.</p>\n<p>\nThe string <code>//</code> denotes a line comment, which represents that it and rest of the characters to the right of it in the same line should be ignored.\n</p><p>\nThe string <code>/*</code> denotes a block comment, which represents that all characters until the next (non-overlapping) occurrence of <code>*/</code> should be ignored.  (Here, occurrences happen in reading order: line by line from left to right.)  To be clear, the string <code>/*/</code> does not yet end the block comment, as the ending would be overlapping the beginning.\n</p><p>\nThe first effective comment takes precedence over others: if the string <code>//</code> occurs in a block comment, it is ignored. Similarly, if the string <code>/*</code> occurs in a line or block comment, it is also ignored.\n</p><p>\nIf a certain line of code is empty after removing comments, you must not output that line: each string in the answer list will be non-empty.\n</p><p>\nThere will be no control characters, single quote, or double quote characters.  For example, <code>source = \"string s = \"/* Not a comment. */\";\"</code> will not be a test case.  (Also, nothing else such as defines or macros will interfere with the comments.)\n</p><p>\nIt is guaranteed that every open block comment will eventually be closed, so <code>/*</code> outside of a line or block comment always starts a new comment.\n</p><p>\nFinally, implicit newline characters can be deleted by block comments.  Please see the examples below for details.\n</p>\n\n<p>After removing the comments from the source code, return the source code in the same format.</p>\n\n<p><b>Example 1:</b><br />\n<pre style=\"white-space: pre-wrap\">\n<b>Input:</b> \nsource = [\"/*Test program */\", \"int main()\", \"{ \", \"  // variable declaration \", \"int a, b, c;\", \"/* This is a test\", \"   multiline  \", \"   comment for \", \"   testing */\", \"a = b + c;\", \"}\"]\n\nThe line by line code is visualized as below:\n/*Test program */\nint main()\n{ \n  // variable declaration \nint a, b, c;\n/* This is a test\n   multiline  \n   comment for \n   testing */\na = b + c;\n}\n\n<b>Output:</b> [\"int main()\",\"{ \",\"  \",\"int a, b, c;\",\"a = b + c;\",\"}\"]\n\nThe line by line code is visualized as below:\nint main()\n{ \n  \nint a, b, c;\na = b + c;\n}\n\n<b>Explanation:</b> \nThe string <code>/*</code> denotes a block comment, including line 1 and lines 6-9. The string <code>//</code> denotes line 4 as comments.\n</pre>\n</p>\n\n<p><b>Example 2:</b><br />\n<pre style=\"white-space: pre-wrap\">\n<b>Input:</b> \nsource = [\"a/*comment\", \"line\", \"more_comment*/b\"]\n<b>Output:</b> [\"ab\"]\n<b>Explanation:</b> The original source string is \"a/*comment<b>\\n</b>line<b>\\n</b>more_comment*/b\", where we have bolded the newline characters.  After deletion, the <i>implicit</i> newline characters are deleted, leaving the string \"ab\", which when delimited by newline characters becomes [\"ab\"].\n</pre>\n</p>\n\n<p><b>Note:</b>\n<li>The length of <code>source</code> is in the range <code>[1, 100]</code>.</li>\n<li>The length of <code>source[i]</code> is in the range <code>[0, 80]</code>.</li>\n<li>Every open block comment is eventually closed.</li>\n<li>There are no single-quote, double-quote, or control characters in the source code.</li>\n</p>"
    },
    {
        "id": "258",
        "title": "Add Digits",
        "slug": "add-digits",
        "difficulty": "Easy",
        "likes": 505,
        "dislikes": 843,
        "hints": [
            "A naive implementation of the above process is trivial. Could you come up with other methods?",
            "What are all the possible results?",
            "How do they occur, periodically or randomly?",
            "You may find this <a href=\"https://en.wikipedia.org/wiki/Digital_root\" target=\"_blank\">Wikipedia article</a> useful."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Happy Number\", \"titleSlug\": \"happy-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Sum of Digits in the Minimum Number\", \"titleSlug\": \"sum-of-digits-in-the-minimum-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Math"
        ],
        "content": "<p>Given a non-negative integer <code>num</code>, repeatedly add all its digits until the result has only one digit.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input:</strong> <code>38</code>\n<strong>Output:</strong> 2 \n<strong>Explanation: </strong>The process is like: <code>3 + 8 = 11</code>, <code>1 + 1 = 2</code>. \n&nbsp;            Since <code>2</code> has only one digit, return it.\n</pre>\n\n<p><b>Follow up:</b><br />\nCould you do it without any loop/recursion in O(1) runtime?</p>"
    },
    {
        "id": "202",
        "title": "Happy Number",
        "slug": "happy-number",
        "difficulty": "Easy",
        "likes": 1001,
        "dislikes": 264,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Linked List Cycle\", \"titleSlug\": \"linked-list-cycle\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Add Digits\", \"titleSlug\": \"add-digits\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Ugly Number\", \"titleSlug\": \"ugly-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Hash Table",
            "Math"
        ],
        "content": "<p>Write an algorithm to determine if a number is &quot;happy&quot;.</p>\n\n<p>A happy number is a number defined by the following process: Starting with any positive integer, replace the number by the sum of the squares of its digits, and repeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1. Those numbers for which this process ends in 1 are happy numbers.</p>\n\n<p><strong>Example:&nbsp;</strong></p>\n\n<pre>\n<strong>Input:</strong> 19\n<strong>Output:</strong> true\n<strong>Explanation: \n</strong>1<sup>2</sup> + 9<sup>2</sup> = 82\n8<sup>2</sup> + 2<sup>2</sup> = 68\n6<sup>2</sup> + 8<sup>2</sup> = 100\n1<sup>2</sup> + 0<sup>2</sup> + 0<sup>2</sup> = 1\n</pre>"
    },
    {
        "id": "194",
        "title": "Transpose File",
        "slug": "transpose-file",
        "difficulty": "Medium",
        "likes": 50,
        "dislikes": 142,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [],
        "content": "<p>Given a text file <code>file.txt</code>, transpose its content.</p>\n\n<p>You may assume that each row has the same number of columns and each field is separated by the <code>&#39; &#39;</code> character.</p>\n\n<p><strong>Example:</strong></p>\n\n<p>If <code>file.txt</code> has the following content:</p>\n\n<pre>\nname age\nalice 21\nryan 30\n</pre>\n\n<p>Output the following:</p>\n\n<pre>\nname alice ryan\nage 21 30\n</pre>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "959",
        "title": "Regions Cut By Slashes",
        "slug": "regions-cut-by-slashes",
        "difficulty": "Medium",
        "likes": 363,
        "dislikes": 82,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "640",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Depth-first Search",
            "Union Find",
            "Graph"
        ],
        "content": "<p>In a N x N&nbsp;<code>grid</code> composed of 1 x 1 squares, each 1 x 1 square consists of a <code>/</code>, <code>\\</code>, or blank space.&nbsp; These characters divide the square into contiguous regions.</p>\n\n<p>(Note that backslash characters are escaped, so a <code>\\</code>&nbsp;is represented as <code>&quot;\\\\&quot;</code>.)</p>\n\n<p>Return the number of regions.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<div>\n<div>\n<div>\n<div>\n<ol>\n</ol>\n</div>\n</div>\n</div>\n</div>\n</div>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:\n</strong><span id=\"example-input-1-1\">[\n&nbsp; &quot; /&quot;,\n&nbsp; &quot;/ &quot;\n]</span>\n<strong>Output: </strong><span id=\"example-output-1\">2</span>\n<strong>Explanation: </strong>The 2x2 grid is as follows:\n<img alt=\"\" src=\"./img/regions-cut-by-slashes_1.png\" style=\"width: 82px; height: 82px;\" />\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:\n</strong><span id=\"example-input-2-1\">[\n&nbsp; &quot; /&quot;,\n&nbsp; &quot;  &quot;\n]</span>\n<strong>Output: </strong><span id=\"example-output-2\">1</span>\n<strong>Explanation: </strong>The 2x2 grid is as follows:\n<img alt=\"\" src=\"./img/regions-cut-by-slashes_2.png\" style=\"width: 82px; height: 82px;\" />\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:\n</strong><span id=\"example-input-3-1\">[\n&nbsp; &quot;\\\\/&quot;,\n&nbsp; &quot;/\\\\&quot;\n]</span>\n<strong>Output: </strong><span id=\"example-output-3\">4</span>\n<strong>Explanation: </strong>(Recall that because \\ characters are escaped, &quot;\\\\/&quot; refers to \\/, and &quot;/\\\\&quot; refers to /\\.)\nThe 2x2 grid is as follows:\n<img alt=\"\" src=\"./img/regions-cut-by-slashes_3.png\" style=\"width: 82px; height: 82px;\" />\n</pre>\n\n<div>\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:\n</strong><span id=\"example-input-4-1\">[\n&nbsp; &quot;/\\\\&quot;,\n&nbsp; &quot;\\\\/&quot;\n]</span>\n<strong>Output: </strong><span id=\"example-output-4\">5</span>\n<strong>Explanation: </strong>(Recall that because \\ characters are escaped, &quot;/\\\\&quot; refers to /\\, and &quot;\\\\/&quot; refers to \\/.)\nThe 2x2 grid is as follows:\n<img alt=\"\" src=\"./img/regions-cut-by-slashes_4.png\" style=\"width: 82px; height: 82px;\" />\n</pre>\n\n<div>\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:\n</strong><span id=\"example-input-5-1\">[\n&nbsp; &quot;//&quot;,\n&nbsp; &quot;/ &quot;\n]</span>\n<strong>Output: </strong><span id=\"example-output-5\">3</span>\n<strong>Explanation: </strong>The 2x2 grid is as follows:\n<img alt=\"\" src=\"./img/regions-cut-by-slashes_5.png\" style=\"width: 82px; height: 82px;\" />\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= grid.length == grid[0].length &lt;= 30</code></li>\n\t<li><code>grid[i][j]</code> is either <code>&#39;/&#39;</code>, <code>&#39;\\&#39;</code>, or <code>&#39; &#39;</code>.</li>\n</ol>\n</div>\n</div>\n</div>\n</div>\n</div>"
    },
    {
        "id": "1029",
        "title": "Two City Scheduling",
        "slug": "two-city-scheduling",
        "difficulty": "Easy",
        "likes": 307,
        "dislikes": 36,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "726",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Greedy"
        ],
        "content": "<p>There are <code>2N</code> people a company is planning to interview. The cost of flying the <code>i</code>-th person to city <code>A</code> is <code>costs[i][0]</code>, and the cost of flying the <code>i</code>-th person to city <code>B</code> is <code>costs[i][1]</code>.</p>\n\n<p>Return the minimum cost to fly every person to a city such that exactly <code>N</code> people arrive in each city.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[[10,20],[30,200],[400,50],[30,20]]</span>\n<strong>Output: </strong><span id=\"example-output-1\">110</span>\n<strong>Explanation: </strong>\nThe first person goes to city A for a cost of 10.\nThe second person goes to city A for a cost of 30.\nThe third person goes to city B for a cost of 50.\nThe fourth person goes to city B for a cost of 20.\n\nThe total minimum cost is 10 + 30 + 50 + 20 = 110 to have half the people interviewing in each city.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= costs.length &lt;= 100</code></li>\n\t<li>It is guaranteed that <code>costs.length</code> is even.</li>\n\t<li><code>1 &lt;= costs[i][0], costs[i][1] &lt;= 1000</code></li>\n</ol>"
    },
    {
        "id": "435",
        "title": "Non-overlapping Intervals",
        "slug": "non-overlapping-intervals",
        "difficulty": "Medium",
        "likes": 567,
        "dislikes": 25,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Minimum Number of Arrows to Burst Balloons\", \"titleSlug\": \"minimum-number-of-arrows-to-burst-balloons\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "83",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Greedy"
        ],
        "content": "<p>Given a collection of intervals, find the minimum number of intervals you need to remove to make the rest of the intervals non-overlapping.</p>\n\n<ol>\n</ol>\n\n<p>&nbsp;</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> [[1,2],[2,3],[3,4],[1,3]]\n<b>Output:</b> 1\n<b>Explanation:</b> [1,3] can be removed and the rest of intervals are non-overlapping.\n</pre>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input:</b> [[1,2],[1,2],[1,2]]\n<b>Output:</b> 2\n<b>Explanation:</b> You need to remove two [1,2] to make the rest of intervals non-overlapping.\n</pre>\n\n<p><b>Example 3:</b></p>\n\n<pre>\n<b>Input:</b> [[1,2],[2,3]]\n<b>Output:</b> 0\n<b>Explanation:</b> You don&#39;t need to remove any of the intervals since they&#39;re already non-overlapping.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b></p>\n\n<ol>\n\t<li>You may assume the interval&#39;s end point is always bigger than its start point.</li>\n\t<li>Intervals like [1,2] and [2,3] have borders &quot;touching&quot; but they don&#39;t overlap each other.</li>\n</ol>\n"
    },
    {
        "id": "407",
        "title": "Trapping Rain Water II",
        "slug": "trapping-rain-water-ii",
        "difficulty": "Hard",
        "likes": 795,
        "dislikes": 23,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Trapping Rain Water\", \"titleSlug\": \"trapping-rain-water\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Heap",
            "Breadth-first Search"
        ],
        "content": "<p>Given an <code>m x n</code> matrix of positive integers representing the height of each unit cell in a 2D elevation map, compute the volume of water it is able to trap after raining.</p>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b></p>\n\n<p>Both <i>m</i> and <i>n</i> are less than 110. The height of each unit cell is greater than 0 and is less than 20,000.</p>\n\n<p>&nbsp;</p>\n\n<p><b>Example:</b></p>\n\n<pre>\nGiven the following 3x6 height map:\n[\n  [1,4,3,1,3,2],\n  [3,2,1,3,2,4],\n  [2,3,3,2,3,1]\n]\n\nReturn 4.\n</pre>\n\n<p><img src=\"./img/trapping-rain-water-ii_1.png\" style=\"width: 100%; max-width: 500px;\" /></p>\n\n<p>The above image represents the elevation map <code>[[1,4,3,1,3,2],[3,2,1,3,2,4],[2,3,3,2,3,1]]</code> before the rain.</p>\n\n<p>&nbsp;</p>\n\n<p><img src=\"./img/trapping-rain-water-ii_2.png\" style=\"width: 100%; max-width: 500px;\" /></p>\n\n<p>After the rain, water is trapped between the blocks. The total volume of water trapped is 4.</p>\n"
    },
    {
        "id": "767",
        "title": "Reorganize String",
        "slug": "reorganize-string",
        "difficulty": "Medium",
        "likes": 679,
        "dislikes": 36,
        "hints": [
            "Alternate placing the most common letters."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Rearrange String k Distance Apart\", \"titleSlug\": \"rearrange-string-k-distance-apart\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Task Scheduler\", \"titleSlug\": \"task-scheduler\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "383",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String",
            "Heap",
            "Greedy",
            "Sort"
        ],
        "content": "<p>Given a string <code>S</code>, check if the letters can be rearranged so that two characters that are adjacent to each other are not the same.</p>\n\n<p>If possible, output any possible result.&nbsp; If not possible, return the empty string.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> S = &quot;aab&quot;\n<strong>Output:</strong> &quot;aba&quot;\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> S = &quot;aaab&quot;\n<strong>Output:</strong> &quot;&quot;\n</pre>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li><code>S</code> will consist of lowercase letters and have length in range <code>[1, 500]</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "324",
        "title": "Wiggle Sort II",
        "slug": "wiggle-sort-ii",
        "difficulty": "Medium",
        "likes": 695,
        "dislikes": 389,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Sort Colors\", \"titleSlug\": \"sort-colors\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Kth Largest Element in an Array\", \"titleSlug\": \"kth-largest-element-in-an-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Wiggle Sort\", \"titleSlug\": \"wiggle-sort\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Sort"
        ],
        "content": "<p>Given an unsorted array <code>nums</code>, reorder it such that <code>nums[0] &lt; nums[1] &gt; nums[2] &lt; nums[3]...</code>.</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<strong>Input: </strong><code>nums = [1, 5, 1, 1, 6, 4]</code>\n<strong>Output: </strong>One possible answer is <code>[1, 4, 1, 5, 1, 6]</code>.</pre>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<strong>Input: </strong><code>nums = [1, 3, 2, 2, 3, 1]</code>\n<strong>Output:</strong> One possible answer is <code>[2, 3, 1, 3, 1, 2]</code>.</pre>\n\n<p><b>Note:</b><br />\nYou may assume all input has valid answer.</p>\n\n<p><b>Follow Up:</b><br />\nCan you do it in O(n) time and/or in-place with O(1) extra space?</p>"
    },
    {
        "id": "901",
        "title": "Online Stock Span",
        "slug": "online-stock-span",
        "difficulty": "Medium",
        "likes": 255,
        "dislikes": 54,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "550",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Stack"
        ],
        "content": "<p>Write a class <code>StockSpanner</code> which collects daily price quotes for some stock, and returns the <em>span</em>&nbsp;of that stock&#39;s price for the current day.</p>\n\n<p>The span of the stock&#39;s price today&nbsp;is defined as the maximum number of consecutive days (starting from today and going backwards)&nbsp;for which the price of the stock was less than or equal to today&#39;s price.</p>\n\n<p>For example, if the price of a stock over the next 7 days were <code>[100, 80, 60, 70, 60, 75, 85]</code>, then the stock spans would be <code>[1, 1, 1, 2, 1, 4, 6]</code>.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[&quot;StockSpanner&quot;,&quot;next&quot;,&quot;next&quot;,&quot;next&quot;,&quot;next&quot;,&quot;next&quot;,&quot;next&quot;,&quot;next&quot;]</span>, <span id=\"example-input-1-2\">[[],[100],[80],[60],[70],[60],[75],[85]]</span>\n<strong>Output: </strong><span id=\"example-output-1\">[null,1,1,1,2,1,4,6]</span>\n<strong>Explanation: </strong>\nFirst, S = StockSpanner() is initialized.  Then:\nS.next(100) is called and returns 1,\nS.next(80) is called and returns 1,\nS.next(60) is called and returns 1,\nS.next(70) is called and returns 2,\nS.next(60) is called and returns 1,\nS.next(75) is called and returns 4,\nS.next(85) is called and returns 6.\n\nNote that (for example) S.next(75) returned 4, because the last 4 prices\n(including today&#39;s price of 75) were less than or equal to today&#39;s price.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li>Calls to <code>StockSpanner.next(int price)</code> will have <code>1 &lt;= price &lt;= 10^5</code>.</li>\n\t<li>There will be at most <code>10000</code> calls to <code>StockSpanner.next</code>&nbsp;per test case.</li>\n\t<li>There will be at most <code>150000</code> calls to <code>StockSpanner.next</code> across all test cases.</li>\n\t<li>The total&nbsp;time limit for this problem has been reduced by 75% for&nbsp;C++, and 50% for all other languages.</li>\n</ol>\n</div>\n"
    },
    {
        "id": "648",
        "title": "Replace Words",
        "slug": "replace-words",
        "difficulty": "Medium",
        "likes": 486,
        "dislikes": 113,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Implement Trie (Prefix Tree)\", \"titleSlug\": \"implement-trie-prefix-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "324",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Hash Table",
            "Trie"
        ],
        "content": "<p>In English, we have a concept called <code>root</code>, which can be followed by some other words to form another longer word - let&#39;s call this word <code>successor</code>. For example, the root <code>an</code>, followed by <code>other</code>, which can form another word <code>another</code>.</p>\n\n<p>Now, given a dictionary consisting of many roots and a sentence. You need to replace all the <code>successor</code> in the sentence with the <code>root</code> forming it. If a <code>successor</code> has many <code>roots</code> can form it, replace it with the root with the shortest length.</p>\n\n<p>You need to output the sentence after the replacement.</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> dict = [&quot;cat&quot;, &quot;bat&quot;, &quot;rat&quot;]\nsentence = &quot;the cattle was rattled by the battery&quot;\n<b>Output:</b> &quot;the cat was rat by the bat&quot;\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b></p>\n\n<ol>\n\t<li>The input will only have lower-case letters.</li>\n\t<li>1 &lt;= dict words number &lt;= 1000</li>\n\t<li>1 &lt;= sentence words number &lt;= 1000</li>\n\t<li>1 &lt;= root length &lt;= 100</li>\n\t<li>1 &lt;= sentence words length &lt;= 1000</li>\n</ol>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "1154",
        "title": "Day of the Year",
        "slug": "day-of-the-year",
        "difficulty": "Easy",
        "likes": 37,
        "dislikes": 61,
        "hints": [
            "Have a integer array of how many days there are per month.  February gets one extra day if its a leap year.  Then, we can manually count the ordinal as day + (number of days in months before this one)."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Math"
        ],
        "content": "<p>Given a string <code>date</code> representing a <a href=\"https://en.wikipedia.org/wiki/Gregorian_calendar\" target=\"_blank\">Gregorian&nbsp;calendar</a> date formatted as <code>YYYY-MM-DD</code>, return the day number of the year.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> date = &quot;2019-01-09&quot;\n<strong>Output:</strong> 9\n<strong>Explanation:</strong> Given date is the 9th day of the year in 2019.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> date = &quot;2019-02-10&quot;\n<strong>Output:</strong> 41\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> date = &quot;2003-03-01&quot;\n<strong>Output:</strong> 60\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> date = &quot;2004-03-01&quot;\n<strong>Output:</strong> 61\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>date.length == 10</code></li>\n\t<li><code>date[4] == date[7] == &#39;-&#39;</code>, and all other <code>date[i]</code>&#39;s are digits</li>\n\t<li><code>date</code> represents a calendar date between Jan 1st, 1900 and Dec 31, 2019.</li>\n</ul>"
    },
    {
        "id": "1",
        "title": "Two Sum",
        "slug": "two-sum",
        "difficulty": "Easy",
        "likes": 11787,
        "dislikes": 406,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"3Sum\", \"titleSlug\": \"3sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"4Sum\", \"titleSlug\": \"4sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Two Sum II - Input array is sorted\", \"titleSlug\": \"two-sum-ii-input-array-is-sorted\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Two Sum III - Data structure design\", \"titleSlug\": \"two-sum-iii-data-structure-design\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Subarray Sum Equals K\", \"titleSlug\": \"subarray-sum-equals-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Two Sum IV - Input is a BST\", \"titleSlug\": \"two-sum-iv-input-is-a-bst\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Two Sum Less Than K\", \"titleSlug\": \"two-sum-less-than-k\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "7",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Hash Table"
        ],
        "content": "<p>Given an array of integers, return <strong>indices</strong> of the two numbers such that they add up to a specific target.</p>\n\n<p>You may assume that each input would have <strong><em>exactly</em></strong> one solution, and you may not use the <em>same</em> element twice.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\nGiven nums = [2, 7, 11, 15], target = 9,\n\nBecause nums[<strong>0</strong>] + nums[<strong>1</strong>] = 2 + 7 = 9,\nreturn [<strong>0</strong>, <strong>1</strong>].\n</pre>\n"
    },
    {
        "id": "1014",
        "title": "Best Sightseeing Pair",
        "slug": "best-sightseeing-pair",
        "difficulty": "Medium",
        "likes": 250,
        "dislikes": 12,
        "hints": [
            "Can you tell the best sightseeing spot in one pass (ie. as you iterate over the input?)  What should we store or keep track of as we iterate to do this?"
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Array"
        ],
        "content": "<p>Given an array <code>A</code> of positive integers, <code>A[i]</code> represents the value of the <code>i</code>-th sightseeing spot, and two&nbsp;sightseeing spots <code>i</code> and <code>j</code>&nbsp;have distance <code>j - i</code>&nbsp;between them.</p>\n\n<p>The <em>score</em>&nbsp;of a pair (<code>i &lt; j</code>) of sightseeing spots is (<code>A[i] + A[j] + i&nbsp;- j)</code> : the sum of the values of the sightseeing spots, <strong>minus</strong> the distance between them.</p>\n\n<p>Return the maximum score of a pair of sightseeing spots.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[8,1,5,2,6]</span>\n<strong>Output: </strong><span id=\"example-output-1\">11\n<strong>Explanation:</strong> i = 0, j = 2, </span><code>A[i] + A[j] + i - j = 8 + 5 + 0 - 2 = 11</code>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>2 &lt;= A.length &lt;= 50000</code></li>\n\t<li><code>1 &lt;= A[i] &lt;= 1000</code></li>\n</ol>"
    },
    {
        "id": "493",
        "title": "Reverse Pairs",
        "slug": "reverse-pairs",
        "difficulty": "Hard",
        "likes": 587,
        "dislikes": 88,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Count of Smaller Numbers After Self\", \"titleSlug\": \"count-of-smaller-numbers-after-self\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Count of Range Sum\", \"titleSlug\": \"count-of-range-sum\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "194",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Binary Search",
            "Divide and Conquer",
            "Sort",
            "Binary Indexed Tree",
            "Segment Tree"
        ],
        "content": "<p>Given an array <code>nums</code>, we call <code>(i, j)</code> an <b><i>important reverse pair</i></b> if <code>i &lt; j</code> and <code>nums[i] &gt; 2*nums[j]</code>.</p>\n\n<p>You need to return the number of important reverse pairs in the given array.</p>\n\n<p><b>Example1:</b>\n<pre>\n<b>Input</b>: [1,3,2,3,1]\n<b>Output</b>: 2\n</pre></p>\n\n<p><b>Example2:</b>\n<pre>\n<b>Input</b>: [2,4,3,5,1]\n<b>Output</b>: 3\n</pre></p>\n\n<p><b>Note:</b><br>\n<ol>\n<li>The length of the given array will not exceed <code>50,000</code>.</li>\n<li>All the numbers in the input array are in the range of 32-bit integer.</li>\n</ol>\n</p>"
    },
    {
        "id": "984",
        "title": "String Without AAA or BBB",
        "slug": "string-without-aaa-or-bbb",
        "difficulty": "Medium",
        "likes": 115,
        "dislikes": 184,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "676",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Greedy"
        ],
        "content": "<p>Given two integers <code>A</code> and <code>B</code>, return <strong>any</strong> string <code>S</code> such that:</p>\n\n<ul>\n\t<li><code>S</code> has length <code>A + B</code> and contains exactly <code>A</code> <code>&#39;a&#39;</code> letters, and exactly <code>B</code> <code>&#39;b&#39;</code> letters;</li>\n\t<li>The substring&nbsp;<code>&#39;aaa&#39;</code>&nbsp;does not occur in <code>S</code>;</li>\n\t<li>The substring <code>&#39;bbb&#39;</code> does not occur in <code>S</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-1-1\">1</span>, B = <span id=\"example-input-1-2\">2</span>\n<strong>Output: </strong><span id=\"example-output-1\">&quot;abb&quot;\n</span><strong>Explanation:</strong> &quot;abb&quot;, &quot;bab&quot; and &quot;bba&quot; are all correct answers.\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-2-1\">4</span>, B = <span id=\"example-input-2-2\">1</span>\n<strong>Output: </strong><span id=\"example-output-2\">&quot;aabaa&quot;</span></pre>\n\n<p>&nbsp;</p>\n</div>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>0 &lt;= A &lt;= 100</code></li>\n\t<li><code>0 &lt;= B &lt;= 100</code></li>\n\t<li>It is guaranteed such an <code>S</code> exists for the given <code>A</code> and <code>B</code>.</li>\n</ol>\n"
    },
    {
        "id": "196",
        "title": "Delete Duplicate Emails",
        "slug": "delete-duplicate-emails",
        "difficulty": "Easy",
        "likes": 303,
        "dislikes": 384,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "210",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [],
        "content": "<p>Write a SQL query to <strong>delete</strong> all duplicate email entries in a table named <code>Person</code>, keeping only unique emails based on its <i>smallest</i> <b>Id</b>.</p>\n\n<pre>\n+----+------------------+\n| Id | Email            |\n+----+------------------+\n| 1  | john@example.com |\n| 2  | bob@example.com  |\n| 3  | john@example.com |\n+----+------------------+\nId is the primary key column for this table.\n</pre>\n\n<p>For example, after running your query, the above <code>Person</code> table should have the following rows:</p>\n\n<pre>\n+----+------------------+\n| Id | Email            |\n+----+------------------+\n| 1  | john@example.com |\n| 2  | bob@example.com  |\n+----+------------------+\n</pre>\n\n<p><strong>Note:</strong></p>\n\n<p>Your output is the whole <code>Person</code>&nbsp;table after executing your sql. Use <code>delete</code> statement.</p>\n"
    },
    {
        "id": "1093",
        "title": "Statistics from a Large Sample",
        "slug": "statistics-from-a-large-sample",
        "difficulty": "Medium",
        "likes": 29,
        "dislikes": 146,
        "hints": [
            "The hard part is the median.  Write a helper function which finds the k-th element from the sample."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Math",
            "Two Pointers"
        ],
        "content": "<p>We sampled integers between <code>0</code> and <code>255</code>, and stored the results in an array <code>count</code>:&nbsp; <code>count[k]</code> is the number of integers we sampled equal to <code>k</code>.</p>\n\n<p>Return the minimum, maximum, mean, median, and mode of the sample respectively, as an array of <strong>floating point numbers</strong>.&nbsp; The mode is guaranteed to be unique.</p>\n\n<p><em>(Recall that the median of a sample is:</em></p>\n\n<ul>\n\t<li><em>The middle element, if the elements of the sample were sorted and the number of elements is odd;</em></li>\n\t<li><em>The average of the middle two elements, if the elements of the sample were sorted and the number of elements is even.)</em></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> count = [0,1,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\n<strong>Output:</strong> [1.00000,3.00000,2.37500,2.50000,3.00000]\n</pre><p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> count = [0,4,3,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]\n<strong>Output:</strong> [1.00000,4.00000,2.18182,2.00000,1.00000]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ol>\n\t<li><code>count.length == 256</code></li>\n\t<li><code>1 &lt;= sum(count) &lt;= 10^9</code></li>\n\t<li>The mode of the sample that count represents is unique.</li>\n\t<li>Answers within <code>10^-5</code> of the true value will be accepted as correct.</li>\n</ol>\n"
    },
    {
        "id": "553",
        "title": "Optimal Division",
        "slug": "optimal-division",
        "difficulty": "Medium",
        "likes": 131,
        "dislikes": 992,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "108",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math",
            "String"
        ],
        "content": "<p>Given a list of <b>positive integers</b>, the adjacent integers will perform the float division. For example, [2,3,4] -> 2 / 3 / 4.</p>\n\n<p>However, you can add any number of parenthesis at any position to change the priority of operations. You should find out how to add parenthesis to get the <b>maximum</b> result, and return the corresponding expression in string format. <b>Your expression should NOT contain redundant parenthesis.</b></p>\n\n<p><b>Example:</b><br />\n<pre>\n<b>Input:</b> [1000,100,10,2]\n<b>Output:</b> \"1000/(100/10/2)\"\n<b>Explanation:</b>\n1000/(100/10/2) = 1000/((100/10)/2) = 200\nHowever, the bold parenthesis in \"1000/(<b>(</b>100/10<b>)</b>/2)\" are redundant, <br/>since they don't influence the operation priority. So you should return \"1000/(100/10/2)\". \n\nOther cases:\n1000/(100/10)/2 = 50\n1000/(100/(10/2)) = 50\n1000/100/10/2 = 0.5\n1000/100/(10/2) = 2\n</pre>\n</p>\n\n<p><b>Note:</b>\n<ol>\n<li>The length of the input array is [1, 10].</li>\n<li>Elements in the given array will be in range [2, 1000].</li>\n<li>There is only one optimal division for each test case.</li>\n</ol>\n</p>"
    },
    {
        "id": "889",
        "title": "Construct Binary Tree from Preorder and Postorder Traversal",
        "slug": "construct-binary-tree-from-preorder-and-postorder-traversal",
        "difficulty": "Medium",
        "likes": 458,
        "dislikes": 29,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "533",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree"
        ],
        "content": "<p>Return any binary tree that matches the given preorder and postorder traversals.</p>\n\n<p>Values in the traversals&nbsp;<code>pre</code> and <code>post</code>&nbsp;are distinct&nbsp;positive integers.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>pre = <span id=\"example-input-1-1\">[1,2,4,5,3,6,7]</span>, post = <span id=\"example-input-1-2\">[4,5,2,6,7,3,1]</span>\n<strong>Output: </strong><span id=\"example-output-1\">[1,2,3,4,5,6,7]</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong><span>Note:</span></strong></p>\n\n<ul>\n\t<li><code>1 &lt;= pre.length == post.length &lt;= 30</code></li>\n\t<li><code>pre[]</code> and <code>post[]</code>&nbsp;are both permutations of <code>1, 2, ..., pre.length</code>.</li>\n\t<li>It is guaranteed an answer exists. If there exists multiple answers, you can return any of them.</li>\n</ul>\n</div>\n"
    },
    {
        "id": "315",
        "title": "Count of Smaller Numbers After Self",
        "slug": "count-of-smaller-numbers-after-self",
        "difficulty": "Hard",
        "likes": 1352,
        "dislikes": 62,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Count of Range Sum\", \"titleSlug\": \"count-of-range-sum\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Queue Reconstruction by Height\", \"titleSlug\": \"queue-reconstruction-by-height\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Reverse Pairs\", \"titleSlug\": \"reverse-pairs\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Binary Search",
            "Divide and Conquer",
            "Sort",
            "Binary Indexed Tree",
            "Segment Tree"
        ],
        "content": "<p>You are given an integer array <i>nums</i> and you have to return a new <i>counts</i> array. The <i>counts</i> array has the property where <code>counts[i]</code> is the number of smaller elements to the right of <code>nums[i]</code>.</p>\n\n<p><b>Example:</b></p>\n\n<pre>\n<strong>Input:</strong> [5,2,6,1]\n<strong>Output:</strong> <code>[2,1,1,0] \n<strong>Explanation:</strong></code>\nTo the right of 5 there are <b>2</b> smaller elements (2 and 1).\nTo the right of 2 there is only <b>1</b> smaller element (1).\nTo the right of 6 there is <b>1</b> smaller element (1).\nTo the right of 1 there is <b>0</b> smaller element.\n</pre>"
    },
    {
        "id": "839",
        "title": "Similar String Groups",
        "slug": "similar-string-groups",
        "difficulty": "Hard",
        "likes": 184,
        "dislikes": 63,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "471",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Depth-first Search",
            "Union Find",
            "Graph"
        ],
        "content": "<p>Two strings <code>X</code>&nbsp;and <code>Y</code>&nbsp;are similar if we can swap two letters (in different positions) of <code>X</code>, so that&nbsp;it equals <code>Y</code>.</p>\n\n<p>For example, <code>&quot;tars&quot;</code>&nbsp;and <code>&quot;rats&quot;</code>&nbsp;are similar (swapping at positions <code>0</code> and <code>2</code>), and <code>&quot;rats&quot;</code> and <code>&quot;arts&quot;</code> are similar, but <code>&quot;star&quot;</code> is not similar to <code>&quot;tars&quot;</code>, <code>&quot;rats&quot;</code>, or <code>&quot;arts&quot;</code>.</p>\n\n<p>Together, these form two connected groups by similarity: <code>{&quot;tars&quot;, &quot;rats&quot;, &quot;arts&quot;}</code> and <code>{&quot;star&quot;}</code>.&nbsp; Notice that <code>&quot;tars&quot;</code> and <code>&quot;arts&quot;</code> are in the same group even though they are not similar.&nbsp; Formally, each group is such that a word is in the group if and only if it is similar to at least one other word in the group.</p>\n\n<p>We are given a list <code>A</code> of strings.&nbsp; Every string in <code>A</code> is an anagram of every other string in <code>A</code>.&nbsp; How many groups are there?</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>[&quot;tars&quot;,&quot;rats&quot;,&quot;arts&quot;,&quot;star&quot;]\n<strong>Output: </strong>2</pre>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>A.length &lt;= 2000</code></li>\n\t<li><code>A[i].length &lt;= 1000</code></li>\n\t<li><code>A.length * A[i].length &lt;= 20000</code></li>\n\t<li>All words in <code>A</code>&nbsp;consist of lowercase letters only.</li>\n\t<li>All words in <code>A</code> have the same length and are anagrams of each other.</li>\n\t<li>The judging time limit has been increased for this question.</li>\n</ol>\n"
    },
    {
        "id": "393",
        "title": "UTF-8 Validation",
        "slug": "utf-8-validation",
        "difficulty": "Medium",
        "likes": 160,
        "dislikes": 763,
        "hints": [
            "All you have to do is follow the rules. For a given integer, obtain its binary representation in the string form and work with the rules given in the problem.",
            "An integer can either represent the start of a UTF-8 character, or a part of an existing UTF-8 character. There are two separate rules for these two scenarios in the problem.",
            "If an integer is a part of an existing UTF-8 character, simply check the 2 most significant bits of in the binary representation string. They should be <b>10</b>. If the integer represents the start of a UTF-8 character, then the first few bits would be <b>1</b> followed by a <b>0</b>. The number of initial bits (most significant) bits determines the length of the UTF-8 character. \r\n\r\n<br><br>\r\n<b>Note:</b> The array can contain multiple valid UTF-8 characters.",
            "String manipulation will work fine here. But, it is too slow. Can we instead use <b>bit manipulation</b> to do the validations instead of string manipulations?",
            "We can use bit masking to check how many initial bits are set for a given number. <b>We only need to work with the 8 least significant bits as mentioned in the problem.</b>\r\n\r\n<pre>\r\nmask = 1 << 7\r\nwhile mask & num:\r\n    n_bytes += 1\r\n    mask = mask >> 1\r\n</pre>\r\n\r\nCan you use bit-masking to perform the second validation as well i.e. checking if the most significant bit is 1 and the second most significant bit a 0?",
            "To check if the most significant bit is a 1 and the second most significant bit is a 0, we can make use of the following two masks.\r\n\r\n<pre>\r\nmask1 = 1 << 7\r\nmask2 = 1 << 6\r\n\r\nif not (num & mask1 and not (num & mask2)):\r\n    return False\r\n</pre>"
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "596",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Bit Manipulation"
        ],
        "content": "<p>A character in UTF8 can be from <b>1 to 4 bytes</b> long, subjected to the following rules:</p>\n<ol>\n<li>For 1-byte character, the first bit is a 0, followed by its unicode code.</li>\n<li>For n-bytes character, the first n-bits are all one's, the n+1 bit is 0, followed by n-1 bytes with most significant 2 bits being 10.</li>\n</ol>\n<p>This is how the UTF-8 encoding would work:</p>\n\n<pre><code>   Char. number range  |        UTF-8 octet sequence\n      (hexadecimal)    |              (binary)\n   --------------------+---------------------------------------------\n   0000 0000-0000 007F | 0xxxxxxx\n   0000 0080-0000 07FF | 110xxxxx 10xxxxxx\n   0000 0800-0000 FFFF | 1110xxxx 10xxxxxx 10xxxxxx\n   0001 0000-0010 FFFF | 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n</code></pre>\n<p>\nGiven an array of integers representing the data, return whether it is a valid utf-8 encoding.\n</p>\n<p>\n<b>Note:</b><br />\nThe input is an array of integers. Only the <b>least significant 8 bits</b> of each integer is used to store the data. This means each integer represents only 1 byte of data.\n</p>\n\n<p>\n<b>Example 1:</b>\n<pre>\ndata = [197, 130, 1], which represents the octet sequence: <b>11000101 10000010 00000001</b>.\n\nReturn <b>true</b>.\nIt is a valid utf-8 encoding for a 2-bytes character followed by a 1-byte character.\n</pre>\n</p>\n\n<p>\n<b>Example 2:</b>\n<pre>\ndata = [235, 140, 4], which represented the octet sequence: <b>11101011 10001100 00000100</b>.\n\nReturn <b>false</b>.\nThe first 3 bits are all one's and the 4th bit is 0 means it is a 3-bytes character.\nThe next byte is a continuation byte which starts with 10 and that's correct.\nBut the second continuation byte does not start with 10, so it is invalid.\n</pre>\n</p>"
    },
    {
        "id": "1033",
        "title": "Moving Stones Until Consecutive",
        "slug": "moving-stones-until-consecutive",
        "difficulty": "Easy",
        "likes": 30,
        "dislikes": 276,
        "hints": [
            "For the minimum:  We can always do it in at most 2 moves, by moving one stone next to another, then the third stone next to the other two.  When can we do it in 1 move?  0 moves?\r\n\r\nFor the maximum:  Every move, the maximum position minus the minimum position must decrease by at least 1."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Brainteaser"
        ],
        "content": "<p>Three stones are on a number line at positions <code>a</code>, <code>b</code>, and <code>c</code>.</p>\n\n<p>Each turn, you pick up a stone at an endpoint (ie., either the lowest or highest position stone), and move it to an unoccupied position between those&nbsp;endpoints.&nbsp; Formally, let&#39;s say the stones are currently at positions <code>x, y, z</code> with <code>x &lt; y &lt; z</code>.&nbsp; You pick up the stone at either position <code>x</code> or position <code>z</code>, and move that stone to an integer position <code>k</code>, with <code>x &lt; k &lt; z</code> and <code>k != y</code>.</p>\n\n<p>The game ends when you cannot make any more moves, ie. the stones are in consecutive positions.</p>\n\n<p>When the game ends, what is the minimum and maximum number of moves that you could have made?&nbsp; Return the answer as an length 2 array: <code>answer = [minimum_moves, maximum_moves]</code></p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>a = <span id=\"example-input-1-1\">1</span>, b = <span id=\"example-input-1-2\">2</span>, c = <span id=\"example-input-1-3\">5</span>\n<strong>Output: </strong><span id=\"example-output-1\">[1,2]</span>\n<strong>Explanation: </strong>Move the stone from 5 to 3, or move the stone from 5 to 4 to 3.\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>a = <span id=\"example-input-2-1\">4</span>, b = <span id=\"example-input-2-2\">3</span>, c = <span id=\"example-input-2-3\">2</span>\n<strong>Output: </strong><span id=\"example-output-2\">[0,0]</span>\n<strong>Explanation: </strong>We cannot make any moves.\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>a = <span id=\"example-input-3-1\">3</span>, b = <span id=\"example-input-3-2\">5</span>, c = <span id=\"example-input-3-3\">1</span>\n<strong>Output: </strong><span id=\"example-output-3\">[1,2]</span>\n<strong>Explanation: </strong>Move the stone from 1 to 4; or move the stone from 1 to 2 to 4.\n</pre>\n\n<p>&nbsp;</p>\n</div>\n</div>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= a &lt;= 100</code></li>\n\t<li><code>1 &lt;= b &lt;= 100</code></li>\n\t<li><code>1 &lt;= c &lt;= 100</code></li>\n\t<li><code>a != b, b != c, c != a</code></li>\n</ol>\n\n<div>\n<p>&nbsp;</p>\n\n<div>\n<div>&nbsp;</div>\n</div>\n</div>\n"
    },
    {
        "id": "632",
        "title": "Smallest Range Covering Elements from K Lists",
        "slug": "smallest-range-covering-elements-from-k-lists",
        "difficulty": "Hard",
        "likes": 759,
        "dislikes": 22,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Minimum Window Substring\", \"titleSlug\": \"minimum-window-substring\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "191",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Hash Table",
            "Two Pointers",
            "String"
        ],
        "content": "<p>You have <code>k</code> lists of sorted integers in ascending order. Find the <b>smallest</b> range that includes at least one number from each of the <code>k</code> lists.</p>\n\n<p>We define the range [a,b] is smaller than range [c,d] if <code>b-a &lt; d-c</code> or <code>a &lt; c</code> if <code>b-a == d-c</code>.</p>\n\n<p>&nbsp;</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input: </b>[[4,10,15,24,26], [0,9,12,20], [5,18,22,30]]\n<b>Output:</b> [20,24]\n<b>Explanation:</b> \nList 1: [4, 10, 15, 24,26], 24 is in range [20,24].\nList 2: [0, 9, 12, 20], 20 is in range [20,24].\nList 3: [5, 18, 22, 30], 22 is in range [20,24].\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b></p>\n\n<ol>\n\t<li>The given list may contain duplicates, so ascending order means &gt;= here.</li>\n\t<li>1 &lt;= <code>k</code> &lt;= 3500</li>\n\t<li>-10<sup>5</sup> &lt;= <code>value of elements</code> &lt;= 10<sup>5</sup>.</li>\n</ol>\n"
    },
    {
        "id": "757",
        "title": "Set Intersection Size At Least Two",
        "slug": "set-intersection-size-at-least-two",
        "difficulty": "Hard",
        "likes": 182,
        "dislikes": 16,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "365",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Greedy"
        ],
        "content": "<p>\nAn integer interval <code>[a, b]</code> (for integers <code>a < b</code>) is a set of all consecutive integers from <code>a</code> to <code>b</code>, including <code>a</code> and <code>b</code>.\n</p><p>\nFind the minimum size of a set S such that for every integer interval A in <code>intervals</code>, the intersection of S with A has size at least 2.\n</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> intervals = [[1, 3], [1, 4], [2, 5], [3, 5]]\n<b>Output:</b> 3\n<b>Explanation:</b>\nConsider the set S = {2, 3, 4}.  For each interval, there are at least 2 elements from S in the interval.\nAlso, there isn't a smaller size set that fulfills the above condition.\nThus, we output the size of this set, which is 3.\n</pre>\n</p>\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b> intervals = [[1, 2], [2, 3], [2, 4], [4, 5]]\n<b>Output:</b> 5\n<b>Explanation:</b>\nAn example of a minimum sized set is {1, 2, 3, 4, 5}.\n</pre>\n</p>\n\n<p><b>Note:</b><br><ol>\n<li><code>intervals</code> will have length in range <code>[1, 3000]</code>.</li>\n<li><code>intervals[i]</code> will have length <code>2</code>, representing some integer interval.</li>\n<li><code>intervals[i][j]</code> will be an integer in <code>[0, 10^8]</code>.</li>\n</ol></p>"
    },
    {
        "id": "696",
        "title": "Count Binary Substrings",
        "slug": "count-binary-substrings",
        "difficulty": "Easy",
        "likes": 688,
        "dislikes": 124,
        "hints": [
            "How many valid binary substrings exist in \"000111\", and how many in \"11100\"?  What about \"00011100\"?"
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Encode and Decode Strings\", \"titleSlug\": \"encode-and-decode-strings\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "261",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String"
        ],
        "content": "<p>Give a string <code>s</code>, count the number of non-empty (contiguous) substrings that have the same number of 0's and 1's, and all the 0's and all the 1's in these substrings are grouped consecutively. \n</p>\n<p>Substrings that occur multiple times are counted the number of times they occur.</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> \"00110011\"\n<b>Output:</b> 6\n<b>Explanation:</b> There are 6 substrings that have equal number of consecutive 1's and 0's: \"0011\", \"01\", \"1100\", \"10\", \"0011\", and \"01\".\n<br>Notice that some of these substrings repeat and are counted the number of times they occur.\n<br>Also, \"00110011\" is not a valid substring because <b>all</b> the 0's (and 1's) are not grouped together.\n</pre>\n</p>\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b> \"10101\"\n<b>Output:</b> 4\n<b>Explanation:</b> There are 4 substrings: \"10\", \"01\", \"10\", \"01\" that have equal number of consecutive 1's and 0's.\n</pre>\n</p>\n\n<p><b>Note:</b>\n<li><code>s.length</code> will be between 1 and 50,000.</li>\n<li><code>s</code> will only consist of \"0\" or \"1\" characters.</li>\n</p>"
    },
    {
        "id": "180",
        "title": "Consecutive Numbers",
        "slug": "consecutive-numbers",
        "difficulty": "Medium",
        "likes": 280,
        "dislikes": 67,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "216",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [],
        "content": "<p>Write a SQL query to find all numbers that appear at least three times consecutively.</p>\n\n<pre>\n+----+-----+\n| Id | Num |\n+----+-----+\n| 1  |  1  |\n| 2  |  1  |\n| 3  |  1  |\n| 4  |  2  |\n| 5  |  1  |\n| 6  |  2  |\n| 7  |  2  |\n+----+-----+\n</pre>\n\n<p>For example, given the above <code>Logs</code> table, <code>1</code> is the only number that appears consecutively for at least three times.</p>\n\n<pre>\n+-----------------+\n| ConsecutiveNums |\n+-----------------+\n| 1               |\n+-----------------+\n</pre>\n"
    },
    {
        "id": "410",
        "title": "Split Array Largest Sum",
        "slug": "split-array-largest-sum",
        "difficulty": "Hard",
        "likes": 948,
        "dislikes": 53,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "343",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Binary Search",
            "Dynamic Programming"
        ],
        "content": "<p>Given an array which consists of non-negative integers and an integer <i>m</i>, you can split the array into <i>m</i> non-empty continuous subarrays. Write an algorithm to minimize the largest sum among these <i>m</i> subarrays.\n</p>\n\n<p><b>Note:</b><br />\nIf <i>n</i> is the length of array, assume the following constraints are satisfied:\n<ul>\n<li>1 &le; <i>n</i> &le; 1000</li>\n<li>1 &le; <i>m</i> &le; min(50, <i>n</i>)</li>\n</ul>\n</p>\n\n<p><b>Examples: </b>\n<pre>\nInput:\n<b>nums</b> = [7,2,5,10,8]\n<b>m</b> = 2\n\nOutput:\n18\n\nExplanation:\nThere are four ways to split <b>nums</b> into two subarrays.\nThe best way is to split it into <b>[7,2,5]</b> and <b>[10,8]</b>,\nwhere the largest sum among the two subarrays is only 18.\n</pre>\n</p>"
    },
    {
        "id": "934",
        "title": "Shortest Bridge",
        "slug": "shortest-bridge",
        "difficulty": "Medium",
        "likes": 344,
        "dislikes": 26,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "607",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Depth-first Search",
            "Breadth-first Search"
        ],
        "content": "<p>In a given 2D binary array <code>A</code>, there are two islands.&nbsp; (An island is a 4-directionally connected group of&nbsp;<code>1</code>s not connected to any other 1s.)</p>\n\n<p>Now, we may change <code>0</code>s to <code>1</code>s so as to connect the two islands together to form 1 island.</p>\n\n<p>Return the smallest number of <code>0</code>s that must be flipped.&nbsp; (It is guaranteed that the answer is at least 1.)</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[[0,1],[1,0]]</span>\n<strong>Output: </strong>1\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[[0,1,0],[0,0,0],[0,0,1]]</span>\n<strong>Output: </strong>2\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">[[1,1,1,1,1],[1,0,0,0,1],[1,0,1,0,1],[1,0,0,0,1],[1,1,1,1,1]]</span>\n<strong>Output: </strong><span id=\"example-output-3\">1</span></pre>\n\n<p>&nbsp;</p>\n</div>\n</div>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length =&nbsp;A[0].length &lt;= 100</code></li>\n\t<li><code>A[i][j] == 0</code> or <code>A[i][j] == 1</code></li>\n</ol>\n\n<div>\n<div>\n<div>&nbsp;</div>\n</div>\n</div>"
    },
    {
        "id": "565",
        "title": "Array Nesting",
        "slug": "array-nesting",
        "difficulty": "Medium",
        "likes": 625,
        "dislikes": 83,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Nested List Weight Sum\", \"titleSlug\": \"nested-list-weight-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Flatten Nested List Iterator\", \"titleSlug\": \"flatten-nested-list-iterator\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Nested List Weight Sum II\", \"titleSlug\": \"nested-list-weight-sum-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "145",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array"
        ],
        "content": "<p>A zero-indexed array A of length N contains all integers from 0 to N-1. Find and return the longest length of set S, where S[i] = {A[i], A[A[i]], A[A[A[i]]], ... } subjected to the rule below.</p>\n\n<p>Suppose the first element in S starts with the selection of element A[i] of index = i, the next element in S should be A[A[i]], and then A[A[A[i]]]&hellip; By that analogy, we stop adding right before a duplicate element occurs in S.</p>\n\n<p>&nbsp;</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> A = [5,4,0,3,1,6,2]\n<b>Output:</b> 4\n<b>Explanation:</b> \nA[0] = 5, A[1] = 4, A[2] = 0, A[3] = 3, A[4] = 1, A[5] = 6, A[6] = 2.\n\nOne of the longest S[K]:\nS[0] = {A[0], A[5], A[6], A[2]} = {5, 6, 2, 0}\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b></p>\n\n<ol>\n\t<li>N is an integer within the range [1, 20,000].</li>\n\t<li>The elements of A are all distinct.</li>\n\t<li>Each element of A is an integer within the range [0, N-1].</li>\n</ol>\n"
    },
    {
        "id": "567",
        "title": "Permutation in String",
        "slug": "permutation-in-string",
        "difficulty": "Medium",
        "likes": 755,
        "dislikes": 42,
        "hints": [
            "Obviously, brute force will result in TLE. Think of something else.",
            "How will you check whether one string is a permutation of another string?",
            "One way is to sort the string and then compare. But, Is there a better way?",
            "If one string is a permutation of another string then they must one common metric. What is that?",
            "Both strings must have same character frequencies, if  one is permutation of another. Which data structure should be used to store frequencies?",
            "What about hash table?  An array of size 26?"
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Minimum Window Substring\", \"titleSlug\": \"minimum-window-substring\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Find All Anagrams in a String\", \"titleSlug\": \"find-all-anagrams-in-a-string\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "121",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Two Pointers",
            "Sliding Window"
        ],
        "content": "<p>Given two strings <b>s1</b> and <b>s2</b>, write a function to return true if <b>s2</b> contains the permutation of <b>s1</b>. In other words, one of the first string&#39;s permutations is the <b>substring</b> of the second string.</p>\n\n<p>&nbsp;</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input: </b>s1 = &quot;ab&quot; s2 = &quot;eidbaooo&quot;\n<b>Output: </b>True\n<b>Explanation:</b> s2 contains one permutation of s1 (&quot;ba&quot;).\n</pre>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input:</b>s1= &quot;ab&quot; s2 = &quot;eidboaoo&quot;\n<b>Output:</b> False\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b></p>\n\n<ol>\n\t<li>The input strings only contain lower case letters.</li>\n\t<li>The length of both given strings is in range [1, 10,000].</li>\n</ol>\n"
    },
    {
        "id": "218",
        "title": "The Skyline Problem",
        "slug": "the-skyline-problem",
        "difficulty": "Hard",
        "likes": 1376,
        "dislikes": 67,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Falling Squares\", \"titleSlug\": \"falling-squares\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "715",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Divide and Conquer",
            "Heap",
            "Binary Indexed Tree",
            "Segment Tree",
            "Line Sweep"
        ],
        "content": "<p>A city&#39;s skyline is the outer contour of the silhouette formed by all the buildings in that city when viewed from a distance. Now suppose you are <b>given the locations and height of all the buildings</b> as shown on a cityscape photo (Figure A), write a program to <b>output the skyline</b> formed by these buildings collectively (Figure B).</p>\n<a href=\"/static/images/problemset/skyline1.jpg\" target=\"_blank\"><img alt=\"Buildings\" src=\"https://assets.leetcode.com/uploads/2018/10/22/skyline1.png\" style=\"max-width: 45%; border-width: 0px; border-style: solid;\" /> </a> <a href=\"/static/images/problemset/skyline2.jpg\" target=\"_blank\"> <img alt=\"Skyline Contour\" src=\"./img/the-skyline-problem_1.png\" style=\"max-width: 45%; border-width: 0px; border-style: solid;\" /> </a>\n\n<p>The geometric information of each building is represented by a triplet of integers <code>[Li, Ri, Hi]</code>, where <code>Li</code> and <code>Ri</code> are the x coordinates of the left and right edge of the ith building, respectively, and <code>Hi</code> is its height. It is guaranteed that <code>0 &le; Li, Ri &le; INT_MAX</code>, <code>0 &lt; Hi &le; INT_MAX</code>, and <code>Ri - Li &gt; 0</code>. You may assume all buildings are perfect rectangles grounded on an absolutely flat surface at height 0.</p>\n\n<p>For instance, the dimensions of all buildings in Figure A are recorded as: <code>[ [2 9 10], [3 7 15], [5 12 12], [15 20 10], [19 24 8] ] </code>.</p>\n\n<p>The output is a list of &quot;<b>key points</b>&quot; (red dots in Figure B) in the format of <code>[ [x1,y1], [x2, y2], [x3, y3], ... ]</code> that uniquely defines a skyline. <b>A key point is the left endpoint of a horizontal line segment</b>. Note that the last key point, where the rightmost building ends, is merely used to mark the termination of the skyline, and always has zero height. Also, the ground in between any two adjacent buildings should be considered part of the skyline contour.</p>\n\n<p>For instance, the skyline in Figure B should be represented as:<code>[ [2 10], [3 15], [7 12], [12 0], [15 10], [20 8], [24, 0] ]</code>.</p>\n\n<p><b>Notes:</b></p>\n\n<ul>\n\t<li>The number of buildings in any input list is guaranteed to be in the range <code>[0, 10000]</code>.</li>\n\t<li>The input list is already sorted in ascending order by the left x position <code>Li</code>.</li>\n\t<li>The output list must be sorted by the x position.</li>\n\t<li>There must be no consecutive horizontal lines of equal height in the output skyline. For instance, <code>[...[2 3], [4 5], [7 5], [11 5], [12 7]...]</code> is not acceptable; the three lines of height 5 should be merged into one in the final output as such: <code>[...[2 3], [4 5], [12 7], ...]</code></li>\n</ul>\n"
    },
    {
        "id": "220",
        "title": "Contains Duplicate III",
        "slug": "contains-duplicate-iii",
        "difficulty": "Medium",
        "likes": 740,
        "dislikes": 745,
        "hints": [
            "Time complexity O(n logk)  - This will give an indication that sorting is involved for k elements.",
            "Use already existing state to evaluate next state  -  Like, a set of k sorted numbers are only needed to be tracked. When we are processing the next number in array, then we can utilize the existing sorted state and it is not necessary to sort next overlapping set of k numbers again."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Contains Duplicate\", \"titleSlug\": \"contains-duplicate\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Contains Duplicate II\", \"titleSlug\": \"contains-duplicate-ii\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "25",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Sort",
            "Ordered Map"
        ],
        "content": "<p>Given an array of integers, find out whether there are two distinct indices <i>i</i> and <i>j</i> in the array such that the <b>absolute</b> difference between <b>nums[i]</b> and <b>nums[j]</b> is at most <i>t</i> and the <b>absolute</b> difference between <i>i</i> and <i>j</i> is at most <i>k</i>.</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>nums = <span id=\"example-input-1-1\">[1,2,3,1]</span>, k = <span id=\"example-input-1-2\">3</span>, t = <span id=\"example-input-1-3\">0</span>\n<strong>Output: </strong><span id=\"example-output-1\">true</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>nums = <span id=\"example-input-2-1\">[1,0,1,1]</span>, k = <span id=\"example-input-2-2\">1</span>, t = <span id=\"example-input-2-3\">2</span>\n<strong>Output: </strong><span id=\"example-output-2\">true</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>nums = <span id=\"example-input-3-1\">[1,5,9,1,5,9]</span>, k = <span id=\"example-input-3-2\">2</span>, t = <span id=\"example-input-3-3\">3</span>\n<strong>Output: </strong><span id=\"example-output-3\">false</span>\n</pre>\n</div>\n</div>\n</div>"
    },
    {
        "id": "507",
        "title": "Perfect Number",
        "slug": "perfect-number",
        "difficulty": "Easy",
        "likes": 174,
        "dislikes": 481,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Self Dividing Numbers\", \"titleSlug\": \"self-dividing-numbers\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "95",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math"
        ],
        "content": "<p>We define the Perfect Number is a <b>positive</b> integer that is equal to the sum of all its <b>positive</b> divisors except itself. \n</p>\nNow, given an <b>integer</b> n, write a function that returns true when it is a perfect number and false when it is not.\n</p>\n\n<p><b>Example:</b><br />\n<pre>\n<b>Input:</b> 28\n<b>Output:</b> True\n<b>Explanation:</b> 28 = 1 + 2 + 4 + 7 + 14\n</pre>\n</p>\n\n<p><b>Note:</b>\nThe input number <b>n</b> will not exceed 100,000,000. (1e8)\n</p>"
    },
    {
        "id": "535",
        "title": "Encode and Decode TinyURL",
        "slug": "encode-and-decode-tinyurl",
        "difficulty": "Medium",
        "likes": 501,
        "dislikes": 1095,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "93",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Hash Table",
            "Math"
        ],
        "content": "<blockquote>Note: This is a companion problem to the <a href=\"https://leetcode.com/discuss/interview-question/system-design/\" target=\"_blank\">System Design</a> problem: <a href=\"https://leetcode.com/discuss/interview-question/124658/Design-a-URL-Shortener-(-TinyURL-)-System/\" target=\"_blank\">Design TinyURL</a>.</blockquote>\n\n<p>TinyURL is a URL shortening service where you enter a URL such as <code>https://leetcode.com/problems/design-tinyurl</code> and it returns a short URL such as <code>http://tinyurl.com/4e9iAk</code>.</p>\n\n<p>Design the <code>encode</code> and <code>decode</code> methods for the TinyURL service. There is no restriction on how your encode/decode algorithm should work. You just need to ensure that a URL can be encoded to a tiny URL and the tiny URL can be decoded to the original URL.</p>\n"
    },
    {
        "id": "450",
        "title": "Delete Node in a BST",
        "slug": "delete-node-in-a-bst",
        "difficulty": "Medium",
        "likes": 1058,
        "dislikes": 64,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Split BST\", \"titleSlug\": \"split-bst\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "722",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree"
        ],
        "content": "<p>Given a root node reference of a BST and a key, delete the node with the given key in the BST. Return the root node reference (possibly updated) of the BST.</p>\n\n<p>Basically, the deletion can be divided into two stages:\n<ol>\n<li>Search for a node to remove.</li>\n<li>If the node is found, delete the node.</li>\n</ol>\n</p>\n\n<p><b>Note:</b> Time complexity should be O(height of tree).</p>\n\n<p><b>Example:</b>\n<pre>\nroot = [5,3,6,2,4,null,7]\nkey = 3\n\n    5\n   / \\\n  3   6\n / \\   \\\n2   4   7\n\nGiven key to delete is 3. So we find the node with value 3 and delete it.\n\nOne valid answer is [5,4,6,2,null,null,7], shown in the following BST.\n\n    5\n   / \\\n  4   6\n /     \\\n2       7\n\nAnother valid answer is [5,2,6,null,4,null,7].\n\n    5\n   / \\\n  2   6\n   \\   \\\n    4   7\n</pre>\n</p>"
    },
    {
        "id": "783",
        "title": "Minimum Distance Between BST Nodes",
        "slug": "minimum-distance-between-bst-nodes",
        "difficulty": "Easy",
        "likes": 409,
        "dislikes": 116,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Binary Tree Inorder Traversal\", \"titleSlug\": \"binary-tree-inorder-traversal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "415",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree",
            "Recursion"
        ],
        "content": "<p>Given a Binary Search Tree (BST) with the root node <code>root</code>, return&nbsp;the minimum difference between the values of any two different nodes in the tree.</p>\n\n<p><strong>Example :</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [4,2,6,1,3,null,null]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong>\nNote that root is a TreeNode object, not an array.\n\nThe given tree [4,2,6,1,3,null,null] is represented by the following diagram:\n\n          4\n        /   \\\n      2      6\n     / \\    \n    1   3  \n\nwhile the minimum difference in this tree is 1, it occurs between node 1 and node 2, also between node 3 and node 2.\n</pre>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li>The size of the BST will be between 2 and&nbsp;<code>100</code>.</li>\n\t<li>The BST is always valid, each node&#39;s value is an integer, and each node&#39;s value is different.</li>\n</ol>"
    },
    {
        "id": "812",
        "title": "Largest Triangle Area",
        "slug": "largest-triangle-area",
        "difficulty": "Easy",
        "likes": 122,
        "dislikes": 775,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Largest Perimeter Triangle\", \"titleSlug\": \"largest-perimeter-triangle\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "447",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math"
        ],
        "content": "<p>You have a list of points in the plane. Return the area of the largest triangle that can be formed by any 3 of the points.</p>\n\n<pre>\n<strong>Example:</strong>\n<strong>Input:</strong> points = [[0,0],[0,1],[1,0],[0,2],[2,0]]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> \nThe five points are show in the figure below. The red triangle is the largest.\n</pre>\n\n<p><img alt=\"\" src=\"./img/largest-triangle-area_1.png\" style=\"height:328px; width:400px\" /></p>\n\n<p><strong>Notes: </strong></p>\n\n<ul>\n\t<li><code>3 &lt;= points.length &lt;= 50</code>.</li>\n\t<li>No points will be duplicated.</li>\n\t<li>&nbsp;<code>-50 &lt;= points[i][j] &lt;= 50</code>.</li>\n\t<li>Answers within&nbsp;<code>10^-6</code>&nbsp;of the true value will be accepted as correct.</li>\n</ul>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "679",
        "title": "24 Game",
        "slug": "24-game",
        "difficulty": "Hard",
        "likes": 439,
        "dislikes": 94,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "247",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Depth-first Search"
        ],
        "content": "<p>\nYou have 4 cards each containing a number from 1 to 9.  You need to judge whether they could operated through <code>*</code>, <code>/</code>, <code>+</code>, <code>-</code>, <code>(</code>, <code>)</code> to get the value of 24.\n</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> [4, 1, 8, 7]\n<b>Output:</b> True\n<b>Explanation:</b> (8-4) * (7-1) = 24\n</pre>\n</p>\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b> [1, 2, 1, 2]\n<b>Output:</b> False\n</pre>\n</p>\n\n<p><b>Note:</b><br>\n<ol>\n<li>The division operator <code>/</code> represents real division, not integer division.  For example, 4 / (1 - 2/3) = 12.</li>\n<li>Every operation done is between two numbers.  In particular, we cannot use <code>-</code> as a unary operator.  For example, with <code>[1, 1, 1, 1]</code> as input, the expression <code>-1 - 1 - 1 - 1</code> is not allowed.</li>\n<li>You cannot concatenate numbers together.  For example, if the input is <code>[1, 2, 1, 2]</code>, we cannot write this as 12 + 12.</li>\n</ol>\n</p>\n</p>"
    },
    {
        "id": "48",
        "title": "Rotate Image",
        "slug": "rotate-image",
        "difficulty": "Medium",
        "likes": 1864,
        "dislikes": 169,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "637",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array"
        ],
        "content": "<p>You are given an <em>n</em> x <em>n</em> 2D matrix representing an image.</p>\n\n<p>Rotate the image by 90 degrees (clockwise).</p>\n\n<p><strong>Note:</strong></p>\n\n<p>You have to rotate the image <a href=\"https://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\"><strong>in-place</strong></a>, which means you have to modify the input 2D matrix directly. <strong>DO NOT</strong> allocate another 2D matrix and do the rotation.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\nGiven <strong>input matrix</strong> = \n[\n  [1,2,3],\n  [4,5,6],\n  [7,8,9]\n],\n\nrotate the input matrix <strong>in-place</strong> such that it becomes:\n[\n  [7,4,1],\n  [8,5,2],\n  [9,6,3]\n]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\nGiven <strong>input matrix</strong> =\n[\n  [ 5, 1, 9,11],\n  [ 2, 4, 8,10],\n  [13, 3, 6, 7],\n  [15,14,12,16]\n], \n\nrotate the input matrix <strong>in-place</strong> such that it becomes:\n[\n  [15,13, 2, 5],\n  [14, 3, 4, 1],\n  [12, 6, 8, 9],\n  [16, 7,10,11]\n]\n</pre>\n"
    },
    {
        "id": "909",
        "title": "Snakes and Ladders",
        "slug": "snakes-and-ladders",
        "difficulty": "Medium",
        "likes": 166,
        "dislikes": 465,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "565",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Breadth-first Search"
        ],
        "content": "<p>On an N x N <code>board</code>, the numbers from <code>1</code> to <code>N*N</code> are written&nbsp;<em>boustrophedonically</em>&nbsp;<strong>starting from the bottom&nbsp;left of the board</strong>, and alternating direction each row.&nbsp; For example, for a 6 x 6 board, the numbers are written as follows:</p>\n\n<pre>\n<img alt=\"\" src=\"./img/snakes-and-ladders_1.png\" style=\"width: 254px; height: 200px;\" />\n</pre>\n\n<p>You start on square <code>1</code> of the board (which is always in the last row and&nbsp;first column).&nbsp; Each move, starting from square <code>x</code>, consists of the following:</p>\n\n<ul>\n\t<li>You choose a destination square <code>S</code> with number&nbsp;<code>x+1</code>, <code>x+2</code>, <code>x+3</code>, <code>x+4</code>, <code>x+5</code>, or <code>x+6</code>, provided this&nbsp;number is&nbsp;<code>&lt;=&nbsp;N*N</code>.\n\n\t<ul>\n\t\t<li>(This choice simulates the result of a standard 6-sided die roll: ie., there are always <strong>at most 6 destinations, regardless of the size of the board</strong>.)</li>\n\t</ul>\n\t</li>\n\t<li>If <code>S</code>&nbsp;has a snake or ladder, you move to the destination of that snake or ladder.&nbsp; Otherwise, you move to <code>S</code>.</li>\n</ul>\n\n<p>A board square on row <code>r</code> and column <code>c</code>&nbsp;has a &quot;snake or ladder&quot; if <code>board[r][c] != -1</code>.&nbsp; The destination of that snake or ladder is <code>board[r][c]</code>.</p>\n\n<p>Note that you only take a snake or ladder at most once per move: if the destination to a snake or ladder is the start of another&nbsp;snake or ladder, you do <strong>not</strong> continue moving.&nbsp; (For example, if the board is `[[4,-1],[-1,3]]`, and on the first move your destination square is `2`, then you finish your first move at&nbsp;`3`, because you do <strong>not</strong> continue moving to `4`.)</p>\n\n<p>Return the least number of moves required to reach square <font face=\"monospace\">N*N</font>.&nbsp; If it is not possible, return <code>-1</code>.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>[\n[-1,-1,-1,-1,-1,-1],\n[-1,-1,-1,-1,-1,-1],\n[-1,-1,-1,-1,-1,-1],\n[-1,35,-1,-1,13,-1],\n[-1,-1,-1,-1,-1,-1],\n[-1,15,-1,-1,-1,-1]]\n<strong>Output: </strong>4\n<strong>Explanation: </strong>\nAt the beginning, you start at square 1 [at row 5, column 0].\nYou decide to move to square 2, and must take the ladder to square 15.\nYou then decide to move to square 17 (row 3, column 5), and must take the snake to square 13.\nYou then decide to move to square 14, and must take the ladder to square 35.\nYou then decide to move to square 36, ending the game.\nIt can be shown that you need at least 4 moves to reach the N*N-th square, so the answer is 4.\n</pre>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>2 &lt;= board.length = board[0].length&nbsp;&lt;= 20</code></li>\n\t<li><code>board[i][j]</code>&nbsp;is between <code>1</code> and <code>N*N</code> or is equal to <code>-1</code>.</li>\n\t<li>The board&nbsp;square with number <code>1</code> has no snake or ladder.</li>\n\t<li>The board square with number <code>N*N</code> has no snake or ladder.</li>\n</ol>\n"
    },
    {
        "id": "181",
        "title": "Employees Earning More Than Their Managers",
        "slug": "employees-earning-more-than-their-managers",
        "difficulty": "Easy",
        "likes": 402,
        "dislikes": 46,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "215",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [],
        "content": "<p>The <code>Employee</code> table holds all employees including their managers. Every employee has an Id, and there is also a column for the manager Id.</p>\n\n<pre>\n+----+-------+--------+-----------+\n| Id | Name  | Salary | ManagerId |\n+----+-------+--------+-----------+\n| 1  | Joe   | 70000  | 3         |\n| 2  | Henry | 80000  | 4         |\n| 3  | Sam   | 60000  | NULL      |\n| 4  | Max   | 90000  | NULL      |\n+----+-------+--------+-----------+\n</pre>\n\n<p>Given the <code>Employee</code> table, write a SQL query that finds out employees who earn more than their managers. For the above table, Joe is the only employee who earns more than his manager.</p>\n\n<pre>\n+----------+\n| Employee |\n+----------+\n| Joe      |\n+----------+\n</pre>\n"
    },
    {
        "id": "165",
        "title": "Compare Version Numbers",
        "slug": "compare-version-numbers",
        "difficulty": "Medium",
        "likes": 334,
        "dislikes": 1186,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "String"
        ],
        "content": "<p>Compare two version numbers <em>version1</em> and <em>version2</em>.<br />\nIf <code><em>version1</em> &gt; <em>version2</em></code> return <code>1;</code>&nbsp;if <code><em>version1</em> &lt; <em>version2</em></code> return <code>-1;</code>otherwise return <code>0</code>.</p>\n\n<p>You may assume that the version strings are non-empty and contain only digits and the <code>.</code> character.</p>\n<p>The <code>.</code> character does not represent a decimal point and is used to separate number sequences.</p>\n<p>For instance, <code>2.5</code> is not &quot;two and a half&quot; or &quot;half way to version three&quot;, it is the fifth second-level revision of the second first-level revision.</p>\n<p>You may assume the default revision number for each level of a version number to be <code>0</code>. For example, version number <code>3.4</code> has a revision number of <code>3</code> and <code>4</code> for its first and second level revision number. Its third and fourth level revision number are both <code>0</code>.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n<pre>\n<strong>Input:</strong> <code><em>version1</em></code> = &quot;0.1&quot;, <code><em>version2</em></code> = &quot;1.1&quot;\n<strong>Output:</strong> -1</pre>\n\n<p><strong>Example 2:</strong></p>\n<pre>\n<strong>Input: </strong><code><em>version1</em></code> = &quot;1.0.1&quot;, <code><em>version2</em></code> = &quot;1&quot;\n<strong>Output:</strong> 1</pre>\n\n<p><strong>Example 3:</strong></p>\n<pre>\n<strong>Input:</strong> <code><em>version1</em></code> = &quot;7.5.2.4&quot;, <code><em>version2</em></code> = &quot;7.5.3&quot;\n<strong>Output:</strong> -1</pre>\n\n<p><strong>Example 4:</strong></p>\n<pre>\n<strong>Input:</strong> <code><em>version1</em></code> = &quot;1.01&quot;, <code><em>version2</em></code> = &quot;1.001&quot;\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> Ignoring leading zeroes, both \u201c01\u201d and \u201c001\" represent the same number \u201c1\u201d</pre>\n\n<p><strong>Example 5:</strong></p>\n<pre>\n<strong>Input:</strong> <code><em>version1</em></code> = &quot;1.0&quot;, <code><em>version2</em></code> = &quot;1.0.0&quot;\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> The first version number does not have a third level revision number, which means its third level revision number is default to \"0\"</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n<ol>\n<li>Version strings are composed of numeric strings separated by dots <code>.</code> and this numeric strings <strong>may</strong> have leading zeroes. </li>\n<li>Version strings do not start or end with dots, and they will not be two consecutive dots.</li>\n</ol>"
    },
    {
        "id": "768",
        "title": "Max Chunks To Make Sorted II",
        "slug": "max-chunks-to-make-sorted-ii",
        "difficulty": "Hard",
        "likes": 281,
        "dislikes": 10,
        "hints": [
            "Each k for which some permutation of arr[:k] is equal to sorted(arr)[:k] is where we should cut each chunk."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Max Chunks To Make Sorted\", \"titleSlug\": \"max-chunks-to-make-sorted\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "385",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array"
        ],
        "content": "<p><em>This question is the same as &quot;Max Chunks to Make Sorted&quot; except the integers of the given array are not necessarily distinct, the input array could be up to length <code>2000</code>, and the elements could be up to <code>10**8</code>.</em></p>\n\n<hr />\n\n<p>Given an array <code>arr</code> of integers (<strong>not necessarily distinct</strong>), we split the array into some number of &quot;chunks&quot; (partitions), and individually sort each chunk.&nbsp; After concatenating them,&nbsp;the result equals the sorted array.</p>\n\n<p>What is the most number of chunks we could have made?</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [5,4,3,2,1]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong>\nSplitting into two or more chunks will not return the required result.\nFor example, splitting into [5, 4], [3, 2, 1] will result in [4, 5, 1, 2, 3], which isn&#39;t sorted.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [2,1,3,4,4]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong>\nWe can split into two chunks, such as [2, 1], [3, 4, 4].\nHowever, splitting into [2, 1], [3], [4], [4] is the highest number of chunks possible.\n</pre>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li><code>arr</code> will have length in range <code>[1, 2000]</code>.</li>\n\t<li><code>arr[i]</code> will be an integer in range <code>[0, 10**8]</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "668",
        "title": "Kth Smallest Number in Multiplication Table",
        "slug": "kth-smallest-number-in-multiplication-table",
        "difficulty": "Hard",
        "likes": 351,
        "dislikes": 19,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Kth Smallest Element in a Sorted Matrix\", \"titleSlug\": \"kth-smallest-element-in-a-sorted-matrix\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find K-th Smallest Pair Distance\", \"titleSlug\": \"find-k-th-smallest-pair-distance\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"K-th Smallest Prime Fraction\", \"titleSlug\": \"k-th-smallest-prime-fraction\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "241",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Binary Search"
        ],
        "content": "<p>\nNearly every one have used the <a href=\"https://en.wikipedia.org/wiki/Multiplication_table\">Multiplication Table</a>. But could you find out the <code>k-th</code> smallest number quickly from the multiplication table?\n</p>\n\n<p>\nGiven the height <code>m</code> and the length <code>n</code> of a <code>m * n</code> Multiplication Table, and a positive integer <code>k</code>, you need to return the <code>k-th</code> smallest number in this table.\n</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> m = 3, n = 3, k = 5\n<b>Output:</b> \n<b>Explanation:</b> \nThe Multiplication Table:\n1\t2\t3\n2\t4\t6\n3\t6\t9\n\nThe 5-th smallest number is 3 (1, 2, 2, 3, 3).\n</pre>\n</p>\n\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b> m = 2, n = 3, k = 6\n<b>Output:</b> \n<b>Explanation:</b> \nThe Multiplication Table:\n1\t2\t3\n2\t4\t6\n\nThe 6-th smallest number is 6 (1, 2, 2, 3, 4, 6).\n</pre>\n</p>\n\n\n<p><b>Note:</b><br>\n<ol>\n<li>The <code>m</code> and <code>n</code> will be in the range [1, 30000].</li>\n<li>The <code>k</code> will be in the range [1, m * n]</li>\n</ol>\n</p>"
    },
    {
        "id": "745",
        "title": "Prefix and Suffix Search",
        "slug": "prefix-and-suffix-search",
        "difficulty": "Hard",
        "likes": 225,
        "dislikes": 164,
        "hints": [
            "For a word like \"test\", consider \"#test\", \"t#test\", \"st#test\", \"est#test\", \"test#test\".  Then if we have a query like prefix = \"te\", suffix = \"t\", we can find it by searching for something we've inserted starting with \"t#te\"."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Add and Search Word - Data structure design\", \"titleSlug\": \"add-and-search-word-data-structure-design\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "337",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Trie"
        ],
        "content": "<p>Given many <code>words</code>, <code>words[i]</code> has weight <code>i</code>.</p>\n\n<p>Design a class <code>WordFilter</code> that supports one function, <code>WordFilter.f(String prefix, String suffix)</code>. It will return the word with given <code>prefix</code> and <code>suffix</code> with maximum weight. If no word exists, return -1.</p>\n\n<p><b>Examples:</b></p>\n\n<pre>\n<b>Input:</b>\nWordFilter([&quot;apple&quot;])\nWordFilter.f(&quot;a&quot;, &quot;e&quot;) // returns 0\nWordFilter.f(&quot;b&quot;, &quot;&quot;) // returns -1\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b></p>\n\n<ol>\n\t<li><code>words</code> has length in range <code>[1, 15000]</code>.</li>\n\t<li>For each test case, up to <code>words.length</code> queries <code>WordFilter.f</code> may be made.</li>\n\t<li><code>words[i]</code> has length in range <code>[1, 10]</code>.</li>\n\t<li><code>prefix, suffix</code> have lengths in range <code>[0, 10]</code>.</li>\n\t<li><code>words[i]</code> and <code>prefix, suffix</code> queries consist of lowercase letters only.</li>\n</ol>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "813",
        "title": "Largest Sum of Averages",
        "slug": "largest-sum-of-averages",
        "difficulty": "Medium",
        "likes": 606,
        "dislikes": 22,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "446",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>We partition a row of numbers <code>A</code>&nbsp;into at most <code>K</code> adjacent (non-empty) groups, then our score is the sum of the average of each group. What is the largest score we can achieve?</p>\n\n<p>Note that our partition must use every number in A, and that scores are not necessarily integers.</p>\n\n<pre>\n<strong>Example:</strong>\n<strong>Input:</strong> \nA = [9,1,2,3,9]\nK = 3\n<strong>Output:</strong> 20\n<strong>Explanation:</strong> \nThe best choice is to partition A into [9], [1, 2, 3], [9]. The answer is 9 + (1 + 2 + 3) / 3 + 9 = 20.\nWe could have also partitioned A into [9, 1], [2], [3, 9], for example.\nThat partition would lead to a score of 5 + 2 + 6 = 13, which is worse.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note: </strong></p>\n\n<ul>\n\t<li><code>1 &lt;= A.length &lt;= 100</code>.</li>\n\t<li><code>1 &lt;= A[i] &lt;= 10000</code>.</li>\n\t<li><code>1 &lt;= K &lt;= A.length</code>.</li>\n\t<li>Answers within <code>10^-6</code> of the correct answer will be accepted as correct.</li>\n</ul>\n"
    },
    {
        "id": "952",
        "title": "Largest Component Size by Common Factor",
        "slug": "largest-component-size-by-common-factor",
        "difficulty": "Hard",
        "likes": 124,
        "dislikes": 32,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "629",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math",
            "Union Find"
        ],
        "content": "<p>Given a non-empty&nbsp;array of unique positive integers <code>A</code>, consider the following graph:</p>\n\n<ul>\n\t<li>There are <code>A.length</code> nodes, labelled <code>A[0]</code> to <code>A[A.length - 1];</code></li>\n\t<li>There is an edge between <code>A[i]</code> and <code>A[j]</code>&nbsp;if and only if&nbsp;<code>A[i]</code> and <code>A[j]</code> share a common factor greater than 1.</li>\n</ul>\n\n<p>Return the size of the largest connected component in the graph.</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[4,6,15,35]</span>\n<strong>Output: </strong><span id=\"example-output-1\">4</span>\n<span><img alt=\"\" src=\"./img/largest-component-size-by-common-factor_1.png\" style=\"width: 257px; height: 50px;\" /></span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[20,50,9,63]</span>\n<strong>Output: </strong><span id=\"example-output-2\">2</span>\n<span><img alt=\"\" src=\"./img/largest-component-size-by-common-factor_2.png\" style=\"width: 293px; height: 50px;\" /></span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">[2,3,6,7,4,12,21,39]</span>\n<strong>Output: </strong><span id=\"example-output-3\">8</span>\n<span><img alt=\"\" src=\"./img/largest-component-size-by-common-factor_3.png\" style=\"width: 346px; height: 180px;\" /></span>\n</pre>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 20000</code></li>\n\t<li><code>1 &lt;= A[i] &lt;= 100000</code></li>\n</ol>\n</div>\n</div>\n</div>\n"
    },
    {
        "id": "985",
        "title": "Sum of Even Numbers After Queries",
        "slug": "sum-of-even-numbers-after-queries",
        "difficulty": "Easy",
        "likes": 189,
        "dislikes": 88,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "683",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array"
        ],
        "content": "<p>We have an array <code>A</code> of integers, and an array <code>queries</code>&nbsp;of queries.</p>\n\n<p>For the <code>i</code>-th&nbsp;query <code>val =&nbsp;queries[i][0], index&nbsp;= queries[i][1]</code>, we add <font face=\"monospace\">val</font>&nbsp;to <code>A[index]</code>.&nbsp; Then, the answer to the <code>i</code>-th query is the sum of the even values of <code>A</code>.</p>\n\n<p><em>(Here, the given <code>index = queries[i][1]</code> is a 0-based index, and each query permanently modifies the array <code>A</code>.)</em></p>\n\n<p>Return the answer to all queries.&nbsp; Your <code>answer</code> array should have&nbsp;<code>answer[i]</code>&nbsp;as&nbsp;the answer to the <code>i</code>-th query.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-1-1\">[1,2,3,4]</span>, queries = <span id=\"example-input-1-2\">[[1,0],[-3,1],[-4,0],[2,3]]</span>\n<strong>Output: </strong><span id=\"example-output-1\">[8,6,2,4]</span>\n<strong>Explanation: </strong>\nAt the beginning, the array is [1,2,3,4].\nAfter adding 1 to A[0], the array is [2,2,3,4], and the sum of even values is 2 + 2 + 4 = 8.\nAfter adding -3 to A[1], the array is [2,-1,3,4], and the sum of even values is 2 + 4 = 6.\nAfter adding -4 to A[0], the array is [-2,-1,3,4], and the sum of even values is -2 + 4 = 2.\nAfter adding 2 to A[3], the array is [-2,-1,3,6], and the sum of even values is -2 + 6 = 4.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 10000</code></li>\n\t<li><code>-10000 &lt;= A[i] &lt;= 10000</code></li>\n\t<li><code>1 &lt;= queries.length &lt;= 10000</code></li>\n\t<li><code>-10000 &lt;= queries[i][0] &lt;= 10000</code></li>\n\t<li><code>0 &lt;= queries[i][1] &lt; A.length</code></li>\n</ol>\n"
    },
    {
        "id": "89",
        "title": "Gray Code",
        "slug": "gray-code",
        "difficulty": "Medium",
        "likes": 439,
        "dislikes": 1292,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"1-bit and 2-bit Characters\", \"titleSlug\": \"1-bit-and-2-bit-characters\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Backtracking"
        ],
        "content": "<p>The gray code is a binary numeral system where two successive values differ in only one bit.</p>\n\n<p>Given a non-negative integer <em>n</em> representing the total number of bits in the code, print the sequence of gray code. A gray code sequence must begin with 0.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong>&nbsp;2\n<strong>Output:</strong>&nbsp;<code>[0,1,3,2]</code>\n<strong>Explanation:</strong>\n00 - 0\n01 - 1\n11 - 3\n10 - 2\n\nFor a given&nbsp;<em>n</em>, a gray code sequence may not be uniquely defined.\nFor example, [0,2,3,1] is also a valid gray code sequence.\n\n00 - 0\n10 - 2\n11 - 3\n01 - 1\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong>&nbsp;0\n<strong>Output:</strong>&nbsp;<code>[0]\n<strong>Explanation:</strong> We define the gray code sequence to begin with 0.\n&nbsp;            A gray code sequence of <em>n</em> has size = 2<sup>n</sup>, which for <em>n</em> = 0 the size is 2<sup>0</sup> = 1.\n&nbsp;            Therefore, for <em>n</em> = 0 the gray code sequence is [0].</code>\n</pre>\n"
    },
    {
        "id": "840",
        "title": "Magic Squares In Grid",
        "slug": "magic-squares-in-grid",
        "difficulty": "Easy",
        "likes": 86,
        "dislikes": 751,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "474",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array"
        ],
        "content": "<p>A 3 x 3 magic square is a 3 x 3 grid filled with distinct numbers <strong>from 1 to 9</strong> such that each row, column, and both diagonals all have the same sum.</p>\n\n<p>Given an <code>grid</code>&nbsp;of integers, how many 3 x 3 &quot;magic square&quot; subgrids are there?&nbsp; (Each subgrid is contiguous).</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>[[4,3,8,4],\n        [9,5,1,9],\n        [2,7,6,2]]\n<strong>Output: </strong>1\n<strong>Explanation: </strong>\nThe following subgrid is a 3 x 3 magic square:\n438\n951\n276\n\nwhile this one is not:\n384\n519\n762\n\nIn total, there is only one magic square inside the given grid.\n</pre>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= grid.length&nbsp;&lt;= 10</code></li>\n\t<li><code>1 &lt;= grid[0].length&nbsp;&lt;= 10</code></li>\n\t<li><code>0 &lt;= grid[i][j] &lt;= 15</code></li>\n</ol>\n"
    },
    {
        "id": "623",
        "title": "Add One Row to Tree",
        "slug": "add-one-row-to-tree",
        "difficulty": "Medium",
        "likes": 311,
        "dislikes": 110,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "170",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree"
        ],
        "content": "<p>Given the root of a binary tree, then value <code>v</code> and depth <code>d</code>, you need to add a row of nodes with value <code>v</code> at the given depth <code>d</code>. The root node is at depth 1. </p>\n\n<p>The adding rule is: given a positive integer depth <code>d</code>, for each NOT null tree nodes <code>N</code> in depth <code>d-1</code>, create two tree nodes with value <code>v</code> as <code>N's</code> left subtree root and right subtree root. And <code>N's</code> <b>original left subtree</b> should be the left subtree of the new left subtree root, its <b>original right subtree</b> should be the right subtree of the new right subtree root. If depth <code>d</code> is 1 that means there is no depth d-1 at all, then create a tree node with value <b>v</b> as the new root of the whole original tree, and the original tree is the new root's left subtree.</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> \nA binary tree as following:\n       4\n     /   \\\n    2     6\n   / \\   / \n  3   1 5   \n\n<b>v = 1</b>\n\n<b>d = 2</b>\n\n<b>Output:</b> \n       4\n      / \\\n     1   1\n    /     \\\n   2       6\n  / \\     / \n 3   1   5   \n\n</pre>\n</p>\n\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b> \nA binary tree as following:\n      4\n     /   \n    2    \n   / \\   \n  3   1    \n\n<b>v = 1</b>\n\n<b>d = 3</b>\n\n<b>Output:</b> \n      4\n     /   \n    2\n   / \\    \n  1   1\n /     \\  \n3       1\n</pre>\n</p>\n\n<p><b>Note:</b><br>\n<ol>\n<li>The given d is in range [1, maximum depth of the given tree + 1].</li>\n<li>The given binary tree has at least one tree node.</li>\n</ol>\n</p>"
    },
    {
        "id": "195",
        "title": "Tenth Line",
        "slug": "tenth-line",
        "difficulty": "Easy",
        "likes": 128,
        "dislikes": 120,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [],
        "content": "<p>Given a text file&nbsp;<code>file.txt</code>, print&nbsp;just the 10th line of the&nbsp;file.</p>\n\n<p><strong>Example:</strong></p>\n\n<p>Assume that <code>file.txt</code> has the following content:</p>\n\n<pre>\nLine 1\nLine 2\nLine 3\nLine 4\nLine 5\nLine 6\nLine 7\nLine 8\nLine 9\nLine 10\n</pre>\n\n<p>Your script should output the tenth line, which is:</p>\n\n<pre>\nLine 10\n</pre>\n\n<div class=\"spoilers\"><b>Note:</b><br />\n1. If the file contains less than 10 lines, what should you output?<br />\n2. There&#39;s at least three different solutions. Try to explore all possibilities.</div>\n"
    },
    {
        "id": "1004",
        "title": "Max Consecutive Ones III",
        "slug": "max-consecutive-ones-iii",
        "difficulty": "Medium",
        "likes": 326,
        "dislikes": 7,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Longest Substring with At Most K Distinct Characters\", \"titleSlug\": \"longest-substring-with-at-most-k-distinct-characters\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Longest Repeating Character Replacement\", \"titleSlug\": \"longest-repeating-character-replacement\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Max Consecutive Ones\", \"titleSlug\": \"max-consecutive-ones\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Max Consecutive Ones II\", \"titleSlug\": \"max-consecutive-ones-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Two Pointers",
            "Sliding Window"
        ],
        "content": "<p>Given an array <code>A</code>&nbsp;of 0s and 1s, we may change up to <code>K</code>&nbsp;values from 0 to 1.</p>\n\n<p>Return the length of the longest (contiguous) subarray that contains only 1s.&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-1-1\">[1,1,1,0,0,0,1,1,1,1,0]</span>, K = <span id=\"example-input-1-2\">2</span>\n<strong>Output: </strong><span id=\"example-output-1\">6</span>\n<strong>Explanation: </strong>\n[1,1,1,0,0,<u><strong>1</strong>,1,1,1,1,<strong>1</strong></u>]\nBolded numbers were flipped from 0 to 1.  The longest subarray is underlined.</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-2-1\">[0,0,1,1,0,0,1,1,1,0,1,1,0,0,0,1,1,1,1]</span>, K = <span id=\"example-input-2-2\">3</span>\n<strong>Output: </strong><span id=\"example-output-2\">10</span>\n<strong>Explanation: </strong>\n[0,0,<u>1,1,<b>1</b>,<strong>1</strong>,1,1,1,<strong>1</strong>,1,1</u>,0,0,0,1,1,1,1]\nBolded numbers were flipped from 0 to 1.  The longest subarray is underlined.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong><span>Note:</span></strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 20000</code></li>\n\t<li><code>0 &lt;= K &lt;= A.length</code></li>\n\t<li><code>A[i]</code> is <code>0</code> or <code>1</code>&nbsp;</li>\n</ol>\n</div>\n</div>\n"
    },
    {
        "id": "784",
        "title": "Letter Case Permutation",
        "slug": "letter-case-permutation",
        "difficulty": "Easy",
        "likes": 746,
        "dislikes": 90,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Subsets\", \"titleSlug\": \"subsets\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Brace Expansion\", \"titleSlug\": \"brace-expansion\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "416",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Backtracking",
            "Bit Manipulation"
        ],
        "content": "<p>Given a string S, we can transform every letter individually&nbsp;to be lowercase or uppercase to create another string.&nbsp; Return a list of all possible strings we could create.</p>\n\n<pre>\n<strong>Examples:</strong>\n<strong>Input:</strong> S = &quot;a1b2&quot;\n<strong>Output:</strong> [&quot;a1b2&quot;, &quot;a1B2&quot;, &quot;A1b2&quot;, &quot;A1B2&quot;]\n\n<strong>Input:</strong> S = &quot;3z4&quot;\n<strong>Output:</strong> [&quot;3z4&quot;, &quot;3Z4&quot;]\n\n<strong>Input:</strong> S = &quot;12345&quot;\n<strong>Output:</strong> [&quot;12345&quot;]\n</pre>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li><code>S</code> will be a string with length between <code>1</code> and <code>12</code>.</li>\n\t<li><code>S</code> will consist only of letters or digits.</li>\n</ul>\n"
    },
    {
        "id": "522",
        "title": "Longest Uncommon Subsequence II",
        "slug": "longest-uncommon-subsequence-ii",
        "difficulty": "Medium",
        "likes": 118,
        "dislikes": 504,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Longest Uncommon Subsequence I \", \"titleSlug\": \"longest-uncommon-subsequence-i\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "100",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String"
        ],
        "content": "<p>\nGiven a list of strings, you need to find the longest uncommon subsequence among them. The longest uncommon subsequence is defined as the longest subsequence of one of these strings and this subsequence should not be <b>any</b> subsequence of the other strings.\n</p>\n\n<p>\nA <b>subsequence</b> is a sequence that can be derived from one sequence by deleting some characters without changing the order of the remaining elements. Trivially, any string is a subsequence of itself and an empty string is a subsequence of any string.\n</p>\n\n<p>\nThe input will be a list of strings, and the output needs to be the length of the longest uncommon subsequence. If the longest uncommon subsequence doesn't exist, return -1.\n</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> \"aba\", \"cdc\", \"eae\"\n<b>Output:</b> 3\n</pre>\n</p>\n\n<p><b>Note:</b>\n<ol>\n<li>All the given strings' lengths will not exceed 10.</li>\n<li>The length of the given list will be in the range of [2, 50].</li>\n</ol>\n</p>"
    },
    {
        "id": "590",
        "title": "N-ary Tree Postorder Traversal",
        "slug": "n-ary-tree-postorder-traversal",
        "difficulty": "Easy",
        "likes": 360,
        "dislikes": 44,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Binary Tree Postorder Traversal\", \"titleSlug\": \"binary-tree-postorder-traversal\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"N-ary Tree Level Order Traversal\", \"titleSlug\": \"n-ary-tree-level-order-traversal\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"N-ary Tree Preorder Traversal\", \"titleSlug\": \"n-ary-tree-preorder-traversal\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "595",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree"
        ],
        "content": "<p>Given an n-ary tree, return the <i>postorder</i> traversal of its nodes&#39; values.</p>\n\n<p>For example, given a <code>3-ary</code> tree:</p>\n\n<p>&nbsp;</p>\n\n<p><img src=\"./img/n-ary-tree-postorder-traversal_1.png\" style=\"width: 100%; max-width: 300px;\" /></p>\n\n<p>&nbsp;</p>\n\n<p>Return its postorder traversal as: <code>[5,6,3,2,4,1]</code>.</p>\n&nbsp;\n\n<p><b>Note:</b></p>\n\n<p>Recursive solution is trivial, could you do it iteratively?</p>\n"
    },
    {
        "id": "126",
        "title": "Word Ladder II",
        "slug": "word-ladder-ii",
        "difficulty": "Hard",
        "likes": 1145,
        "dislikes": 201,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Word Ladder\", \"titleSlug\": \"word-ladder\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Array",
            "String",
            "Backtracking",
            "Breadth-first Search"
        ],
        "content": "<p>Given two words (<em>beginWord</em> and <em>endWord</em>), and a dictionary&#39;s word list, find all shortest transformation sequence(s) from <em>beginWord</em> to <em>endWord</em>, such that:</p>\n\n<ol>\n\t<li>Only one letter can be changed at a time</li>\n\t<li>Each transformed word must exist in the word list. Note that <em>beginWord</em> is <em>not</em> a transformed word.</li>\n</ol>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>Return an empty list if there is no such transformation sequence.</li>\n\t<li>All words have the same length.</li>\n\t<li>All words contain only lowercase alphabetic characters.</li>\n\t<li>You may assume no duplicates in the word list.</li>\n\t<li>You may assume <em>beginWord</em> and <em>endWord</em> are non-empty and are not the same.</li>\n</ul>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong>\nbeginWord = &quot;hit&quot;,\nendWord = &quot;cog&quot;,\nwordList = [&quot;hot&quot;,&quot;dot&quot;,&quot;dog&quot;,&quot;lot&quot;,&quot;log&quot;,&quot;cog&quot;]\n\n<strong>Output:</strong>\n[\n  [&quot;hit&quot;,&quot;hot&quot;,&quot;dot&quot;,&quot;dog&quot;,&quot;cog&quot;],\n&nbsp; [&quot;hit&quot;,&quot;hot&quot;,&quot;lot&quot;,&quot;log&quot;,&quot;cog&quot;]\n]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong>\nbeginWord = &quot;hit&quot;\nendWord = &quot;cog&quot;\nwordList = [&quot;hot&quot;,&quot;dot&quot;,&quot;dog&quot;,&quot;lot&quot;,&quot;log&quot;]\n\n<strong>Output: </strong>[]\n\n<strong>Explanation:</strong>&nbsp;The endWord &quot;cog&quot; is not in wordList, therefore no possible<strong>&nbsp;</strong>transformation.\n</pre>\n\n<ul>\n</ul>\n"
    },
    {
        "id": "650",
        "title": "2 Keys Keyboard",
        "slug": "2-keys-keyboard",
        "difficulty": "Medium",
        "likes": 738,
        "dislikes": 49,
        "hints": [
            "How many characters may be there in the clipboard at the last step if n = 3? n = 7? n = 10? n = 24?"
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"4 Keys Keyboard\", \"titleSlug\": \"4-keys-keyboard\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Broken Calculator\", \"titleSlug\": \"broken-calculator\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "320",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>Initially on a notepad only one character &#39;A&#39; is present. You can perform two operations on this notepad for each step:</p>\n\n<ol>\n\t<li><code>Copy All</code>: You can copy all the characters present on the notepad (partial copy is not allowed).</li>\n\t<li><code>Paste</code>: You can paste the characters which are copied <b>last time</b>.</li>\n</ol>\n\n<p>&nbsp;</p>\n\n<p>Given a number <code>n</code>. You have to get <b>exactly</b> <code>n</code> &#39;A&#39; on the notepad by performing the minimum number of steps permitted. Output the minimum number of steps to get <code>n</code> &#39;A&#39;.</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> 3\n<b>Output:</b> 3\n<b>Explanation:</b>\nIntitally, we have one character &#39;A&#39;.\nIn step 1, we use <b>Copy All</b> operation.\nIn step 2, we use <b>Paste</b> operation to get &#39;AA&#39;.\nIn step 3, we use <b>Paste</b> operation to get &#39;AAA&#39;.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b></p>\n\n<ol>\n\t<li>The <code>n</code> will be in the range [1, 1000].</li>\n</ol>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "414",
        "title": "Third Maximum Number",
        "slug": "third-maximum-number",
        "difficulty": "Easy",
        "likes": 422,
        "dislikes": 784,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Kth Largest Element in an Array\", \"titleSlug\": \"kth-largest-element-in-an-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Array"
        ],
        "content": "<p>Given a <b>non-empty</b> array of integers, return the <b>third</b> maximum number in this array. If it does not exist, return the maximum number. The time complexity must be in O(n).</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> [3, 2, 1]\n\n<b>Output:</b> 1\n\n<b>Explanation:</b> The third maximum is 1.\n</pre>\n</p>\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b> [1, 2]\n\n<b>Output:</b> 2\n\n<b>Explanation:</b> The third maximum does not exist, so the maximum (2) is returned instead.\n</pre>\n</p>\n\n<p><b>Example 3:</b><br />\n<pre>\n<b>Input:</b> [2, 2, 3, 1]\n\n<b>Output:</b> 1\n\n<b>Explanation:</b> Note that the third maximum here means the third maximum distinct number.\nBoth numbers with value 2 are both considered as second maximum.\n</pre>\n</p>"
    },
    {
        "id": "1123",
        "title": "Lowest Common Ancestor of Deepest Leaves",
        "slug": "lowest-common-ancestor-of-deepest-leaves",
        "difficulty": "Medium",
        "likes": 85,
        "dislikes": 119,
        "hints": [
            "Do a postorder traversal.",
            "Then, if both subtrees contain a deepest leaf, you can mark this node as the answer (so far).",
            "The final node marked will be the correct answer."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Tree",
            "Depth-first Search"
        ],
        "content": "<p>Given a rooted binary tree, return the lowest common ancestor of its deepest leaves.</p>\n\n<p>Recall that:</p>\n\n<ul>\n\t<li>The node of a binary tree is a <em>leaf</em> if and only if it has no children</li>\n\t<li>The <em>depth</em> of the root of the tree is 0, and if the depth of a node is <code>d</code>, the depth of each of its children&nbsp;is&nbsp;<code>d+1</code>.</li>\n\t<li>The <em>lowest common ancestor</em> of a set <code>S</code> of nodes is the node <code>A</code> with the largest depth such that every node in S is in the subtree with root <code>A</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [1,2,3]\n<strong>Output:</strong> [1,2,3]\n<strong>Explanation:</strong> \nThe deepest leaves are the nodes with values 2 and 3.\nThe lowest common ancestor of these leaves is the node with value 1.\nThe answer returned is a TreeNode object (not an array) with serialization &quot;[1,2,3]&quot;.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [1,2,3,4]\n<strong>Output:</strong> [4]\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [1,2,3,4,5]\n<strong>Output:</strong> [2,4,5]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The given tree will have between 1 and 1000 nodes.</li>\n\t<li>Each node of the tree will have a distinct value between 1 and 1000.</li>\n</ul>\n"
    },
    {
        "id": "486",
        "title": "Predict the Winner",
        "slug": "predict-the-winner",
        "difficulty": "Medium",
        "likes": 1092,
        "dislikes": 72,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Can I Win\", \"titleSlug\": \"can-i-win\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "176",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming",
            "Minimax"
        ],
        "content": "<p>Given an array of scores that are non-negative integers. Player 1 picks one of the numbers from either end of the array followed by the player 2 and then player 1 and so on. Each time a player picks a number, that number will not be available for the next player. This continues until all the scores have been chosen. The player with the maximum score wins. </p>\n\n<p>Given an array of scores, predict whether player 1 is the winner. You can assume each player plays to maximize his score. </p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> [1, 5, 2]\n<b>Output:</b> False\n<b>Explanation:</b> Initially, player 1 can choose between 1 and 2. <br/>If he chooses 2 (or 1), then player 2 can choose from 1 (or 2) and 5. If player 2 chooses 5, then player 1 will be left with 1 (or 2). <br/>So, final score of player 1 is 1 + 2 = 3, and player 2 is 5. <br/>Hence, player 1 will never be the winner and you need to return False.\n</pre>\n</p>\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b> [1, 5, 233, 7]\n<b>Output:</b> True\n<b>Explanation:</b> Player 1 first chooses 1. Then player 2 have to choose between 5 and 7. No matter which number player 2 choose, player 1 can choose 233.<br />Finally, player 1 has more score (234) than player 2 (12), so you need to return True representing player1 can win.\n</pre>\n</p>\n\n<p><b>Note:</b><br>\n<ol>\n<li>1 <= length of the array <= 20. </li>\n<li>Any scores in the given array are non-negative integers and will not exceed 10,000,000.</li>\n<li>If the scores of both players are equal, then player 1 is still the winner.</li>\n</ol>\n</p>"
    },
    {
        "id": "936",
        "title": "Stamping The Sequence",
        "slug": "stamping-the-sequence",
        "difficulty": "Hard",
        "likes": 106,
        "dislikes": 30,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "608",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String",
            "Greedy"
        ],
        "content": "<p>You want to form a <code>target</code>&nbsp;string of <strong>lowercase letters</strong>.</p>\n\n<p>At the beginning, your sequence is <code>target.length</code>&nbsp;<code>&#39;?&#39;</code> marks.&nbsp; You also have a <code>stamp</code>&nbsp;of lowercase letters.</p>\n\n<p>On each turn, you may place the stamp over the sequence, and replace every letter in the sequence with the corresponding letter from the stamp.&nbsp; You can make up to <code>10 * target.length</code> turns.</p>\n\n<p>For example, if the initial sequence is <font face=\"monospace\">&quot;?????&quot;</font>, and your stamp is <code>&quot;abc&quot;</code>,&nbsp; then you may make <font face=\"monospace\">&quot;abc??&quot;, &quot;?abc?&quot;, &quot;??abc&quot;&nbsp;</font>in the first turn.&nbsp; (Note that the stamp must be fully contained in the boundaries of the sequence in order to stamp.)</p>\n\n<p>If the sequence is possible to stamp, then return an array of&nbsp;the index of the left-most letter being stamped at each turn.&nbsp; If the sequence is not possible to stamp, return an empty array.</p>\n\n<p>For example, if the sequence is <font face=\"monospace\">&quot;ababc&quot;</font>, and the stamp is <code>&quot;abc&quot;</code>, then we could return the answer <code>[0, 2]</code>, corresponding to the moves <font face=\"monospace\">&quot;?????&quot; -&gt; &quot;abc??&quot; -&gt; &quot;ababc&quot;</font>.</p>\n\n<p>Also, if the sequence is possible to stamp, it is guaranteed it is possible to stamp within <code>10 * target.length</code>&nbsp;moves.&nbsp; Any answers specifying more than this number of moves&nbsp;will not be accepted.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>stamp = <span id=\"example-input-1-1\">&quot;abc&quot;</span>, target = <span id=\"example-input-1-2\">&quot;ababc&quot;</span>\n<strong>Output: </strong><span id=\"example-output-1\">[0,2]</span>\n([1,0,2] would also be accepted as an answer, as well as some other answers.)\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>stamp = <span id=\"example-input-2-1\">&quot;</span><span id=\"example-input-2-2\">abca</span><span>&quot;</span>, target = <span id=\"example-input-2-2\">&quot;</span><span>aabcaca&quot;</span>\n<strong>Output: </strong><span id=\"example-output-2\">[3,0,1]</span>\n</pre>\n\n<div>\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n</div>\n</div>\n\n<ol>\n\t<li><code>1 &lt;= stamp.length &lt;= target.length &lt;= 1000</code></li>\n\t<li><code>stamp</code> and <code>target</code> only contain lowercase letters.</li>\n</ol>"
    },
    {
        "id": "30",
        "title": "Substring with Concatenation of All Words",
        "slug": "substring-with-concatenation-of-all-words",
        "difficulty": "Hard",
        "likes": 611,
        "dislikes": 990,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Minimum Window Substring\", \"titleSlug\": \"minimum-window-substring\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Hash Table",
            "Two Pointers",
            "String"
        ],
        "content": "<p>You are given a string, <strong>s</strong>, and a list of words, <strong>words</strong>, that are all of the same length. Find all starting indices of substring(s) in <strong>s</strong> that is a concatenation of each word in <strong>words</strong> exactly once and without any intervening characters.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:\n  s =</strong> &quot;barfoothefoobarman&quot;,\n<strong>  words = </strong>[&quot;foo&quot;,&quot;bar&quot;]\n<strong>Output:</strong> <code>[0,9]</code>\n<strong>Explanation:</strong> Substrings starting at index 0 and 9 are &quot;barfoor&quot; and &quot;foobar&quot; respectively.\nThe output order does not matter, returning [9,0] is fine too.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:\n  s =</strong> &quot;wordgoodgoodgoodbestword&quot;,\n<strong>  words = </strong>[&quot;word&quot;,&quot;good&quot;,&quot;best&quot;,&quot;word&quot;]\n<strong>Output:</strong> <code>[]</code>\n</pre>\n"
    },
    {
        "id": "1021",
        "title": "Remove Outermost Parentheses",
        "slug": "remove-outermost-parentheses",
        "difficulty": "Easy",
        "likes": 209,
        "dislikes": 306,
        "hints": [
            "Can you find the primitive decomposition?  The number of ( and ) characters must be equal."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Stack"
        ],
        "content": "<p>A valid parentheses string is either empty <code>(&quot;&quot;)</code>, <code>&quot;(&quot; + A + &quot;)&quot;</code>, or <code>A + B</code>, where <code>A</code> and <code>B</code> are valid parentheses strings, and <code>+</code> represents string concatenation.&nbsp; For example, <code>&quot;&quot;</code>, <code>&quot;()&quot;</code>, <code>&quot;(())()&quot;</code>, and <code>&quot;(()(()))&quot;</code> are all valid parentheses strings.</p>\n\n<p>A valid parentheses string <code>S</code> is <strong>primitive</strong> if it is nonempty, and there does not exist a way to split it into <code>S = A+B</code>, with <code>A</code> and <code>B</code> nonempty valid parentheses strings.</p>\n\n<p>Given a valid parentheses string <code>S</code>, consider its primitive decomposition: <code>S = P_1 + P_2 + ... + P_k</code>, where <code>P_i</code> are primitive valid parentheses strings.</p>\n\n<p>Return <code>S</code> after removing the outermost parentheses of every primitive string in the primitive decomposition of <code>S</code>.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">&quot;(()())(())&quot;</span>\n<strong>Output: </strong><span id=\"example-output-1\">&quot;()()()&quot;</span>\n<strong>Explanation: </strong>\nThe input string is &quot;(()())(())&quot;, with primitive decomposition &quot;(()())&quot; + &quot;(())&quot;.\nAfter removing outer parentheses of each part, this is &quot;()()&quot; + &quot;()&quot; = &quot;()()()&quot;.\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">&quot;(()())(())(()(()))&quot;</span>\n<strong>Output: </strong><span id=\"example-output-2\">&quot;()()()()(())&quot;</span>\n<strong>Explanation: </strong>\nThe input string is &quot;(()())(())(()(()))&quot;, with primitive decomposition &quot;(()())&quot; + &quot;(())&quot; + &quot;(()(()))&quot;.\nAfter removing outer parentheses of each part, this is &quot;()()&quot; + &quot;()&quot; + &quot;()(())&quot; = &quot;()()()()(())&quot;.\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">&quot;()()&quot;</span>\n<strong>Output: </strong><span id=\"example-output-3\">&quot;&quot;</span>\n<strong>Explanation: </strong>\nThe input string is &quot;()()&quot;, with primitive decomposition &quot;()&quot; + &quot;()&quot;.\nAfter removing outer parentheses of each part, this is &quot;&quot; + &quot;&quot; = &quot;&quot;.\n</pre>\n\n<p>&nbsp;</p>\n</div>\n</div>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>S.length &lt;= 10000</code></li>\n\t<li><code>S[i]</code> is <code>&quot;(&quot;</code> or <code>&quot;)&quot;</code></li>\n\t<li><code>S</code> is a valid parentheses string</li>\n</ol>\n\n<div>\n<div>\n<div>&nbsp;</div>\n</div>\n</div>"
    },
    {
        "id": "174",
        "title": "Dungeon Game",
        "slug": "dungeon-game",
        "difficulty": "Hard",
        "likes": 801,
        "dislikes": 19,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Unique Paths\", \"titleSlug\": \"unique-paths\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Path Sum\", \"titleSlug\": \"minimum-path-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Cherry Pickup\", \"titleSlug\": \"cherry-pickup\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Binary Search",
            "Dynamic Programming"
        ],
        "content": "<style type=\"text/css\">table.dungeon, .dungeon th, .dungeon td {\n  border:3px solid black;\n}\n\n .dungeon th, .dungeon td {\n    text-align: center;\n    height: 70px;\n    width: 70px;\n}\n</style>\n<p>The demons had captured the princess (<strong>P</strong>) and imprisoned her in the bottom-right corner of a dungeon. The dungeon consists of M x N rooms laid out in a 2D grid. Our valiant knight (<strong>K</strong>) was initially positioned in the top-left room and must fight his way through the dungeon to rescue the princess.</p>\n\n<p>The knight has an initial health point represented by a positive integer. If at any point his health point drops to 0 or below, he dies immediately.</p>\n\n<p>Some of the rooms are guarded by demons, so the knight loses health (<em>negative</em> integers) upon entering these rooms; other rooms are either empty (<em>0&#39;s</em>) or contain magic orbs that increase the knight&#39;s health (<em>positive</em> integers).</p>\n\n<p>In order to reach the princess as quickly as possible, the knight decides to move only rightward or downward in each step.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Write a function to determine the knight&#39;s minimum initial health so that he is able to rescue the princess.</strong></p>\n\n<p>For example, given the dungeon below, the initial health of the knight must be at least <strong>7</strong> if he follows the optimal path <code>RIGHT-&gt; RIGHT -&gt; DOWN -&gt; DOWN</code>.</p>\n\n<table class=\"dungeon\">\n\t<tbody>\n\t\t<tr>\n\t\t\t<td>-2 (K)</td>\n\t\t\t<td>-3</td>\n\t\t\t<td>3</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>-5</td>\n\t\t\t<td>-10</td>\n\t\t\t<td>1</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>10</td>\n\t\t\t<td>30</td>\n\t\t\t<td>-5 (P)</td>\n\t\t</tr>\n\t</tbody>\n</table>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>The knight&#39;s health has no upper bound.</li>\n\t<li>Any room can contain threats or power-ups, even the first room the knight enters and the bottom-right room where the princess is imprisoned.</li>\n</ul>\n"
    },
    {
        "id": "299",
        "title": "Bulls and Cows",
        "slug": "bulls-and-cows",
        "difficulty": "Easy",
        "likes": 387,
        "dislikes": 405,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Hash Table"
        ],
        "content": "<p>You are playing the following <a href=\"https://en.wikipedia.org/wiki/Bulls_and_Cows\" target=\"_blank\">Bulls and Cows</a> game with your friend: You write down a number and ask your friend to guess what the number is. Each time your friend makes a guess, you provide a hint that indicates how many digits in said guess match your secret number exactly in both digit and position (called &quot;bulls&quot;) and how many digits match the secret number but locate in the wrong position (called &quot;cows&quot;). Your friend will use successive guesses and hints to eventually derive the secret number.</p>\n\n<p>Write a function to return a hint according to the secret number and friend&#39;s guess, use <code>A</code> to indicate the bulls and <code>B</code> to indicate the cows.&nbsp;</p>\n\n<p>Please note that both secret number and friend&#39;s guess may contain duplicate digits.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> secret = &quot;1807&quot;, guess = &quot;7810&quot;\n\n<strong>Output:</strong> &quot;1A3B&quot;\n\n<strong>Explanation:</strong> <code>1</code><span style=\"font-family: sans-serif, Arial, Verdana, &quot;Trebuchet MS&quot;;\"> bull and </span><code>3</code><span style=\"font-family: sans-serif, Arial, Verdana, &quot;Trebuchet MS&quot;;\"> cows. The bull is </span><code>8</code><span style=\"font-family: sans-serif, Arial, Verdana, &quot;Trebuchet MS&quot;;\">, the cows are </span><code>0</code><span style=\"font-family: sans-serif, Arial, Verdana, &quot;Trebuchet MS&quot;;\">, </span><code>1</code><span style=\"font-family: sans-serif, Arial, Verdana, &quot;Trebuchet MS&quot;;\"> and </span><code>7<font face=\"sans-serif, Arial, Verdana, Trebuchet MS\">.</font></code></pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> secret = &quot;1123&quot;, guess = &quot;0111&quot;\n\n<strong>Output:</strong> &quot;1A1B&quot;\n\n<strong>Explanation: </strong>The 1st <code>1 </code><span style=\"font-family: sans-serif, Arial, Verdana, &quot;Trebuchet MS&quot;;\">in friend&#39;s guess is a bull, the 2nd or 3rd </span><code>1</code><span style=\"font-family: sans-serif, Arial, Verdana, &quot;Trebuchet MS&quot;;\"> is a cow</span><span style=\"font-family: sans-serif, Arial, Verdana, &quot;Trebuchet MS&quot;;\">.</span></pre>\n\n<p><strong>Note: </strong>You may assume that the secret number and your friend&#39;s guess only contain digits, and their lengths are always equal.</p>"
    },
    {
        "id": "168",
        "title": "Excel Sheet Column Title",
        "slug": "excel-sheet-column-title",
        "difficulty": "Easy",
        "likes": 814,
        "dislikes": 165,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Excel Sheet Column Number\", \"titleSlug\": \"excel-sheet-column-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Math"
        ],
        "content": "<p>Given a positive integer, return its corresponding column title as appear in an Excel sheet.</p>\n\n<p>For example:</p>\n\n<pre>\n    1 -&gt; A\n    2 -&gt; B\n    3 -&gt; C\n    ...\n    26 -&gt; Z\n    27 -&gt; AA\n    28 -&gt; AB \n    ...\n</pre>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> 1\n<strong>Output:</strong> &quot;A&quot;\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> 28\n<strong>Output:</strong> &quot;AB&quot;\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> 701\n<strong>Output:</strong> &quot;ZY&quot;\n</pre>"
    },
    {
        "id": "908",
        "title": "Smallest Range I",
        "slug": "smallest-range-i",
        "difficulty": "Easy",
        "likes": 132,
        "dislikes": 745,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "567",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math"
        ],
        "content": "<p>Given an array <code>A</code> of integers, for each integer <code>A[i]</code> we may choose any <code>x</code> with <code>-K &lt;= x &lt;= K</code>, and add <code>x</code> to <code>A[i]</code>.</p>\n\n<p>After this process, we have some array <code>B</code>.</p>\n\n<p>Return the smallest possible difference between the maximum value of <code>B</code>&nbsp;and the minimum value of <code>B</code>.</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-1-1\">[1]</span>, K = <span id=\"example-input-1-2\">0</span>\n<strong>Output: </strong><span id=\"example-output-1\">0\n<strong>Explanation</strong>: B = [1]</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-2-1\">[0,10]</span>, K = <span id=\"example-input-2-2\">2</span>\n<strong>Output: </strong><span id=\"example-output-2\">6\n</span><span id=\"example-output-1\"><strong>Explanation</strong>: B = [2,8]</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-3-1\">[1,3,6]</span>, K = <span id=\"example-input-3-2\">3</span>\n<strong>Output: </strong><span id=\"example-output-3\">0\n</span><span id=\"example-output-1\"><strong>Explanation</strong>: B = [3,3,3] or B = [4,4,4]</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 10000</code></li>\n\t<li><code>0 &lt;= A[i] &lt;= 10000</code></li>\n\t<li><code>0 &lt;= K &lt;= 10000</code></li>\n</ol>\n</div>\n</div>\n</div>"
    },
    {
        "id": "995",
        "title": "Minimum Number of K Consecutive Bit Flips",
        "slug": "minimum-number-of-k-consecutive-bit-flips",
        "difficulty": "Hard",
        "likes": 156,
        "dislikes": 21,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Bulb Switcher\", \"titleSlug\": \"bulb-switcher\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "697",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Greedy",
            "Sliding Window"
        ],
        "content": "<p>In an array <code>A</code> containing only 0s and 1s, a <i><code>K</code>-bit flip&nbsp;</i>consists of choosing a (contiguous) subarray of length <code>K</code> and simultaneously changing every 0 in the subarray to 1, and every 1 in the subarray to 0.</p>\n\n<p>Return the minimum number of <code>K</code>-bit flips required so that there is no 0 in the array.&nbsp; If it is not possible, return <code>-1</code>.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-1-1\">[0,1,0]</span>, K = <span id=\"example-input-1-2\">1</span>\n<strong>Output: </strong><span id=\"example-output-1\">2</span>\n<strong>Explanation: </strong>Flip A[0], then flip A[2].\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-2-1\">[1,1,0]</span>, K = <span id=\"example-input-2-2\">2</span>\n<strong>Output: </strong><span id=\"example-output-2\">-1</span>\n<strong>Explanation:</strong>&nbsp;No matter how we flip subarrays of size 2, we can&#39;t make the array become [1,1,1].\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-3-1\">[0,0,0,1,0,1,1,0]</span>, K = <span id=\"example-input-3-2\">3</span>\n<strong>Output: </strong><span id=\"example-output-3\">3</span>\n<strong>Explanation:</strong>\nFlip A[0],A[1],A[2]:&nbsp;A becomes [1,1,1,1,0,1,1,0]\nFlip A[4],A[5],A[6]:&nbsp;A becomes [1,1,1,1,1,0,0,0]\nFlip A[5],A[6],A[7]:&nbsp;A becomes [1,1,1,1,1,1,1,1]\n</pre>\n\n<p>&nbsp;</p>\n</div>\n</div>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;=&nbsp;30000</code></li>\n\t<li><code>1 &lt;= K &lt;= A.length</code></li>\n</ol>"
    },
    {
        "id": "748",
        "title": "Shortest Completing Word",
        "slug": "shortest-completing-word",
        "difficulty": "Easy",
        "likes": 137,
        "dislikes": 482,
        "hints": [
            "Count only the letters (possibly converted to lowercase) of each word.  If a word is shorter and the count of each letter is at least the count of that letter in the licensePlate, it is the best answer we've seen yet."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "345",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Hash Table"
        ],
        "content": "<p>\nFind the minimum length word from a given dictionary <code>words</code>, which has all the letters from the string <code>licensePlate</code>.  Such a word is said to <i>complete</i> the given string <code>licensePlate</code>\n</p><p>\nHere, for letters we ignore case.  For example, <code>\"P\"</code> on the <code>licensePlate</code> still matches <code>\"p\"</code> on the word.\n</p><p>\nIt is guaranteed an answer exists.  If there are multiple answers, return the one that occurs first in the array.\n</p><p>\nThe license plate might have the same letter occurring multiple times.  For example, given a <code>licensePlate</code> of <code>\"PP\"</code>, the word <code>\"pair\"</code> does not complete the <code>licensePlate</code>, but the word <code>\"supper\"</code> does.\n</p><p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> licensePlate = \"1s3 PSt\", words = [\"step\", \"steps\", \"stripe\", \"stepple\"]\n<b>Output:</b> \"steps\"\n<b>Explanation:</b> The smallest length word that contains the letters \"S\", \"P\", \"S\", and \"T\".\nNote that the answer is not \"step\", because the letter \"s\" must occur in the word twice.\nAlso note that we ignored case for the purposes of comparing whether a letter exists in the word.\n</pre>\n</p>\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b> licensePlate = \"1s3 456\", words = [\"looks\", \"pest\", \"stew\", \"show\"]\n<b>Output:</b> \"pest\"\n<b>Explanation:</b> There are 3 smallest length words that contains the letters \"s\".\nWe return the one that occurred first.\n</pre>\n</p>\n\n<p><b>Note:</b><br>\n<ol>\n<li><code>licensePlate</code> will be a string with length in range <code>[1, 7]</code>.</li>\n<li><code>licensePlate</code> will contain digits, spaces, or letters (uppercase or lowercase).</li>\n<li><code>words</code> will have a length in the range <code>[10, 1000]</code>.</li>\n<li>Every <code>words[i]</code> will consist of lowercase letters, and have length in range <code>[1, 15]</code>.</li>\n</ol>\n</p>"
    },
    {
        "id": "543",
        "title": "Diameter of Binary Tree",
        "slug": "diameter-of-binary-tree",
        "difficulty": "Easy",
        "likes": 1653,
        "dislikes": 103,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "316",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree"
        ],
        "content": "<p>\nGiven a binary tree, you need to compute the length of the diameter of the tree. The diameter of a binary tree is the length of the <b>longest</b> path between any two nodes in a tree. This path may or may not pass through the root.\n</p>\n\n<p>\n<b>Example:</b><br />\nGiven a binary tree <br />\n<pre>\n          1\n         / \\\n        2   3\n       / \\     \n      4   5    \n</pre>\n</p>\n<p>\nReturn <b>3</b>, which is the length of the path [4,2,1,3] or [5,2,1,3].\n</p>\n\n<p><b>Note:</b>\nThe length of path between two nodes is represented by the number of edges between them.\n</p>"
    },
    {
        "id": "960",
        "title": "Delete Columns to Make Sorted III",
        "slug": "delete-columns-to-make-sorted-iii",
        "difficulty": "Hard",
        "likes": 167,
        "dislikes": 4,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "641",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>We are given an array&nbsp;<code>A</code> of <code>N</code> lowercase letter strings, all of the same length.</p>\n\n<p>Now, we may choose any set of deletion indices, and for each string, we delete all the characters in those indices.</p>\n\n<p>For example, if we have an array <code>A = [&quot;babca&quot;,&quot;bbazb&quot;]</code> and deletion indices <code>{0, 1, 4}</code>, then the final array after deletions is <code>[&quot;bc&quot;,&quot;az&quot;]</code>.</p>\n\n<p>Suppose we chose a set of deletion indices <code>D</code> such that after deletions, the final array has <strong>every element (row) in&nbsp;lexicographic</strong> order.</p>\n\n<p>For clarity, <code>A[0]</code> is in lexicographic order (ie. <code>A[0][0] &lt;= A[0][1] &lt;= ... &lt;= A[0][A[0].length - 1]</code>), <code>A[1]</code> is in lexicographic order (ie. <code>A[1][0] &lt;= A[1][1] &lt;= ... &lt;= A[1][A[1].length - 1]</code>), and so on.</p>\n\n<p>Return the minimum possible value of <code>D.length</code>.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[&quot;babca&quot;,&quot;bbazb&quot;]</span>\n<strong>Output: </strong><span id=\"example-output-1\">3</span>\n<strong>Explanation: </strong>After deleting columns 0, 1, and 4, the final array is A = [&quot;bc&quot;, &quot;az&quot;].\nBoth these rows are individually in lexicographic order (ie. A[0][0] &lt;= A[0][1] and A[1][0] &lt;= A[1][1]).\nNote that A[0] &gt; A[1] - the array A isn&#39;t necessarily in lexicographic order.\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[&quot;edcba&quot;]</span>\n<strong>Output: </strong><span id=\"example-output-2\">4</span>\n<strong>Explanation: </strong>If we delete less than 4 columns, the only row won&#39;t be lexicographically sorted.\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">[&quot;ghi&quot;,&quot;def&quot;,&quot;abc&quot;]</span>\n<strong>Output: </strong><span id=\"example-output-3\">0</span>\n<strong>Explanation: </strong>All rows are already lexicographically sorted.\n</pre>\n\n<p>&nbsp;</p>\n</div>\n</div>\n</div>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= A[i].length &lt;= 100</code></li>\n</ol>"
    },
    {
        "id": "933",
        "title": "Number of Recent Calls",
        "slug": "number-of-recent-calls",
        "difficulty": "Easy",
        "likes": 156,
        "dislikes": 834,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "606",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Queue"
        ],
        "content": "<p>Write a class <code>RecentCounter</code> to count recent requests.</p>\n\n<p>It has only one method:&nbsp;<code>ping(int t)</code>, where t represents some time in milliseconds.</p>\n\n<p>Return the number of <code>ping</code>s that have been made from 3000 milliseconds ago until now.</p>\n\n<p>Any ping with time in <code>[t - 3000, t]</code> will count, including the current ping.</p>\n\n<p>It is guaranteed that every call to <code>ping</code> uses a strictly larger value of&nbsp;<code>t</code> than before.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>inputs = <span id=\"example-input-1-1\">[&quot;RecentCounter&quot;,&quot;ping&quot;,&quot;ping&quot;,&quot;ping&quot;,&quot;ping&quot;]</span>, inputs = <span id=\"example-input-1-2\">[[],[1],[100],[3001],[3002]]</span>\n<strong>Output: </strong><span id=\"example-output-1\">[null,1,2,3,3]</span></pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li>Each test case will have at most <code>10000</code> calls to <code>ping</code>.</li>\n\t<li>Each test case will call&nbsp;<code>ping</code> with strictly increasing values of <code>t</code>.</li>\n\t<li>Each call to ping will have <code>1 &lt;= t &lt;= 10^9</code>.</li>\n</ol>\n\n<div>\n<p>&nbsp;</p>\n</div>"
    },
    {
        "id": "646",
        "title": "Maximum Length of Pair Chain",
        "slug": "maximum-length-of-pair-chain",
        "difficulty": "Medium",
        "likes": 617,
        "dislikes": 56,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Longest Increasing Subsequence\", \"titleSlug\": \"longest-increasing-subsequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Increasing Subsequences\", \"titleSlug\": \"increasing-subsequences\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "317",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>\nYou are given <code>n</code> pairs of numbers. In every pair, the first number is always smaller than the second number.\n</p>\n\n<p>\nNow, we define a pair <code>(c, d)</code> can follow another pair <code>(a, b)</code> if and only if <code>b < c</code>. Chain of pairs can be formed in this fashion. \n</p>\n\n<p>\nGiven a set of pairs, find the length longest chain which can be formed. You needn't use up all the given pairs. You can select pairs in any order.\n</p>\n\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> [[1,2], [2,3], [3,4]]\n<b>Output:</b> 2\n<b>Explanation:</b> The longest chain is [1,2] -> [3,4]\n</pre>\n</p>\n\n<p><b>Note:</b><br>\n<ol>\n<li>The number of given pairs will be in the range [1, 1000].</li>\n</ol>\n</p>"
    },
    {
        "id": "10",
        "title": "Regular Expression Matching",
        "slug": "regular-expression-matching",
        "difficulty": "Hard",
        "likes": 3009,
        "dislikes": 566,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Wildcard Matching\", \"titleSlug\": \"wildcard-matching\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "238",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String",
            "Dynamic Programming",
            "Backtracking"
        ],
        "content": "<p>Given an input string (<code>s</code>) and a pattern (<code>p</code>), implement regular expression matching with support for <code>&#39;.&#39;</code> and <code>&#39;*&#39;</code>.</p>\n\n<pre>\n&#39;.&#39; Matches any single character.\n&#39;*&#39; Matches zero or more of the preceding element.\n</pre>\n\n<p>The matching should cover the <strong>entire</strong> input string (not partial).</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li><code>s</code>&nbsp;could be empty and contains only lowercase letters <code>a-z</code>.</li>\n\t<li><code>p</code> could be empty and contains only lowercase letters <code>a-z</code>, and characters like&nbsp;<code>.</code>&nbsp;or&nbsp;<code>*</code>.</li>\n</ul>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong>\ns = &quot;aa&quot;\np = &quot;a&quot;\n<strong>Output:</strong> false\n<strong>Explanation:</strong> &quot;a&quot; does not match the entire string &quot;aa&quot;.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong>\ns = &quot;aa&quot;\np = &quot;a*&quot;\n<strong>Output:</strong> true\n<strong>Explanation:</strong>&nbsp;&#39;*&#39; means zero or more of the preceding&nbsp;element, &#39;a&#39;. Therefore, by repeating &#39;a&#39; once, it becomes &quot;aa&quot;.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong>\ns = &quot;ab&quot;\np = &quot;.*&quot;\n<strong>Output:</strong> true\n<strong>Explanation:</strong>&nbsp;&quot;.*&quot; means &quot;zero or more (*) of any character (.)&quot;.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong>\ns = &quot;aab&quot;\np = &quot;c*a*b&quot;\n<strong>Output:</strong> true\n<strong>Explanation:</strong>&nbsp;c can be repeated 0 times, a can be repeated 1 time. Therefore, it matches &quot;aab&quot;.\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong>\ns = &quot;mississippi&quot;\np = &quot;mis*is*p*.&quot;\n<strong>Output:</strong> false\n</pre>\n"
    },
    {
        "id": "454",
        "title": "4Sum II",
        "slug": "4sum-ii",
        "difficulty": "Medium",
        "likes": 781,
        "dislikes": 61,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"4Sum\", \"titleSlug\": \"4sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Hash Table",
            "Binary Search"
        ],
        "content": "<p>Given four lists A, B, C, D of integer values, compute how many tuples <code>(i, j, k, l)</code> there are such that <code>A[i] + B[j] + C[k] + D[l]</code> is zero.</p>\n\n<p>To make problem a bit easier, all A, B, C, D have same length of N where 0 &le; N &le; 500. All integers are in the range of -2<sup>28</sup> to 2<sup>28</sup> - 1 and the result is guaranteed to be at most 2<sup>31</sup> - 1.</p>\n\n<p><b>Example:</b></p>\n\n<pre>\n<b>Input:</b>\nA = [ 1, 2]\nB = [-2,-1]\nC = [-1, 2]\nD = [ 0, 2]\n\n<b>Output:</b>\n2\n\n<b>Explanation:</b>\nThe two tuples are:\n1. (0, 0, 0, 1) -&gt; A[0] + B[0] + C[0] + D[1] = 1 + (-2) + (-1) + 2 = 0\n2. (1, 1, 0, 0) -&gt; A[1] + B[1] + C[0] + D[0] = 2 + (-1) + (-1) + 0 = 0\n</pre>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "945",
        "title": "Minimum Increment to Make Array Unique",
        "slug": "minimum-increment-to-make-array-unique",
        "difficulty": "Medium",
        "likes": 204,
        "dislikes": 8,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "624",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array"
        ],
        "content": "<p>Given an array of integers A, a <em>move</em> consists of choosing any <code>A[i]</code>, and incrementing it by <code>1</code>.</p>\n\n<p>Return the least number of moves to make every value in <code>A</code> unique.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[1,2,2]</span>\n<strong>Output: </strong><span id=\"example-output-1\">1</span>\n<strong>Explanation: </strong> After 1 move, the array could be [1, 2, 3].\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[3,2,1,2,1,7]</span>\n<strong>Output: </strong><span id=\"example-output-2\">6</span>\n<strong>Explanation: </strong> After 6 moves, the array could be [3, 4, 1, 2, 5, 7].\nIt can be shown with 5 or less moves that it is impossible for the array to have all unique values.\n</pre>\n\n<p>&nbsp;</p>\n</div>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>0 &lt;= A.length &lt;= 40000</code></li>\n\t<li><code>0 &lt;= A[i] &lt; 40000</code></li>\n</ol>\n\n<div>\n<div>&nbsp;</div>\n</div>"
    },
    {
        "id": "301",
        "title": "Remove Invalid Parentheses",
        "slug": "remove-invalid-parentheses",
        "difficulty": "Hard",
        "likes": 1676,
        "dislikes": 71,
        "hints": [
            "Since we don't know which of the brackets can possibly be removed, we try out all the options!",
            "We can use recursion to try out all possibilities for the given expression. For each of the brackets, we have 2 options:\r\n\r\n<ol>\r\n<li> We keep the bracket and add it to the expression that we are building on the fly during recursion.</li>\r\n<li> OR, we can discard the bracket and move on.\r\n</ol>",
            "The one thing all these valid expressions have in common is that they will all be of the same length i.e. as compared to the original expression, all of these expressions will have the same number of characters removed. \r\n\r\nCan we somehow find the number of misplaced parentheses and use it in our solution?",
            "The one thing all these valid expressions have in common is that they will all be of the same length i.e. as compared to the original expression, all of these expressions will have the same number of characters removed. \r\n\r\nCan we somehow find the number of misplaced parentheses and use it in our solution?",
            "For every left parenthesis, we should have a corresponding right parenthesis. We can make use of two counters which keep track of misplaced left and right parenthesis and in one iteration we can find out these two values. \r\n\r\n<pre>\r\n0 1 2 3 4 5 6 7\r\n( ) ) ) ( ( ( )  \r\ni = 0, left = 1, right = 0\r\ni = 1, left = 0, right = 0\r\ni = 2, left = 0, right = 1\r\ni = 3, left = 0, right = 2\r\ni = 4, left = 1, right = 2\r\ni = 5, left = 2, right = 2\r\ni = 6, left = 3, right = 2\r\ni = 7, left = 2, right = 2\r\n</pre>\r\n\r\nWe have 2 misplaced left and 2 misplaced right parentheses.",
            "We found out that the exact number of left and right parenthesis that has to be removed to get a valid expression. So, e.g. in a 1000 parentheses string, if there are 2 misplaced left and 2 misplaced right parentheses, after we are done discarding 2 left and 2 right parentheses, we will have only one option per remaining character in the expression i.e. to consider them. We can't discard them."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Valid Parentheses\", \"titleSlug\": \"valid-parentheses\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "577",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Depth-first Search",
            "Breadth-first Search"
        ],
        "content": "<p>Remove the minimum number of invalid parentheses in order to make the input string valid. Return all possible results.</p>\n\n<p><strong>Note:</strong>&nbsp;The input string may contain letters other than the parentheses <code>(</code> and <code>)</code>.</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> &quot;()())()&quot;\n<b>Output:</b> [&quot;()()()&quot;, &quot;(())()&quot;]\n</pre>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input:</b> &quot;(a)())()&quot;\n<b>Output:</b> [&quot;(a)()()&quot;, &quot;(a())()&quot;]\n</pre>\n\n<p><b>Example 3:</b></p>\n\n<pre>\n<b>Input:</b> &quot;)(&quot;\n<b>Output: </b>[&quot;&quot;]\n</pre>"
    },
    {
        "id": "930",
        "title": "Binary Subarrays With Sum",
        "slug": "binary-subarrays-with-sum",
        "difficulty": "Medium",
        "likes": 257,
        "dislikes": 12,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "600",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Hash Table",
            "Two Pointers"
        ],
        "content": "<p>In an array <code>A</code> of <code>0</code>s and <code>1</code>s, how many <strong>non-empty</strong> subarrays have sum <code>S</code>?</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-1-1\">[1,0,1,0,1]</span>, S = <span id=\"example-input-1-2\">2</span>\n<strong>Output: </strong><span id=\"example-output-1\">4</span>\n<strong>Explanation: </strong>\nThe 4 subarrays are bolded below:\n[<strong>1,0,1</strong>,0,1]\n[<strong>1,0,1,0</strong>,1]\n[1,<strong>0,1,0,1</strong>]\n[1,0,<strong>1,0,1</strong>]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>A.length &lt;= 30000</code></li>\n\t<li><code>0 &lt;= S &lt;= A.length</code></li>\n\t<li><code>A[i]</code>&nbsp;is either <code>0</code>&nbsp;or <code>1</code>.</li>\n</ol>"
    },
    {
        "id": "1110",
        "title": "Delete Nodes And Return Forest",
        "slug": "delete-nodes-and-return-forest",
        "difficulty": "Medium",
        "likes": 254,
        "dislikes": 5,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Tree",
            "Depth-first Search"
        ],
        "content": "<p>Given the <code>root</code>&nbsp;of a binary tree, each node in the tree has a distinct value.</p>\n\n<p>After deleting&nbsp;all nodes with a value in <code>to_delete</code>, we are left with a forest (a&nbsp;disjoint union of trees).</p>\n\n<p>Return the roots of the trees in the remaining forest.&nbsp; You may return the result in any order.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<p><strong><img alt=\"\" src=\"./img/delete-nodes-and-return-forest_1.png\" style=\"width: 237px; height: 150px;\" /></strong></p>\n\n<pre>\n<strong>Input:</strong> root = [1,2,3,4,5,6,7], to_delete = [3,5]\n<strong>Output:</strong> [[1,2,null,4],[6],[7]]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the given tree is at most <code>1000</code>.</li>\n\t<li>Each node has a distinct value between <code>1</code> and <code>1000</code>.</li>\n\t<li><code>to_delete.length &lt;= 1000</code></li>\n\t<li><code>to_delete</code> contains distinct values between <code>1</code> and <code>1000</code>.</li>\n</ul>"
    },
    {
        "id": "9",
        "title": "Palindrome Number",
        "slug": "palindrome-number",
        "difficulty": "Easy",
        "likes": 1607,
        "dislikes": 1369,
        "hints": [
            "Beware of overflow when you reverse the integer."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Palindrome Linked List\", \"titleSlug\": \"palindrome-linked-list\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "233",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math"
        ],
        "content": "<p>Determine whether an integer is a palindrome. An integer&nbsp;is&nbsp;a&nbsp;palindrome when it&nbsp;reads the same backward as forward.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> 121\n<strong>Output:</strong> true\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> -121\n<strong>Output:</strong> false\n<strong>Explanation:</strong> From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> 10\n<strong>Output:</strong> false\n<strong>Explanation:</strong> Reads 01 from right to left. Therefore it is not a palindrome.\n</pre>\n\n<p><strong>Follow up:</strong></p>\n\n<p>Coud you solve&nbsp;it without converting the integer to a string?</p>\n"
    },
    {
        "id": "449",
        "title": "Serialize and Deserialize BST",
        "slug": "serialize-and-deserialize-bst",
        "difficulty": "Medium",
        "likes": 767,
        "dislikes": 54,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Serialize and Deserialize Binary Tree\", \"titleSlug\": \"serialize-and-deserialize-binary-tree\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Find Duplicate Subtrees\", \"titleSlug\": \"find-duplicate-subtrees\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Serialize and Deserialize N-ary Tree\", \"titleSlug\": \"serialize-and-deserialize-n-ary-tree\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "733",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree"
        ],
        "content": "<p>Serialization is the process of converting a data structure or object into a sequence of bits so that it can be stored in a file or memory buffer, or transmitted across a network connection link to be reconstructed later in the same or another computer environment.</p>\n\n<p>Design an algorithm to serialize and deserialize a <b>binary search tree</b>. There is no restriction on how your serialization/deserialization algorithm should work. You just need to ensure that a binary search tree can be serialized to a string and this string can be deserialized to the original tree structure.</p>\n\n<p><b>The encoded string should be as compact as possible.</b></p>\n\n<p><b>Note:</b> Do not use class member/global/static variables to store states. Your serialize and deserialize algorithms should be stateless.</p>\n"
    },
    {
        "id": "730",
        "title": "Count Different Palindromic Subsequences",
        "slug": "count-different-palindromic-subsequences",
        "difficulty": "Hard",
        "likes": 338,
        "dislikes": 36,
        "hints": [
            "Let dp(i, j) be the answer for the string T = S[i:j+1] including the empty sequence. The answer is the number of unique characters in T, plus palindromes of the form \"a_a\", \"b_b\", \"c_c\", and \"d_d\", where \"_\" represents zero or more characters."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Longest Palindromic Subsequence\", \"titleSlug\": \"longest-palindromic-subsequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "298",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String",
            "Dynamic Programming"
        ],
        "content": "<p>\nGiven a string S, find the number of different non-empty palindromic subsequences in S, and <b>return that number modulo <code>10^9 + 7</code>.</b>\n</p><p>\nA subsequence of a string S is obtained by deleting 0 or more characters from S.\n</p><p>\nA sequence is palindromic if it is equal to the sequence reversed.\n</p><p>\nTwo sequences <code>A_1, A_2, ...</code> and <code>B_1, B_2, ...</code> are different if there is some <code>i</code> for which <code>A_i != B_i</code>.\n</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> \nS = 'bccb'\n<b>Output:</b> 6\n<b>Explanation:</b> \nThe 6 different non-empty palindromic subsequences are 'b', 'c', 'bb', 'cc', 'bcb', 'bccb'.\nNote that 'bcb' is counted only once, even though it occurs twice.\n</pre>\n</p>\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b> \nS = 'abcdabcdabcdabcdabcdabcdabcdabcddcbadcbadcbadcbadcbadcbadcbadcba'\n<b>Output:</b> 104860361\n<b>Explanation:</b> \nThere are 3104860382 different non-empty palindromic subsequences, which is 104860361 modulo 10^9 + 7.\n</pre>\n</p>\n\n<p><b>Note:</b>\n<li>The length of <code>S</code> will be in the range <code>[1, 1000]</code>.</li>\n<li>Each character <code>S[i]</code> will be in the set <code>{'a', 'b', 'c', 'd'}</code>.</li>\n</p>"
    },
    {
        "id": "88",
        "title": "Merge Sorted Array",
        "slug": "merge-sorted-array",
        "difficulty": "Easy",
        "likes": 1278,
        "dislikes": 3045,
        "hints": [
            "What if you fill the longer array from the end instead of start ?"
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Merge Two Sorted Lists\", \"titleSlug\": \"merge-two-sorted-lists\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Squares of a Sorted Array\", \"titleSlug\": \"squares-of-a-sorted-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Interval List Intersections\", \"titleSlug\": \"interval-list-intersections\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "686",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Two Pointers"
        ],
        "content": "<p>Given two sorted integer arrays <em>nums1</em> and <em>nums2</em>, merge <em>nums2</em> into <em>nums1</em> as one sorted array.</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>The number of elements initialized in <em>nums1</em> and <em>nums2</em> are <em>m</em> and <em>n</em> respectively.</li>\n\t<li>You may assume that <em>nums1</em> has enough space (size that is greater or equal to <em>m</em> + <em>n</em>) to hold additional elements from <em>nums2</em>.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input:</strong>\nnums1 = [1,2,3,0,0,0], m = 3\nnums2 = [2,5,6],       n = 3\n\n<strong>Output:</strong>&nbsp;[1,2,2,3,5,6]\n</pre>\n"
    },
    {
        "id": "657",
        "title": "Robot Return to Origin",
        "slug": "robot-return-to-origin",
        "difficulty": "Easy",
        "likes": 752,
        "dislikes": 584,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Friend Circles\", \"titleSlug\": \"friend-circles\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "331",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String"
        ],
        "content": "<p>There is a robot starting at position (0, 0), the origin, on a 2D plane. Given a sequence of its moves, judge if this robot <strong>ends up at (0, 0)</strong> after it completes its moves.</p>\n\n<p>The move sequence is represented by a string, and the character moves[i] represents its ith move. Valid moves are R (right), L (left), U (up), and D (down). If the robot returns to the origin after it finishes all of its moves, return true. Otherwise, return false.</p>\n\n<p><strong>Note</strong>: The way that the robot is &quot;facing&quot; is irrelevant. &quot;R&quot; will always make the robot move to the right once, &quot;L&quot; will always make it move left, etc. Also, assume that the magnitude of the robot&#39;s movement is the same for each move.</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> &quot;UD&quot;\n<b>Output:</b> true \n<strong>Explanation</strong>: The robot moves up once, and then down once. All moves have the same magnitude, so it ended up at the origin where it started. Therefore, we return true.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input:</b> &quot;LL&quot;\n<b>Output:</b> false\n<strong>Explanation</strong>: The robot moves left twice. It ends up two &quot;moves&quot; to the left of the origin. We return false because it is not at the origin at the end of its moves.\n</pre>\n"
    },
    {
        "id": "932",
        "title": "Beautiful Array",
        "slug": "beautiful-array",
        "difficulty": "Medium",
        "likes": 207,
        "dislikes": 300,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "601",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Divide and Conquer"
        ],
        "content": "<p>For some fixed <code>N</code>, an array <code>A</code> is <em>beautiful</em> if it is a permutation of the integers <code>1, 2, ..., N</code>, such that:</p>\n\n<p>For every <code>i &lt; j</code>, there is <strong>no</strong>&nbsp;<code>k</code> with <code>i &lt; k &lt; j</code>&nbsp;such that <code>A[k] * 2 = A[i] + A[j]</code>.</p>\n\n<p>Given <code>N</code>, return <strong>any</strong> beautiful array <code>A</code>.&nbsp; (It is guaranteed that one exists.)</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">4</span>\n<strong>Output: </strong><span id=\"example-output-1\">[2,1,4,3]</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">5</span>\n<strong>Output: </strong><span>[3,1,2,5,4]</span></pre>\n\n<p>&nbsp;</p>\n</div>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= N &lt;= 1000</code></li>\n</ul>\n\n<div>\n<div>&nbsp;</div>\n</div>"
    },
    {
        "id": "1008",
        "title": "Construct Binary Search Tree from Preorder Traversal",
        "slug": "construct-binary-search-tree-from-preorder-traversal",
        "difficulty": "Medium",
        "likes": 333,
        "dislikes": 13,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "724",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree"
        ],
        "content": "<p>Return the root node of a binary <strong>search</strong> tree that matches the given <code>preorder</code> traversal.</p>\n\n<p><em>(Recall that a binary search tree&nbsp;is a binary tree where for every <font face=\"monospace\">node</font>, any descendant of <code>node.left</code> has a value <code>&lt;</code>&nbsp;<code>node.val</code>, and any descendant of <code>node.right</code> has a value <code>&gt;</code>&nbsp;<code>node.val</code>.&nbsp; Also recall that a preorder traversal&nbsp;displays the value of the&nbsp;<code>node</code> first, then traverses <code>node.left</code>, then traverses <code>node.right</code>.)</em></p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[8,5,1,7,10,12]</span>\n<strong>Output: </strong><span id=\"example-output-1\">[8,5,10,1,7,null,12]\n<img alt=\"\" src=\"./img/construct-binary-search-tree-from-preorder-traversal_1.png\" style=\"height: 200px; width: 306px;\" /></span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong>&nbsp;</p>\n\n<ol>\n\t<li><code>1 &lt;= preorder.length &lt;= 100</code></li>\n\t<li>The values of <code>preorder</code> are distinct.</li>\n</ol>\n"
    },
    {
        "id": "1079",
        "title": "Letter Tile Possibilities",
        "slug": "letter-tile-possibilities",
        "difficulty": "Medium",
        "likes": 252,
        "dislikes": 11,
        "hints": [
            "Try to build the string with a backtracking DFS by considering what you can put in every position."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Backtracking"
        ],
        "content": "<p>You have a set of <code>tiles</code>, where each tile has one letter <code>tiles[i]</code> printed on it.&nbsp; Return the number of possible non-empty sequences of letters you can make.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">&quot;AAB&quot;</span>\n<strong>Output: </strong><span id=\"example-output-1\">8</span>\n<strong>Explanation: </strong>The possible sequences are &quot;A&quot;, &quot;B&quot;, &quot;AA&quot;, &quot;AB&quot;, &quot;BA&quot;, &quot;AAB&quot;, &quot;ABA&quot;, &quot;BAA&quot;.\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">&quot;AAABBC&quot;</span>\n<strong>Output: </strong><span id=\"example-output-2\">188</span>\n</pre>\n\n<p>&nbsp;</p>\n</div>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= tiles.length &lt;= 7</code></li>\n\t<li><code>tiles</code> consists of uppercase English letters.</li>\n</ol>"
    },
    {
        "id": "352",
        "title": "Data Stream as Disjoint Intervals",
        "slug": "data-stream-as-disjoint-intervals",
        "difficulty": "Hard",
        "likes": 207,
        "dislikes": 65,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Summary Ranges\", \"titleSlug\": \"summary-ranges\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find Right Interval\", \"titleSlug\": \"find-right-interval\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Range Module\", \"titleSlug\": \"range-module\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Binary Search",
            "Ordered Map"
        ],
        "content": "<p>Given a data stream input of non-negative integers a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>n</sub>, ..., summarize the numbers seen so far as a list of disjoint intervals.</p>\n\n<p>For example, suppose the integers from the data stream are 1, 3, 7, 2, 6, ..., then the summary will be:</p>\n\n<pre>\n[1, 1]\n[1, 1], [3, 3]\n[1, 1], [3, 3], [7, 7]\n[1, 3], [7, 7]\n[1, 3], [6, 7]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Follow up:</b></p>\n\n<p>What if there are lots of merges and the number of disjoint intervals are small compared to the data stream&#39;s size?</p>\n"
    },
    {
        "id": "326",
        "title": "Power of Three",
        "slug": "power-of-three",
        "difficulty": "Easy",
        "likes": 324,
        "dislikes": 1152,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Power of Two\", \"titleSlug\": \"power-of-two\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Power of Four\", \"titleSlug\": \"power-of-four\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "45",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math"
        ],
        "content": "<p>Given an integer, write a function to determine if it is a power of three.</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<strong>Input:</strong> 27\n<strong>Output:</strong> true\n</pre>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<strong>Input:</strong> 0\n<strong>Output:</strong> false</pre>\n\n<p><b>Example 3:</b></p>\n\n<pre>\n<strong>Input:</strong> 9\n<strong>Output:</strong> true</pre>\n\n<p><b>Example 4:</b></p>\n\n<pre>\n<strong>Input:</strong> 45\n<strong>Output:</strong> false</pre>\n\n<p><b>Follow up:</b><br />\nCould you do it without using any loop / recursion?</p>"
    },
    {
        "id": "811",
        "title": "Subdomain Visit Count",
        "slug": "subdomain-visit-count",
        "difficulty": "Easy",
        "likes": 301,
        "dislikes": 463,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "440",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Hash Table"
        ],
        "content": "<p>A website domain like &quot;discuss.leetcode.com&quot; consists of various subdomains. At the top level, we have &quot;com&quot;, at the next level, we have &quot;leetcode.com&quot;, and at the lowest level, &quot;discuss.leetcode.com&quot;. When we visit a domain like &quot;discuss.leetcode.com&quot;, we will also visit the parent domains &quot;leetcode.com&quot; and &quot;com&quot; implicitly.</p>\n\n<p>Now, call a &quot;count-paired domain&quot; to be a count (representing the number of visits this domain received), followed by a space, followed by the address. An example of a count-paired domain might be &quot;9001 discuss.leetcode.com&quot;.</p>\n\n<p>We are given a list <code>cpdomains</code> of count-paired domains. We would like a list of count-paired domains, (in the same format as the input, and in any order), that explicitly counts the number of visits to each subdomain.</p>\n\n<pre>\n<strong>Example 1:</strong>\n<strong>Input:</strong> \n[&quot;9001 discuss.leetcode.com&quot;]\n<strong>Output:</strong> \n[&quot;9001 discuss.leetcode.com&quot;, &quot;9001 leetcode.com&quot;, &quot;9001 com&quot;]\n<strong>Explanation:</strong> \nWe only have one website domain: &quot;discuss.leetcode.com&quot;. As discussed above, the subdomain &quot;leetcode.com&quot; and &quot;com&quot; will also be visited. So they will all be visited 9001 times.\n\n</pre>\n\n<pre>\n<strong>Example 2:</strong>\n<strong>Input:</strong> \n[&quot;900 google.mail.com&quot;, &quot;50 yahoo.com&quot;, &quot;1 intel.mail.com&quot;, &quot;5 wiki.org&quot;]\n<strong>Output:</strong> \n[&quot;901 mail.com&quot;,&quot;50 yahoo.com&quot;,&quot;900 google.mail.com&quot;,&quot;5 wiki.org&quot;,&quot;5 org&quot;,&quot;1 intel.mail.com&quot;,&quot;951 com&quot;]\n<strong>Explanation:</strong> \nWe will visit &quot;google.mail.com&quot; 900 times, &quot;yahoo.com&quot; 50 times, &quot;intel.mail.com&quot; once and &quot;wiki.org&quot; 5 times. For the subdomains, we will visit &quot;mail.com&quot; 900 + 1 = 901 times, &quot;com&quot; 900 + 50 + 1 = 951 times, and &quot;org&quot; 5 times.\n\n</pre>\n\n<p><strong>Notes: </strong></p>\n\n<ul>\n\t<li>The length of <code>cpdomains</code> will not exceed&nbsp;<code>100</code>.&nbsp;</li>\n\t<li>The length of each domain name will not exceed <code>100</code>.</li>\n\t<li>Each address will have either 1 or 2 &quot;.&quot; characters.</li>\n\t<li>The input count&nbsp;in any count-paired domain will not exceed <code>10000</code>.</li>\n\t<li>The answer output can be returned in any order.</li>\n</ul>\n"
    },
    {
        "id": "678",
        "title": "Valid Parenthesis String",
        "slug": "valid-parenthesis-string",
        "difficulty": "Medium",
        "likes": 749,
        "dislikes": 25,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Special Binary String\", \"titleSlug\": \"special-binary-string\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "246",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String"
        ],
        "content": "<p>\nGiven a string containing only three types of characters: '(', ')' and '*', write a function to check whether this string is valid. We define the validity of a string by these rules:\n<ol>\n<li>Any left parenthesis <code>'('</code> must have a corresponding right parenthesis <code>')'</code>.</li>\n<li>Any right parenthesis <code>')'</code> must have a corresponding left parenthesis <code>'('</code>.</li>\n<li>Left parenthesis <code>'('</code> must go before the corresponding right parenthesis <code>')'</code>.</li>\n<li><code>'*'</code> could be treated as a single right parenthesis <code>')'</code> or a single left parenthesis <code>'('</code> or an empty string.</li>\n<li>An empty string is also valid.</li>\n</ol>\n</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> \"()\"\n<b>Output:</b> True\n</pre>\n</p>\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b> \"(*)\"\n<b>Output:</b> True\n</pre>\n</p>\n\n<p><b>Example 3:</b><br />\n<pre>\n<b>Input:</b> \"(*))\"\n<b>Output:</b> True\n</pre>\n</p>\n\n<p><b>Note:</b><br>\n<ol>\n<li>The string size will be in the range [1, 100].</li>\n</ol>\n</p>"
    },
    {
        "id": "628",
        "title": "Maximum Product of Three Numbers",
        "slug": "maximum-product-of-three-numbers",
        "difficulty": "Easy",
        "likes": 762,
        "dislikes": 283,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Maximum Product Subarray\", \"titleSlug\": \"maximum-product-subarray\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "186",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Math"
        ],
        "content": "<p>Given an integer array, find three numbers whose product is maximum and output the maximum product.</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> [1,2,3]\n<b>Output:</b> 6\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input:</b> [1,2,3,4]\n<b>Output:</b> 24\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b></p>\n\n<ol>\n\t<li>The length of the given array will be in range [3,10<sup>4</sup>] and all elements are in the range [-1000, 1000].</li>\n\t<li>Multiplication of any three numbers in the input won&#39;t exceed the range of 32-bit signed integer.</li>\n</ol>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "74",
        "title": "Search a 2D Matrix",
        "slug": "search-a-2d-matrix",
        "difficulty": "Medium",
        "likes": 1001,
        "dislikes": 118,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Search a 2D Matrix II\", \"titleSlug\": \"search-a-2d-matrix-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "717",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Binary Search"
        ],
        "content": "<p>Write an efficient algorithm that searches for a value in an <em>m</em> x <em>n</em> matrix. This matrix has the following properties:</p>\n\n<ul>\n\t<li>Integers in each row are sorted from left to right.</li>\n\t<li>The first integer of each row is greater than the last integer of the previous row.</li>\n</ul>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong>\nmatrix = [\n  [1,   3,  5,  7],\n  [10, 11, 16, 20],\n  [23, 30, 34, 50]\n]\ntarget = 3\n<strong>Output:</strong> true\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong>\nmatrix = [\n  [1,   3,  5,  7],\n  [10, 11, 16, 20],\n  [23, 30, 34, 50]\n]\ntarget = 13\n<strong>Output:</strong> false</pre>\n"
    },
    {
        "id": "1175",
        "title": "Prime Arrangements",
        "slug": "prime-arrangements",
        "difficulty": "Easy",
        "likes": 33,
        "dislikes": 67,
        "hints": [
            "Solve the problem for prime numbers and composite numbers separately.",
            "Multiply the number of permutations of prime numbers over prime indices with the number of permutations of composite numbers over composite indices.",
            "The number of permutations equals the factorial."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Math"
        ],
        "content": "<p>Return the number of permutations of 1 to <code>n</code> so that prime numbers are at prime indices (1-indexed.)</p>\n\n<p><em>(Recall that an integer&nbsp;is prime if and only if it is greater than 1, and cannot be written as a product of two positive integers&nbsp;both smaller than it.)</em></p>\n\n<p>Since the answer may be large, return the answer <strong>modulo <code>10^9 + 7</code></strong>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 5\n<strong>Output:</strong> 12\n<strong>Explanation:</strong> For example [1,2,5,4,3] is a valid permutation, but [5,2,3,4,1] is not because the prime number 5 is at index 1.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 100\n<strong>Output:</strong> 682289015\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 100</code></li>\n</ul>\n"
    },
    {
        "id": "238",
        "title": "Product of Array Except Self",
        "slug": "product-of-array-except-self",
        "difficulty": "Medium",
        "likes": 2705,
        "dislikes": 234,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Trapping Rain Water\", \"titleSlug\": \"trapping-rain-water\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Maximum Product Subarray\", \"titleSlug\": \"maximum-product-subarray\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Paint House II\", \"titleSlug\": \"paint-house-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "727",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array"
        ],
        "content": "<p>Given an array <code>nums</code> of <em>n</em> integers where <em>n</em> &gt; 1, &nbsp;return an array <code>output</code> such that <code>output[i]</code> is equal to the product of all the elements of <code>nums</code> except <code>nums[i]</code>.</p>\n\n<p><b>Example:</b></p>\n\n<pre>\n<b>Input:</b>  <code>[1,2,3,4]</code>\n<b>Output:</b> <code>[24,12,8,6]</code>\n</pre>\n\n<p><strong>Note: </strong>Please solve it <strong>without division</strong> and in O(<em>n</em>).</p>\n\n<p><strong>Follow up:</strong><br />\nCould you solve it with constant space complexity? (The output array <strong>does not</strong> count as extra space for the purpose of space complexity analysis.)</p>\n"
    },
    {
        "id": "239",
        "title": "Sliding Window Maximum",
        "slug": "sliding-window-maximum",
        "difficulty": "Hard",
        "likes": 2037,
        "dislikes": 119,
        "hints": [
            "How about using a data structure such as deque (double-ended queue)?",
            "The queue size need not be the same as the window\u2019s size.",
            "Remove redundant elements and the queue should store only elements that need to be considered."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Minimum Window Substring\", \"titleSlug\": \"minimum-window-substring\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Min Stack\", \"titleSlug\": \"min-stack\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Longest Substring with At Most Two Distinct Characters\", \"titleSlug\": \"longest-substring-with-at-most-two-distinct-characters\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Paint House II\", \"titleSlug\": \"paint-house-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "705",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Heap",
            "Sliding Window"
        ],
        "content": "<p>Given an array <em>nums</em>, there is a sliding window of size <em>k</em> which is moving from the very left of the array to the very right. You can only see the <em>k</em> numbers in the window. Each time the sliding window moves right by one position. Return the max sliding window.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input:</strong> <em>nums</em> = <code>[1,3,-1,-3,5,3,6,7]</code>, and <em>k</em> = 3\n<strong>Output: </strong><code>[3,3,5,5,6,7] \n<strong>Explanation: \n</strong></code>\nWindow position                Max\n---------------               -----\n[1  3  -1] -3  5  3  6  7       <strong>3</strong>\n 1 [3  -1  -3] 5  3  6  7       <strong>3</strong>\n 1  3 [-1  -3  5] 3  6  7      <strong> 5</strong>\n 1  3  -1 [-3  5  3] 6  7       <strong>5</strong>\n 1  3  -1  -3 [5  3  6] 7       <strong>6</strong>\n 1  3  -1  -3  5 [3  6  7]      <strong>7</strong>\n</pre>\n\n<p><strong>Note: </strong><br />\nYou may assume <em>k</em> is always valid, 1 &le; k &le; input array&#39;s size for non-empty array.</p>\n\n<p><strong>Follow up:</strong><br />\nCould you solve it in linear time?</p>"
    },
    {
        "id": "413",
        "title": "Arithmetic Slices",
        "slug": "arithmetic-slices",
        "difficulty": "Medium",
        "likes": 658,
        "dislikes": 133,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Arithmetic Slices II - Subsequence\", \"titleSlug\": \"arithmetic-slices-ii-subsequence\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "219",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math",
            "Dynamic Programming"
        ],
        "content": "<p>A sequence of number is called arithmetic if it consists of at least three elements and if the difference between any two consecutive elements is the same.</p>\n\n<p>For example, these are arithmetic sequence:</p>\n<pre>1, 3, 5, 7, 9\n7, 7, 7, 7\n3, -1, -5, -9</pre>\n\n<p>The following sequence is not arithmetic.</p> <pre>1, 1, 2, 5, 7</pre> \n<br/>\n\n<p>A zero-indexed array A consisting of N numbers is given. A slice of that array is any pair of integers (P, Q) such that 0 <= P < Q < N.</p>\n\n<p>A slice (P, Q) of array A is called arithmetic if the sequence:<br/>\n    A[P], A[p + 1], ..., A[Q - 1], A[Q] is arithmetic. In particular, this means that P + 1 < Q.</p>\n\n<p>The function should return the number of arithmetic slices in the array A. </p>\n<br/>\n\n<p><b>Example:</b>\n<pre>\nA = [1, 2, 3, 4]\n\nreturn: 3, for 3 arithmetic slices in A: [1, 2, 3], [2, 3, 4] and [1, 2, 3, 4] itself.\n</pre>"
    },
    {
        "id": "999",
        "title": "Available Captures for Rook",
        "slug": "available-captures-for-rook",
        "difficulty": "Easy",
        "likes": 106,
        "dislikes": 262,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Array"
        ],
        "content": "<p>On an 8 x 8 chessboard, there is one white rook.&nbsp; There also may be empty squares, white bishops, and black pawns.&nbsp; These are given as characters &#39;R&#39;, &#39;.&#39;, &#39;B&#39;, and &#39;p&#39; respectively. Uppercase characters represent white pieces, and lowercase characters represent black pieces.</p>\n\n<p>The rook moves as in the rules of Chess: it chooses one of four cardinal directions (north, east, west, and south), then moves in that direction until it chooses to stop, reaches the edge of the board, or captures an opposite colored pawn by moving to the same square it occupies.&nbsp; Also, rooks cannot move into the same square as other friendly bishops.</p>\n\n<p>Return the number of pawns the rook can capture in one move.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<p><img alt=\"\" src=\"./img/available-captures-for-rook_1.PNG\" style=\"width: 300px; height: 305px;\" /></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;p&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;R&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;p&quot;],[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;p&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;]]</span>\n<strong>Output: </strong><span id=\"example-output-1\">3</span>\n<strong>Explanation: </strong>\nIn this example the rook is able to capture all the pawns.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<p><img alt=\"\" src=\"./img/available-captures-for-rook_2.PNG\" style=\"width: 300px; height: 306px;\" /></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;p&quot;,&quot;p&quot;,&quot;p&quot;,&quot;p&quot;,&quot;p&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;p&quot;,&quot;p&quot;,&quot;B&quot;,&quot;p&quot;,&quot;p&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;p&quot;,&quot;B&quot;,&quot;R&quot;,&quot;B&quot;,&quot;p&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;p&quot;,&quot;p&quot;,&quot;B&quot;,&quot;p&quot;,&quot;p&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;p&quot;,&quot;p&quot;,&quot;p&quot;,&quot;p&quot;,&quot;p&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;]]</span>\n<strong>Output: </strong><span id=\"example-output-2\">0</span>\n<strong>Explanation: </strong>\nBishops are blocking the rook to capture any pawn.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<p><img alt=\"\" src=\"./img/available-captures-for-rook_3.PNG\" style=\"width: 300px; height: 305px;\" /></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">[[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;p&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;p&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;p&quot;,&quot;p&quot;,&quot;.&quot;,&quot;R&quot;,&quot;.&quot;,&quot;p&quot;,&quot;B&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;B&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;p&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],[&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;]]</span>\n<strong>Output: </strong><span id=\"example-output-3\">3</span>\n<strong>Explanation: </strong>\nThe rook can capture the pawns at positions b5, d6 and f5.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>board.length == board[i].length == 8</code></li>\n\t<li><code>board[i][j]</code> is either <code>&#39;R&#39;</code>, <code>&#39;.&#39;</code>, <code>&#39;B&#39;</code>, or&nbsp;<code>&#39;p&#39;</code></li>\n\t<li>There is exactly one cell with <code>board[i][j] == &#39;R&#39;</code></li>\n</ol>\n"
    },
    {
        "id": "521",
        "title": "Longest Uncommon Subsequence I ",
        "slug": "longest-uncommon-subsequence-i",
        "difficulty": "Easy",
        "likes": 223,
        "dislikes": 3565,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Longest Uncommon Subsequence II\", \"titleSlug\": \"longest-uncommon-subsequence-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "99",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String"
        ],
        "content": "<p>\nGiven a group of two strings, you need to find the longest uncommon subsequence of this group of two strings.\nThe longest uncommon subsequence is defined as the longest subsequence of one of these strings and this subsequence should not be <b>any</b> subsequence of the other strings.\n</p>\n\n<p>\nA <b>subsequence</b> is a sequence that can be derived from one sequence by deleting some characters without changing the order of the remaining elements. Trivially, any string is a subsequence of itself and an empty string is a subsequence of any string.\n</p>\n\n<p>\nThe input will be two strings, and the output needs to be the length of the longest uncommon subsequence. If the longest uncommon subsequence doesn't exist, return -1.\n</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> \"aba\", \"cdc\"\n<b>Output:</b> 3\n<b>Explanation:</b> The longest uncommon subsequence is \"aba\" (or \"cdc\"), <br/>because \"aba\" is a subsequence of \"aba\", <br/>but not a subsequence of any other strings in the group of two strings. \n</pre>\n</p>\n\n<p><b>Note:</b>\n<ol>\n<li>Both strings' lengths will not exceed 100.</li>\n<li>Only letters from a ~ z will appear in input strings. </li>\n</ol>\n</p>"
    },
    {
        "id": "133",
        "title": "Clone Graph",
        "slug": "clone-graph",
        "difficulty": "Medium",
        "likes": 942,
        "dislikes": 982,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Copy List with Random Pointer\", \"titleSlug\": \"copy-list-with-random-pointer\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Depth-first Search",
            "Breadth-first Search",
            "Graph"
        ],
        "content": "<p>Given&nbsp;a reference of a node in a&nbsp;<strong><a href=\"https://en.wikipedia.org/wiki/Connectivity_(graph_theory)#Connected_graph\" target=\"_blank\">connected</a></strong>&nbsp;undirected graph, return a <a href=\"https://en.wikipedia.org/wiki/Object_copying#Deep_copy\" target=\"_blank\"><strong>deep copy</strong></a> (clone) of the graph. Each node in the graph contains a val (<code>int</code>) and a list (<code>List[Node]</code>) of its neighbors.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example:</strong></p>\n\n<p><img alt=\"\" src=\"./img/clone-graph_1.png\" style=\"width: 200px; height: 149px;\" /></p>\n\n<pre>\n<strong>Input:\n</strong>{&quot;$id&quot;:&quot;1&quot;,&quot;neighbors&quot;:[{&quot;$id&quot;:&quot;2&quot;,&quot;neighbors&quot;:[{&quot;$ref&quot;:&quot;1&quot;},{&quot;$id&quot;:&quot;3&quot;,&quot;neighbors&quot;:[{&quot;$ref&quot;:&quot;2&quot;},{&quot;$id&quot;:&quot;4&quot;,&quot;neighbors&quot;:[{&quot;$ref&quot;:&quot;3&quot;},{&quot;$ref&quot;:&quot;1&quot;}],&quot;val&quot;:4}],&quot;val&quot;:3}],&quot;val&quot;:2},{&quot;$ref&quot;:&quot;4&quot;}],&quot;val&quot;:1}\n\n<strong>Explanation:</strong>\nNode 1&#39;s value is 1, and it has two neighbors: Node 2 and 4.\nNode 2&#39;s value is 2, and it has two neighbors: Node 1 and 3.\nNode 3&#39;s value is 3, and it has two neighbors: Node 2 and 4.\nNode 4&#39;s value is 4, and it has two neighbors: Node 1 and 3.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li>The number of nodes will be between 1 and 100.</li>\n\t<li>The undirected&nbsp;graph is a <a href=\"https://en.wikipedia.org/wiki/Graph_(discrete_mathematics)#Simple_graph\" target=\"_blank\">simple graph</a>,&nbsp;which means no repeated edges and no self-loops in the graph.</li>\n\t<li>Since the graph is undirected, if node <em>p</em>&nbsp;has node <em>q</em>&nbsp;as&nbsp;neighbor, then node <em>q</em>&nbsp;must have node <em>p</em>&nbsp;as neighbor too.</li>\n\t<li>You must return the <strong>copy of the given node</strong> as a reference to the cloned graph.</li>\n</ol>\n"
    },
    {
        "id": "312",
        "title": "Burst Balloons",
        "slug": "burst-balloons",
        "difficulty": "Hard",
        "likes": 1537,
        "dislikes": 47,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Minimum Cost to Merge Stones\", \"titleSlug\": \"minimum-cost-to-merge-stones\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "740",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Divide and Conquer",
            "Dynamic Programming"
        ],
        "content": "<p>Given <code>n</code> balloons, indexed from <code>0</code> to <code>n-1</code>. Each balloon is painted with a number on it represented by array <code>nums</code>. You are asked to burst all the balloons. If the you burst balloon <code>i</code> you will get <code>nums[left] * nums[i] * nums[right]</code> coins. Here <code>left</code> and <code>right</code> are adjacent indices of <code>i</code>. After the burst, the <code>left</code> and <code>right</code> then becomes adjacent.</p>\n\n<p>Find the maximum coins you can collect by bursting the balloons wisely.</p>\n\n<p><b>Note:</b></p>\n\n<ul>\n\t<li>You may imagine <code>nums[-1] = nums[n] = 1</code>. They are not real therefore you can not burst them.</li>\n\t<li>0 &le; <code>n</code> &le; 500, 0 &le; <code>nums[i]</code> &le; 100</li>\n</ul>\n\n<p><b>Example:</b></p>\n\n<pre>\n<b>Input:</b> <code>[3,1,5,8]</code>\n<b>Output:</b> <code>167 \n<strong>Explanation: </strong></code>nums = [3,1,5,8] --&gt; [3,5,8] --&gt;   [3,8]   --&gt;  [8]  --&gt; []\n&nbsp;            coins =  3*1*5      +  3*5*8    +  1*3*8      + 1*8*1   = 167\n</pre>"
    },
    {
        "id": "516",
        "title": "Longest Palindromic Subsequence",
        "slug": "longest-palindromic-subsequence",
        "difficulty": "Medium",
        "likes": 1080,
        "dislikes": 140,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Longest Palindromic Substring\", \"titleSlug\": \"longest-palindromic-substring\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Palindromic Substrings\", \"titleSlug\": \"palindromic-substrings\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Count Different Palindromic Subsequences\", \"titleSlug\": \"count-different-palindromic-subsequences\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Longest Common Subsequence\", \"titleSlug\": \"longest-common-subsequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>\nGiven a string s, find the longest palindromic subsequence's length in s. You may assume that the maximum length of s is 1000.\n</p>\n\n<p><b>Example 1:</b><br>\nInput: \n<pre>\n\"bbbab\"\n</pre>\nOutput: \n<pre>\n4\n</pre>\nOne possible longest palindromic subsequence is \"bbbb\".\n</p>\n\n<p><b>Example 2:</b><br>\nInput:\n<pre>\n\"cbbd\"\n</pre>\nOutput:\n<pre>\n2\n</pre>\nOne possible longest palindromic subsequence is \"bb\".\n</p>"
    },
    {
        "id": "140",
        "title": "Word Break II",
        "slug": "word-break-ii",
        "difficulty": "Hard",
        "likes": 1147,
        "dislikes": 264,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Word Break\", \"titleSlug\": \"word-break\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Concatenated Words\", \"titleSlug\": \"concatenated-words\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "76",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming",
            "Backtracking"
        ],
        "content": "<p>Given a <strong>non-empty</strong> string <em>s</em> and a dictionary <em>wordDict</em> containing a list of <strong>non-empty</strong> words, add spaces in <em>s</em> to construct a sentence where each word is a valid dictionary word.&nbsp;Return all such possible sentences.</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>The same word in the dictionary may be reused multiple times in the segmentation.</li>\n\t<li>You may assume the dictionary does not contain duplicate words.</li>\n</ul>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:\n</strong>s = &quot;<code>catsanddog</code>&quot;\nwordDict = <code>[&quot;cat&quot;, &quot;cats&quot;, &quot;and&quot;, &quot;sand&quot;, &quot;dog&quot;]</code>\n<strong>Output:\n</strong><code>[\n&nbsp; &quot;cats and dog&quot;,\n&nbsp; &quot;cat sand dog&quot;\n]</code>\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:\n</strong>s = &quot;pineapplepenapple&quot;\nwordDict = [&quot;apple&quot;, &quot;pen&quot;, &quot;applepen&quot;, &quot;pine&quot;, &quot;pineapple&quot;]\n<strong>Output:\n</strong>[\n&nbsp; &quot;pine apple pen apple&quot;,\n&nbsp; &quot;pineapple pen apple&quot;,\n&nbsp; &quot;pine applepen apple&quot;\n]\n<strong>Explanation:</strong> Note that you are allowed to reuse a dictionary word.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:\n</strong>s = &quot;catsandog&quot;\nwordDict = [&quot;cats&quot;, &quot;dog&quot;, &quot;sand&quot;, &quot;and&quot;, &quot;cat&quot;]\n<strong>Output:\n</strong>[]</pre>\n"
    },
    {
        "id": "763",
        "title": "Partition Labels",
        "slug": "partition-labels",
        "difficulty": "Medium",
        "likes": 1213,
        "dislikes": 63,
        "hints": [
            "Try to greedily choose the smallest partition that includes the first letter.  If you have something like \"abaccbdeffed\", then you might need to add b.  You can use an map like \"last['b'] = 5\" to help you expand the width of your partition."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Merge Intervals\", \"titleSlug\": \"merge-intervals\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "374",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Two Pointers",
            "Greedy"
        ],
        "content": "<p>\nA string <code>S</code> of lowercase letters is given.  We want to partition this string into as many parts as possible so that each letter appears in at most one part, and return a list of integers representing the size of these parts.\n</p><p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> S = \"ababcbacadefegdehijhklij\"\n<b>Output:</b> [9,7,8]\n<b>Explanation:</b>\nThe partition is \"ababcbaca\", \"defegde\", \"hijhklij\".\nThis is a partition so that each letter appears in at most one part.\nA partition like \"ababcbacadefegde\", \"hijhklij\" is incorrect, because it splits S into less parts.\n</pre>\n</p>\n\n<p><b>Note:</b><br><ol>\n<li><code>S</code> will have length in range <code>[1, 500]</code>.</li>\n<li><code>S</code> will consist of lowercase letters (<code>'a'</code> to <code>'z'</code>) only.</li>\n</ol></p>"
    },
    {
        "id": "198",
        "title": "House Robber",
        "slug": "house-robber",
        "difficulty": "Easy",
        "likes": 2966,
        "dislikes": 93,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Maximum Product Subarray\", \"titleSlug\": \"maximum-product-subarray\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"House Robber II\", \"titleSlug\": \"house-robber-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Paint House\", \"titleSlug\": \"paint-house\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Paint Fence\", \"titleSlug\": \"paint-fence\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"House Robber III\", \"titleSlug\": \"house-robber-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Non-negative Integers without Consecutive Ones\", \"titleSlug\": \"non-negative-integers-without-consecutive-ones\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Coin Path\", \"titleSlug\": \"coin-path\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Delete and Earn\", \"titleSlug\": \"delete-and-earn\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "11",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>You are a professional robber planning to rob houses along a street. Each house has a certain amount of money stashed, the only constraint stopping you from robbing each of them is that adjacent houses have security system connected and <b>it will automatically contact the police if two adjacent houses were broken into on the same night</b>.</p>\n\n<p>Given a list of non-negative integers representing the amount of money of each house, determine the maximum amount of money you can rob tonight <b>without alerting the police</b>.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> [1,2,3,1]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> Rob house 1 (money = 1) and then rob house 3 (money = 3).\n&nbsp;            Total amount you can rob = 1 + 3 = 4.</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> [2,7,9,3,1]\n<strong>Output:</strong> 12\n<strong>Explanation:</strong> Rob house 1 (money = 2), rob house 3 (money = 9) and rob house 5 (money = 1).\n&nbsp;            Total amount you can rob = 2 + 9 + 1 = 12.\n</pre>\n"
    },
    {
        "id": "858",
        "title": "Mirror Reflection",
        "slug": "mirror-reflection",
        "difficulty": "Medium",
        "likes": 144,
        "dislikes": 235,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "494",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math"
        ],
        "content": "<p>There is&nbsp;a special square room with mirrors on each of the four&nbsp;walls.&nbsp; Except for the southwest&nbsp;corner, there are receptors on each of the remaining corners, numbered <code>0</code>, <code>1</code>, and <code>2</code>.</p>\n\n<p>The square room has walls of length <code>p</code>, and a laser ray from the southwest corner&nbsp;first meets the east wall at a distance <code>q</code>&nbsp;from the <code>0</code>th receptor.</p>\n\n<p>Return the number of the receptor that the ray meets first.&nbsp; (It is guaranteed that the ray will meet&nbsp;a receptor eventually.)</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>p = <span id=\"example-input-1-1\">2</span>, q = <span id=\"example-input-1-2\">1</span>\n<strong>Output: </strong><span id=\"example-output-1\">2</span>\n<strong>Explanation: </strong>The ray meets receptor 2 the first time it gets reflected back to the left wall.\n<p><img alt=\"\" src=\"https://ibb.co/mYSFJT\" /><img alt=\"\" src=\"./img/mirror-reflection_1.png\" style=\"width: 218px; height: 217px;\" /></p>\n</pre>\n\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= p &lt;= 1000</code></li>\n\t<li><code>0 &lt;= q &lt;= p</code></li>\n</ol>\n</div>\n"
    },
    {
        "id": "64",
        "title": "Minimum Path Sum",
        "slug": "minimum-path-sum",
        "difficulty": "Medium",
        "likes": 1610,
        "dislikes": 43,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Unique Paths\", \"titleSlug\": \"unique-paths\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Dungeon Game\", \"titleSlug\": \"dungeon-game\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Cherry Pickup\", \"titleSlug\": \"cherry-pickup\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "68",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Dynamic Programming"
        ],
        "content": "<p>Given a <em>m</em> x <em>n</em> grid filled with non-negative numbers, find a path from top left to bottom right which <em>minimizes</em> the sum of all numbers along its path.</p>\n\n<p><strong>Note:</strong> You can only move either down or right at any point in time.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input:</strong>\n[\n&nbsp; [1,3,1],\n  [1,5,1],\n  [4,2,1]\n]\n<strong>Output:</strong> 7\n<strong>Explanation:</strong> Because the path 1&rarr;3&rarr;1&rarr;1&rarr;1 minimizes the sum.\n</pre>\n"
    },
    {
        "id": "997",
        "title": "Find the Town Judge",
        "slug": "find-the-town-judge",
        "difficulty": "Easy",
        "likes": 228,
        "dislikes": 36,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Find the Celebrity\", \"titleSlug\": \"find-the-celebrity\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Graph"
        ],
        "content": "<p>In a town, there are <code>N</code> people labelled from&nbsp;<code>1</code> to <code>N</code>.&nbsp; There is a rumor that one of these people is secretly the town judge.</p>\n\n<p>If the&nbsp;town judge exists, then:</p>\n\n<ol>\n\t<li>The town judge trusts nobody.</li>\n\t<li>Everybody (except for the town judge) trusts the town judge.</li>\n\t<li>There is exactly one person that satisfies properties 1 and 2.</li>\n</ol>\n\n<p>You are given <code>trust</code>, an array of pairs <code>trust[i] = [a, b]</code> representing that the person labelled <code>a</code> trusts the person labelled <code>b</code>.</p>\n\n<p>If the town judge exists and can be identified, return the label of the town judge.&nbsp; Otherwise, return <code>-1</code>.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>N = <span id=\"example-input-1-1\">2</span>, trust = <span id=\"example-input-1-2\">[[1,2]]</span>\n<strong>Output: </strong><span id=\"example-output-1\">2</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>N = <span id=\"example-input-2-1\">3</span>, trust = <span id=\"example-input-2-2\">[[1,3],[2,3]]</span>\n<strong>Output: </strong><span id=\"example-output-2\">3</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>N = <span id=\"example-input-3-1\">3</span>, trust = <span id=\"example-input-3-2\">[[1,3],[2,3],[3,1]]</span>\n<strong>Output: </strong><span id=\"example-output-3\">-1</span>\n</pre>\n\n<div>\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input: </strong>N = <span id=\"example-input-4-1\">3</span>, trust = <span id=\"example-input-4-2\">[[1,2],[2,3]]</span>\n<strong>Output: </strong><span id=\"example-output-4\">-1</span>\n</pre>\n\n<div>\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input: </strong>N = <span id=\"example-input-5-1\">4</span>, trust = <span id=\"example-input-5-2\">[[1,3],[1,4],[2,3],[2,4],[4,3]]</span>\n<strong>Output: </strong><span id=\"example-output-5\">3</span></pre>\n\n<p>&nbsp;</p>\n</div>\n</div>\n</div>\n</div>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= N &lt;= 1000</code></li>\n\t<li><code>trust.length &lt;= 10000</code></li>\n\t<li><code>trust[i]</code> are all different</li>\n\t<li><code>trust[i][0] != trust[i][1]</code></li>\n\t<li><code>1 &lt;= trust[i][0], trust[i][1] &lt;= N</code></li>\n</ol>\n"
    },
    {
        "id": "1073",
        "title": "Adding Two Negabinary Numbers",
        "slug": "adding-two-negabinary-numbers",
        "difficulty": "Medium",
        "likes": 61,
        "dislikes": 32,
        "hints": [
            "We can try to determine the last digit of the answer, then divide everything by 2 and repeat."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Math"
        ],
        "content": "<p>Given two numbers <code>arr1</code> and <code>arr2</code> in base <strong>-2</strong>, return the result of adding them together.</p>\n\n<p>Each number is given in <em>array format</em>:&nbsp; as an array of 0s and 1s, from most significant bit to least significant bit.&nbsp; For example, <code>arr = [1,1,0,1]</code> represents the number <code>(-2)^3&nbsp;+ (-2)^2 + (-2)^0 = -3</code>.&nbsp; A number <code>arr</code> in <em>array format</em> is also guaranteed to have no leading zeros: either&nbsp;<code>arr == [0]</code> or <code>arr[0] == 1</code>.</p>\n\n<p>Return the result of adding <code>arr1</code> and <code>arr2</code> in the same format: as an array of 0s and 1s with no leading zeros.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>arr1 = <span id=\"example-input-1-1\">[1,1,1,1,1]</span>, arr2 = <span id=\"example-input-1-2\">[1,0,1]</span>\n<strong>Output: </strong><span id=\"example-output-1\">[1,0,0,0,0]\n</span><strong>Explanation: </strong>arr1 represents 11, arr2 represents 5, the output represents 16.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= arr1.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= arr2.length &lt;= 1000</code></li>\n\t<li><code>arr1</code> and <code>arr2</code> have no leading zeros</li>\n\t<li><code>arr1[i]</code> is <code>0</code> or <code>1</code></li>\n\t<li><code>arr2[i]</code> is <code>0</code> or <code>1</code></li>\n</ol>"
    },
    {
        "id": "492",
        "title": "Construct the Rectangle",
        "slug": "construct-the-rectangle",
        "difficulty": "Easy",
        "likes": 143,
        "dislikes": 222,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [],
        "content": "<p>\nFor a web developer, it is very important to know how to design a web page's size. So, given a specific rectangular web page\u2019s area, your job by now is to design a rectangular web page, whose length L and width W satisfy the following requirements:<pre>\n1. The area of the rectangular web page you designed must equal to the given target area.\n<br>2. The width W should not be larger than the length L, which means L >= W.\n<br>3. The difference between length L and width W should be as small as possible.\n</pre>\nYou need to output the length L and the width W of the web page you designed in sequence.\n</p>\n\n\n<p><b>Example:</b><br />\n<pre>\n<b>Input:</b> 4\n<b>Output:</b> [2, 2]\n<b>Explanation:</b> The target area is 4, and all the possible ways to construct it are [1,4], [2,2], [4,1]. \nBut according to requirement 2, [1,4] is illegal; according to requirement 3,  [4,1] is not optimal compared to [2,2]. So the length L is 2, and the width W is 2.\n</pre>\n</p>\n\n<p><b>Note:</b><br>\n<ol>\n<li>The given area won't exceed 10,000,000 and is a positive integer</li>\n<li>The web page's width and length you designed must be positive integers.</li>\n</ol>\n</p>"
    },
    {
        "id": "923",
        "title": "3Sum With Multiplicity",
        "slug": "3sum-with-multiplicity",
        "difficulty": "Medium",
        "likes": 222,
        "dislikes": 44,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "587",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Two Pointers"
        ],
        "content": "<p>Given an integer array <code>A</code>, and an integer <code>target</code>, return the number of&nbsp;tuples&nbsp;<code>i, j, k</code>&nbsp; such that <code>i &lt; j &lt; k</code> and&nbsp;<code>A[i] + A[j] + A[k] == target</code>.</p>\n\n<p><strong>As the answer can be very large, return it modulo&nbsp;<code>10^9 + 7</code></strong>.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-1-1\">[1,1,2,2,3,3,4,4,5,5]</span>, target = <span id=\"example-input-1-2\">8</span>\n<strong>Output: </strong><span id=\"example-output-1\">20</span>\n<strong>Explanation: </strong>\nEnumerating by the values (A[i], A[j], A[k]):\n(1, 2, 5) occurs 8 times;\n(1, 3, 4) occurs 8 times;\n(2, 2, 4) occurs 2 times;\n(2, 3, 3) occurs 2 times.\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-2-1\">[1,1,2,2,2,2]</span>, target = <span id=\"example-input-2-2\">5</span>\n<strong>Output: </strong><span id=\"example-output-2\">12</span>\n<strong>Explanation: </strong>\nA[i] = 1, A[j] = A[k] = 2 occurs 12 times:\nWe choose one 1 from [1,1] in 2 ways,\nand two 2s from [2,2,2,2] in 6 ways.\n</pre>\n\n<p>&nbsp;</p>\n</div>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>3 &lt;= A.length &lt;= 3000</code></li>\n\t<li><code>0 &lt;= A[i] &lt;= 100</code></li>\n\t<li><code>0 &lt;= target &lt;= 300</code></li>\n</ol>"
    },
    {
        "id": "241",
        "title": "Different Ways to Add Parentheses",
        "slug": "different-ways-to-add-parentheses",
        "difficulty": "Medium",
        "likes": 1094,
        "dislikes": 55,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Unique Binary Search Trees II\", \"titleSlug\": \"unique-binary-search-trees-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Basic Calculator\", \"titleSlug\": \"basic-calculator\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Expression Add Operators\", \"titleSlug\": \"expression-add-operators\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Divide and Conquer"
        ],
        "content": "<p>Given a string of numbers and operators, return all possible results from computing all the different possible ways to group numbers and operators. The valid operators are <code>+</code>, <code>-</code> and <code>*</code>.</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> <code>&quot;2-1-1&quot;</code>\n<b>Output:</b> <code>[0, 2]</code>\n<strong>Explanation: </strong>\n((2-1)-1) = 0 \n(2-(1-1)) = 2</pre>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input: </b><code>&quot;2*3-4*5&quot;</code>\n<b>Output:</b> <code>[-34, -14, -10, -10, 10]</code>\n<strong>Explanation: \n</strong>(2*(3-(4*5))) = -34 \n((2*3)-(4*5)) = -14 \n((2*(3-4))*5) = -10 \n(2*((3-4)*5)) = -10 \n(((2*3)-4)*5) = 10<strong>\n</strong></pre>"
    },
    {
        "id": "106",
        "title": "Construct Binary Tree from Inorder and Postorder Traversal",
        "slug": "construct-binary-tree-from-inorder-and-postorder-traversal",
        "difficulty": "Medium",
        "likes": 1006,
        "dislikes": 21,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Construct Binary Tree from Preorder and Inorder Traversal\", \"titleSlug\": \"construct-binary-tree-from-preorder-and-inorder-traversal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "732",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Tree",
            "Depth-first Search"
        ],
        "content": "<p>Given inorder and postorder traversal of a tree, construct the binary tree.</p>\n\n<p><strong>Note:</strong><br />\nYou may assume that duplicates do not exist in the tree.</p>\n\n<p>For example, given</p>\n\n<pre>\ninorder =&nbsp;[9,3,15,20,7]\npostorder = [9,15,7,20,3]</pre>\n\n<p>Return the following binary tree:</p>\n\n<pre>\n    3\n   / \\\n  9  20\n    /  \\\n   15   7\n</pre>\n"
    },
    {
        "id": "289",
        "title": "Game of Life",
        "slug": "game-of-life",
        "difficulty": "Medium",
        "likes": 1094,
        "dislikes": 201,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Set Matrix Zeroes\", \"titleSlug\": \"set-matrix-zeroes\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "729",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array"
        ],
        "content": "<p>According to the <a href=\"https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life\" target=\"_blank\">Wikipedia&#39;s article</a>: &quot;The <b>Game of Life</b>, also known simply as <b>Life</b>, is a cellular automaton devised by the British mathematician John Horton Conway in 1970.&quot;</p>\n\n<p>Given a <i>board</i> with <i>m</i> by <i>n</i> cells, each cell has an initial state <i>live</i> (1) or <i>dead</i> (0). Each cell interacts with its <a href=\"https://en.wikipedia.org/wiki/Moore_neighborhood\" target=\"_blank\">eight neighbors</a> (horizontal, vertical, diagonal) using the following four rules (taken from the above Wikipedia article):</p>\n\n<ol>\n\t<li>Any live cell with fewer than two live neighbors dies, as if caused by under-population.</li>\n\t<li>Any live cell with two or three live neighbors lives on to the next generation.</li>\n\t<li>Any live cell with more than three live neighbors dies, as if by over-population..</li>\n\t<li>Any dead cell with exactly three live neighbors becomes a live cell, as if by reproduction.</li>\n</ol>\n\n<p>Write a function to compute the next state (after one update) of the board given its current state.&nbsp;<span>The next state is created by applying the above rules simultaneously to every cell in the current state, where&nbsp;births and deaths occur simultaneously.</span></p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input: \n</strong><span id=\"example-input-1-1\">[\n&nbsp; [0,1,0],\n&nbsp; [0,0,1],\n&nbsp; [1,1,1],\n&nbsp; [0,0,0]\n]</span>\n<strong>Output: \n</strong><span id=\"example-output-1\">[\n&nbsp; [0,0,0],\n&nbsp; [1,0,1],\n&nbsp; [0,1,1],\n&nbsp; [0,1,0]\n]</span>\n</pre>\n\n<p><b>Follow up</b>:</p>\n\n<ol>\n\t<li>Could you solve it in-place? Remember that the board needs to be updated at the same time: You cannot update some cells first and then use their updated values to update other cells.</li>\n\t<li>In this question, we represent the board using a 2D array. In principle, the board is infinite, which would cause problems when the active area encroaches the border of the array. How would you address these problems?</li>\n</ol>\n"
    },
    {
        "id": "688",
        "title": "Knight Probability in Chessboard",
        "slug": "knight-probability-in-chessboard",
        "difficulty": "Medium",
        "likes": 454,
        "dislikes": 94,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Out of Boundary Paths\", \"titleSlug\": \"out-of-boundary-paths\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "254",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>On an <code>N</code>x<code>N</code> chessboard, a knight starts at the <code>r</code>-th row and <code>c</code>-th column and attempts to make exactly <code>K</code> moves. The rows and columns are 0 indexed, so the top-left square is <code>(0, 0)</code>, and the bottom-right square is <code>(N-1, N-1)</code>.</p>\n\n<p>A chess knight has 8 possible moves it can make, as illustrated below. Each move is two squares in a cardinal direction, then one square in an orthogonal direction.</p>\n\n<p>&nbsp;</p>\n\n<p><img src=\"./img/knight-probability-in-chessboard_1.png\" style=\"width: 200px; height: 200px;\" /></p>\n\n<p>&nbsp;</p>\n\n<p>Each time the knight is to move, it chooses one of eight possible moves uniformly at random (even if the piece would go off the chessboard) and moves there.</p>\n\n<p>The knight continues moving until it has made exactly <code>K</code> moves or has moved off the chessboard. Return the probability that the knight remains on the board after it has stopped moving.</p>\n\n<p>&nbsp;</p>\n\n<p><b>Example:</b></p>\n\n<pre>\n<b>Input:</b> 3, 2, 0, 0\n<b>Output:</b> 0.0625\n<b>Explanation:</b> There are two moves (to (1,2), (2,1)) that will keep the knight on the board.\nFrom each of those positions, there are also two moves that will keep the knight on the board.\nThe total probability the knight stays on the board is 0.0625.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b></p>\n\n<ul>\n\t<li><code>N</code> will be between 1 and 25.</li>\n\t<li><code>K</code> will be between 0 and 100.</li>\n\t<li>The knight always initially starts on the board.</li>\n</ul>\n"
    },
    {
        "id": "643",
        "title": "Maximum Average Subarray I",
        "slug": "maximum-average-subarray-i",
        "difficulty": "Easy",
        "likes": 502,
        "dislikes": 88,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Maximum Average Subarray II\", \"titleSlug\": \"maximum-average-subarray-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "221",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array"
        ],
        "content": "<p>Given an array consisting of <code>n</code> integers, find the contiguous subarray of given length <code>k</code> that has the maximum average value. And you need to output the maximum average value.</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> [1,12,-5,-6,50,3], k = 4\n<b>Output:</b> 12.75\n<b>Explanation:</b> Maximum average is (12-5-6+50)/4 = 51/4 = 12.75\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b></p>\n\n<ol>\n\t<li>1 &lt;= <code>k</code> &lt;= <code>n</code> &lt;= 30,000.</li>\n\t<li>Elements of the given array will be in the range [-10,000, 10,000].</li>\n</ol>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "394",
        "title": "Decode String",
        "slug": "decode-string",
        "difficulty": "Medium",
        "likes": 1823,
        "dislikes": 96,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Encode String with Shortest Length\", \"titleSlug\": \"encode-string-with-shortest-length\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Number of Atoms\", \"titleSlug\": \"number-of-atoms\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Brace Expansion\", \"titleSlug\": \"brace-expansion\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Stack",
            "Depth-first Search"
        ],
        "content": "<p>Given an encoded string, return its decoded string.</p>\n\n<p>The encoding rule is: <code>k[encoded_string]</code>, where the <i>encoded_string</i> inside the square brackets is being repeated exactly <i>k</i> times. Note that <i>k</i> is guaranteed to be a positive integer.</p>\n\n<p>You may assume that the input string is always valid; No extra white spaces, square brackets are well-formed, etc.</p>\n\n<p>Furthermore, you may assume that the original data does not contain any digits and that digits are only for those repeat numbers, <i>k</i>. For example, there won&#39;t be input like <code>3a</code> or <code>2[4]</code>.</p>\n\n<p><b>Examples:</b></p>\n\n<pre>\ns = &quot;3[a]2[bc]&quot;, return &quot;aaabcbc&quot;.\ns = &quot;3[a2[c]]&quot;, return &quot;accaccacc&quot;.\ns = &quot;2[abc]3[cd]ef&quot;, return &quot;abcabccdcdcdef&quot;.\n</pre>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "429",
        "title": "N-ary Tree Level Order Traversal",
        "slug": "n-ary-tree-level-order-traversal",
        "difficulty": "Easy",
        "likes": 313,
        "dislikes": 35,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Binary Tree Level Order Traversal\", \"titleSlug\": \"binary-tree-level-order-traversal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"N-ary Tree Preorder Traversal\", \"titleSlug\": \"n-ary-tree-preorder-traversal\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"N-ary Tree Postorder Traversal\", \"titleSlug\": \"n-ary-tree-postorder-traversal\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Tree",
            "Breadth-first Search"
        ],
        "content": "<p>Given an n-ary tree, return the level order traversal of its nodes&#39; values. (ie, from left to right, level by level).</p>\n\n<p>For example, given a <code>3-ary</code> tree:</p>\n\n<p>&nbsp;</p>\n\n<p><img src=\"./img/n-ary-tree-level-order-traversal_1.png\" style=\"width: 100%; max-width: 300px;\" /></p>\n\n<p>&nbsp;</p>\n\n<p>We should return its level order traversal:</p>\n\n<pre>\n[\n     [1],\n     [3,2,4],\n     [5,6]\n]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b></p>\n\n<ol>\n\t<li>The depth of the tree is at most <code>1000</code>.</li>\n\t<li>The total number of nodes is at most <code>5000</code>.</li>\n</ol>\n"
    },
    {
        "id": "334",
        "title": "Increasing Triplet Subsequence",
        "slug": "increasing-triplet-subsequence",
        "difficulty": "Medium",
        "likes": 985,
        "dislikes": 97,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Longest Increasing Subsequence\", \"titleSlug\": \"longest-increasing-subsequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [],
        "content": "<p>Given an unsorted array return whether an increasing subsequence of length 3 exists or not in the array.</p>\n\n<p>Formally the function should:</p>\n\n<blockquote>Return true if there exists <i>i, j, k </i><br />\nsuch that <i>arr[i]</i> &lt; <i>arr[j]</i> &lt; <i>arr[k]</i> given 0 &le; <i>i</i> &lt; <i>j</i> &lt; <i>k</i> &le; <i>n</i>-1 else return false.</blockquote>\n\n<p><strong>Note: </strong>Your algorithm should run in O(<i>n</i>) time complexity and O(<i>1</i>) space complexity.</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[1,2,3,4,5]</span>\n<strong>Output: </strong><span id=\"example-output-1\">true</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[5,4,3,2,1]</span>\n<strong>Output: </strong><span id=\"example-output-2\">false</span>\n</pre>\n</div>\n</div>"
    },
    {
        "id": "1106",
        "title": "Parsing A Boolean Expression",
        "slug": "parsing-a-boolean-expression",
        "difficulty": "Hard",
        "likes": 125,
        "dislikes": 8,
        "hints": [
            "Write a function \"parse\" which calls helper functions \"parse_or\", \"parse_and\", \"parse_not\"."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "String"
        ],
        "content": "<p>Return the result of evaluating a given boolean <code>expression</code>, represented as a string.</p>\n\n<p>An expression can either be:</p>\n\n<ul>\n\t<li><code>&quot;t&quot;</code>, evaluating to <code>True</code>;</li>\n\t<li><code>&quot;f&quot;</code>, evaluating to <code>False</code>;</li>\n\t<li><code>&quot;!(expr)&quot;</code>, evaluating to the logical NOT of the inner expression <code>expr</code>;</li>\n\t<li><code>&quot;&amp;(expr1,expr2,...)&quot;</code>, evaluating to the logical AND of 2 or more inner expressions <code>expr1, expr2, ...</code>;</li>\n\t<li><code>&quot;|(expr1,expr2,...)&quot;</code>, evaluating to the logical OR of 2 or more inner expressions <code>expr1, expr2, ...</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> expression = &quot;!(f)&quot;\n<strong>Output:</strong> true\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> expression = &quot;|(f,t)&quot;\n<strong>Output:</strong> true\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> expression = &quot;&amp;(t,f)&quot;\n<strong>Output:</strong> false\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> expression = &quot;|(&amp;(t,f,t),!(t))&quot;\n<strong>Output:</strong> false\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= expression.length &lt;= 20000</code></li>\n\t<li><code>expression[i]</code>&nbsp;consists of characters in <code>{&#39;(&#39;, &#39;)&#39;, &#39;&amp;&#39;, &#39;|&#39;, &#39;!&#39;, &#39;t&#39;, &#39;f&#39;, &#39;,&#39;}</code>.</li>\n\t<li><code>expression</code> is a valid expression representing a boolean, as given in the description.</li>\n</ul>\n"
    },
    {
        "id": "77",
        "title": "Combinations",
        "slug": "combinations",
        "difficulty": "Medium",
        "likes": 909,
        "dislikes": 51,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Combination Sum\", \"titleSlug\": \"combination-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Permutations\", \"titleSlug\": \"permutations\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "710",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Backtracking"
        ],
        "content": "<p>Given two integers <em>n</em> and <em>k</em>, return all possible combinations of <em>k</em> numbers out of 1 ... <em>n</em>.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input:</strong>&nbsp;n = 4, k = 2\n<strong>Output:</strong>\n[\n  [2,4],\n  [3,4],\n  [2,3],\n  [1,2],\n  [1,3],\n  [1,4],\n]\n</pre>\n"
    },
    {
        "id": "1169",
        "title": "Invalid Transactions",
        "slug": "invalid-transactions",
        "difficulty": "Medium",
        "likes": 21,
        "dislikes": 247,
        "hints": [
            "Split each string into four arrays.",
            "For each transaction check if it's invalid, you can do this with just a loop with help of the four arrays generated on step 1.",
            "At the end you perform O(N ^ 2) operations."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Array",
            "String"
        ],
        "content": "<p>A transaction is <em>possibly invalid</em> if:</p>\n\n<ul>\n\t<li>the amount exceeds $1000, or;</li>\n\t<li>if it occurs within (and including) 60 minutes of another transaction with the same name in a different city.</li>\n</ul>\n\n<p>Each transaction string <code>transactions[i]</code>&nbsp;consists of&nbsp;comma separated values representing&nbsp;the name, time (in minutes), amount, and city of the transaction.</p>\n\n<p>Given a list of <code>transactions</code>,&nbsp;return a list of transactions that are possibly invalid.&nbsp; You may return the answer in any order.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> transactions = [&quot;alice,20,800,mtv&quot;,&quot;alice,50,100,beijing&quot;]\n<strong>Output:</strong> [&quot;alice,20,800,mtv&quot;,&quot;alice,50,100,beijing&quot;]\n<strong>Explanation:</strong> The first transaction is invalid because the second transaction occurs within a difference of 60 minutes, have the same name and is in a different city. Similarly the second one is invalid too.</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> transactions = [&quot;alice,20,800,mtv&quot;,&quot;alice,50,1200,mtv&quot;]\n<strong>Output:</strong> [&quot;alice,50,1200,mtv&quot;]\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> transactions = [&quot;alice,20,800,mtv&quot;,&quot;bob,50,1200,mtv&quot;]\n<strong>Output:</strong> [&quot;bob,50,1200,mtv&quot;]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>transactions.length &lt;= 1000</code></li>\n\t<li>Each <code>transactions[i]</code> takes the form <code>&quot;{name},{time},{amount},{city}&quot;</code></li>\n\t<li>Each <code>{name}</code> and <code>{city}</code>&nbsp;consist of&nbsp;lowercase English letters, and have lengths between <code>1</code> and <code>10</code>.</li>\n\t<li>Each <code>{time}</code> consist of&nbsp;digits, and represent an integer between <code>0</code> and <code>1000</code>.</li>\n\t<li>Each <code>{amount}</code>&nbsp;consist of&nbsp;digits, and represent an integer between <code>0</code> and <code>2000</code>.</li>\n</ul>\n"
    },
    {
        "id": "282",
        "title": "Expression Add Operators",
        "slug": "expression-add-operators",
        "difficulty": "Hard",
        "likes": 796,
        "dislikes": 112,
        "hints": [
            "Note that a number can contain multiple digits.",
            "Since the question asks us to find <b>all</b> of the valid expressions, we need a way to iterate over all of them. (<b>Hint:</b> Recursion!)",
            "We can keep track of the expression string and evaluate it at the very end. But that would take a lot of time. Can we keep track of the expression's value as well so as to avoid the evaluation at the very end of recursion?",
            "Think carefully about the multiply operator. It has a higher precedence than the addition and subtraction operators. \r\n\r\n<br> 1 + 2 = 3  <br>\r\n1 + 2 - 4 --> 3 - 4 --> -1 <br>\r\n1 + 2 - 4 * 12 --> -1 * 12 --> -12 (WRONG!) <br>\r\n1 + 2 - 4 * 12 --> -1 - (-4) + (-4 * 12) --> 3 + (-48) --> -45 (CORRECT!)",
            "We simply need to keep track of the last operand in our expression and reverse it's effect on the expression's value while considering the multiply operator."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Evaluate Reverse Polish Notation\", \"titleSlug\": \"evaluate-reverse-polish-notation\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Basic Calculator\", \"titleSlug\": \"basic-calculator\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Basic Calculator II\", \"titleSlug\": \"basic-calculator-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Different Ways to Add Parentheses\", \"titleSlug\": \"different-ways-to-add-parentheses\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Target Sum\", \"titleSlug\": \"target-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "548",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Divide and Conquer"
        ],
        "content": "<p>Given a string that contains only digits <code>0-9</code> and a target value, return all possibilities to add <b>binary</b> operators (not unary) <code>+</code>, <code>-</code>, or <code>*</code> between the digits so they evaluate to the target value.</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> <code><em>num</em> = </code>&quot;123&quot;, <em>target</em> = 6\n<b>Output: </b>[&quot;1+2+3&quot;, &quot;1*2*3&quot;] \n</pre>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input:</b> <code><em>num</em> = </code>&quot;232&quot;, <em>target</em> = 8\n<b>Output: </b>[&quot;2*3+2&quot;, &quot;2+3*2&quot;]</pre>\n\n<p><b>Example 3:</b></p>\n\n<pre>\n<b>Input:</b> <code><em>num</em> = </code>&quot;105&quot;, <em>target</em> = 5\n<b>Output: </b>[&quot;1*0+5&quot;,&quot;10-5&quot;]</pre>\n\n<p><b>Example 4:</b></p>\n\n<pre>\n<b>Input:</b> <code><em>num</em> = </code>&quot;00&quot;, <em>target</em> = 0\n<b>Output: </b>[&quot;0+0&quot;, &quot;0-0&quot;, &quot;0*0&quot;]\n</pre>\n\n<p><b>Example 5:</b></p>\n\n<pre>\n<b>Input:</b> <code><em>num</em> = </code>&quot;3456237490&quot;, <em>target</em> = 9191\n<b>Output: </b>[]\n</pre>\n"
    },
    {
        "id": "853",
        "title": "Car Fleet",
        "slug": "car-fleet",
        "difficulty": "Medium",
        "likes": 281,
        "dislikes": 154,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "490",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Sort"
        ],
        "content": "<p><code>N</code> cars are going to the same destination along a one lane road.&nbsp; The destination is <code>target</code>&nbsp;miles away.</p>\n\n<p>Each car <code>i</code>&nbsp;has a constant speed <code>speed[i]</code>&nbsp;(in miles per hour), and initial position <code>position[i]</code>&nbsp;miles towards the target along the road.</p>\n\n<p>A car can never pass another car ahead of it, but it can catch up to it, and drive bumper to bumper at the same speed.</p>\n\n<p>The distance between these two cars is ignored - they are assumed to have the same position.</p>\n\n<p>A <em>car fleet</em> is some non-empty set of cars driving&nbsp;at the same position and same speed.&nbsp; Note that a single car is also a car fleet.</p>\n\n<p>If a car catches up to a car fleet right at the destination point, it will&nbsp;still be&nbsp;considered as one car fleet.</p>\n\n<p><br />\nHow many car fleets will arrive at the destination?</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>target = <span id=\"example-input-1-1\">12</span>, position = <span id=\"example-input-1-2\">[10,8,0,5,3]</span>, speed = <span id=\"example-input-1-3\">[2,4,1,1,3]</span>\n<strong>Output: </strong><span id=\"example-output-1\">3</span>\n<strong>Explanation</strong>:\nThe cars starting at 10 and 8 become a fleet, meeting each other at 12.\nThe car starting at 0 doesn&#39;t catch up to any other car, so it is a fleet by itself.\nThe cars starting at 5 and 3 become a fleet, meeting each other at 6.\nNote that no other cars meet these fleets before the destination, so the answer is 3.\n</pre>\n\n<p><br />\n<strong>Note:</strong></p>\n\n<ol>\n\t<li><code>0 &lt;= N &lt;= 10 ^ 4</code></li>\n\t<li><code>0 &lt; target&nbsp;&lt;= 10 ^ 6</code></li>\n\t<li><code>0 &lt;&nbsp;speed[i] &lt;= 10 ^ 6</code></li>\n\t<li><code>0 &lt;= position[i] &lt; target</code></li>\n\t<li>All initial positions are different.</li>\n</ol>"
    },
    {
        "id": "73",
        "title": "Set Matrix Zeroes",
        "slug": "set-matrix-zeroes",
        "difficulty": "Medium",
        "likes": 1260,
        "dislikes": 221,
        "hints": [
            "If any cell of the matrix has a zero we can record its row and column number using additional memory.\r\nBut if you don't want to use extra memory then you can manipulate the array instead. i.e. simulating exactly what the question says.",
            "Setting cell values to zero on the fly while iterating might lead to discrepancies. What if you use some other integer value as your marker?\r\nThere is still a better approach for this problem with 0(1) space.",
            "We could have used 2 sets to keep a record of rows/columns which need to be set to zero. But for an O(1) space solution, you can use one of the rows and and one of the columns to keep track of this information.",
            "We can use the first cell of every row and column as a flag. This flag would determine whether a row or column has been set to zero."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Game of Life\", \"titleSlug\": \"game-of-life\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "578",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array"
        ],
        "content": "<p>Given a <em>m</em> x <em>n</em> matrix, if an element is 0, set its entire row and column to 0. Do it <a href=\"https://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\"><strong>in-place</strong></a>.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> \n[\n&nbsp; [1,1,1],\n&nbsp; [1,0,1],\n&nbsp; [1,1,1]\n]\n<strong>Output:</strong> \n[\n&nbsp; [1,0,1],\n&nbsp; [0,0,0],\n&nbsp; [1,0,1]\n]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> \n[\n&nbsp; [0,1,2,0],\n&nbsp; [3,4,5,2],\n&nbsp; [1,3,1,5]\n]\n<strong>Output:</strong> \n[\n&nbsp; [0,0,0,0],\n&nbsp; [0,4,5,0],\n&nbsp; [0,3,1,0]\n]\n</pre>\n\n<p><strong>Follow up:</strong></p>\n\n<ul>\n\t<li>A straight forward solution using O(<em>m</em><em>n</em>) space is probably a bad idea.</li>\n\t<li>A simple improvement uses O(<em>m</em> + <em>n</em>) space, but still not the best solution.</li>\n\t<li>Could you devise a constant space solution?</li>\n</ul>\n"
    },
    {
        "id": "1096",
        "title": "Brace Expansion II",
        "slug": "brace-expansion-ii",
        "difficulty": "Hard",
        "likes": 78,
        "dislikes": 55,
        "hints": [
            "You can write helper methods to parse the next \"chunk\" of the expression.  If you see eg. \"a\", the answer is just the set {a}.  If you see \"{\", you parse until you complete the \"}\" (the number of { and } seen are equal) and that becomes a chunk that you find where the appropriate commas are, and parse each individual expression between the commas."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Brace Expansion\", \"titleSlug\": \"brace-expansion\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "String"
        ],
        "content": "<p>Under a grammar given below, strings can represent a set of lowercase words.&nbsp; Let&#39;s&nbsp;use <code>R(expr)</code>&nbsp;to denote the <strong>set</strong> of words the expression represents.</p>\n\n<p>Grammar can best be understood through simple examples:</p>\n\n<ul>\n\t<li>Single letters represent a singleton set containing that word.\n\t<ul>\n\t\t<li><code>R(&quot;a&quot;) = {&quot;a&quot;}</code></li>\n\t\t<li><code>R(&quot;w&quot;) = {&quot;w&quot;}</code></li>\n\t</ul>\n\t</li>\n\t<li>When we take a comma delimited list of 2 or more expressions, we take the union of possibilities.\n\t<ul>\n\t\t<li><code>R(&quot;{a,b,c}&quot;) = {&quot;a&quot;,&quot;b&quot;,&quot;c&quot;}</code></li>\n\t\t<li><code>R(&quot;{{a,b},{b,c}}&quot;) = {&quot;a&quot;,&quot;b&quot;,&quot;c&quot;}</code>&nbsp;(notice the final set only contains each word at most once)</li>\n\t</ul>\n\t</li>\n\t<li>When we concatenate two expressions, we take the set of possible concatenations between two words where the first word comes from the first expression and the second word comes from the second expression.\n\t<ul>\n\t\t<li><code>R(&quot;{a,b}{c,d}&quot;) = {&quot;ac&quot;,&quot;ad&quot;,&quot;bc&quot;,&quot;bd&quot;}</code></li>\n\t\t<li><code>R(&quot;a{b,c}{d,e}f{g,h}&quot;)&nbsp;= {&quot;abdfg&quot;, &quot;abdfh&quot;, &quot;abefg&quot;, &quot;abefh&quot;, &quot;acdfg&quot;, &quot;acdfh&quot;, &quot;acefg&quot;, &quot;acefh&quot;}</code></li>\n\t</ul>\n\t</li>\n</ul>\n\n<p>Formally, the 3 rules for our grammar:</p>\n\n<ul>\n\t<li>For every lowercase letter <code>x</code>, we have <code>R(x) = {x}</code></li>\n\t<li>For expressions <code>e_1, e_2, ... , e_k</code>&nbsp;with <code>k &gt;= 2</code>, we have <code>R({e_1,e_2,...}) = R(e_1)&nbsp;&cup; R(e_2)&nbsp;&cup; ...</code></li>\n\t<li>For&nbsp;expressions <code>e_1</code> and <code>e_2</code>, we have <code>R(e_1 + e_2) = {a + b for (a, b) in&nbsp;R(e_1)&nbsp;&times; R(e_2)}</code>, where + denotes concatenation, and &times; denotes the cartesian product.</li>\n</ul>\n\n<p>Given an <code>expression</code> representing a set of words under the given grammar, return the&nbsp;sorted list of words that the expression represents.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">&quot;{a,b}{c,{d,e}}&quot;</span>\n<strong>Output: </strong><span id=\"example-output-1\">[&quot;ac&quot;,&quot;ad&quot;,&quot;ae&quot;,&quot;bc&quot;,&quot;bd&quot;,&quot;be&quot;]</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span>&quot;{{a,z},a{b,c},{ab,z}}&quot;</span>\n<strong>Output: </strong><span>[&quot;a&quot;,&quot;ab&quot;,&quot;ac&quot;,&quot;z&quot;]</span>\n<strong>Explanation: </strong>Each distinct word is written only once in the final answer.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Constraints:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= expression.length &lt;= 50</code></li>\n\t<li><code>expression[i]</code> consists of <code>&#39;{&#39;</code>, <code>&#39;}&#39;</code>, <code>&#39;,&#39;</code>or lowercase English letters.</li>\n\t<li>The given&nbsp;<code>expression</code>&nbsp;represents a set of words based on the grammar given in the description.</li>\n</ol>\n</div>\n</div>"
    },
    {
        "id": "120",
        "title": "Triangle",
        "slug": "triangle",
        "difficulty": "Medium",
        "likes": 1300,
        "dislikes": 149,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Array",
            "Dynamic Programming"
        ],
        "content": "<p>Given a triangle, find the minimum path sum from top to bottom. Each step you may move to adjacent numbers on the row below.</p>\n\n<p>For example, given the following triangle</p>\n\n<pre>\n[\n     [<strong>2</strong>],\n    [<strong>3</strong>,4],\n   [6,<strong>5</strong>,7],\n  [4,<strong>1</strong>,8,3]\n]\n</pre>\n\n<p>The minimum path sum from top to bottom is <code>11</code> (i.e., <strong>2</strong> + <strong>3</strong> + <strong>5</strong> + <strong>1</strong> = 11).</p>\n\n<p><strong>Note:</strong></p>\n\n<p>Bonus point if you are able to do this using only <em>O</em>(<em>n</em>) extra space, where <em>n</em> is the total number of rows in the triangle.</p>\n"
    },
    {
        "id": "540",
        "title": "Single Element in a Sorted Array",
        "slug": "single-element-in-a-sorted-array",
        "difficulty": "Medium",
        "likes": 848,
        "dislikes": 64,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [],
        "content": "<p>Given a sorted array consisting of only integers where every element appears exactly twice except for one element which appears exactly&nbsp;once. Find this single element that appears only once.</p>\n\n<p>&nbsp;</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> [1,1,2,3,3,4,4,8,8]\n<b>Output:</b> 2\n</pre>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input:</b> [3,3,7,7,10,11,11]\n<b>Output:</b> 10\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b> Your solution should run in O(log n) time and O(1) space.</p>\n"
    },
    {
        "id": "26",
        "title": "Remove Duplicates from Sorted Array",
        "slug": "remove-duplicates-from-sorted-array",
        "difficulty": "Easy",
        "likes": 1716,
        "dislikes": 3675,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Remove Element\", \"titleSlug\": \"remove-element\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Remove Duplicates from Sorted Array II\", \"titleSlug\": \"remove-duplicates-from-sorted-array-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "4",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Two Pointers"
        ],
        "content": "<p>Given a sorted array <em>nums</em>, remove the duplicates <a href=\"https://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\"><strong>in-place</strong></a> such that each element appear only <em>once</em> and return the new length.</p>\n\n<p>Do not allocate extra space for another array, you must do this by <strong>modifying the input array <a href=\"https://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\">in-place</a></strong> with O(1) extra memory.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\nGiven <em>nums</em> = <strong>[1,1,2]</strong>,\n\nYour function should return length = <strong><code>2</code></strong>, with the first two elements of <em><code>nums</code></em> being <strong><code>1</code></strong> and <strong><code>2</code></strong> respectively.\n\nIt doesn&#39;t matter what you leave beyond the returned length.</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\nGiven <em>nums</em> = <strong>[0,0,1,1,1,2,2,3,3,4]</strong>,\n\nYour function should return length = <strong><code>5</code></strong>, with the first five elements of <em><code>nums</code></em> being modified to&nbsp;<strong><code>0</code></strong>, <strong><code>1</code></strong>, <strong><code>2</code></strong>, <strong><code>3</code></strong>, and&nbsp;<strong><code>4</code></strong> respectively.\n\nIt doesn&#39;t matter what values are set beyond&nbsp;the returned length.\n</pre>\n\n<p><strong>Clarification:</strong></p>\n\n<p>Confused why the returned value is an integer but your answer is an array?</p>\n\n<p>Note that the input array is passed in by <strong>reference</strong>, which means modification to the input array will be known to the caller as well.</p>\n\n<p>Internally you can think of this:</p>\n\n<pre>\n// <strong>nums</strong> is passed in by reference. (i.e., without making a copy)\nint len = removeDuplicates(nums);\n\n// any modification to <strong>nums</strong> in your function would be known by the caller.\n// using the length returned by your function, it prints the first <strong>len</strong> elements.\nfor (int i = 0; i &lt; len; i++) {\n&nbsp; &nbsp; print(nums[i]);\n}</pre>\n"
    },
    {
        "id": "103",
        "title": "Binary Tree Zigzag Level Order Traversal",
        "slug": "binary-tree-zigzag-level-order-traversal",
        "difficulty": "Medium",
        "likes": 1163,
        "dislikes": 68,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Binary Tree Level Order Traversal\", \"titleSlug\": \"binary-tree-level-order-traversal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Stack",
            "Tree",
            "Breadth-first Search"
        ],
        "content": "<p>Given a binary tree, return the <i>zigzag level order</i> traversal of its nodes' values. (ie, from left to right, then right to left for the next level and alternate between).</p>\n\n<p>\nFor example:<br />\nGiven binary tree <code>[3,9,20,null,null,15,7]</code>,<br />\n<pre>\n    3\n   / \\\n  9  20\n    /  \\\n   15   7\n</pre>\n</p>\n<p>\nreturn its zigzag level order traversal as:<br />\n<pre>\n[\n  [3],\n  [20,9],\n  [15,7]\n]\n</pre>\n</p>"
    },
    {
        "id": "918",
        "title": "Maximum Sum Circular Subarray",
        "slug": "maximum-sum-circular-subarray",
        "difficulty": "Medium",
        "likes": 384,
        "dislikes": 21,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "582",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array"
        ],
        "content": "<p>Given a <strong>circular&nbsp;array</strong>&nbsp;<strong>C</strong> of integers represented by&nbsp;<code>A</code>, find the maximum possible sum of a non-empty subarray of <strong>C</strong>.</p>\n\n<p>Here, a&nbsp;<em>circular&nbsp;array</em> means the end of the array connects to the beginning of the array.&nbsp; (Formally, <code>C[i] = A[i]</code> when <code>0 &lt;= i &lt; A.length</code>, and <code>C[i+A.length] = C[i]</code>&nbsp;when&nbsp;<code>i &gt;= 0</code>.)</p>\n\n<p>Also, a subarray may only include each element of the fixed buffer <code>A</code> at most once.&nbsp; (Formally, for a subarray <code>C[i], C[i+1], ..., C[j]</code>, there does not exist <code>i &lt;= k1, k2 &lt;= j</code> with <code>k1 % A.length&nbsp;= k2 % A.length</code>.)</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[1,-2,3,-2]</span>\n<strong>Output: </strong><span id=\"example-output-1\">3\n<strong>Explanation: </strong>Subarray [3] has maximum sum 3</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[5,-3,5]</span>\n<strong>Output: </strong><span id=\"example-output-2\">10\n</span><span id=\"example-output-3\"><strong>Explanation:</strong>&nbsp;</span><span id=\"example-output-1\">Subarray [5,5] has maximum sum </span><span>5 + 5 = 10</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">[3,-1,2,-1]</span>\n<strong>Output: </strong><span id=\"example-output-3\">4\n<strong>Explanation:</strong>&nbsp;</span><span id=\"example-output-1\">Subarray [2,-1,3] has maximum sum </span><span>2 + (-1) + 3 = 4</span>\n</pre>\n\n<div>\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-4-1\">[3,-2,2,-3]</span>\n<strong>Output: </strong><span id=\"example-output-4\">3\n</span><span id=\"example-output-3\"><strong>Explanation:</strong>&nbsp;</span><span id=\"example-output-1\">Subarray [3] and [3,-2,2] both have maximum sum </span><span>3</span>\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-5-1\">[-2,-3,-1]</span>\n<strong>Output: </strong><span id=\"example-output-5\">-1\n</span><span id=\"example-output-3\"><strong>Explanation:</strong>&nbsp;</span><span id=\"example-output-1\">Subarray [-1] has maximum sum -1</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note: </strong></p>\n\n<ol>\n\t<li><code>-30000 &lt;= A[i] &lt;= 30000</code></li>\n\t<li><code>1 &lt;= A.length &lt;= 30000</code></li>\n</ol>\n</div>\n</div>\n</div>\n</div>\n"
    },
    {
        "id": "898",
        "title": "Bitwise ORs of Subarrays",
        "slug": "bitwise-ors-of-subarrays",
        "difficulty": "Medium",
        "likes": 292,
        "dislikes": 63,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "545",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming",
            "Bit Manipulation"
        ],
        "content": "<p>We have an array <code>A</code> of non-negative integers.</p>\n\n<p>For every (contiguous) subarray <code>B =&nbsp;[A[i], A[i+1], ..., A[j]]</code> (with <code>i &lt;= j</code>), we take the bitwise OR of all the elements in <code>B</code>, obtaining a result <font face=\"monospace\"><code>A[i] | A[i+1] | ... | A[j]</code>.</font></p>\n\n<p>Return the number of possible&nbsp;results.&nbsp; (Results that occur more than once are only counted once in the final answer.)</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[0]</span>\n<strong>Output: </strong><span id=\"example-output-1\">1</span>\n<strong>Explanation: </strong>\nThere is only one possible result: 0.\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[1,1,2]</span>\n<strong>Output: </strong><span id=\"example-output-2\">3</span>\n<strong>Explanation: </strong>\nThe possible subarrays are [1], [1], [2], [1, 1], [1, 2], [1, 1, 2].\nThese yield the results 1, 1, 2, 1, 3, 3.\nThere are 3 unique values, so the answer is 3.\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">[1,2,4]</span>\n<strong>Output: </strong><span id=\"example-output-3\">6</span>\n<strong>Explanation: </strong>\nThe possible results are 1, 2, 3, 4, 6, and 7.\n</pre>\n</div>\n</div>\n</div>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 50000</code></li>\n\t<li><code>0 &lt;= A[i] &lt;= 10^9</code></li>\n</ol>\n"
    },
    {
        "id": "409",
        "title": "Longest Palindrome",
        "slug": "longest-palindrome",
        "difficulty": "Easy",
        "likes": 596,
        "dislikes": 64,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Palindrome Permutation\", \"titleSlug\": \"palindrome-permutation\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "361",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Hash Table"
        ],
        "content": "<p>Given a string which consists of lowercase or uppercase letters, find the length of the longest palindromes that can be built with those letters.</p>\n\n<p>This is case sensitive, for example <code>\"Aa\"</code> is not considered a palindrome here.</p>\n\n<p><b>Note:</b><br />\nAssume the length of given string will not exceed 1,010.\n</p>\n\n<p><b>Example: </b>\n<pre>\nInput:\n\"abccccdd\"\n\nOutput:\n7\n\nExplanation:\nOne longest palindrome that can be built is \"dccaccd\", whose length is 7.\n</pre>\n</p>"
    },
    {
        "id": "864",
        "title": "Shortest Path to Get All Keys",
        "slug": "shortest-path-to-get-all-keys",
        "difficulty": "Hard",
        "likes": 228,
        "dislikes": 8,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "501",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Heap",
            "Breadth-first Search"
        ],
        "content": "<p>We are given a 2-dimensional&nbsp;<code>grid</code>.&nbsp;<code>&quot;.&quot;</code> is an empty cell, <code>&quot;#&quot;</code> is&nbsp;a wall, <code>&quot;@&quot;</code> is the starting point, (<code>&quot;a&quot;</code>, <code>&quot;b&quot;</code>, ...) are keys, and (<code>&quot;A&quot;</code>,&nbsp;<code>&quot;B&quot;</code>, ...) are locks.</p>\n\n<p>We start at the starting point, and one move consists of walking one space in one of the 4 cardinal directions.&nbsp; We cannot walk outside the grid, or walk into a wall.&nbsp; If we walk over a key, we pick it up.&nbsp; We can&#39;t walk over a lock unless we have the corresponding key.</p>\n\n<p>For some <font face=\"monospace\">1 &lt;= K &lt;= 6</font>, there is exactly one lowercase and one uppercase letter of the first <code>K</code> letters of the English alphabet in the grid.&nbsp; This means that there is exactly one key for each lock, and one lock for each key; and also that the letters used to represent the keys and locks were&nbsp;chosen in the same order as the English alphabet.</p>\n\n<p>Return the lowest number of moves to acquire all keys.&nbsp; If&nbsp;it&#39;s impossible, return <code>-1</code>.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[&quot;@.a.#&quot;,&quot;###.#&quot;,&quot;b.A.B&quot;]</span>\n<strong>Output: </strong><span id=\"example-output-1\">8</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[&quot;@..aA&quot;,&quot;..B#.&quot;,&quot;....b&quot;]</span>\n<strong>Output: </strong><span id=\"example-output-2\">6</span>\n</pre>\n</div>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= grid.length&nbsp;&lt;= 30</code></li>\n\t<li><code>1 &lt;= grid[0].length&nbsp;&lt;= 30</code></li>\n\t<li><code>grid[i][j]</code> contains only<code> &#39;.&#39;</code>, <code>&#39;#&#39;</code>, <code>&#39;@&#39;</code>,&nbsp;<code>&#39;a&#39;-</code><code>&#39;f</code><code>&#39;</code> and <code>&#39;A&#39;-&#39;F&#39;</code></li>\n\t<li>The number of keys is in <code>[1, 6]</code>.&nbsp; Each key has a different letter and opens exactly one lock.</li>\n</ol>\n</div>\n"
    },
    {
        "id": "209",
        "title": "Minimum Size Subarray Sum",
        "slug": "minimum-size-subarray-sum",
        "difficulty": "Medium",
        "likes": 1319,
        "dislikes": 79,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Minimum Window Substring\", \"titleSlug\": \"minimum-window-substring\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Maximum Size Subarray Sum Equals k\", \"titleSlug\": \"maximum-size-subarray-sum-equals-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Length of Repeated Subarray\", \"titleSlug\": \"maximum-length-of-repeated-subarray\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "155",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Two Pointers",
            "Binary Search"
        ],
        "content": "<p>Given an array of <strong>n</strong> positive integers and a positive integer <strong>s</strong>, find the minimal length of a <b>contiguous</b> subarray of which the sum &ge; <strong>s</strong>. If there isn&#39;t one, return 0 instead.</p>\n\n<p><strong>Example:&nbsp;</strong></p>\n\n<pre>\n<strong>Input:</strong> <code>s = 7, nums = [2,3,1,2,4,3]</code>\n<strong>Output:</strong> 2\n<strong>Explanation: </strong>the subarray <code>[4,3]</code> has the minimal length under the problem constraint.</pre>\n\n<div class=\"spoilers\"><b>Follow up:</b></div>\n\n<div class=\"spoilers\">If you have figured out the <i>O</i>(<i>n</i>) solution, try coding another solution of which the time complexity is <i>O</i>(<i>n</i> log <i>n</i>).&nbsp;</div>\n"
    },
    {
        "id": "676",
        "title": "Implement Magic Dictionary",
        "slug": "implement-magic-dictionary",
        "difficulty": "Medium",
        "likes": 400,
        "dislikes": 103,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Implement Trie (Prefix Tree)\", \"titleSlug\": \"implement-trie-prefix-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Longest Word in Dictionary\", \"titleSlug\": \"longest-word-in-dictionary\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "276",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Hash Table",
            "Trie"
        ],
        "content": "<p>\nImplement a magic directory with <code>buildDict</code>, and <code>search</code> methods.\n</p>\n\n<p>\nFor the method <code>buildDict</code>, you'll be given a list of non-repetitive words to build a dictionary.\n</p>\n\n<p>\nFor the method <code>search</code>, you'll be given a word, and judge whether if you modify <b>exactly</b> one character into <b>another</b> character in this word, the modified word is in the dictionary you just built.\n</p>\n\n<p><b>Example 1:</b><br />\n<pre>\nInput: buildDict([\"hello\", \"leetcode\"]), Output: Null\nInput: search(\"hello\"), Output: False\nInput: search(\"hhllo\"), Output: True\nInput: search(\"hell\"), Output: False\nInput: search(\"leetcoded\"), Output: False\n</pre>\n</p>\n\n<p><b>Note:</b><br>\n<ol>\n<li>You may assume that all the inputs are consist of lowercase letters <code>a-z</code>.</li>\n<li>For contest purpose, the test data is rather small by now. You could think about highly efficient algorithm after the contest.</li>\n<li>Please remember to <b>RESET</b> your class variables declared in class MagicDictionary, as static/class variables are <b>persisted across multiple test cases</b>. Please see <a href=\"https://leetcode.com/faq/#different-output\">here</a> for more details.</li>\n</ol>\n</p>"
    },
    {
        "id": "437",
        "title": "Path Sum III",
        "slug": "path-sum-iii",
        "difficulty": "Easy",
        "likes": 2145,
        "dislikes": 123,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Path Sum\", \"titleSlug\": \"path-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Path Sum II\", \"titleSlug\": \"path-sum-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Path Sum IV\", \"titleSlug\": \"path-sum-iv\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Longest Univalue Path\", \"titleSlug\": \"longest-univalue-path\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Tree"
        ],
        "content": "<p>You are given a binary tree in which each node contains an integer value.</p>\n\n<p>Find the number of paths that sum to a given value.</p>\n\n<p>The path does not need to start or end at the root or a leaf, but it must go downwards\n(traveling only from parent nodes to child nodes).</p>\n\n<p>The tree has no more than 1,000 nodes and the values are in the range -1,000,000 to 1,000,000.\n\n<p><b>Example:</b>\n<pre>\nroot = [10,5,-3,3,2,null,11,3,-2,null,1], sum = 8\n\n      10\n     /  \\\n    <b>5</b>   <b>-3</b>\n   <b>/</b> <b>\\</b>    <b>\\</b>\n  <b>3</b>   <b>2</b>   <b>11</b>\n / \\   <b>\\</b>\n3  -2   <b>1</b>\n\nReturn 3. The paths that sum to 8 are:\n\n1.  5 -> 3\n2.  5 -> 2 -> 1\n3. -3 -> 11\n</pre>\n</p>"
    },
    {
        "id": "917",
        "title": "Reverse Only Letters",
        "slug": "reverse-only-letters",
        "difficulty": "Easy",
        "likes": 292,
        "dislikes": 29,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "581",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String"
        ],
        "content": "<p>Given a string <code>S</code>, return the &quot;reversed&quot; string where all characters that are not a letter&nbsp;stay in the same place, and all letters reverse their positions.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<div>\n<div>\n<ol>\n</ol>\n</div>\n</div>\n</div>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">&quot;ab-cd&quot;</span>\n<strong>Output: </strong><span id=\"example-output-1\">&quot;dc-ba&quot;</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">&quot;a-bC-dEf-ghIj&quot;</span>\n<strong>Output: </strong><span id=\"example-output-2\">&quot;j-Ih-gfE-dCba&quot;</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">&quot;Test1ng-Leet=code-Q!&quot;</span>\n<strong>Output: </strong><span id=\"example-output-3\">&quot;Qedo1ct-eeLg=ntse-T!&quot;</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong><span>Note:</span></strong></p>\n\n<ol>\n\t<li><code>S.length &lt;= 100</code></li>\n\t<li><code>33 &lt;= S[i].ASCIIcode &lt;= 122</code>&nbsp;</li>\n\t<li><code>S</code> doesn&#39;t contain <code>\\</code> or <code>&quot;</code></li>\n</ol>\n</div>\n</div>\n</div>\n</div>"
    },
    {
        "id": "699",
        "title": "Falling Squares",
        "slug": "falling-squares",
        "difficulty": "Hard",
        "likes": 182,
        "dislikes": 35,
        "hints": [
            "If positions = [[10, 20], [20, 30]], this is the same as [[1, 2], [2, 3]].  Currently, the values of positions are very large.  Can you generalize this approach so as to make the values in positions manageable?"
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"The Skyline Problem\", \"titleSlug\": \"the-skyline-problem\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "264",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Segment Tree",
            "Ordered Map"
        ],
        "content": "<p>On an infinite number line (x-axis), we drop given squares in the order they are given.</p>\n\n<p>The <code>i</code>-th square dropped (<code>positions[i] = (left, side_length)</code>) is a square with the left-most point being <code>positions[i][0]</code> and sidelength <code>positions[i][1]</code>.</p>\n\n<p>The square is dropped with the bottom edge parallel to the number line, and from a higher height than all currently landed squares. We wait for each square to stick before dropping the next.</p>\n\n<p>The squares are infinitely sticky on their bottom edge, and will remain fixed to any positive length surface they touch (either the number line or another square). Squares dropped adjacent to each other will not stick together prematurely.</p>\n&nbsp;\n\n<p>Return a list <code>ans</code> of heights. Each height <code>ans[i]</code> represents the current highest height of any square we have dropped, after dropping squares represented by <code>positions[0], positions[1], ..., positions[i]</code>.</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> [[1, 2], [2, 3], [6, 1]]\n<b>Output:</b> [2, 5, 5]\n<b>Explanation:</b>\n</pre>\n\n<p>After the first drop of <code>positions[0] = [1, 2]: _aa _aa ------- </code>The maximum height of any square is 2.</p>\n\n<p>After the second drop of <code>positions[1] = [2, 3]: __aaa __aaa __aaa _aa__ _aa__ -------------- </code>The maximum height of any square is 5. The larger square stays on top of the smaller square despite where its center of gravity is, because squares are infinitely sticky on their bottom edge.</p>\n\n<p>After the third drop of <code>positions[1] = [6, 1]: __aaa __aaa __aaa _aa _aa___a -------------- </code>The maximum height of any square is still 5. Thus, we return an answer of <code>[2, 5, 5]</code>.</p>\n\n<p>&nbsp;</p>\n&nbsp;\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input:</b> [[100, 100], [200, 100]]\n<b>Output:</b> [100, 100]\n<b>Explanation:</b> Adjacent squares don&#39;t get stuck prematurely - only their bottom edge can stick to surfaces.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b></p>\n\n<ul>\n\t<li><code>1 &lt;= positions.length &lt;= 1000</code>.</li>\n\t<li><code>1 &lt;= positions[i][0] &lt;= 10^8</code>.</li>\n\t<li><code>1 &lt;= positions[i][1] &lt;= 10^6</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "817",
        "title": "Linked List Components",
        "slug": "linked-list-components",
        "difficulty": "Medium",
        "likes": 243,
        "dislikes": 617,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "449",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Linked List"
        ],
        "content": "<p>We are given&nbsp;<code>head</code>,&nbsp;the head node of a linked list containing&nbsp;<strong>unique integer values</strong>.</p>\n\n<p>We are also given the list&nbsp;<code>G</code>, a subset of the values in the linked list.</p>\n\n<p>Return the number of connected components in <code>G</code>, where two values are connected if they appear consecutively in the linked list.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> \nhead: 0-&gt;1-&gt;2-&gt;3\nG = [0, 1, 3]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> \n0 and 1 are connected, so [0, 1] and [3] are the two connected components.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> \nhead: 0-&gt;1-&gt;2-&gt;3-&gt;4\nG = [0, 3, 1, 4]\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> \n0 and 1 are connected, 3 and 4 are connected, so [0, 1] and [3, 4] are the two connected components.\n</pre>\n\n<p><strong>Note: </strong></p>\n\n<ul>\n\t<li>If&nbsp;<code>N</code>&nbsp;is the&nbsp;length of the linked list given by&nbsp;<code>head</code>,&nbsp;<code>1 &lt;= N &lt;= 10000</code>.</li>\n\t<li>The value of each node in the linked list will be in the range<code> [0, N - 1]</code>.</li>\n\t<li><code>1 &lt;= G.length &lt;= 10000</code>.</li>\n\t<li><code>G</code> is a subset of all values in the linked list.</li>\n</ul>\n"
    },
    {
        "id": "124",
        "title": "Binary Tree Maximum Path Sum",
        "slug": "binary-tree-maximum-path-sum",
        "difficulty": "Hard",
        "likes": 1955,
        "dislikes": 145,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Path Sum\", \"titleSlug\": \"path-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Sum Root to Leaf Numbers\", \"titleSlug\": \"sum-root-to-leaf-numbers\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Path Sum IV\", \"titleSlug\": \"path-sum-iv\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Longest Univalue Path\", \"titleSlug\": \"longest-univalue-path\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "679",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree",
            "Depth-first Search"
        ],
        "content": "<p>Given a <strong>non-empty</strong> binary tree, find the maximum path sum.</p>\n\n<p>For this problem, a path is defined as any sequence of nodes from some starting node to any node in the tree along the parent-child connections. The path must contain <strong>at least one node</strong> and does not need to go through the root.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> [1,2,3]\n\n       <strong>1</strong>\n      <strong>/ \\</strong>\n     <strong>2</strong>   <strong>3</strong>\n\n<strong>Output:</strong> 6\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> [-10,9,20,null,null,15,7]\n\n&nbsp;  -10\n&nbsp; &nbsp;/ \\\n&nbsp; 9 &nbsp;<strong>20</strong>\n&nbsp; &nbsp; <strong>/ &nbsp;\\</strong>\n&nbsp; &nbsp;<strong>15 &nbsp; 7</strong>\n\n<strong>Output:</strong> 42\n</pre>\n"
    },
    {
        "id": "142",
        "title": "Linked List Cycle II",
        "slug": "linked-list-cycle-ii",
        "difficulty": "Medium",
        "likes": 1685,
        "dislikes": 133,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Linked List Cycle\", \"titleSlug\": \"linked-list-cycle\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Find the Duplicate Number\", \"titleSlug\": \"find-the-duplicate-number\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "315",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Linked List",
            "Two Pointers"
        ],
        "content": "<p>Given a linked list, return the node where the cycle begins. If there is no cycle, return <code>null</code>.</p>\n\n<p>To represent a cycle in the given linked list, we use an integer <code>pos</code> which represents the position (0-indexed)&nbsp;in the linked list where tail connects to. If <code>pos</code> is <code>-1</code>, then there is no cycle in the linked list.</p>\n\n<p><b>Note:</b> Do not modify the linked list.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>head = [3,2,0,-4], pos = 1\n<strong>Output: </strong>tail connects to node index 1\n<strong>Explanation:</strong> There is a cycle in the linked list, where tail connects to the second node.\n</pre>\n\n<p><img alt=\"\" src=\"./img/linked-list-cycle-ii_1.png\" style=\"height: 97px; width: 300px;\" /></p>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>head = [1,2], pos = 0\n<strong>Output: </strong>tail connects to node index 0\n<strong>Explanation:</strong> There is a cycle in the linked list, where tail connects to the first node.\n</pre>\n\n<p><img alt=\"\" src=\"./img/linked-list-cycle-ii_2.png\" style=\"height: 74px; width: 141px;\" /></p>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>head = [1], pos = -1\n<strong>Output: </strong>no cycle\n<strong>Explanation:</strong> There is no cycle in the linked list.\n</pre>\n\n<p><img alt=\"\" src=\"./img/linked-list-cycle-ii_3.png\" style=\"height: 45px; width: 45px;\" /></p>\n\n<p>&nbsp;</p>\n\n<p><b>Follow-up</b>:<br />\nCan you solve it without using extra space?</p>\n"
    },
    {
        "id": "919",
        "title": "Complete Binary Tree Inserter",
        "slug": "complete-binary-tree-inserter",
        "difficulty": "Medium",
        "likes": 173,
        "dislikes": 40,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "579",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree"
        ],
        "content": "<p>A <em>complete</em> binary tree is a binary tree in which every level, except possibly the last, is completely filled, and all nodes are as far left as possible.</p>\n\n<p>Write a data structure&nbsp;<code>CBTInserter</code>&nbsp;that is initialized with a complete binary tree and supports the following operations:</p>\n\n<ul>\n\t<li><code>CBTInserter(TreeNode root)</code> initializes the data structure on a given tree&nbsp;with head node <code>root</code>;</li>\n\t<li><code>CBTInserter.insert(int v)</code> will insert a <code>TreeNode</code>&nbsp;into the tree with value <code>node.val =&nbsp;v</code>&nbsp;so that the tree remains complete, <strong>and returns the value of the parent of the inserted <code>TreeNode</code></strong>;</li>\n\t<li><code>CBTInserter.get_root()</code> will return the head node of the tree.</li>\n</ul>\n\n<ol>\n</ol>\n\n<div>\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>inputs = <span id=\"example-input-1-1\">[&quot;CBTInserter&quot;,&quot;insert&quot;,&quot;get_root&quot;]</span>, inputs = <span id=\"example-input-1-2\">[[[1]],[2],[]]</span>\n<strong>Output: </strong><span id=\"example-output-1\">[null,1,[1,2]]</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>inputs = <span id=\"example-input-2-1\">[&quot;CBTInserter&quot;,&quot;insert&quot;,&quot;insert&quot;,&quot;get_root&quot;]</span>, inputs = <span id=\"example-input-2-2\">[[[1,2,3,4,5,6]],[7],[8],[]]</span>\n<strong>Output: </strong><span id=\"example-output-2\">[null,3,4,[1,2,3,4,5,6,7,8]]</span></pre>\n</div>\n\n<div>\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li>The initial given tree is complete and contains between <code>1</code> and <code>1000</code> nodes.</li>\n\t<li><code>CBTInserter.insert</code> is called at most <code>10000</code> times per test case.</li>\n\t<li>Every value of a given or inserted node is between <code>0</code> and <code>5000</code>.</li>\n</ol>\n</div>\n</div>\n\n<div>\n<p>&nbsp;</p>\n\n<div>&nbsp;</div>\n</div>\n"
    },
    {
        "id": "105",
        "title": "Construct Binary Tree from Preorder and Inorder Traversal",
        "slug": "construct-binary-tree-from-preorder-and-inorder-traversal",
        "difficulty": "Medium",
        "likes": 2040,
        "dislikes": 56,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Construct Binary Tree from Inorder and Postorder Traversal\", \"titleSlug\": \"construct-binary-tree-from-inorder-and-postorder-traversal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "605",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Tree",
            "Depth-first Search"
        ],
        "content": "<p>Given preorder and inorder traversal of a tree, construct the binary tree.</p>\n\n<p><strong>Note:</strong><br />\nYou may assume that duplicates do not exist in the tree.</p>\n\n<p>For example, given</p>\n\n<pre>\npreorder =&nbsp;[3,9,20,15,7]\ninorder = [9,3,15,20,7]</pre>\n\n<p>Return the following binary tree:</p>\n\n<pre>\n    3\n   / \\\n  9  20\n    /  \\\n   15   7</pre>\n"
    },
    {
        "id": "703",
        "title": "Kth Largest Element in a Stream",
        "slug": "kth-largest-element-in-a-stream",
        "difficulty": "Easy",
        "likes": 372,
        "dislikes": 187,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Kth Largest Element in an Array\", \"titleSlug\": \"kth-largest-element-in-an-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Heap"
        ],
        "content": "<p>Design a class to find&nbsp;the <strong>k</strong>th largest element in a stream. Note that it is the kth largest element in the sorted order, not the kth distinct element.</p>\n\n<p>Your&nbsp;<code>KthLargest</code>&nbsp;class will have a constructor which accepts an integer <code>k</code> and an integer array <code>nums</code>, which contains initial elements from&nbsp;the stream. For each call to the method <code>KthLargest.add</code>, return the element representing the kth largest element in the stream.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\nint k = 3;\nint[] arr = [4,5,8,2];\nKthLargest kthLargest = new KthLargest(3, arr);\nkthLargest.add(3);&nbsp; &nbsp;// returns 4\nkthLargest.add(5);&nbsp; &nbsp;// returns 5\nkthLargest.add(10);&nbsp; // returns 5\nkthLargest.add(9);&nbsp; &nbsp;// returns 8\nkthLargest.add(4);&nbsp; &nbsp;// returns 8\n</pre>\n\n<p><strong>Note: </strong><br />\nYou may assume that&nbsp;<code>nums</code>&#39; length&nbsp;&ge;&nbsp;<code>k-1</code>&nbsp;and <code>k</code> &ge;&nbsp;1.</p>\n"
    },
    {
        "id": "17",
        "title": "Letter Combinations of a Phone Number",
        "slug": "letter-combinations-of-a-phone-number",
        "difficulty": "Medium",
        "likes": 2543,
        "dislikes": 332,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Generate Parentheses\", \"titleSlug\": \"generate-parentheses\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Combination Sum\", \"titleSlug\": \"combination-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Binary Watch\", \"titleSlug\": \"binary-watch\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "674",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String",
            "Backtracking"
        ],
        "content": "<p>Given a string containing digits from <code>2-9</code> inclusive, return all possible letter combinations that the number could represent.</p>\n\n<p>A mapping of digit to letters (just like on the telephone buttons) is given below. Note that 1 does not map to any letters.</p>\n\n<p><img src=\"./img/letter-combinations-of-a-phone-number_1.png\" /></p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input: </strong>&quot;23&quot;\n<strong>Output:</strong> [&quot;ad&quot;, &quot;ae&quot;, &quot;af&quot;, &quot;bd&quot;, &quot;be&quot;, &quot;bf&quot;, &quot;cd&quot;, &quot;ce&quot;, &quot;cf&quot;].\n</pre>\n\n<p><strong>Note:</strong></p>\n\n<p>Although the above answer is in lexicographical order, your answer could be in any order you want.</p>\n"
    },
    {
        "id": "1043",
        "title": "Partition Array for Maximum Sum",
        "slug": "partition-array-for-maximum-sum",
        "difficulty": "Medium",
        "likes": 267,
        "dislikes": 29,
        "hints": [
            "Think dynamic programming:  dp[i] will be the answer for array A[0], ..., A[i-1].",
            "For j = 1 .. k that keeps everything in bounds, dp[i] is the maximum of dp[i-j] + max(A[i-1], ..., A[i-j]) * j ."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Graph"
        ],
        "content": "<p>Given an integer array <code>A</code>, you partition the array into (contiguous) subarrays of length at most <code>K</code>.&nbsp; After partitioning, each subarray has their values changed to become the maximum value of that subarray.</p>\n\n<p>Return the largest sum of the given array after partitioning.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-1-1\">[1,15,7,9,2,5,10]</span>, K = <span id=\"example-input-1-2\">3</span>\n<strong>Output: </strong><span id=\"example-output-1\">84\n</span><strong>Explanation</strong>: A becomes [15,15,15,9,10,10,10]</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= K &lt;= A.length&nbsp;&lt;= 500</code></li>\n\t<li><code>0 &lt;= A[i] &lt;= 10^6</code></li>\n</ol>\n"
    },
    {
        "id": "856",
        "title": "Score of Parentheses",
        "slug": "score-of-parentheses",
        "difficulty": "Medium",
        "likes": 647,
        "dislikes": 25,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "495",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String",
            "Stack"
        ],
        "content": "<p>Given a balanced parentheses string <code>S</code>, compute the score of the string based on the following rule:</p>\n\n<ul>\n\t<li><code>()</code> has score 1</li>\n\t<li><code>AB</code> has score <code>A + B</code>, where A and B are balanced parentheses strings.</li>\n\t<li><code>(A)</code> has score <code>2 * A</code>, where A is a balanced parentheses string.</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">&quot;()&quot;</span>\n<strong>Output: </strong><span id=\"example-output-1\">1</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">&quot;(())&quot;</span>\n<strong>Output: </strong><span id=\"example-output-2\">2</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">&quot;()()&quot;</span>\n<strong>Output: </strong><span id=\"example-output-3\">2</span>\n</pre>\n\n<div>\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-4-1\">&quot;(()(()))&quot;</span>\n<strong>Output: </strong><span id=\"example-output-4\">6</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>S</code> is a balanced parentheses string, containing only <code>(</code> and <code>)</code>.</li>\n\t<li><code>2 &lt;= S.length &lt;= 50</code></li>\n</ol>\n</div>\n</div>\n</div>\n</div>\n"
    },
    {
        "id": "368",
        "title": "Largest Divisible Subset",
        "slug": "largest-divisible-subset",
        "difficulty": "Medium",
        "likes": 612,
        "dislikes": 32,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "766",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math",
            "Dynamic Programming"
        ],
        "content": "<p>Given a set of <b>distinct</b> positive integers, find the largest subset such that every pair (S<sub>i</sub>, S<sub>j</sub>) of elements in this subset satisfies:</p>\n\n<p>S<sub>i</sub> % S<sub>j</sub> = 0 or S<sub>j</sub> % S<sub>i</sub> = 0.</p>\n\n<p>If there are multiple solutions, return any subset is fine.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<div>\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[1,2,3]</span>\n<strong>Output: </strong><span id=\"example-output-1\">[1,2] </span>(of course, [1,3] will also be ok)\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[1,2,4,8]</span>\n<strong>Output: </strong><span id=\"example-output-2\">[1,2,4,8]</span>\n</pre>\n</div>\n</div>"
    },
    {
        "id": "907",
        "title": "Sum of Subarray Minimums",
        "slug": "sum-of-subarray-minimums",
        "difficulty": "Medium",
        "likes": 635,
        "dislikes": 44,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "561",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Stack"
        ],
        "content": "<p>Given an array of integers <code>A</code>, find the sum of <code>min(B)</code>, where <code>B</code> ranges over&nbsp;every (contiguous) subarray of <code>A</code>.</p>\n\n<p>Since the answer may be large, <strong>return the answer modulo <code>10^9 + 7</code>.</strong></p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[3,1,2,4]</span>\n<strong>Output: </strong><span id=\"example-output-1\">17</span>\n<strong>Explanation:</strong> Subarrays are [3], [1], [2], [4], [3,1], [1,2], [2,4], [3,1,2], [1,2,4], [3,1,2,4]. \nMinimums are 3, 1, 2, 4, 1, 1, 2, 1, 1, 1.&nbsp; Sum is 17.</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 30000</code></li>\n\t<li><code>1 &lt;= A[i] &lt;= 30000</code></li>\n</ol>\n\n<div>\n<p>&nbsp;</p>\n</div>\n"
    },
    {
        "id": "791",
        "title": "Custom Sort String",
        "slug": "custom-sort-string",
        "difficulty": "Medium",
        "likes": 455,
        "dislikes": 138,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "419",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String"
        ],
        "content": "<p><code>S</code> and <code>T</code> are strings composed of lowercase letters. In <code>S</code>, no letter occurs more than once.</p>\n\n<p><code>S</code> was sorted in some custom order previously. We want to permute the characters of <code>T</code> so that they match the order that <code>S</code> was sorted. More specifically, if <code>x</code> occurs before <code>y</code> in <code>S</code>, then <code>x</code> should occur before <code>y</code> in the returned string.</p>\n\n<p>Return any permutation of <code>T</code> (as a string) that satisfies this property.</p>\n\n<pre>\n<strong>Example :</strong>\n<strong>Input:</strong> \nS = &quot;cba&quot;\nT = &quot;abcd&quot;\n<strong>Output:</strong> &quot;cbad&quot;\n<strong>Explanation:</strong> \n&quot;a&quot;, &quot;b&quot;, &quot;c&quot; appear in S, so the order of &quot;a&quot;, &quot;b&quot;, &quot;c&quot; should be &quot;c&quot;, &quot;b&quot;, and &quot;a&quot;. \nSince &quot;d&quot; does not appear in S, it can be at any position in T. &quot;dcba&quot;, &quot;cdba&quot;, &quot;cbda&quot; are also valid outputs.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li><code>S</code> has length at most <code>26</code>, and no character is repeated in <code>S</code>.</li>\n\t<li><code>T</code> has length at most <code>200</code>.</li>\n\t<li><code>S</code> and <code>T</code> consist of lowercase letters only.</li>\n</ul>\n"
    },
    {
        "id": "327",
        "title": "Count of Range Sum",
        "slug": "count-of-range-sum",
        "difficulty": "Hard",
        "likes": 449,
        "dislikes": 68,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Count of Smaller Numbers After Self\", \"titleSlug\": \"count-of-smaller-numbers-after-self\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Reverse Pairs\", \"titleSlug\": \"reverse-pairs\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Binary Search",
            "Divide and Conquer",
            "Sort",
            "Binary Indexed Tree",
            "Segment Tree"
        ],
        "content": "<p>Given an integer array <code>nums</code>, return the number of range sums that lie in <code>[lower, upper]</code> inclusive.<br />\nRange sum <code>S(i, j)</code> is defined as the sum of the elements in <code>nums</code> between indices <code>i</code> and <code>j</code> (<code>i</code> &le; <code>j</code>), inclusive.</p>\n\n<p><b>Note:</b><br />\nA naive algorithm of <i>O</i>(<i>n</i><sup>2</sup>) is trivial. You MUST do better than that.</p>\n\n<p><b>Example:</b></p>\n\n<pre>\n<strong>Input: </strong><i>nums</i> = <code>[-2,5,-1]</code>, <i>lower</i> = <code>-2</code>, <i>upper</i> = <code>2</code>,\n<strong>Output: </strong>3 \n<strong>Explanation: </strong>The three ranges are : <code>[0,0]</code>, <code>[2,2]</code>, <code>[0,2]</code> and their respective sums are: <code>-2, -1, 2</code>.\n</pre>"
    },
    {
        "id": "95",
        "title": "Unique Binary Search Trees II",
        "slug": "unique-binary-search-trees-ii",
        "difficulty": "Medium",
        "likes": 1443,
        "dislikes": 122,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Unique Binary Search Trees\", \"titleSlug\": \"unique-binary-search-trees\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Different Ways to Add Parentheses\", \"titleSlug\": \"different-ways-to-add-parentheses\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "604",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming",
            "Tree"
        ],
        "content": "<p>Given an integer <em>n</em>, generate all structurally unique <strong>BST&#39;s</strong> (binary search trees) that store values 1 ...&nbsp;<em>n</em>.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input:</strong> 3\n<strong>Output:</strong>\n[\n&nbsp; [1,null,3,2],\n&nbsp; [3,2,null,1],\n&nbsp; [3,1,null,null,2],\n&nbsp; [2,1,3],\n&nbsp; [1,null,2,null,3]\n]\n<strong>Explanation:</strong>\nThe above output corresponds to the 5 unique BST&#39;s shown below:\n\n   1         3     3      2      1\n    \\       /     /      / \\      \\\n     3     2     1      1   3      2\n    /     /       \\                 \\\n   2     1         2                 3\n</pre>\n"
    },
    {
        "id": "789",
        "title": "Escape The Ghosts",
        "slug": "escape-the-ghosts",
        "difficulty": "Medium",
        "likes": 138,
        "dislikes": 275,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "422",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math"
        ],
        "content": "<p>You are playing a simplified Pacman game. You&nbsp;start at the point <code>(0, 0)</code>, and your destination is<code> (target[0], target[1])</code>. There are several ghosts on the map, the i-th ghost starts at<code> (ghosts[i][0], ghosts[i][1])</code>.</p>\n\n<p>Each turn, you and all ghosts simultaneously *may* move in one of 4 cardinal directions: north, east, west, or south, going from the previous point to a new point 1 unit of distance away.</p>\n\n<p>You escape if and only if you can reach the target before any ghost reaches you (for any given moves the ghosts may take.)&nbsp; If you reach any square (including the target) at the same time as a ghost, it doesn&#39;t count as an escape.</p>\n\n<p>Return True if and only if it is possible to escape.</p>\n\n<pre>\n<strong>Example 1:</strong>\n<strong>Input:</strong> \nghosts = [[1, 0], [0, 3]]\ntarget = [0, 1]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> \nYou can directly reach the destination (0, 1) at time 1, while the ghosts located at (1, 0) or (0, 3) have no way to catch up with you.\n</pre>\n\n<pre>\n<strong>Example 2:</strong>\n<strong>Input:</strong> \nghosts = [[1, 0]]\ntarget = [2, 0]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> \nYou need to reach the destination (2, 0), but the ghost at (1, 0) lies between you and the destination.\n</pre>\n\n<pre>\n<strong>Example 3:</strong>\n<strong>Input:</strong> \nghosts = [[2, 0]]\ntarget = [1, 0]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> \nThe ghost can reach the target at the same time as you.\n</pre>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>All points have coordinates with absolute value &lt;= <code>10000</code>.</li>\n\t<li>The number of ghosts will not exceed <code>100</code>.</li>\n</ul>\n"
    },
    {
        "id": "1019",
        "title": "Next Greater Node In Linked List",
        "slug": "next-greater-node-in-linked-list",
        "difficulty": "Medium",
        "likes": 300,
        "dislikes": 22,
        "hints": [
            "We can use a stack that stores nodes in monotone decreasing order of value.  When we see a node_j with a larger value, every node_i in the stack has next_larger(node_i) = node_j ."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Linked List",
            "Stack"
        ],
        "content": "<p>We are given a linked list with&nbsp;<code>head</code>&nbsp;as the first node.&nbsp; Let&#39;s number the&nbsp;nodes in the list: <code>node_1, node_2, node_3, ...</code> etc.</p>\n\n<p>Each node may have a <em>next larger</em> <strong>value</strong>: for <code>node_i</code>,&nbsp;<code>next_larger(node_i)</code>&nbsp;is the <code>node_j.val</code> such that <code>j &gt; i</code>, <code>node_j.val &gt; node_i.val</code>, and <code>j</code> is the smallest possible choice.&nbsp; If such a <code>j</code>&nbsp;does not exist, the next larger value is <code>0</code>.</p>\n\n<p>Return an array of integers&nbsp;<code>answer</code>, where <code>answer[i] = next_larger(node_{i+1})</code>.</p>\n\n<p>Note that in the example <strong>inputs</strong>&nbsp;(not outputs) below, arrays such as <code>[2,1,5]</code>&nbsp;represent the serialization of a linked list with a head node value of 2, second node value of 1, and third node value of 5.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[2,1,5]</span>\n<strong>Output: </strong><span id=\"example-output-1\">[5,5,0]</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[2,7,4,3,5]</span>\n<strong>Output: </strong><span id=\"example-output-2\">[7,0,5,5,0]</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">[1,7,5,1,9,2,5,1]</span>\n<strong>Output: </strong><span id=\"example-output-3\">[7,9,9,9,0,5,0,0]</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong><span>Note:</span></strong></p>\n\n<ol>\n\t<li><code><span>1 &lt;= node.val&nbsp;&lt;= 10^9</span></code><span>&nbsp;for each node in the linked list.</span></li>\n\t<li>The given list has length in the range <code>[0, 10000]</code>.</li>\n</ol>\n</div>\n</div>\n</div>"
    },
    {
        "id": "747",
        "title": "Largest Number At Least Twice of Others",
        "slug": "largest-number-at-least-twice-of-others",
        "difficulty": "Easy",
        "likes": 222,
        "dislikes": 446,
        "hints": [
            "Scan through the array to find the unique largest element `m`, keeping track of it's index `maxIndex`.\r\n\r\nScan through the array again.  If we find some `x != m` with `m < 2*x`, we should return `-1`.\r\n\r\nOtherwise, we should return `maxIndex`."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "353",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array"
        ],
        "content": "<p>In a given integer array <code>nums</code>, there is always exactly one largest element.</p>\n\n<p>Find whether the largest element in the array is at least twice as much as every other number in the array.</p>\n\n<p>If it is, return the <strong>index</strong> of the largest element, otherwise return -1.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [3, 6, 1, 0]\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> 6 is the largest integer, and for every other number in the array x,\n6 is more than twice as big as x.  The index of value 6 is 1, so we return 1.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [1, 2, 3, 4]\n<strong>Output:</strong> -1\n<strong>Explanation:</strong> 4 isn&#39;t at least as big as twice the value of 3, so we return -1.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>nums</code> will have a length in the range <code>[1, 50]</code>.</li>\n\t<li>Every <code>nums[i]</code> will be an integer in the range <code>[0, 99]</code>.</li>\n</ol>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "825",
        "title": "Friends Of Appropriate Ages",
        "slug": "friends-of-appropriate-ages",
        "difficulty": "Medium",
        "likes": 188,
        "dislikes": 410,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "458",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array"
        ],
        "content": "<p>Some people will make friend requests. The&nbsp;list of their ages is given and&nbsp;<code>ages[i]</code>&nbsp;is the age of the&nbsp;ith person.&nbsp;</p>\n\n<p>Person A will NOT friend request person B (B != A) if any of the following conditions are true:</p>\n\n<ul>\n\t<li><code>age[B]&nbsp;&lt;= 0.5 * age[A]&nbsp;+ 7</code></li>\n\t<li><code>age[B]&nbsp;&gt; age[A]</code></li>\n\t<li><code>age[B]&nbsp;&gt; 100 &amp;&amp;&nbsp;age[A]&nbsp;&lt; 100</code></li>\n</ul>\n\n<p>Otherwise, A will friend request B.</p>\n\n<p>Note that if&nbsp;A requests B, B does not necessarily request A.&nbsp; Also, people will not friend request themselves.</p>\n\n<p>How many total friend requests are made?</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>[16,16]\n<strong>Output: </strong>2\n<strong>Explanation: </strong>2 people friend request each other.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>[16,17,18]\n<strong>Output: </strong>2\n<strong>Explanation: </strong>Friend requests are made 17 -&gt; 16, 18 -&gt; 17.</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>[20,30,100,110,120]\n<strong>Output: </strong>\n<strong>Explanation: </strong>Friend requests are made 110 -&gt; 100, 120 -&gt; 110, 120 -&gt; 100.\n</pre>\n\n<p>&nbsp;</p>\n\n<p>Notes:</p>\n\n<ul>\n\t<li><code>1 &lt;= ages.length&nbsp;&lt;= 20000</code>.</li>\n\t<li><code>1 &lt;= ages[i] &lt;= 120</code>.</li>\n</ul>\n"
    },
    {
        "id": "953",
        "title": "Verifying an Alien Dictionary",
        "slug": "verifying-an-alien-dictionary",
        "difficulty": "Easy",
        "likes": 266,
        "dislikes": 93,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "633",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Hash Table"
        ],
        "content": "<p>In an alien language, surprisingly they also use english lowercase letters, but possibly&nbsp;in a different <code>order</code>. The&nbsp;<code>order</code> of the alphabet&nbsp;is some permutation&nbsp;of lowercase letters.</p>\n\n<p>Given a sequence of <code>words</code>&nbsp;written in the alien language,&nbsp;and the <code>order</code> of the alphabet,&nbsp;return <code>true</code> if and only if the given <code>words</code>&nbsp;are sorted lexicographicaly in this alien language.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>words = <span id=\"example-input-1-1\">[&quot;hello&quot;,&quot;leetcode&quot;]</span>, order = <span id=\"example-input-1-2\">&quot;hlabcdefgijkmnopqrstuvwxyz&quot;</span>\n<strong>Output: </strong><span id=\"example-output-1\">true</span>\n<strong>Explanation: </strong><span id=\"example-output-1\">As &#39;h&#39; comes before &#39;l&#39; in this language, then the sequence is sorted.</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>words = <span id=\"example-input-2-1\">[&quot;word&quot;,&quot;world&quot;,&quot;row&quot;]</span>, order = <span id=\"example-input-2-2\">&quot;worldabcefghijkmnpqstuvxyz&quot;</span>\n<strong>Output: </strong><span id=\"example-output-2\">false</span>\n<strong>Explanation: </strong><span id=\"example-output-1\">As &#39;d&#39; comes after &#39;l&#39; in this language, then words[0] &gt; words[1], hence the sequence is unsorted.</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>words = <span id=\"example-input-3-1\">[&quot;apple&quot;,&quot;app&quot;]</span>, order = <span id=\"example-input-3-2\">&quot;abcdefghijklmnopqrstuvwxyz&quot;</span>\n<strong>Output: </strong><span id=\"example-output-3\">false\n</span><strong>Explanation: </strong>The first three characters &quot;app&quot; match, and the second string is shorter (in size.) According to lexicographical rules &quot;apple&quot; &gt; &quot;app&quot;, because &#39;l&#39; &gt; &#39;&empty;&#39;, where &#39;&empty;&#39; is defined as the blank character which is less than any other character (<a href=\"https://en.wikipedia.org/wiki/Lexicographical_order\" target=\"_blank\">More info</a>).\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= words.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= words[i].length &lt;= 20</code></li>\n\t<li><code>order.length == 26</code></li>\n\t<li>All characters in <code>words[i]</code> and <code>order</code> are english lowercase letters.</li>\n</ol>\n</div>\n</div>\n</div>\n"
    },
    {
        "id": "94",
        "title": "Binary Tree Inorder Traversal",
        "slug": "binary-tree-inorder-traversal",
        "difficulty": "Medium",
        "likes": 1915,
        "dislikes": 84,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Validate Binary Search Tree\", \"titleSlug\": \"validate-binary-search-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Binary Tree Preorder Traversal\", \"titleSlug\": \"binary-tree-preorder-traversal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Binary Tree Postorder Traversal\", \"titleSlug\": \"binary-tree-postorder-traversal\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Binary Search Tree Iterator\", \"titleSlug\": \"binary-search-tree-iterator\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Kth Smallest Element in a BST\", \"titleSlug\": \"kth-smallest-element-in-a-bst\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Closest Binary Search Tree Value II\", \"titleSlug\": \"closest-binary-search-tree-value-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Inorder Successor in BST\", \"titleSlug\": \"inorder-successor-in-bst\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Convert Binary Search Tree to Sorted Doubly Linked List\", \"titleSlug\": \"convert-binary-search-tree-to-sorted-doubly-linked-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Distance Between BST Nodes\", \"titleSlug\": \"minimum-distance-between-bst-nodes\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "231",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Hash Table",
            "Stack",
            "Tree"
        ],
        "content": "<p>Given a binary tree, return the <em>inorder</em> traversal of its nodes&#39; values.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input:</strong> [1,null,2,3]\n   1\n    \\\n     2\n    /\n   3\n\n<strong>Output:</strong> [1,3,2]</pre>\n\n<p><strong>Follow up:</strong> Recursive solution is trivial, could you do it iteratively?</p>\n"
    },
    {
        "id": "228",
        "title": "Summary Ranges",
        "slug": "summary-ranges",
        "difficulty": "Medium",
        "likes": 417,
        "dislikes": 413,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Missing Ranges\", \"titleSlug\": \"missing-ranges\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Data Stream as Disjoint Intervals\", \"titleSlug\": \"data-stream-as-disjoint-intervals\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "27",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array"
        ],
        "content": "<p>Given a sorted integer array without duplicates, return the summary of its ranges.</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b>  [0,1,2,4,5,7]\n<b>Output:</b> [&quot;0-&gt;2&quot;,&quot;4-&gt;5&quot;,&quot;7&quot;]\n<strong>Explanation: </strong>0,1,2 form a continuous range;&nbsp;4,5 form a continuous range.\n</pre>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input:</b>  [0,2,3,4,6,8,9]\n<b>Output:</b> [&quot;0&quot;,&quot;2-&gt;4&quot;,&quot;6&quot;,&quot;8-&gt;9&quot;]\n<strong>Explanation: </strong>2,3,4 form a continuous range;&nbsp;8,9 form a continuous range.\n</pre>\n"
    },
    {
        "id": "112",
        "title": "Path Sum",
        "slug": "path-sum",
        "difficulty": "Easy",
        "likes": 1108,
        "dislikes": 361,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Path Sum II\", \"titleSlug\": \"path-sum-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Binary Tree Maximum Path Sum\", \"titleSlug\": \"binary-tree-maximum-path-sum\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Sum Root to Leaf Numbers\", \"titleSlug\": \"sum-root-to-leaf-numbers\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Path Sum III\", \"titleSlug\": \"path-sum-iii\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Path Sum IV\", \"titleSlug\": \"path-sum-iv\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "616",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree",
            "Depth-first Search"
        ],
        "content": "<p>Given a binary tree and a sum, determine if the tree has a root-to-leaf path such that adding up all the values along the path equals the given sum.</p>\n\n<p><strong>Note:</strong>&nbsp;A leaf is a node with no children.</p>\n\n<p><strong>Example:</strong></p>\n\n<p>Given the below binary tree and <code>sum = 22</code>,</p>\n\n<pre>\n      <strong>5</strong>\n     <strong>/</strong> \\\n    <strong>4</strong>   8\n   <strong>/</strong>   / \\\n  <strong>11</strong>  13  4\n /  <strong>\\</strong>      \\\n7    <strong>2</strong>      1\n</pre>\n\n<p>return true, as there exist a root-to-leaf path <code>5-&gt;4-&gt;11-&gt;2</code> which sum is 22.</p>\n"
    },
    {
        "id": "982",
        "title": "Triples with Bitwise AND Equal To Zero",
        "slug": "triples-with-bitwise-and-equal-to-zero",
        "difficulty": "Hard",
        "likes": 64,
        "dislikes": 91,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>Given an array of integers <code>A</code>, find the number of&nbsp;triples of indices (i, j, k)&nbsp;such that:</p>\n\n<ul>\n\t<li><code>0 &lt;= i &lt; A.length</code></li>\n\t<li><code>0 &lt;= j &lt; A.length</code></li>\n\t<li><code>0 &lt;= k &lt; A.length</code></li>\n\t<li><code>A[i]&nbsp;&amp; A[j]&nbsp;&amp; A[k] == 0</code>, where <code>&amp;</code>&nbsp;represents the bitwise-AND operator.</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[2,1,3]</span>\n<strong>Output: </strong><span id=\"example-output-1\">12</span>\n<strong>Explanation: </strong>We could choose the following i, j, k triples:\n(i=0, j=0, k=1) : 2 &amp; 2 &amp; 1\n(i=0, j=1, k=0) : 2 &amp; 1 &amp; 2\n(i=0, j=1, k=1) : 2 &amp; 1 &amp; 1\n(i=0, j=1, k=2) : 2 &amp; 1 &amp; 3\n(i=0, j=2, k=1) : 2 &amp; 3 &amp; 1\n(i=1, j=0, k=0) : 1 &amp; 2 &amp; 2\n(i=1, j=0, k=1) : 1 &amp; 2 &amp; 1\n(i=1, j=0, k=2) : 1 &amp; 2 &amp; 3\n(i=1, j=1, k=0) : 1 &amp; 1 &amp; 2\n(i=1, j=2, k=0) : 1 &amp; 3 &amp; 2\n(i=2, j=0, k=1) : 3 &amp; 2 &amp; 1\n(i=2, j=1, k=0) : 3 &amp; 1 &amp; 2\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code><font face=\"monospace\">1 &lt;= A.length &lt;= 1000</font></code></li>\n\t<li><code>0 &lt;= A[i] &lt; 2^16</code></li>\n</ol>\n"
    },
    {
        "id": "572",
        "title": "Subtree of Another Tree",
        "slug": "subtree-of-another-tree",
        "difficulty": "Easy",
        "likes": 1325,
        "dislikes": 51,
        "hints": [
            "Which approach is better here- recursive or iterative?",
            "If recursive approach is better, can you write recursive function with its parameters?",
            "Two trees <b>s</b> and <b>t</b> are said to be identical if their root values are same and their left and right subtrees are identical. Can you write this in form of recursive formulae?",
            "Recursive formulae can be: \r\nisIdentical(s,t)= s.val==t.val AND isIdentical(s.left,t.left) AND isIdentical(s.right,t.right)"
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Count Univalue Subtrees\", \"titleSlug\": \"count-univalue-subtrees\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Most Frequent Subtree Sum\", \"titleSlug\": \"most-frequent-subtree-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "128",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree"
        ],
        "content": "<p>\nGiven two non-empty binary trees <b>s</b> and <b>t</b>, check whether tree <b>t</b> has exactly the same structure and node values with a subtree of <b>s</b>. A subtree of <b>s</b> is a tree consists of a node in <b>s</b> and all of this node's descendants. The tree <b>s</b> could also be considered as a subtree of itself.\n</p>\n\n<p><b>Example 1:</b><br>\n\nGiven tree s:\n<pre>\n     3\n    / \\\n   4   5\n  / \\\n 1   2\n</pre>\nGiven tree t:\n<pre>\n   4 \n  / \\\n 1   2\n</pre>\nReturn <b>true</b>, because t has the same structure and node values with a subtree of s.\n</p>\n\n<p><b>Example 2:</b><br>\n\nGiven tree s:\n<pre>\n     3\n    / \\\n   4   5\n  / \\\n 1   2\n    /\n   0\n</pre>\nGiven tree t:\n<pre>\n   4\n  / \\\n 1   2\n</pre>\nReturn <b>false</b>.\n</p>"
    },
    {
        "id": "962",
        "title": "Maximum Width Ramp",
        "slug": "maximum-width-ramp",
        "difficulty": "Medium",
        "likes": 319,
        "dislikes": 10,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "646",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array"
        ],
        "content": "<p>Given an array <code>A</code> of integers, a <em>ramp</em>&nbsp;is a tuple <code>(i, j)</code> for which <code>i &lt; j</code>&nbsp;and&nbsp;<code>A[i] &lt;= A[j]</code>.&nbsp; The width of such a&nbsp;ramp is <code>j - i</code>.</p>\n\n<p>Find the maximum width of a ramp in <code>A</code>.&nbsp; If one doesn&#39;t exist, return 0.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[6,0,8,2,1,5]</span>\n<strong>Output: </strong><span id=\"example-output-1\">4</span>\n<strong>Explanation: </strong>\nThe maximum width ramp is achieved at (i, j) = (1, 5): A[1] = 0 and A[5] = 5.\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[9,8,1,0,1,9,4,0,4,1]</span>\n<strong>Output: </strong><span id=\"example-output-2\">7</span>\n<strong>Explanation: </strong>\nThe maximum width ramp is achieved at (i, j) = (2, 9): A[2] = 1 and A[9] = 1.\n</pre>\n</div>\n\n<div>\n<div>\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>2 &lt;= A.length &lt;= 50000</code></li>\n\t<li><code>0 &lt;= A[i] &lt;= 50000</code></li>\n</ol>\n</div>\n</div>\n\n<div>\n<div>&nbsp;</div>\n</div>\n"
    },
    {
        "id": "667",
        "title": "Beautiful Arrangement II",
        "slug": "beautiful-arrangement-ii",
        "difficulty": "Medium",
        "likes": 248,
        "dislikes": 544,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Beautiful Arrangement\", \"titleSlug\": \"beautiful-arrangement\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "240",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array"
        ],
        "content": "<p>\nGiven two integers <code>n</code> and <code>k</code>, you need to construct a list which contains <code>n</code> different positive integers ranging from <code>1</code> to <code>n</code> and obeys the following requirement: <br/>\n\nSuppose this list is [a<sub>1</sub>, a<sub>2</sub>, a<sub>3</sub>, ... , a<sub>n</sub>], then the list [|a<sub>1</sub> - a<sub>2</sub>|, |a<sub>2</sub> - a<sub>3</sub>|, |a<sub>3</sub> - a<sub>4</sub>|, ... , |a<sub>n-1</sub> - a<sub>n</sub>|] has exactly <code>k</code> distinct integers.\n</p>\n\n<p>\nIf there are multiple answers, print any of them.\n</p>\n\n<p><b>Example 1:</b><br/>\n<pre>\n<b>Input:</b> n = 3, k = 1\n<b>Output:</b> [1, 2, 3]\n<b>Explanation:</b> The [1, 2, 3] has three different positive integers ranging from 1 to 3, and the [1, 1] has exactly 1 distinct integer: 1.\n</pre>\n</p>\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b> n = 3, k = 2\n<b>Output:</b> [1, 3, 2]\n<b>Explanation:</b> The [1, 3, 2] has three different positive integers ranging from 1 to 3, and the [2, 1] has exactly 2 distinct integers: 1 and 2.\n</pre>\n</p>\n\n<p><b>Note:</b><br>\n<ol>\n<li>The <code>n</code> and <code>k</code> are in the range 1 <= k < n <= 10<sup>4</sup>.</li>\n</ol>\n</p>"
    },
    {
        "id": "434",
        "title": "Number of Segments in a String",
        "slug": "number-of-segments-in-a-string",
        "difficulty": "Easy",
        "likes": 152,
        "dislikes": 598,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "282",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String"
        ],
        "content": "<p>Count the number of segments in a string, where a segment is defined to be a contiguous sequence of non-space characters.</p>\n\n<p>Please note that the string does not contain any <b>non-printable</b> characters.</p>\n\n<p><b>Example:</b></p>\n<pre>\n<b>Input:</b> \"Hello, my name is John\"\n<b>Output:</b> 5\n</pre>\n</p>"
    },
    {
        "id": "605",
        "title": "Can Place Flowers",
        "slug": "can-place-flowers",
        "difficulty": "Easy",
        "likes": 540,
        "dislikes": 284,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Teemo Attacking\", \"titleSlug\": \"teemo-attacking\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Asteroid Collision\", \"titleSlug\": \"asteroid-collision\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "154",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array"
        ],
        "content": "<p>Suppose you have a long flowerbed in which some of the plots are planted and some are not. However, flowers cannot be planted in adjacent plots - they would compete for water and both would die.</p>\n\n<p>Given a flowerbed (represented as an array containing 0 and 1, where 0 means empty and 1 means not empty), and a number <b>n</b>, return if <b>n</b> new flowers can be planted in it without violating the no-adjacent-flowers rule.</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> flowerbed = [1,0,0,0,1], n = 1\n<b>Output:</b> True\n</pre>\n</p>\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b> flowerbed = [1,0,0,0,1], n = 2\n<b>Output:</b> False\n</pre>\n</p>\n\n<p><b>Note:</b><br>\n<ol>\n<li>The input array won't violate no-adjacent-flowers rule.</li>\n<li>The input array size is in the range of [1, 20000].</li>\n<li><b>n</b> is a non-negative integer which won't exceed the input array size.</li>\n</ol>\n</p>"
    },
    {
        "id": "804",
        "title": "Unique Morse Code Words",
        "slug": "unique-morse-code-words",
        "difficulty": "Easy",
        "likes": 481,
        "dislikes": 427,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "439",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String"
        ],
        "content": "<p>International Morse Code defines a standard encoding where each letter is mapped to a series of dots and dashes, as follows: <code>&quot;a&quot;</code> maps to <code>&quot;.-&quot;</code>, <code>&quot;b&quot;</code> maps to <code>&quot;-...&quot;</code>, <code>&quot;c&quot;</code> maps to <code>&quot;-.-.&quot;</code>, and so on.</p>\n\n<p>For convenience, the full table for the 26 letters of the English alphabet is given below:</p>\n\n<pre>\n[&quot;.-&quot;,&quot;-...&quot;,&quot;-.-.&quot;,&quot;-..&quot;,&quot;.&quot;,&quot;..-.&quot;,&quot;--.&quot;,&quot;....&quot;,&quot;..&quot;,&quot;.---&quot;,&quot;-.-&quot;,&quot;.-..&quot;,&quot;--&quot;,&quot;-.&quot;,&quot;---&quot;,&quot;.--.&quot;,&quot;--.-&quot;,&quot;.-.&quot;,&quot;...&quot;,&quot;-&quot;,&quot;..-&quot;,&quot;...-&quot;,&quot;.--&quot;,&quot;-..-&quot;,&quot;-.--&quot;,&quot;--..&quot;]</pre>\n\n<p>Now, given a list of words, each word can be written as a concatenation of the Morse code of each letter. For example, &quot;cba&quot; can be written as &quot;-.-..--...&quot;, (which is the concatenation &quot;-.-.&quot; + &quot;-...&quot; + &quot;.-&quot;). We&#39;ll call such a concatenation, the transformation&nbsp;of a word.</p>\n\n<p>Return the number of different transformations among all words we have.</p>\n\n<pre>\n<strong>Example:</strong>\n<strong>Input:</strong> words = [&quot;gin&quot;, &quot;zen&quot;, &quot;gig&quot;, &quot;msg&quot;]\n<strong>Output:</strong> 2\n<strong>Explanation: </strong>\nThe transformation of each word is:\n&quot;gin&quot; -&gt; &quot;--...-.&quot;\n&quot;zen&quot; -&gt; &quot;--...-.&quot;\n&quot;gig&quot; -&gt; &quot;--...--.&quot;\n&quot;msg&quot; -&gt; &quot;--...--.&quot;\n\nThere are 2 different transformations, &quot;--...-.&quot; and &quot;--...--.&quot;.\n</pre>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>The length of <code>words</code> will be at most <code>100</code>.</li>\n\t<li>Each <code>words[i]</code> will have length in range <code>[1, 12]</code>.</li>\n\t<li><code>words[i]</code> will only consist of lowercase letters.</li>\n</ul>\n"
    },
    {
        "id": "807",
        "title": "Max Increase to Keep City Skyline",
        "slug": "max-increase-to-keep-city-skyline",
        "difficulty": "Medium",
        "likes": 601,
        "dislikes": 158,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "436",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [],
        "content": "<p>In a 2 dimensional array <code>grid</code>, each value <code>grid[i][j]</code> represents the height of a building located there. We are allowed to increase the height of any number of buildings, by any amount (the amounts&nbsp;can be different for different buildings). Height&nbsp;0 is considered to be a&nbsp;building&nbsp;as well.&nbsp;</p>\n\n<p>At the end, the &quot;skyline&quot; when viewed from all four directions&nbsp;of the grid, i.e.&nbsp;top, bottom, left, and right,&nbsp;must be the same as the&nbsp;skyline of the original grid. A city&#39;s skyline is the outer contour of the rectangles formed by all the buildings when viewed from a distance. See&nbsp;the following example.</p>\n\n<p>What is the maximum total sum that the height of the buildings can be increased?</p>\n\n<pre>\n<strong>Example:</strong>\n<strong>Input:</strong> grid = [[3,0,8,4],[2,4,5,7],[9,2,6,3],[0,3,1,0]]\n<strong>Output:</strong> 35\n<strong>Explanation:</strong> \nThe grid is:\n[ [3, 0, 8, 4], \n  [2, 4, 5, 7],\n  [9, 2, 6, 3],\n  [0, 3, 1, 0] ]\n\nThe skyline viewed from top or bottom is: [9, 4, 8, 7]\nThe skyline viewed from left or right is: [8, 7, 9, 3]\n\nThe grid after increasing the height of buildings without affecting skylines is:\n\ngridNew = [ [8, 4, 8, 7],\n            [7, 4, 7, 7],\n            [9, 4, 8, 7],\n            [3, 3, 3, 3] ]\n\n</pre>\n\n<p><strong>Notes: </strong></p>\n\n<ul>\n\t<li><code>1 &lt; grid.length = grid[0].length &lt;= 50</code>.</li>\n\t<li>All heights <code>grid[i][j]</code> are in the range <code>[0, 100]</code>.</li>\n\t<li>All buildings in <code>grid[i][j]</code> occupy the entire grid cell: that is, they are a <code>1 x 1 x grid[i][j]</code> rectangular prism.</li>\n</ul>\n"
    },
    {
        "id": "706",
        "title": "Design HashMap",
        "slug": "design-hashmap",
        "difficulty": "Easy",
        "likes": 398,
        "dislikes": 67,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Design HashSet\", \"titleSlug\": \"design-hashset\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Hash Table",
            "Design"
        ],
        "content": "<p>Design a HashMap&nbsp;without using any built-in hash table libraries.</p>\n\n<p>To be specific, your design should include these functions:</p>\n\n<ul>\n\t<li><code>put(key, value)</code> :&nbsp;Insert a (key, value) pair into the HashMap. If the value already exists in the HashMap, update the value.</li>\n\t<li><code>get(key)</code>: Returns the value to which the specified key is mapped, or -1 if this map contains no mapping for the key.</li>\n\t<li><code>remove(key)</code> :&nbsp;Remove the mapping for the value key if this map contains the mapping for the key.</li>\n</ul>\n\n<p><br />\n<strong>Example:</strong></p>\n\n<pre>\nMyHashMap hashMap = new MyHashMap();\nhashMap.put(1, 1); &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\nhashMap.put(2, 2); &nbsp; &nbsp; &nbsp; &nbsp; \nhashMap.get(1); &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// returns 1\nhashMap.get(3); &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// returns -1 (not found)\nhashMap.put(2, 1); &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// update the existing value\nhashMap.get(2); &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// returns 1 \nhashMap.remove(2); &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// remove the mapping for 2\nhashMap.get(2); &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;// returns -1 (not found) \n</pre>\n\n<p><br />\n<strong>Note:</strong></p>\n\n<ul>\n\t<li>All keys and values will be in the range of <code>[0, 1000000]</code>.</li>\n\t<li>The number of operations will be in the range of&nbsp;<code>[1, 10000]</code>.</li>\n\t<li>Please do not use the built-in HashMap library.</li>\n</ul>\n"
    },
    {
        "id": "456",
        "title": "132 Pattern",
        "slug": "132-pattern",
        "difficulty": "Medium",
        "likes": 716,
        "dislikes": 45,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "189",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Stack"
        ],
        "content": "<p>\nGiven a sequence of n integers a<sub>1</sub>, a<sub>2</sub>, ..., a<sub>n</sub>, a 132 pattern is a subsequence a<sub><b>i</b></sub>, a<sub><b>j</b></sub>, a<sub><b>k</b></sub> such\nthat <b>i</b> < <b>j</b> < <b>k</b> and a<sub><b>i</b></sub> < a<sub><b>k</b></sub> < a<sub><b>j</b></sub>. Design an algorithm that takes a list of n numbers as input and checks whether there is a 132 pattern in the list.</p>\n\n<p><b>Note:</b> n will be less than 15,000.</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> [1, 2, 3, 4]\n\n<b>Output:</b> False\n\n<b>Explanation:</b> There is no 132 pattern in the sequence.\n</pre>\n</p>\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b> [3, 1, 4, 2]\n\n<b>Output:</b> True\n\n<b>Explanation:</b> There is a 132 pattern in the sequence: [1, 4, 2].\n</pre>\n</p>\n\n<p><b>Example 3:</b><br />\n<pre>\n<b>Input:</b> [-1, 3, 2, 0]\n\n<b>Output:</b> True\n\n<b>Explanation:</b> There are three 132 patterns in the sequence: [-1, 3, 2], [-1, 3, 0] and [-1, 2, 0].\n</pre>\n</p>"
    },
    {
        "id": "145",
        "title": "Binary Tree Postorder Traversal",
        "slug": "binary-tree-postorder-traversal",
        "difficulty": "Hard",
        "likes": 1084,
        "dislikes": 55,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Binary Tree Inorder Traversal\", \"titleSlug\": \"binary-tree-inorder-traversal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"N-ary Tree Postorder Traversal\", \"titleSlug\": \"n-ary-tree-postorder-traversal\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "585",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Stack",
            "Tree"
        ],
        "content": "<p>Given a binary tree, return the <em>postorder</em> traversal of its nodes&#39; values.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input:</strong>&nbsp;<code>[1,null,2,3]</code>\n   1\n    \\\n     2\n    /\n   3\n\n<strong>Output:</strong>&nbsp;<code>[3,2,1]</code>\n</pre>\n\n<p><strong>Follow up:</strong> Recursive solution is trivial, could you do it iteratively?</p>\n"
    },
    {
        "id": "885",
        "title": "Spiral Matrix III",
        "slug": "spiral-matrix-iii",
        "difficulty": "Medium",
        "likes": 115,
        "dislikes": 182,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "531",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math"
        ],
        "content": "<p>On a 2 dimensional grid with <code>R</code> rows and <code>C</code> columns, we start at <code>(r0, c0)</code> facing east.</p>\n\n<p>Here, the north-west corner of the grid is at the&nbsp;first row and column, and the south-east corner of the grid is at the last row and column.</p>\n\n<p>Now, we walk in a clockwise spiral shape to visit every position in this grid.&nbsp;</p>\n\n<p>Whenever we would move outside the boundary of the grid, we continue our walk outside the grid (but may return to the grid boundary later.)&nbsp;</p>\n\n<p>Eventually, we reach all <code>R * C</code> spaces of the grid.</p>\n\n<p>Return a list of coordinates representing the positions of the grid in the order they were visited.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>R = <span id=\"example-input-1-1\">1</span>, C = <span id=\"example-input-1-2\">4</span>, r0 = <span id=\"example-input-1-3\">0</span>, c0 = <span id=\"example-input-1-4\">0</span>\n<strong>Output: </strong><span id=\"example-output-1\">[[0,0],[0,1],[0,2],[0,3]]</span>\n\n<img alt=\"\" src=\"./img/spiral-matrix-iii_1.png\" style=\"width: 174px; height: 99px;\" />\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>R = <span id=\"example-input-2-1\">5</span>, C = <span id=\"example-input-2-2\">6</span>, r0 = <span id=\"example-input-2-3\">1</span>, c0 = <span id=\"example-input-2-4\">4</span>\n<strong>Output: </strong><span id=\"example-output-2\">[[1,4],[1,5],[2,5],[2,4],[2,3],[1,3],[0,3],[0,4],[0,5],[3,5],[3,4],[3,3],[3,2],[2,2],[1,2],[0,2],[4,5],[4,4],[4,3],[4,2],[4,1],[3,1],[2,1],[1,1],[0,1],[4,0],[3,0],[2,0],[1,0],[0,0]]</span>\n\n<img alt=\"\" src=\"./img/spiral-matrix-iii_2.png\" style=\"width: 202px; height: 142px;\" />\n</pre>\n\n<div>\n<div>\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= R &lt;= 100</code></li>\n\t<li><code>1 &lt;= C &lt;= 100</code></li>\n\t<li><code>0 &lt;= r0 &lt; R</code></li>\n\t<li><code>0 &lt;= c0 &lt; C</code></li>\n</ol>\n</div>\n</div>\n"
    },
    {
        "id": "821",
        "title": "Shortest Distance to a Character",
        "slug": "shortest-distance-to-a-character",
        "difficulty": "Easy",
        "likes": 680,
        "dislikes": 59,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "455",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [],
        "content": "<p>Given a string <code>S</code>&nbsp;and a character <code>C</code>, return an array of integers representing the shortest distance from the character <code>C</code> in the string.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> S = &quot;loveleetcode&quot;, C = &#39;e&#39;\n<strong>Output:</strong> [3, 2, 1, 0, 1, 0, 0, 1, 2, 2, 1, 0]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>S</code> string length is&nbsp;in&nbsp;<code>[1, 10000].</code></li>\n\t<li><code>C</code>&nbsp;is a single character, and guaranteed to be in string <code>S</code>.</li>\n\t<li>All letters in <code>S</code> and <code>C</code> are lowercase.</li>\n</ol>\n"
    },
    {
        "id": "107",
        "title": "Binary Tree Level Order Traversal II",
        "slug": "binary-tree-level-order-traversal-ii",
        "difficulty": "Easy",
        "likes": 832,
        "dislikes": 160,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Binary Tree Level Order Traversal\", \"titleSlug\": \"binary-tree-level-order-traversal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Average of Levels in Binary Tree\", \"titleSlug\": \"average-of-levels-in-binary-tree\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Tree",
            "Breadth-first Search"
        ],
        "content": "<p>Given a binary tree, return the <i>bottom-up level order</i> traversal of its nodes' values. (ie, from left to right, level by level from leaf to root).</p>\n\n<p>\nFor example:<br />\nGiven binary tree <code>[3,9,20,null,null,15,7]</code>,<br />\n<pre>\n    3\n   / \\\n  9  20\n    /  \\\n   15   7\n</pre>\n</p>\n<p>\nreturn its bottom-up level order traversal as:<br />\n<pre>\n[\n  [15,7],\n  [9,20],\n  [3]\n]\n</pre>\n</p>"
    },
    {
        "id": "365",
        "title": "Water and Jug Problem",
        "slug": "water-and-jug-problem",
        "difficulty": "Medium",
        "likes": 184,
        "dislikes": 551,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Math"
        ],
        "content": "<p>You are given two jugs with capacities <i>x</i> and <i>y</i> litres. There is an infinite amount of water supply available. You need to determine whether it is possible to measure exactly <i>z</i> litres using these two jugs.</p>\n\n<p>If <i>z</i> liters of water is measurable, you must have <i>z</i> liters of water contained within <b>one or both buckets</b> by the end.</p>\n\n<p>Operations allowed:</p>\n\n<ul>\n\t<li>Fill any of the jugs completely with water.</li>\n\t<li>Empty any of the jugs.</li>\n\t<li>Pour water from one jug into another till the other jug is completely full or the first jug itself is empty.</li>\n</ul>\n\n<p><b>Example 1:</b> (From the famous <a href=\"https://www.youtube.com/watch?v=BVtQNK_ZUJg\" target=\"_blank\"><i>&quot;Die Hard&quot;</i> example</a>)</p>\n\n<pre>\nInput: x = 3, y = 5, z = 4\nOutput: True\n</pre>\n\n<p><b>Example 2:</b></p>\n\n<pre>\nInput: x = 2, y = 6, z = 5\nOutput: False\n</pre>"
    },
    {
        "id": "859",
        "title": "Buddy Strings",
        "slug": "buddy-strings",
        "difficulty": "Easy",
        "likes": 348,
        "dislikes": 211,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "493",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String"
        ],
        "content": "<p>Given two strings <code>A</code> and <code>B</code>&nbsp;of lowercase letters, return <code>true</code> if and only if we&nbsp;can swap two letters in <code>A</code> so that the result equals <code>B</code>.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<div>\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-1-1\">&quot;ab&quot;</span>, B = <span id=\"example-input-1-2\">&quot;ba&quot;</span>\n<strong>Output: </strong><span id=\"example-output-1\">true</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-2-1\">&quot;ab&quot;</span>, B = <span id=\"example-input-2-2\">&quot;ab&quot;</span>\n<strong>Output: </strong><span id=\"example-output-2\">false</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-3-1\">&quot;aa&quot;</span>, B = <span id=\"example-input-3-2\">&quot;aa&quot;</span>\n<strong>Output: </strong><span id=\"example-output-3\">true</span>\n</pre>\n\n<div>\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-4-1\">&quot;aaaaaaabc&quot;</span>, B = <span id=\"example-input-4-2\">&quot;aaaaaaacb&quot;</span>\n<strong>Output: </strong><span id=\"example-output-4\">true</span>\n</pre>\n\n<div>\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-5-1\">&quot;&quot;</span>, B = <span id=\"example-input-5-2\">&quot;aa&quot;</span>\n<strong>Output: </strong><span id=\"example-output-5\">false</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong><span>Note:</span></strong></p>\n\n<ol>\n\t<li><code>0 &lt;= A.length &lt;= 20000</code></li>\n\t<li><code>0 &lt;= B.length &lt;= 20000</code></li>\n\t<li><code>A</code> and&nbsp;<code>B</code> consist only of lowercase letters.</li>\n</ol>\n</div>\n</div>\n</div>\n</div>\n</div>\n"
    },
    {
        "id": "268",
        "title": "Missing Number",
        "slug": "missing-number",
        "difficulty": "Easy",
        "likes": 1083,
        "dislikes": 1477,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"First Missing Positive\", \"titleSlug\": \"first-missing-positive\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Single Number\", \"titleSlug\": \"single-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Find the Duplicate Number\", \"titleSlug\": \"find-the-duplicate-number\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Couples Holding Hands\", \"titleSlug\": \"couples-holding-hands\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "288",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Math",
            "Bit Manipulation"
        ],
        "content": "<p>Given an array containing <i>n</i> distinct numbers taken from <code>0, 1, 2, ..., n</code>, find the one that is missing from the array.</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> [3,0,1]\n<b>Output:</b> 2\n</pre>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input:</b> [9,6,4,2,3,5,7,0,1]\n<b>Output:</b> 8\n</pre>\n\n<p><b>Note</b>:<br />\nYour algorithm should run in linear runtime complexity. Could you implement it using only constant extra space complexity?</p>"
    },
    {
        "id": "223",
        "title": "Rectangle Area",
        "slug": "rectangle-area",
        "difficulty": "Medium",
        "likes": 272,
        "dislikes": 546,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Rectangle Overlap\", \"titleSlug\": \"rectangle-overlap\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Math"
        ],
        "content": "<p>Find the total area covered by two <strong>rectilinear</strong> rectangles in a <strong>2D</strong> plane.</p>\n\n<p>Each rectangle is defined by its bottom left corner and top right corner as shown in the figure.</p>\n\n<p><img alt=\"Rectangle Area\" src=\"./img/rectangle-area_1.png\" style=\"width: 542px; height: 304px;\" /></p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-1-1\">-3</span>, B = <span id=\"example-input-1-2\">0</span>, C = <span id=\"example-input-1-3\">3</span>, D = <span id=\"example-input-1-4\">4</span>, E = <span id=\"example-input-1-5\">0</span>, F = <span id=\"example-input-1-6\">-1</span>, G = <span id=\"example-input-1-7\">9</span>, H = <span id=\"example-input-1-8\">2</span>\n<strong>Output: </strong><span id=\"example-output-1\">45</span></pre>\n\n<p><strong>Note:</strong></p>\n\n<p>Assume that the total area is never beyond the maximum possible value of <strong>int</strong>.</p>\n"
    },
    {
        "id": "292",
        "title": "Nim Game",
        "slug": "nim-game",
        "difficulty": "Easy",
        "likes": 407,
        "dislikes": 1219,
        "hints": [
            "If there are 5 stones in the heap, could you figure out a way to remove the stones such that you will always be the winner?"
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Flip Game II\", \"titleSlug\": \"flip-game-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "31",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Brainteaser",
            "Minimax"
        ],
        "content": "<p>You are playing the following Nim Game with your friend: There is a heap of stones on the table, each time one of you take turns to remove 1 to 3 stones. The one who removes the last stone will be the winner. You will take the first turn to remove the stones.</p>\n\n<p>Both of you are very clever and have optimal strategies for the game. Write a function to determine whether you can win the game given the number of stones in the heap.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input:</strong> <code>4</code>\n<strong>Output:</strong> false \n<strong>Explanation: </strong>If there are 4 stones in the heap, then you will never win the game;\n&nbsp;            No matter 1, 2, or 3 stones you remove, the last stone will always be \n&nbsp;            removed by your friend.</pre>"
    },
    {
        "id": "475",
        "title": "Heaters",
        "slug": "heaters",
        "difficulty": "Easy",
        "likes": 529,
        "dislikes": 564,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Binary Search"
        ],
        "content": "<p>Winter is coming! Your first job during the contest is to design a standard heater with fixed warm radius to warm all the houses.</p>\n\n<p>Now, you are given positions of houses and heaters on a horizontal line, find out minimum radius of heaters so that all houses could be covered by those heaters.</p>\n\n<p>So, your input will be the positions of houses and heaters seperately, and your expected output will be the minimum radius standard of heaters.</p>\n\n<p><b>Note:</b></p>\n\n<ol>\n\t<li>Numbers of houses and heaters you are given are non-negative and will not exceed 25000.</li>\n\t<li>Positions of houses and heaters you are given are non-negative and will not exceed 10^9.</li>\n\t<li>As long as a house is in the heaters&#39; warm radius range, it can be warmed.</li>\n\t<li>All the heaters follow your radius standard and the warm radius will the same.</li>\n</ol>\n\n<p>&nbsp;</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> [1,2,3],[2]\n<b>Output:</b> 1\n<b>Explanation:</b> The only heater was placed in the position 2, and if we use the radius 1 standard, then all the houses can be warmed.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input:</b> [1,2,3,4],[1,4]\n<b>Output:</b> 1\n<b>Explanation:</b> The two heater was placed in the position 1 and 4. We need to use radius 1 standard, then all the houses can be warmed.\n</pre>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "19",
        "title": "Remove Nth Node From End of List",
        "slug": "remove-nth-node-from-end-of-list",
        "difficulty": "Medium",
        "likes": 2109,
        "dislikes": 160,
        "hints": [
            "Maintain two pointers and update one with a delay of n steps."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "48",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Linked List",
            "Two Pointers"
        ],
        "content": "<p>Given a linked list, remove the <em>n</em>-th node from the end of list and return its head.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\nGiven linked list: <strong>1-&gt;2-&gt;3-&gt;4-&gt;5</strong>, and <strong><em>n</em> = 2</strong>.\n\nAfter removing the second node from the end, the linked list becomes <strong>1-&gt;2-&gt;3-&gt;5</strong>.\n</pre>\n\n<p><strong>Note:</strong></p>\n\n<p>Given <em>n</em> will always be valid.</p>\n\n<p><strong>Follow up:</strong></p>\n\n<p>Could you do this in one pass?</p>\n"
    },
    {
        "id": "880",
        "title": "Decoded String at Index",
        "slug": "decoded-string-at-index",
        "difficulty": "Medium",
        "likes": 288,
        "dislikes": 59,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "527",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Stack"
        ],
        "content": "<p>An encoded string <code>S</code> is given.&nbsp; To find and write the <em>decoded</em> string to a tape, the encoded string is read <strong>one character at a time</strong>&nbsp;and the following steps are taken:</p>\n\n<ul>\n\t<li>If the character read is a letter, that letter is written onto the tape.</li>\n\t<li>If the character read is a digit (say <code>d</code>), the entire current tape is repeatedly written&nbsp;<code>d-1</code>&nbsp;more times in total.</li>\n</ul>\n\n<p>Now for some encoded string <code>S</code>, and an index <code>K</code>, find and return the <code>K</code>-th letter (1 indexed) in the decoded string.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>S = <span id=\"example-input-1-1\">&quot;leet2code3&quot;</span>, K = <span id=\"example-input-1-2\">10</span>\n<strong>Output: </strong><span id=\"example-output-1\">&quot;o&quot;</span>\n<strong>Explanation: </strong>\nThe decoded string is &quot;leetleetcodeleetleetcodeleetleetcode&quot;.\nThe 10th letter in the string is &quot;o&quot;.\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>S = <span id=\"example-input-2-1\">&quot;ha22&quot;</span>, K = <span id=\"example-input-2-2\">5</span>\n<strong>Output: </strong><span id=\"example-output-2\">&quot;h&quot;</span>\n<strong>Explanation: </strong>\nThe decoded string is &quot;hahahaha&quot;.  The 5th letter is &quot;h&quot;.\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>S = <span id=\"example-input-3-1\">&quot;a2345678999999999999999&quot;</span>, K = <span id=\"example-input-3-2\">1</span>\n<strong>Output: </strong><span id=\"example-output-3\">&quot;a&quot;</span>\n<strong>Explanation: </strong>\nThe decoded string is &quot;a&quot; repeated 8301530446056247680 times.  The 1st letter is &quot;a&quot;.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>2 &lt;= S.length &lt;= 100</code></li>\n\t<li><code>S</code>&nbsp;will only contain lowercase letters and digits <code>2</code> through <code>9</code>.</li>\n\t<li><code>S</code>&nbsp;starts with a letter.</li>\n\t<li><code>1 &lt;= K &lt;= 10^9</code></li>\n\t<li>The decoded string is guaranteed to have less than <code>2^63</code> letters.</li>\n</ol>\n</div>\n</div>\n</div>\n"
    },
    {
        "id": "697",
        "title": "Degree of an Array",
        "slug": "degree-of-an-array",
        "difficulty": "Easy",
        "likes": 570,
        "dislikes": 509,
        "hints": [
            "Say 5 is the only element that occurs the most number of times - for example, nums = [1, 5, 2, 3, 5, 4, 5, 6].  What is the answer?"
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Maximum Subarray\", \"titleSlug\": \"maximum-subarray\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "263",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array"
        ],
        "content": "<p>Given a non-empty array of non-negative integers <code>nums</code>, the <b>degree</b> of this array is defined as the maximum frequency of any one of its elements.</p>\n<p>Your task is to find the smallest possible length of a (contiguous) subarray of <code>nums</code>, that has the same degree as <code>nums</code>.</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> [1, 2, 2, 3, 1]\n<b>Output:</b> 2\n<b>Explanation:</b> \nThe input array has a degree of 2 because both elements 1 and 2 appear twice.\nOf the subarrays that have the same degree:\n[1, 2, 2, 3, 1], [1, 2, 2, 3], [2, 2, 3, 1], [1, 2, 2], [2, 2, 3], [2, 2]\nThe shortest length is 2. So return 2.\n</pre>\n</p>\n\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b> [1,2,2,3,1,4,2]\n<b>Output:</b> 6\n</pre>\n</p>\n\n<p><b>Note:</b>\n<li><code>nums.length</code> will be between 1 and 50,000.</li>\n<li><code>nums[i]</code> will be an integer between 0 and 49,999.</li>\n</p>"
    },
    {
        "id": "682",
        "title": "Baseball Game",
        "slug": "baseball-game",
        "difficulty": "Easy",
        "likes": 339,
        "dislikes": 844,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "252",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Stack"
        ],
        "content": "<p>\nYou're now a baseball game point recorder.\n</p>\n\n<p>\nGiven a list of strings, each string can be one of the 4 following types:\n<ol>\n<li><code>Integer</code> (one round's score): Directly represents the number of points you get in this round.</li>\n<li><code>\"+\"</code> (one round's score): Represents that the points you get in this round are the sum of the last two <code>valid</code> round's points.</li>\n<li><code>\"D\"</code> (one round's score): Represents that the points you get in this round are the doubled data of the last <code>valid</code> round's points.</li>\n<li><code>\"C\"</code> (an operation, which isn't a round's score): Represents the last <code>valid</code> round's points you get were invalid and should be removed.</li>\n</ol>\n</p>\n\n<p>\nEach round's operation is permanent and could have an impact on the round before and the round after.\n</p>\n\n<p>\nYou need to return the sum of the points you could get in all the rounds.\n</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> [\"5\",\"2\",\"C\",\"D\",\"+\"]\n<b>Output:</b> 30\n<b>Explanation:</b> \nRound 1: You could get 5 points. The sum is: 5.\nRound 2: You could get 2 points. The sum is: 7.\nOperation 1: The round 2's data was invalid. The sum is: 5.  \nRound 3: You could get 10 points (the round 2's data has been removed). The sum is: 15.\nRound 4: You could get 5 + 10 = 15 points. The sum is: 30.\n</pre>\n</p>\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b> [\"5\",\"-2\",\"4\",\"C\",\"D\",\"9\",\"+\",\"+\"]\n<b>Output:</b> 27\n<b>Explanation:</b> \nRound 1: You could get 5 points. The sum is: 5.\nRound 2: You could get -2 points. The sum is: 3.\nRound 3: You could get 4 points. The sum is: 7.\nOperation 1: The round 3's data is invalid. The sum is: 3.  \nRound 4: You could get -4 points (the round 3's data has been removed). The sum is: -1.\nRound 5: You could get 9 points. The sum is: 8.\nRound 6: You could get -4 + 9 = 5 points. The sum is 13.\nRound 7: You could get 9 + 5 = 14 points. The sum is 27.\n</pre>\n</p>\n\n<p><b>Note:</b><br />\n<li>The size of the input list will be between 1 and 1000.</li>\n<li>Every integer represented in the list will be between -30000 and 30000.</li>\n</p>"
    },
    {
        "id": "975",
        "title": "Odd Even Jump",
        "slug": "odd-even-jump",
        "difficulty": "Hard",
        "likes": 407,
        "dislikes": 119,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "664",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming",
            "Stack",
            "Ordered Map"
        ],
        "content": "<p>You are given an integer array <code>A</code>.&nbsp; From&nbsp;some starting index, you can make a series of jumps.&nbsp; The (1st, 3rd, 5th, ...)&nbsp;jumps in the series are called <em>odd numbered jumps</em>, and the (2nd, 4th, 6th, ...) jumps in the series are called <em>even numbered jumps</em>.</p>\n\n<p>You may from index <code>i</code>&nbsp;jump forward to index <code><font face=\"monospace\">j</font></code>&nbsp;(with <code>i&nbsp;&lt; j</code>) in the following way:</p>\n\n<ul>\n\t<li>During odd numbered jumps (ie. jumps 1, 3, 5, ...), you jump to the index <font face=\"monospace\">j</font>&nbsp;such that <code>A[i] &lt;= A[j]</code> and <code>A[j]</code> is the smallest possible value.&nbsp; If there are multiple such indexes <code><font face=\"monospace\">j</font></code>, you can only jump to the <strong>smallest</strong> such index <code><font face=\"monospace\">j</font></code>.</li>\n\t<li>During even numbered jumps (ie. jumps 2, 4, 6, ...), you jump to the index <font face=\"monospace\">j</font>&nbsp;such that <code>A[i] &gt;= A[j]</code> and <code>A[j]</code> is the largest&nbsp;possible value.&nbsp; If there are multiple such indexes <code><font face=\"monospace\">j</font></code>, you can only jump to the <strong>smallest</strong> such index <code><font face=\"monospace\">j</font></code>.</li>\n\t<li>(It may be the case that for some index <code><font face=\"monospace\">i</font>,</code> there are no legal jumps.)</li>\n</ul>\n\n<p>A starting index is <em>good</em> if, starting from that index, you can reach the end of the array (index <code>A.length - 1</code>) by jumping some number of times (possibly 0 or more than once.)</p>\n\n<p>Return the number of good starting indexes.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[10,13,12,14,15]</span>\n<strong>Output: </strong><span id=\"example-output-1\">2</span>\n<strong>Explanation: </strong>\nFrom starting index i = 0, we can jump to i = 2 (since A[2] is the smallest among A[1], A[2], A[3], A[4] that is greater or equal to A[0]), then we can&#39;t jump any more.\nFrom starting index i = 1 and i = 2, we can jump to i = 3, then we can&#39;t jump any more.\nFrom starting index i = 3, we can jump to i = 4, so we&#39;ve reached the end.\nFrom starting index i = 4, we&#39;ve reached the end already.\nIn total, there are 2 different starting indexes (i = 3, i = 4) where we can reach the end with some number of jumps.\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[2,3,1,1,4]</span>\n<strong>Output: </strong><span id=\"example-output-2\">3</span>\n<strong>Explanation: </strong>\nFrom starting index i = 0, we make jumps to i = 1, i = 2, i = 3:\n\nDuring our 1st jump (odd numbered), we first jump to i = 1 because A[1] is the smallest value in (A[1], A[2], A[3], A[4]) that is greater than or equal to A[0].\n\nDuring our 2nd jump (even numbered), we jump from i = 1 to i = 2 because A[2] is the largest value in (A[2], A[3], A[4]) that is less than or equal to A[1].  A[3] is also the largest value, but 2 is a smaller index, so we can only jump to i = 2 and not i = 3.\n\nDuring our 3rd jump (odd numbered), we jump from i = 2 to i = 3 because A[3] is the smallest value in (A[3], A[4]) that is greater than or equal to A[2].\n\nWe can&#39;t jump from i = 3 to i = 4, so the starting index i = 0 is not good.\n\nIn a similar manner, we can deduce that:\nFrom starting index i = 1, we jump to i = 4, so we reach the end.\nFrom starting index i = 2, we jump to i = 3, and then we can&#39;t jump anymore.\nFrom starting index i = 3, we jump to i = 4, so we reach the end.\nFrom starting index i = 4, we are already at the end.\nIn total, there are 3 different starting indexes (i = 1, i = 3, i = 4) where we can reach the end with some number of jumps.\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">[5,1,3,4,2]</span>\n<strong>Output: </strong><span id=\"example-output-3\">3</span>\n<strong>Explanation: </strong>\nWe can reach the end from starting indexes 1, 2, and 4.\n</pre>\n</div>\n</div>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 20000</code></li>\n\t<li><code>0 &lt;= A[i] &lt; 100000</code></li>\n</ol>"
    },
    {
        "id": "974",
        "title": "Subarray Sums Divisible by K",
        "slug": "subarray-sums-divisible-by-k",
        "difficulty": "Medium",
        "likes": 404,
        "dislikes": 34,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Subarray Sum Equals K\", \"titleSlug\": \"subarray-sum-equals-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "666",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Hash Table"
        ],
        "content": "<p>Given an array <code>A</code> of integers, return the number of (contiguous, non-empty) subarrays that have a sum divisible by <code>K</code>.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-1-1\">[4,5,0,-2,-3,1]</span>, K = <span id=\"example-input-1-2\">5</span>\n<strong>Output: </strong><span id=\"example-output-1\">7</span>\n<strong>Explanation: </strong>There are 7 subarrays with a sum divisible by K = 5:\n[4, 5, 0, -2, -3, 1], [5], [5, 0], [5, 0, -2, -3], [0], [0, -2, -3], [-2, -3]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 30000</code></li>\n\t<li><code>-10000 &lt;= A[i] &lt;= 10000</code></li>\n\t<li><code>2 &lt;= K &lt;= 10000</code></li>\n</ol>\n</div>"
    },
    {
        "id": "36",
        "title": "Valid Sudoku",
        "slug": "valid-sudoku",
        "difficulty": "Medium",
        "likes": 1008,
        "dislikes": 360,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Sudoku Solver\", \"titleSlug\": \"sudoku-solver\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "663",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Hash Table"
        ],
        "content": "<p>Determine if a&nbsp;9x9 Sudoku board&nbsp;is valid.&nbsp;Only the filled cells need to be validated&nbsp;<strong>according to the following rules</strong>:</p>\n\n<ol>\n\t<li>Each row&nbsp;must contain the&nbsp;digits&nbsp;<code>1-9</code> without repetition.</li>\n\t<li>Each column must contain the digits&nbsp;<code>1-9</code>&nbsp;without repetition.</li>\n\t<li>Each of the 9 <code>3x3</code> sub-boxes of the grid must contain the digits&nbsp;<code>1-9</code>&nbsp;without repetition.</li>\n</ol>\n\n<p><img src=\"./img/valid-sudoku_1.png\" style=\"height:250px; width:250px\" /><br />\n<small>A partially filled sudoku which is valid.</small></p>\n\n<p>The Sudoku board could be partially filled, where empty cells are filled with the character <code>&#39;.&#39;</code>.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong>\n[\n  [&quot;5&quot;,&quot;3&quot;,&quot;.&quot;,&quot;.&quot;,&quot;7&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],\n  [&quot;6&quot;,&quot;.&quot;,&quot;.&quot;,&quot;1&quot;,&quot;9&quot;,&quot;5&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],\n  [&quot;.&quot;,&quot;9&quot;,&quot;8&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;6&quot;,&quot;.&quot;],\n  [&quot;8&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;6&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;3&quot;],\n  [&quot;4&quot;,&quot;.&quot;,&quot;.&quot;,&quot;8&quot;,&quot;.&quot;,&quot;3&quot;,&quot;.&quot;,&quot;.&quot;,&quot;1&quot;],\n  [&quot;7&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;2&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;6&quot;],\n  [&quot;.&quot;,&quot;6&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;2&quot;,&quot;8&quot;,&quot;.&quot;],\n  [&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;4&quot;,&quot;1&quot;,&quot;9&quot;,&quot;.&quot;,&quot;.&quot;,&quot;5&quot;],\n  [&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;8&quot;,&quot;.&quot;,&quot;.&quot;,&quot;7&quot;,&quot;9&quot;]\n]\n<strong>Output:</strong> true\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong>\n[\n&nbsp; [&quot;8&quot;,&quot;3&quot;,&quot;.&quot;,&quot;.&quot;,&quot;7&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],\n&nbsp; [&quot;6&quot;,&quot;.&quot;,&quot;.&quot;,&quot;1&quot;,&quot;9&quot;,&quot;5&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;],\n&nbsp; [&quot;.&quot;,&quot;9&quot;,&quot;8&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;6&quot;,&quot;.&quot;],\n&nbsp; [&quot;8&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;6&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;3&quot;],\n&nbsp; [&quot;4&quot;,&quot;.&quot;,&quot;.&quot;,&quot;8&quot;,&quot;.&quot;,&quot;3&quot;,&quot;.&quot;,&quot;.&quot;,&quot;1&quot;],\n&nbsp; [&quot;7&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;2&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;6&quot;],\n&nbsp; [&quot;.&quot;,&quot;6&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;2&quot;,&quot;8&quot;,&quot;.&quot;],\n&nbsp; [&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;4&quot;,&quot;1&quot;,&quot;9&quot;,&quot;.&quot;,&quot;.&quot;,&quot;5&quot;],\n&nbsp; [&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;.&quot;,&quot;8&quot;,&quot;.&quot;,&quot;.&quot;,&quot;7&quot;,&quot;9&quot;]\n]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> Same as Example 1, except with the <strong>5</strong> in the top left corner being \n    modified to <strong>8</strong>. Since there are two 8&#39;s in the top left 3x3 sub-box, it is invalid.\n</pre>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>A Sudoku board (partially filled) could be valid but is not necessarily solvable.</li>\n\t<li>Only the filled cells need to be validated according to the mentioned&nbsp;rules.</li>\n\t<li>The given board&nbsp;contain only digits <code>1-9</code> and the character <code>&#39;.&#39;</code>.</li>\n\t<li>The given board size is always <code>9x9</code>.</li>\n</ul>\n"
    },
    {
        "id": "857",
        "title": "Minimum Cost to Hire K Workers",
        "slug": "minimum-cost-to-hire-k-workers",
        "difficulty": "Hard",
        "likes": 607,
        "dislikes": 64,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "492",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Heap"
        ],
        "content": "<p>There are <code>N</code> workers.&nbsp; The <code>i</code>-th worker has a <code>quality[i]</code> and a minimum wage expectation <code>wage[i]</code>.</p>\n\n<p>Now we want to hire exactly <code>K</code>&nbsp;workers to form a <em>paid group</em>.&nbsp; When hiring a group of K workers, we must pay them according to the following rules:</p>\n\n<ol>\n\t<li>Every worker in the paid group should be paid in the ratio of their quality compared to other workers in the paid group.</li>\n\t<li>Every worker in the paid group must be paid at least their minimum wage expectation.</li>\n</ol>\n\n<p>Return the least amount of money needed to form a paid group satisfying the above conditions.</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>quality = <span id=\"example-input-1-1\">[10,20,5]</span>, wage = <span id=\"example-input-1-2\">[70,50,30]</span>, K = <span id=\"example-input-1-3\">2</span>\n<strong>Output: </strong><span id=\"example-output-1\">105.00000\n<strong>Explanation</strong>: </span><span>We pay 70 to 0-th worker and 35 to 2-th worker.</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>quality = <span id=\"example-input-2-1\">[3,1,10,10,1]</span>, wage = <span id=\"example-input-2-2\">[4,8,2,2,7]</span>, K = <span id=\"example-input-2-3\">3</span>\n<strong>Output: </strong><span id=\"example-output-2\">30.66667\n<strong>Explanation</strong>: </span><span>We pay 4 to 0-th worker, 13.33333 to 2-th and 3-th workers seperately.</span> \n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= K &lt;= N &lt;= 10000</code>, where <code>N = quality.length = wage.length</code></li>\n\t<li><code>1 &lt;= quality[i] &lt;= 10000</code></li>\n\t<li><code>1 &lt;= wage[i] &lt;= 10000</code></li>\n\t<li>Answers within <code>10^-5</code> of the correct answer will be considered correct.</li>\n</ol>\n</div>\n</div>\n"
    },
    {
        "id": "927",
        "title": "Three Equal Parts",
        "slug": "three-equal-parts",
        "difficulty": "Hard",
        "likes": 107,
        "dislikes": 39,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "590",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math",
            "Binary Search",
            "Greedy"
        ],
        "content": "<p>Given an array <code>A</code> of <code>0</code>s and <code>1</code>s, divide the array into 3 non-empty parts such that all of these parts represent the same binary value.</p>\n\n<p>If it is possible, return <strong>any</strong> <code>[i, j]</code>&nbsp;with <code>i+1 &lt; j</code>, such that:</p>\n\n<ul>\n\t<li><code>A[0], A[1], ..., A[i]</code> is the first part;</li>\n\t<li><code>A[i+1], A[i+2], ..., A[j-1]</code> is the second part, and</li>\n\t<li><code>A[j], A[j+1], ..., A[A.length - 1]</code> is the third part.</li>\n\t<li>All three parts have equal binary value.</li>\n</ul>\n\n<p>If it is not possible, return <code>[-1, -1]</code>.</p>\n\n<p>Note that the entire part is used when considering what binary value it represents.&nbsp; For example, <code>[1,1,0]</code>&nbsp;represents <code>6</code>&nbsp;in decimal,&nbsp;not <code>3</code>.&nbsp; Also, leading zeros are allowed, so&nbsp;<code>[0,1,1]</code> and <code>[1,1]</code> represent the same value.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[1,0,1,0,1]</span>\n<strong>Output: </strong><span id=\"example-output-1\">[0,3]</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[1,1,0,1,1]</span>\n<strong>Output: </strong><span id=\"example-output-2\">[-1,-1]</span></pre>\n</div>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>3 &lt;= A.length &lt;= 30000</code></li>\n\t<li><code>A[i] == 0</code>&nbsp;or <code>A[i] == 1</code></li>\n</ol>\n\n<div>\n<div>&nbsp;</div>\n</div>"
    },
    {
        "id": "462",
        "title": "Minimum Moves to Equal Array Elements II",
        "slug": "minimum-moves-to-equal-array-elements-ii",
        "difficulty": "Medium",
        "likes": 377,
        "dislikes": 31,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Best Meeting Point\", \"titleSlug\": \"best-meeting-point\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Minimum Moves to Equal Array Elements\", \"titleSlug\": \"minimum-moves-to-equal-array-elements\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "92",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math"
        ],
        "content": "<p><p>Given a <b>non-empty</b> integer array, find the minimum number of moves required to make all array elements equal, where a move is incrementing a selected element by 1 or decrementing a selected element by 1.</p>\n\n<p>You may assume the array's length is at most 10,000.</p>\n\n<p><b>Example:</b>\n<pre>\n<b>Input:</b>\n[1,2,3]\n\n<b>Output:</b>\n2\n\n<b>Explanation:</b>\nOnly two moves are needed (remember each move increments or decrements one element):\n\n[1,2,3]  =>  [2,2,3]  =>  [2,2,2]\n</pre>\n</p></p>"
    },
    {
        "id": "147",
        "title": "Insertion Sort List",
        "slug": "insertion-sort-list",
        "difficulty": "Medium",
        "likes": 408,
        "dislikes": 464,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Sort List\", \"titleSlug\": \"sort-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Insert into a Cyclic Sorted List\", \"titleSlug\": \"insert-into-a-cyclic-sorted-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Linked List",
            "Sort"
        ],
        "content": "<p>Sort a linked list using insertion sort.</p>\n\n<ol>\n</ol>\n\n<p><img alt=\"\" src=\"./img/insertion-sort-list_1.gif\" style=\"height:180px; width:300px\" /><br />\n<small>A graphical example of insertion sort. The partial sorted list (black) initially contains only the first element in the list.<br />\nWith each iteration one element (red) is removed from the input data and inserted in-place into the sorted list</small><br />\n&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>Algorithm of Insertion Sort:</strong></p>\n\n<ol>\n\t<li>Insertion sort iterates, consuming one input element each repetition, and growing a sorted output list.</li>\n\t<li>At each iteration, insertion sort removes one element from the input data, finds the location it belongs within the sorted list, and inserts it there.</li>\n\t<li>It repeats until no input elements remain.</li>\n</ol>\n\n<p><br />\n<strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> 4-&gt;2-&gt;1-&gt;3\n<strong>Output:</strong> 1-&gt;2-&gt;3-&gt;4\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> -1-&gt;5-&gt;3-&gt;4-&gt;0\n<strong>Output:</strong> -1-&gt;0-&gt;3-&gt;4-&gt;5\n</pre>\n"
    },
    {
        "id": "599",
        "title": "Minimum Index Sum of Two Lists",
        "slug": "minimum-index-sum-of-two-lists",
        "difficulty": "Easy",
        "likes": 403,
        "dislikes": 156,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Intersection of Two Linked Lists\", \"titleSlug\": \"intersection-of-two-linked-lists\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "147",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Hash Table"
        ],
        "content": "<p>\nSuppose Andy and Doris want to choose a restaurant for dinner, and they both have a list of favorite restaurants represented by strings. \n</p>\n<p>\nYou need to help them find out their <b>common interest</b> with the <b>least list index sum</b>. If there is a choice tie between answers, output all of them with no order requirement. You could assume there always exists an answer.\n</p>\n\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b>\n[\"Shogun\", \"Tapioca Express\", \"Burger King\", \"KFC\"]\n[\"Piatti\", \"The Grill at Torrey Pines\", \"Hungry Hunter Steakhouse\", \"Shogun\"]\n<b>Output:</b> [\"Shogun\"]\n<b>Explanation:</b> The only restaurant they both like is \"Shogun\".\n</pre>\n</p>\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b>\n[\"Shogun\", \"Tapioca Express\", \"Burger King\", \"KFC\"]\n[\"KFC\", \"Shogun\", \"Burger King\"]\n<b>Output:</b> [\"Shogun\"]\n<b>Explanation:</b> The restaurant they both like and have the least index sum is \"Shogun\" with index sum 1 (0+1).\n</pre>\n</p>\n\n\n<p><b>Note:</b><br>\n<ol>\n<li>The length of both lists will be in the range of [1, 1000].</li>\n<li>The length of strings in both lists will be in the range of [1, 30].</li>\n<li>The index is starting from 0 to the list length minus 1.</li>\n<li>No duplicates in both lists.</li>\n</ol>\n</p>"
    },
    {
        "id": "575",
        "title": "Distribute Candies",
        "slug": "distribute-candies",
        "difficulty": "Easy",
        "likes": 325,
        "dislikes": 716,
        "hints": [
            "To maximize the number of kinds of candies, we should try to distribute candies such that sister will gain all kinds.",
            "What is the upper limit of the number of kinds of candies sister will gain? Remember candies are to distributed equally.",
            "Which data structure is the most suitable for finding the number of kinds of candies?",
            "Will hashset solves the problem? Inserting all candies kind in the hashset and then checking its size with upper limit."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "125",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Hash Table"
        ],
        "content": "Given an integer array with <b>even</b> length, where different numbers in this array represent different <b>kinds</b> of candies. Each number means one candy of the corresponding kind. You need to distribute these candies <b>equally</b> in number to brother and sister. Return the maximum number of <b>kinds</b> of candies the sister could gain. \n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> candies = [1,1,2,2,3,3]\n<b>Output:</b> 3\n<b>Explanation:</b>\nThere are three different kinds of candies (1, 2 and 3), and two candies for each kind.\nOptimal distribution: The sister has candies [1,2,3] and the brother has candies [1,2,3], too. \nThe sister has three different kinds of candies. \n</pre>\n</p>\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b> candies = [1,1,2,3]\n<b>Output:</b> 2\n<b>Explanation:</b> For example, the sister has candies [2,3] and the brother has candies [1,1]. \nThe sister has two different kinds of candies, the brother has only one kind of candies. \n</pre>\n</p>\n\n<p><b>Note:</b>\n<ol>\n<li>The length of the given array is in range [2, 10,000], and will be even.</li>\n<li>The number in given array is in range [-100,000, 100,000].</li>\n<ol>\n</p>"
    },
    {
        "id": "404",
        "title": "Sum of Left Leaves",
        "slug": "sum-of-left-leaves",
        "difficulty": "Easy",
        "likes": 743,
        "dislikes": 83,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Tree"
        ],
        "content": "<p>Find the sum of all left leaves in a given binary tree.</p>\n\n<p><b>Example:</b>\n<pre>\n    3\n   / \\\n  9  20\n    /  \\\n   15   7\n\nThere are two left leaves in the binary tree, with values <b>9</b> and <b>15</b> respectively. Return <b>24</b>.\n</pre>\n</p>"
    },
    {
        "id": "965",
        "title": "Univalued Binary Tree",
        "slug": "univalued-binary-tree",
        "difficulty": "Easy",
        "likes": 240,
        "dislikes": 37,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "652",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree"
        ],
        "content": "<p>A binary tree is <em>univalued</em> if every node in the tree has the same value.</p>\n\n<p>Return <code>true</code>&nbsp;if and only if the given tree is univalued.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"./img/univalued-binary-tree_1.png\" style=\"width: 265px; height: 172px;\" />\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[1,1,1,1,1,null,1]</span>\n<strong>Output: </strong><span id=\"example-output-1\">true</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n<img alt=\"\" src=\"./img/univalued-binary-tree_2.png\" style=\"width: 198px; height: 169px;\" />\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[2,2,2,5,2]</span>\n<strong>Output: </strong><span id=\"example-output-2\">false</span>\n</pre>\n</div>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li>The number of nodes in the given tree will be in the range <code>[1, 100]</code>.</li>\n\t<li>Each node&#39;s value will be an integer in the range <code>[0, 99]</code>.</li>\n</ol>\n"
    },
    {
        "id": "622",
        "title": "Design Circular Queue",
        "slug": "design-circular-queue",
        "difficulty": "Medium",
        "likes": 292,
        "dislikes": 57,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Design Circular Deque\", \"titleSlug\": \"design-circular-deque\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Design",
            "Queue"
        ],
        "content": "<p>Design your implementation of the circular queue. The circular queue is a linear data structure in which the operations are performed based on FIFO (First In First Out) principle and the last position is connected back to the first position to make a circle. It is also called &quot;Ring Buffer&quot;.</p>\n\n<p>One of the benefits of the circular queue is that we can make use of the spaces in front of the queue. In a normal queue, once the queue becomes full, we cannot insert the next element even if there is a space in front of the queue. But using the circular queue, we can use the space to store new values.</p>\n\n<p>Your implementation should support following operations:</p>\n\n<ul>\n\t<li><code>MyCircularQueue(k)</code>: Constructor, set the size of the queue to be k.</li>\n\t<li><code>Front</code>: Get the front item from the queue. If the queue is empty, return -1.</li>\n\t<li><code>Rear</code>: Get the last item from the queue. If the queue is empty, return -1.</li>\n\t<li><code>enQueue(value)</code>: Insert an element into the circular queue. Return true if the operation is successful.</li>\n\t<li><code>deQueue()</code>: Delete an element from the circular queue. Return true if the operation is successful.</li>\n\t<li><code>isEmpty()</code>: Checks whether the circular queue is empty or not.</li>\n\t<li><code>isFull()</code>: Checks whether the circular queue is full or not.</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\nMyCircularQueue circularQueue = new MyCircularQueue(3); // set the size to be 3\ncircularQueue.enQueue(1); &nbsp;// return true\ncircularQueue.enQueue(2); &nbsp;// return true\ncircularQueue.enQueue(3); &nbsp;// return true\ncircularQueue.enQueue(4); &nbsp;// return false, the queue is full\ncircularQueue.Rear(); &nbsp;// return 3\ncircularQueue.isFull(); &nbsp;// return true\ncircularQueue.deQueue(); &nbsp;// return true\ncircularQueue.enQueue(4); &nbsp;// return true\ncircularQueue.Rear(); &nbsp;// return 4\n</pre>\n&nbsp;\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>All values will be in the range of [0, 1000].</li>\n\t<li>The number of operations will be in the range of&nbsp;[1, 1000].</li>\n\t<li>Please do not use the built-in Queue library.</li>\n</ul>\n"
    },
    {
        "id": "459",
        "title": "Repeated Substring Pattern",
        "slug": "repeated-substring-pattern",
        "difficulty": "Easy",
        "likes": 887,
        "dislikes": 106,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Implement strStr()\", \"titleSlug\": \"implement-strstr\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Repeated String Match\", \"titleSlug\": \"repeated-string-match\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "String"
        ],
        "content": "<p>Given a non-empty string check if it can be constructed by taking a substring of it and appending multiple copies of the substring together. You may assume the given string consists of lowercase English letters only and its length will not exceed 10000.</p>\n\n<p>&nbsp;</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> &quot;abab&quot;\n<b>Output:</b> True\n<b>Explanation:</b> It&#39;s the substring &quot;ab&quot; twice.\n</pre>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input:</b> &quot;aba&quot;\n<b>Output:</b> False\n</pre>\n\n<p><b>Example 3:</b></p>\n\n<pre>\n<b>Input:</b> &quot;abcabcabcabc&quot;\n<b>Output:</b> True\n<b>Explanation:</b> It&#39;s the substring &quot;abc&quot; four times. (And the substring &quot;abcabc&quot; twice.)\n</pre>\n"
    },
    {
        "id": "204",
        "title": "Count Primes",
        "slug": "count-primes",
        "difficulty": "Easy",
        "likes": 1254,
        "dislikes": 440,
        "hints": [
            "<p>Let's start with a <i>isPrime</i> function. To determine if a number is prime, we need to check if it is not divisible by any number less than <i>n</i>. The runtime complexity of <i>isPrime</i> function would be O(<i>n</i>) and hence counting the total prime numbers up to <i>n</i> would be O(<i>n</i><sup>2</sup>). Could we do better?</p>",
            "<p>As we know the number must not be divisible by any number > <i>n</i> / 2, we can immediately cut the total iterations half by dividing only up to <i>n</i> / 2. Could we still do better?</p>",
            "<p>Let's write down all of 12's factors:</p>\r\n<pre>\r\n2 \u00d7 6 = 12\r\n3 \u00d7 4 = 12\r\n4 \u00d7 3 = 12\r\n6 \u00d7 2 = 12\r\n</pre>\r\n\r\n<p>As you can see, calculations of 4 \u00d7 3 and 6 \u00d7 2 are not necessary. Therefore, we only need to consider factors up to &radic;<i>n</i> because, if <i>n</i> is divisible by some number <i>p</i>, then <i>n</i> = <i>p</i> \u00d7 <i>q</i> and since <i>p</i> &le; <i>q</i>, we could derive that <i>p</i> &le; &radic;<i>n</i>.</p>\r\n\r\n<p>Our total runtime has now improved to O(<i>n</i><sup>1.5</sup>), which is slightly better. Is there a faster approach?</p>\r\n\r\n<pre>\r\npublic int countPrimes(int n) {\r\n   int count = 0;\r\n   for (int i = 1; i < n; i++) {\r\n      if (isPrime(i)) count++;\r\n   }\r\n   return count;\r\n}\r\n\r\nprivate boolean isPrime(int num) {\r\n   if (num <= 1) return false;\r\n   // Loop's ending condition is i * i <= num instead of i <= sqrt(num)\r\n   // to avoid repeatedly calling an expensive function sqrt().\r\n   for (int i = 2; i * i <= num; i++) {\r\n      if (num % i == 0) return false;\r\n   }\r\n   return true;\r\n}\r\n</pre>",
            "<p>The <a href=\"http://en.wikipedia.org/wiki/Sieve_of_Eratosthenes\" target=\"_blank\">Sieve of Eratosthenes</a> is one of the most efficient ways to find all prime numbers up to <i>n</i>. But don't let that name scare you, I promise that the concept is surprisingly simple.</p>\r\n\r\n<p>\r\n<img src=\"/static/images/solutions/Sieve_of_Eratosthenes_animation.gif\" /><br />\r\n<small>Sieve of Eratosthenes: algorithm steps for primes below 121. \"<a href=\"http://commons.wikimedia.org/wiki/File:Sieve_of_Eratosthenes_animation.gif\" target=\"_blank\">Sieve of Eratosthenes Animation</a>\" by <a href=\"http://de.wikipedia.org/wiki/Benutzer:SKopp\" target=\"_blank\">SKopp</a> is licensed under <a href=\"http://creativecommons.org/licenses/by/2.0/\" target=\"_blank\">CC BY 2.0</a>.</small>\r\n</p>\r\n\r\n<p>We start off with a table of <i>n</i> numbers. Let's look at the first number, 2. We know all multiples of 2 must not be primes, so we mark them off as non-primes. Then we look at the next number, 3. Similarly, all multiples of 3 such as 3 \u00d7 2 = 6, 3 \u00d7 3 = 9, ... must not be primes, so we mark them off as well. Now we look at the next number, 4, which was already marked off. What does this tell you? Should you mark off all multiples of 4 as well?</p>",
            "<p>4 is not a prime because it is divisible by 2, which means all multiples of 4 must also be divisible by 2 and were already marked off. So we can skip 4 immediately and go to the next number, 5. Now, all multiples of 5 such as 5 \u00d7 2 = 10, 5 \u00d7 3 = 15, 5 \u00d7 4 = 20, 5 \u00d7 5 = 25, ... can be marked off. There is a slight optimization here, we do not need to start from 5 \u00d7 2 = 10. Where should we start marking off?</p>",
            "<p>In fact, we can mark off multiples of 5 starting at 5 \u00d7 5 = 25, because 5 \u00d7 2 = 10 was already marked off by multiple of 2, similarly 5 \u00d7 3 = 15 was already marked off by multiple of 3. Therefore, if the current number is <i>p</i>, we can always mark off multiples of <i>p</i> starting at <i>p</i><sup>2</sup>, then in increments of <i>p</i>: <i>p</i><sup>2</sup> + <i>p</i>, <i>p</i><sup>2</sup> + 2<i>p</i>, ... Now what should be the terminating loop condition?</p>",
            "<p>It is easy to say that the terminating loop condition is <i>p</i> < <i>n</i>, which is certainly correct but not efficient. Do you still remember <i>Hint #3</i>?</p>",
            "<p>Yes, the terminating loop condition can be <i>p</i> < &radic;<i>n</i>, as all non-primes &ge; &radic;<i>n</i> must have already been marked off. When the loop terminates, all the numbers in the table that are non-marked are prime.</p>\r\n\r\n<p>The Sieve of Eratosthenes uses an extra O(<i>n</i>) memory and its runtime complexity is O(<i>n</i> log log <i>n</i>). For the more mathematically inclined readers, you can read more about its algorithm complexity on <a href=\"http://en.wikipedia.org/wiki/Sieve_of_Eratosthenes#Algorithm_complexity\" target=\"_blank\">Wikipedia</a>.</p>\r\n\r\n<pre>\r\npublic int countPrimes(int n) {\r\n   boolean[] isPrime = new boolean[n];\r\n   for (int i = 2; i < n; i++) {\r\n      isPrime[i] = true;\r\n   }\r\n   // Loop's ending condition is i * i < n instead of i < sqrt(n)\r\n   // to avoid repeatedly calling an expensive function sqrt().\r\n   for (int i = 2; i * i < n; i++) {\r\n      if (!isPrime[i]) continue;\r\n      for (int j = i * i; j < n; j += i) {\r\n         isPrime[j] = false;\r\n      }\r\n   }\r\n   int count = 0;\r\n   for (int i = 2; i < n; i++) {\r\n      if (isPrime[i]) count++;\r\n   }\r\n   return count;\r\n}\r\n</pre>"
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Ugly Number\", \"titleSlug\": \"ugly-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Ugly Number II\", \"titleSlug\": \"ugly-number-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Perfect Squares\", \"titleSlug\": \"perfect-squares\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Hash Table",
            "Math"
        ],
        "content": "<p>Count the number of prime numbers less than a non-negative number, <b><i>n</i></b>.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input:</strong> 10\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> There are 4 prime numbers less than 10, they are 2, 3, 5, 7.\n</pre>\n"
    },
    {
        "id": "24",
        "title": "Swap Nodes in Pairs",
        "slug": "swap-nodes-in-pairs",
        "difficulty": "Medium",
        "likes": 1373,
        "dislikes": 120,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Reverse Nodes in k-Group\", \"titleSlug\": \"reverse-nodes-in-k-group\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Linked List"
        ],
        "content": "<p>Given a&nbsp;linked list, swap every two adjacent nodes and return its head.</p>\n\n<p>You may <strong>not</strong> modify the values in the list&#39;s nodes, only nodes itself may be changed.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\nGiven <code>1-&gt;2-&gt;3-&gt;4</code>, you should return the list as <code>2-&gt;1-&gt;4-&gt;3</code>.\n</pre>\n"
    },
    {
        "id": "421",
        "title": "Maximum XOR of Two Numbers in an Array",
        "slug": "maximum-xor-of-two-numbers-in-an-array",
        "difficulty": "Medium",
        "likes": 779,
        "dislikes": 155,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Bit Manipulation",
            "Trie"
        ],
        "content": "<p>Given a <b>non-empty</b> array of numbers, a<sub>0</sub>, a<sub>1</sub>, a<sub>2</sub>, &hellip; , a<sub>n-1</sub>, where 0 &le; a<sub>i</sub> &lt; 2<sup>31</sup>.</p>\n\n<p>Find the maximum result of a<sub>i</sub> XOR a<sub>j</sub>, where 0 &le; <i>i</i>, <i>j</i> &lt; <i>n</i>.</p>\n\n<p>Could you do this in O(<i>n</i>) runtime?</p>\n\n<p><b>Example:</b></p>\n\n<pre>\n<b>Input:</b> [3, 10, 5, 25, 2, 8]\n\n<b>Output:</b> 28\n\n<b>Explanation:</b> The maximum result is <b>5</b> ^ <b>25</b> = 28.\n</pre>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "655",
        "title": "Print Binary Tree",
        "slug": "print-binary-tree",
        "difficulty": "Medium",
        "likes": 244,
        "dislikes": 606,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "225",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree"
        ],
        "content": "<p>Print a binary tree in an m*n 2D string array following these rules: </p>\n\n<ol>\n<li>The row number <code>m</code> should be equal to the height of the given binary tree.</li>\n<li>The column number <code>n</code> should always be an odd number.</li>\n<li>The root node's value (in string format) should be put in the exactly middle of the first row it can be put. The column and the row where the root node belongs will separate the rest space into two parts (<b>left-bottom part and right-bottom part</b>). You should print the left subtree in the left-bottom part and print the right subtree in the right-bottom part. The left-bottom part and the right-bottom part should have the same size. Even if one subtree is none while the other is not, you don't need to print anything for the none subtree but still need to leave the space as large as that for the other subtree. However, if two subtrees are none, then you don't need to leave space for both of them. </li>\n<li>Each unused space should contain an empty string <code>\"\"</code>.</li>\n<li>Print the subtrees following the same rules.</li>\n</ol>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b>\n     1\n    /\n   2\n<b>Output:</b>\n[[\"\", \"1\", \"\"],\n [\"2\", \"\", \"\"]]\n</pre>\n</p>\n\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b>\n     1\n    / \\\n   2   3\n    \\\n     4\n<b>Output:</b>\n[[\"\", \"\", \"\", \"1\", \"\", \"\", \"\"],\n [\"\", \"2\", \"\", \"\", \"\", \"3\", \"\"],\n [\"\", \"\", \"4\", \"\", \"\", \"\", \"\"]]\n</pre>\n</p>\n\n<p><b>Example 3:</b><br />\n<pre>\n<b>Input:</b>\n      1\n     / \\\n    2   5\n   / \n  3 \n / \n4 \n<b>Output:</b>\n\n[[\"\",  \"\",  \"\", \"\",  \"\", \"\", \"\", \"1\", \"\",  \"\",  \"\",  \"\",  \"\", \"\", \"\"]\n [\"\",  \"\",  \"\", \"2\", \"\", \"\", \"\", \"\",  \"\",  \"\",  \"\",  \"5\", \"\", \"\", \"\"]\n [\"\",  \"3\", \"\", \"\",  \"\", \"\", \"\", \"\",  \"\",  \"\",  \"\",  \"\",  \"\", \"\", \"\"]\n [\"4\", \"\",  \"\", \"\",  \"\", \"\", \"\", \"\",  \"\",  \"\",  \"\",  \"\",  \"\", \"\", \"\"]]\n</pre>\n</p>\n\n<p><b>Note:</b>\nThe height of binary tree is in the range of [1, 10].\n</p>"
    },
    {
        "id": "738",
        "title": "Monotone Increasing Digits",
        "slug": "monotone-increasing-digits",
        "difficulty": "Medium",
        "likes": 284,
        "dislikes": 46,
        "hints": [
            "Build the answer digit by digit, adding the largest possible one that would make the number still less than or equal to N."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Remove K Digits\", \"titleSlug\": \"remove-k-digits\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "313",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Greedy"
        ],
        "content": "<p>\nGiven a non-negative integer <code>N</code>, find the largest number that is less than or equal to <code>N</code> with monotone increasing digits.\n</p><p>\n(Recall that an integer has <i>monotone increasing digits</i> if and only if each pair of adjacent digits <code>x</code> and <code>y</code> satisfy <code>x <= y</code>.)\n</p><p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> N = 10\n<b>Output:</b> 9\n</pre>\n</p>\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b> N = 1234\n<b>Output:</b> 1234\n</pre>\n</p>\n\n<p><b>Example 3:</b><br />\n<pre>\n<b>Input:</b> N = 332\n<b>Output:</b> 299\n</pre>\n</p>\n\n<p><b>Note:</b>\n<code>N</code> is an integer in the range <code>[0, 10^9]</code>.\n</p>"
    },
    {
        "id": "146",
        "title": "LRU Cache",
        "slug": "lru-cache",
        "difficulty": "Medium",
        "likes": 3507,
        "dislikes": 139,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"LFU Cache\", \"titleSlug\": \"lfu-cache\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Design In-Memory File System\", \"titleSlug\": \"design-in-memory-file-system\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Design Compressed String Iterator\", \"titleSlug\": \"design-compressed-string-iterator\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "702",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Design"
        ],
        "content": "<p>Design and implement a data structure for <a href=\"https://en.wikipedia.org/wiki/Cache_replacement_policies#LRU\" target=\"_blank\">Least Recently Used (LRU) cache</a>. It should support the following operations: <code>get</code> and <code>put</code>.</p>\n\n<p><code>get(key)</code> - Get the value (will always be positive) of the key if the key exists in the cache, otherwise return -1.<br />\n<code>put(key, value)</code> - Set or insert the value if the key is not already present. When the cache reached its capacity, it should invalidate the least recently used item before inserting a new item.</p>\n\n<p>The cache is initialized with a <strong>positive</strong> capacity.</p>\n\n<p><b>Follow up:</b><br />\nCould you do both operations in <b>O(1)</b> time complexity?</p>\n\n<p><b>Example:</b></p>\n\n<pre>\nLRUCache cache = new LRUCache( 2 /* capacity */ );\n\ncache.put(1, 1);\ncache.put(2, 2);\ncache.get(1);       // returns 1\ncache.put(3, 3);    // evicts key 2\ncache.get(2);       // returns -1 (not found)\ncache.put(4, 4);    // evicts key 1\ncache.get(1);       // returns -1 (not found)\ncache.get(3);       // returns 3\ncache.get(4);       // returns 4\n</pre>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "539",
        "title": "Minimum Time Difference",
        "slug": "minimum-time-difference",
        "difficulty": "Medium",
        "likes": 278,
        "dislikes": 93,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "String"
        ],
        "content": "Given a list of 24-hour clock time points in \"Hour:Minutes\" format, find the minimum <b>minutes</b> difference between any two time points in the list. \n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> [\"23:59\",\"00:00\"]\n<b>Output:</b> 1\n</pre>\n</p>\n\n<p><b>Note:</b><br>\n<ol>\n<li>The number of time points in the given list is at least 2 and won't exceed 20000.</li>\n<li>The input time is legal and ranges from 00:00 to 23:59.</li>\n</ol>\n</p>"
    },
    {
        "id": "403",
        "title": "Frog Jump",
        "slug": "frog-jump",
        "difficulty": "Hard",
        "likes": 586,
        "dislikes": 71,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "78",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>A frog is crossing a river. The river is divided into x units and at each unit there may or may not exist a stone. The frog can jump on a stone, but it must not jump into the water.</p>\n\n<p>Given a list of stones' positions (in units) in sorted ascending order, determine if the frog is able to cross the river by landing on the last stone. Initially, the frog is on the first stone and assume the first jump must be 1 unit.\n</p>\n\n<p>If the frog's last jump was <i>k</i> units, then its next jump must be either <i>k</i> - 1, <i>k</i>, or <i>k</i> + 1 units. Note that the frog can only jump in the forward direction.</p>\n\n<p><b>Note:</b>\n<ul>\n<li>The number of stones is &ge; 2 and is < 1,100.</li>\n<li>Each stone's position will be a non-negative integer < 2<sup>31</sup>.</li>\n<li>The first stone's position is always 0.</li>\n</ul>\n</p>\n\n<p><b>Example 1:</b>\n<pre>\n<b>[0,1,3,5,6,8,12,17]</b>\n\nThere are a total of 8 stones.\nThe first stone at the 0th unit, second stone at the 1st unit,\nthird stone at the 3rd unit, and so on...\nThe last stone at the 17th unit.\n\n<b>Return true</b>. The frog can jump to the last stone by jumping \n1 unit to the 2nd stone, then 2 units to the 3rd stone, then \n2 units to the 4th stone, then 3 units to the 6th stone, \n4 units to the 7th stone, and 5 units to the 8th stone.\n</pre>\n</p>\n\n<p><b>Example 2:</b>\n<pre>\n<b>[0,1,2,3,4,8,9,11]</b>\n\n<b>Return false</b>. There is no way to jump to the last stone as \nthe gap between the 5th and 6th stone is too large.\n</pre>\n</p>"
    },
    {
        "id": "40",
        "title": "Combination Sum II",
        "slug": "combination-sum-ii",
        "difficulty": "Medium",
        "likes": 1042,
        "dislikes": 50,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Combination Sum\", \"titleSlug\": \"combination-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Array",
            "Backtracking"
        ],
        "content": "<p>Given a collection of candidate numbers (<code>candidates</code>) and a target number (<code>target</code>), find all unique combinations in <code>candidates</code>&nbsp;where the candidate numbers sums to <code>target</code>.</p>\n\n<p>Each number in <code>candidates</code>&nbsp;may only be used <strong>once</strong> in the combination.</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>All numbers (including <code>target</code>) will be positive integers.</li>\n\t<li>The solution set must not contain duplicate combinations.</li>\n</ul>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> candidates =&nbsp;<code>[10,1,2,7,6,1,5]</code>, target =&nbsp;<code>8</code>,\n<strong>A solution set is:</strong>\n[\n  [1, 7],\n  [1, 2, 5],\n  [2, 6],\n  [1, 1, 6]\n]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> candidates =&nbsp;[2,5,2,1,2], target =&nbsp;5,\n<strong>A solution set is:</strong>\n[\n&nbsp; [1,2,2],\n&nbsp; [5]\n]\n</pre>\n"
    },
    {
        "id": "464",
        "title": "Can I Win",
        "slug": "can-i-win",
        "difficulty": "Medium",
        "likes": 684,
        "dislikes": 124,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Flip Game II\", \"titleSlug\": \"flip-game-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Guess Number Higher or Lower II\", \"titleSlug\": \"guess-number-higher-or-lower-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Predict the Winner\", \"titleSlug\": \"predict-the-winner\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Dynamic Programming",
            "Minimax"
        ],
        "content": "<p>In the \"100 game,\" two players take turns adding, to a running total, any integer from 1..10. The player who first causes the running total to reach or exceed 100 wins. </p>\n\n<p>What if we change the game so that players cannot re-use integers? </p>\n\n<p>For example, two players might take turns drawing from a common pool of numbers of 1..15 without replacement until they reach a total >= 100.</p>\n\n<p>Given an integer <code>maxChoosableInteger</code> and another integer <code>desiredTotal</code>, determine if the first player to move can force a win, assuming both players play optimally. </p>\n\n<p>You can always assume that <code>maxChoosableInteger</code> will not be larger than 20 and <code>desiredTotal</code> will not be larger than 300.\n</p>\n\n<p><b>Example</b>\n<pre>\n<b>Input:</b>\nmaxChoosableInteger = 10\ndesiredTotal = 11\n\n<b>Output:</b>\nfalse\n\n<b>Explanation:</b>\nNo matter which integer the first player choose, the first player will lose.\nThe first player can choose an integer from 1 up to 10.\nIf the first player choose 1, the second player can only choose integers from 2 up to 10.\nThe second player will win by choosing 10 and get a total = 11, which is >= desiredTotal.\nSame with other integers chosen by the first player, the second player will always win.\n</pre>\n</p>"
    },
    {
        "id": "556",
        "title": "Next Greater Element III",
        "slug": "next-greater-element-iii",
        "difficulty": "Medium",
        "likes": 393,
        "dislikes": 129,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Next Greater Element I\", \"titleSlug\": \"next-greater-element-i\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Next Greater Element II\", \"titleSlug\": \"next-greater-element-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "106",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String"
        ],
        "content": "<p>Given a positive <strong>32-bit</strong> integer <strong>n</strong>, you need to find the smallest <strong>32-bit</strong> integer which has exactly the same digits existing in the integer <strong>n</strong> and is greater in value than n. If no such positive <strong>32-bit</strong> integer exists, you need to return -1.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> 12\n<strong>Output:</strong> 21\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> 21\n<strong>Output:</strong> -1\n</pre>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "680",
        "title": "Valid Palindrome II",
        "slug": "valid-palindrome-ii",
        "difficulty": "Easy",
        "likes": 877,
        "dislikes": 60,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Valid Palindrome\", \"titleSlug\": \"valid-palindrome\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "248",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String"
        ],
        "content": "<p>\nGiven a non-empty string <code>s</code>, you may delete <b>at most</b> one character.  Judge whether you can make it a palindrome.\n</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> \"aba\"\n<b>Output:</b> True\n</pre>\n</p>\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b> \"abca\"\n<b>Output:</b> True\n<b>Explanation:</b> You could delete the character 'c'.\n</pre>\n</p>\n\n<p><b>Note:</b><br>\n<ol>\n<li>The string will only contain lowercase characters a-z.\nThe maximum length of the string is 50000.</li>\n</ol>\n</p>"
    },
    {
        "id": "1115",
        "title": "Print FooBar Alternately",
        "slug": "print-foobar-alternately",
        "difficulty": "Medium",
        "likes": 115,
        "dislikes": 5,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Print in Order\", \"titleSlug\": \"print-in-order\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Print Zero Even Odd\", \"titleSlug\": \"print-zero-even-odd\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [],
        "content": "<p>Suppose you are given the following code:</p>\n\n<pre>\nclass FooBar {\n  public void foo() {\n&nbsp; &nbsp; for (int i = 0; i &lt; n; i++) {\n&nbsp; &nbsp; &nbsp; print(&quot;foo&quot;);\n&nbsp;   }\n  }\n\n  public void bar() {\n&nbsp; &nbsp; for (int i = 0; i &lt; n; i++) {\n&nbsp; &nbsp; &nbsp; print(&quot;bar&quot;);\n&nbsp; &nbsp; }\n  }\n}\n</pre>\n\n<p>The same instance of <code>FooBar</code> will be passed to two different threads. Thread A will call&nbsp;<code>foo()</code> while thread B will call&nbsp;<code>bar()</code>.&nbsp;Modify the given program to output &quot;foobar&quot; <em>n</em> times.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<b>Input:</b> n = 1\n<b>Output:</b> &quot;foobar&quot;\n<strong>Explanation:</strong> There are two threads being fired asynchronously. One of them calls foo(), while the other calls bar(). &quot;foobar&quot; is being output 1 time.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<b>Input:</b> n = 2\n<b>Output:</b> &quot;foobarfoobar&quot;\n<strong>Explanation:</strong> &quot;foobar&quot; is being output 2 times.\n</pre>\n"
    },
    {
        "id": "1026",
        "title": "Maximum Difference Between Node and Ancestor",
        "slug": "maximum-difference-between-node-and-ancestor",
        "difficulty": "Medium",
        "likes": 195,
        "dislikes": 10,
        "hints": [
            "For each subtree, find the minimum value and maximum value of its descendants."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Tree",
            "Depth-first Search"
        ],
        "content": "<p>Given the <code>root</code> of a binary tree, find the maximum value <code>V</code> for which there exists <strong>different</strong> nodes <code>A</code> and <code>B</code> where <code>V = |A.val - B.val|</code>&nbsp;and <code>A</code> is an ancestor of <code>B</code>.</p>\n\n<p>(A node A is an ancestor of B if either: any child of A is equal to B, or any child of A is an ancestor of B.)</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<p><img alt=\"\" src=\"./img/maximum-difference-between-node-and-ancestor_1.jpg\" style=\"height: 230px; width: 300px;\" /></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[8,3,10,1,6,null,14,null,null,4,7,13]</span>\n<strong>Output: </strong><span id=\"example-output-1\">7</span>\n<strong>Explanation: </strong>\nWe have various ancestor-node differences, some of which are given below :\n|8 - 3| = 5\n|3 - 7| = 4\n|8 - 1| = 7\n|10 - 13| = 3\nAmong all possible differences, the maximum value of 7 is obtained by |8 - 1| = 7.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li>The number of nodes in the tree is between <code>2</code> and <code>5000</code>.</li>\n\t<li>Each node will have value between <code>0</code> and <code>100000</code>.</li>\n</ol>\n"
    },
    {
        "id": "873",
        "title": "Length of Longest Fibonacci Subsequence",
        "slug": "length-of-longest-fibonacci-subsequence",
        "difficulty": "Medium",
        "likes": 445,
        "dislikes": 19,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Fibonacci Number\", \"titleSlug\": \"fibonacci-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "512",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Dynamic Programming"
        ],
        "content": "<p>A sequence <code>X_1, X_2, ..., X_n</code>&nbsp;is <em>fibonacci-like</em> if:</p>\n\n<ul>\n\t<li><code>n &gt;= 3</code></li>\n\t<li><code>X_i + X_{i+1} = X_{i+2}</code>&nbsp;for all&nbsp;<code>i + 2 &lt;= n</code></li>\n</ul>\n\n<p>Given a <b>strictly increasing</b>&nbsp;array&nbsp;<code>A</code> of positive integers forming a sequence, find the <strong>length</strong> of the longest fibonacci-like subsequence of <code>A</code>.&nbsp; If one does not exist, return 0.</p>\n\n<p>(<em>Recall that a subsequence is derived from another sequence <code>A</code> by&nbsp;deleting any number of&nbsp;elements (including none)&nbsp;from <code>A</code>, without changing the order of the remaining elements.&nbsp; For example, <code>[3, 5, 8]</code> is a subsequence of <code>[3, 4, 5, 6, 7, 8]</code>.</em>)</p>\n\n<p>&nbsp;</p>\n\n<ul>\n</ul>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>[1,2,3,4,5,6,7,8]\n<strong>Output: </strong>5\n<strong>Explanation:\n</strong>The longest subsequence that is fibonacci-like: [1,2,3,5,8].\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>[1,3,7,11,12,14,18]\n<strong>Output: </strong>3\n<strong>Explanation</strong>:\nThe longest subsequence that is fibonacci-like:\n[1,11,12], [3,11,14] or [7,11,18].\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li><code>3 &lt;= A.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= A[0] &lt; A[1] &lt; ... &lt; A[A.length - 1] &lt;= 10^9</code></li>\n\t<li><em>(The time limit has been reduced by 50% for submissions in Java, C, and C++.)</em></li>\n</ul>\n"
    },
    {
        "id": "848",
        "title": "Shifting Letters",
        "slug": "shifting-letters",
        "difficulty": "Medium",
        "likes": 179,
        "dislikes": 37,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "482",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String"
        ],
        "content": "<p>We have a string <code>S</code> of lowercase letters, and an integer array <code>shifts</code>.</p>\n\n<p>Call the <em>shift</em> of a letter, the next letter in the alphabet, (wrapping around so that <code>&#39;z&#39;</code> becomes <code>&#39;a&#39;</code>).&nbsp;</p>\n\n<p>For example, <code>shift(&#39;a&#39;) = &#39;b&#39;</code>, <code>shift(&#39;t&#39;) = &#39;u&#39;</code>, and <code>shift(&#39;z&#39;) = &#39;a&#39;</code>.</p>\n\n<p>Now for each <code>shifts[i] = x</code>, we want to shift the first <code>i+1</code>&nbsp;letters of <code>S</code>, <code>x</code> times.</p>\n\n<p>Return the final string&nbsp;after all such shifts to <code>S</code> are applied.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>S = &quot;abc&quot;, shifts = [3,5,9]\n<strong>Output: </strong>&quot;rpl&quot;\n<strong>Explanation: </strong>\nWe start with &quot;abc&quot;.\nAfter shifting the first 1 letters of S by 3, we have &quot;dbc&quot;.\nAfter shifting the first 2 letters of S by 5, we have &quot;igc&quot;.\nAfter shifting the first 3 letters of S by 9, we have &quot;rpl&quot;, the answer.\n</pre>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= S.length = shifts.length &lt;= 20000</code></li>\n\t<li><code>0 &lt;= shifts[i] &lt;= 10 ^ 9</code></li>\n</ol>\n"
    },
    {
        "id": "341",
        "title": "Flatten Nested List Iterator",
        "slug": "flatten-nested-list-iterator",
        "difficulty": "Medium",
        "likes": 1109,
        "dislikes": 466,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Flatten 2D Vector\", \"titleSlug\": \"flatten-2d-vector\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Zigzag Iterator\", \"titleSlug\": \"zigzag-iterator\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Mini Parser\", \"titleSlug\": \"mini-parser\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Array Nesting\", \"titleSlug\": \"array-nesting\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Stack",
            "Design"
        ],
        "content": "<p>Given a nested list of integers, implement an iterator to flatten it.</p>\n\n<p>Each element is either an integer, or a list -- whose elements may also be integers or other lists.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<div>\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[[1,1],2,[1,1]]</span>\n<strong>Output: </strong><span id=\"example-output-1\">[1,1,2,1,1]\n</span><strong>Explanation: </strong>By calling <i>next</i> repeatedly until <i>hasNext</i> returns false, \n&nbsp;            the order of elements returned by <i>next</i> should be: <code>[1,1,2,1,1]</code>.</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[1,[4,[6]]]</span>\n<strong>Output: </strong><span id=\"example-output-2\">[1,4,6]\n</span><strong>Explanation: </strong>By calling <i>next</i> repeatedly until <i>hasNext</i> returns false, \n&nbsp;            the order of elements returned by <i>next</i> should be: <code>[1,4,6]</code>.\n</pre>\n</div>\n</div>\n"
    },
    {
        "id": "1030",
        "title": "Matrix Cells in Distance Order",
        "slug": "matrix-cells-in-distance-order",
        "difficulty": "Easy",
        "likes": 99,
        "dislikes": 57,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Sort"
        ],
        "content": "<p>We are given a matrix with <code>R</code> rows and <code>C</code> columns has cells with integer coordinates&nbsp;<code>(r, c)</code>, where <code>0 &lt;= r &lt; R</code> and <code>0 &lt;= c &lt; C</code>.</p>\n\n<p>Additionally, we are given a cell in that matrix with coordinates&nbsp;<code>(r0, c0)</code>.</p>\n\n<p>Return the coordinates of&nbsp;all cells in the matrix, sorted by their distance from <code>(r0, c0)</code>&nbsp;from smallest distance to largest distance.&nbsp; Here,&nbsp;the distance between two cells <code>(r1, c1)</code> and <code>(r2, c2)</code> is the Manhattan distance,&nbsp;<code>|r1 - r2| + |c1 - c2|</code>.&nbsp; (You may return the answer in any order that satisfies this condition.)</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>R = <span id=\"example-input-1-1\">1</span>, C = <span id=\"example-input-1-2\">2</span>, r0 = <span id=\"example-input-1-3\">0</span>, c0 = <span id=\"example-input-1-4\">0</span>\n<strong>Output: </strong><span id=\"example-output-1\">[[0,0],[0,1]]\n<strong>Explanation:</strong> The distances from (r0, c0) to other cells are: [0,1]</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>R = <span id=\"example-input-2-1\">2</span>, C = <span id=\"example-input-2-2\">2</span>, r0 = <span id=\"example-input-2-3\">0</span>, c0 = <span id=\"example-input-2-4\">1</span>\n<strong>Output: </strong><span id=\"example-output-2\">[[0,1],[0,0],[1,1],[1,0]]\n</span><span id=\"example-output-1\"><strong>Explanation:</strong> The distances from (r0, c0) to other cells are:</span><span> [0,1,1,2]</span>\nThe answer [[0,1],[1,1],[0,0],[1,0]] would also be accepted as correct.\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>R = <span id=\"example-input-3-1\">2</span>, C = <span id=\"example-input-3-2\">3</span>, r0 = <span id=\"example-input-3-3\">1</span>, c0 = <span id=\"example-input-3-4\">2</span>\n<strong>Output: </strong><span id=\"example-output-3\">[[1,2],[0,2],[1,1],[0,1],[1,0],[0,0]]</span>\n<span id=\"example-output-1\"><strong>Explanation:</strong> The distances from (r0, c0) to other cells are:</span><span> [0,1,1,2,2,3]</span>\nThere are other answers that would also be accepted as correct, such as [[1,2],[1,1],[0,2],[1,0],[0,1],[0,0]].\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong><span>Note:</span></strong></p>\n\n<ol>\n\t<li><code>1 &lt;= R &lt;= 100</code></li>\n\t<li><code>1 &lt;= C &lt;= 100</code></li>\n\t<li><code>0 &lt;= r0 &lt; R</code></li>\n\t<li><code>0 &lt;= c0 &lt; C</code></li>\n</ol>\n</div>\n</div>\n</div>\n"
    },
    {
        "id": "937",
        "title": "Reorder Data in Log Files",
        "slug": "reorder-data-in-log-files",
        "difficulty": "Easy",
        "likes": 228,
        "dislikes": 673,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "610",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String"
        ],
        "content": "<p>You have an array of <code>logs</code>.&nbsp; Each log is a space delimited string of words.</p>\n\n<p>For each log, the first word in each log is an alphanumeric <em>identifier</em>.&nbsp; Then, either:</p>\n\n<ul>\n\t<li>Each word after the identifier will consist only of lowercase letters, or;</li>\n\t<li>Each word after the identifier will consist only of digits.</li>\n</ul>\n\n<p>We will call these two varieties of logs <em>letter-logs</em> and <em>digit-logs</em>.&nbsp; It is guaranteed that each log has at least one word after its identifier.</p>\n\n<p>Reorder the logs so that all of the letter-logs come before any digit-log.&nbsp; The letter-logs are ordered lexicographically ignoring identifier, with the identifier used in case of ties.&nbsp; The digit-logs should be put in their original order.</p>\n\n<p>Return the final order of the logs.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> logs = [\"dig1 8 1 5 1\",\"let1 art can\",\"dig2 3 6\",\"let2 own kit dig\",\"let3 art zero\"]\n<strong>Output:</strong> [\"let1 art can\",\"let3 art zero\",\"let2 own kit dig\",\"dig1 8 1 5 1\",\"dig2 3 6\"]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ol>\n\t<li><code>0 &lt;= logs.length &lt;= 100</code></li>\n\t<li><code>3 &lt;= logs[i].length &lt;= 100</code></li>\n\t<li><code>logs[i]</code> is guaranteed to have an identifier, and a word after the identifier.</li>\n</ol>\n"
    },
    {
        "id": "160",
        "title": "Intersection of Two Linked Lists",
        "slug": "intersection-of-two-linked-lists",
        "difficulty": "Easy",
        "likes": 2389,
        "dislikes": 233,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Minimum Index Sum of Two Lists\", \"titleSlug\": \"minimum-index-sum-of-two-lists\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "18",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Linked List"
        ],
        "content": "<p>Write a program to find the node at which the intersection of two singly linked lists begins.</p>\n\n<p>For example, the following two linked lists:</p>\n<a href=\"./img/intersection-of-two-linked-lists_1.png\" target=\"_blank\"><img alt=\"\" src=\"./img/intersection-of-two-linked-lists_1.png\" style=\"margin-top: 10px; margin-bottom: 10px; width: 400px; height: 130px;\" /></a>\n\n<p>begin to intersect at node c1.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n<a href=\"./img/intersection-of-two-linked-lists_2.png\" target=\"_blank\"><img alt=\"\" src=\"./img/intersection-of-two-linked-lists_2.png\" style=\"margin-top: 10px; margin-bottom: 10px; width: 400px; height: 130px;\" /></a>\n\n<pre>\n<strong>Input: </strong>intersectVal = 8, listA = [4,1,8,4,5], listB = [5,0,1,8,4,5], skipA = 2, skipB = 3\n<strong>Output:</strong> Reference of the node with value = 8\n<strong>Input Explanation:</strong> The intersected node&#39;s value is 8 (note that this must not be 0 if the two lists intersect). From the head of A, it reads as [4,1,8,4,5]. From the head of B, it reads as [5,0,1,8,4,5]. There are 2 nodes before the intersected node in A; There are 3 nodes before the intersected node in B.</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 2:</strong></p>\n<a href=\"./img/intersection-of-two-linked-lists_3.png\" target=\"_blank\"><img alt=\"\" src=\"./img/intersection-of-two-linked-lists_3.png\" style=\"margin-top: 10px; margin-bottom: 10px; width: 350px; height: 136px;\" /></a>\n\n<pre>\n<strong>Input: </strong>intersectVal&nbsp;= 2, listA = [0,9,1,2,4], listB = [3,2,4], skipA = 3, skipB = 1\n<strong>Output:</strong> Reference of the node with value = 2\n<strong>Input Explanation:</strong>&nbsp;The intersected node&#39;s value is 2 (note that this must not be 0 if the two lists intersect). From the head of A, it reads as [0,9,1,2,4]. From the head of B, it reads as [3,2,4]. There are 3 nodes before the intersected node in A; There are 1 node before the intersected node in B.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 3:</strong></p>\n<a href=\"./img/intersection-of-two-linked-lists_4.png\" target=\"_blank\"><img alt=\"\" src=\"./img/intersection-of-two-linked-lists_4.png\" style=\"margin-top: 10px; margin-bottom: 10px; width: 200px; height: 126px;\" /></a>\n\n<pre>\n<strong>Input: </strong>intersectVal = 0, listA = [2,6,4], listB = [1,5], skipA = 3, skipB = 2\n<strong>Output:</strong> null\n<strong>Input Explanation:</strong> From the head of A, it reads as [2,6,4]. From the head of B, it reads as [1,5]. Since the two lists do not intersect, intersectVal must be 0, while skipA and skipB can be arbitrary values.\n<strong>Explanation:</strong> The two lists do not intersect, so return null.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Notes:</b></p>\n\n<ul>\n\t<li>If the two linked lists have no intersection at all, return <code>null</code>.</li>\n\t<li>The linked lists must retain their original structure after the function returns.</li>\n\t<li>You may assume there are no cycles anywhere in the entire linked structure.</li>\n\t<li>Your code should preferably run in O(n) time and use only O(1) memory.</li>\n</ul>\n"
    },
    {
        "id": "154",
        "title": "Find Minimum in Rotated Sorted Array II",
        "slug": "find-minimum-in-rotated-sorted-array-ii",
        "difficulty": "Hard",
        "likes": 539,
        "dislikes": 156,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Find Minimum in Rotated Sorted Array\", \"titleSlug\": \"find-minimum-in-rotated-sorted-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Array",
            "Binary Search"
        ],
        "content": "<p>Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.</p>\n\n<p>(i.e., &nbsp;<code>[0,1,2,4,5,6,7]</code>&nbsp;might become &nbsp;<code>[4,5,6,7,0,1,2]</code>).</p>\n\n<p>Find the minimum element.</p>\n\n<p>The array may contain duplicates.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> [1,3,5]\n<strong>Output:</strong> 1</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> [2,2,2,0,1]\n<strong>Output:</strong> 0</pre>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>This is a follow up problem to&nbsp;<a href=\"https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/description/\">Find Minimum in Rotated Sorted Array</a>.</li>\n\t<li>Would allow duplicates affect the run-time complexity? How and why?</li>\n</ul>\n"
    },
    {
        "id": "905",
        "title": "Sort Array By Parity",
        "slug": "sort-array-by-parity",
        "difficulty": "Easy",
        "likes": 556,
        "dislikes": 60,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "559",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array"
        ],
        "content": "<p>Given an array <code>A</code> of non-negative integers, return an array consisting of all the even elements of <code>A</code>, followed by all the odd elements of <code>A</code>.</p>\n\n<p>You may return any answer array that satisfies this condition.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[3,1,2,4]</span>\n<strong>Output: </strong><span id=\"example-output-1\">[2,4,3,1]</span>\nThe outputs [4,2,3,1], [2,4,1,3], and [4,2,1,3] would also be accepted.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 5000</code></li>\n\t<li><code>0 &lt;= A[i] &lt;= 5000</code></li>\n</ol>\n</div>\n"
    },
    {
        "id": "777",
        "title": "Swap Adjacent in LR String",
        "slug": "swap-adjacent-in-lr-string",
        "difficulty": "Medium",
        "likes": 245,
        "dislikes": 227,
        "hints": [
            "Think of the L and R's as people on a horizontal line, where X is a space.  The people can't cross each other, and also you can't go from XRX to RXX."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "406",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Brainteaser"
        ],
        "content": "<p>In a string composed of <code>&#39;L&#39;</code>, <code>&#39;R&#39;</code>, and <code>&#39;X&#39;</code> characters, like <code>&quot;RXXLRXRXL&quot;</code>, a move consists of either replacing one occurrence of <code>&quot;XL&quot;</code> with <code>&quot;LX&quot;</code>, or replacing one occurrence of <code>&quot;RX&quot;</code> with <code>&quot;XR&quot;</code>. Given the starting string <code>start</code> and the ending string <code>end</code>, return <code>True</code> if and only if there exists a sequence of moves to transform one string to the other.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input:</strong> start = &quot;RXXLRXRXL&quot;, end = &quot;XRLXXRRLX&quot;\n<strong>Output:</strong> True\n<strong>Explanation:</strong>\nWe can transform start to end following these steps:\nRXXLRXRXL -&gt;\nXRXLRXRXL -&gt;\nXRLXRXRXL -&gt;\nXRLXXRRXL -&gt;\nXRLXXRRLX\n</pre>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= len(start) = len(end) &lt;= 10000</code>.</li>\n\t<li>Both start and end will only consist of characters in <code>{&#39;L&#39;, &#39;R&#39;, &#39;X&#39;}</code>.</li>\n</ol>\n"
    },
    {
        "id": "633",
        "title": "Sum of Square Numbers",
        "slug": "sum-of-square-numbers",
        "difficulty": "Easy",
        "likes": 371,
        "dislikes": 246,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Valid Perfect Square\", \"titleSlug\": \"valid-perfect-square\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "192",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math"
        ],
        "content": "<p>Given a non-negative integer <code>c</code>, your task is to decide whether there&#39;re two integers <code>a</code> and <code>b</code> such that a<sup>2</sup> + b<sup>2</sup> = c.</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> 5\n<b>Output:</b> True\n<b>Explanation:</b> 1 * 1 + 2 * 2 = 5\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input:</b> 3\n<b>Output:</b> False\n</pre>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "860",
        "title": "Lemonade Change",
        "slug": "lemonade-change",
        "difficulty": "Easy",
        "likes": 333,
        "dislikes": 62,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "499",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Greedy"
        ],
        "content": "<p>At a lemonade stand, each lemonade costs <code>$5</code>.&nbsp;</p>\n\n<p>Customers are standing in a queue to buy from you, and order one at a time (in the order specified by <code>bills</code>).</p>\n\n<p>Each customer will only buy one lemonade and&nbsp;pay with either a <code>$5</code>, <code>$10</code>, or <code>$20</code> bill.&nbsp; You must provide the correct change to each customer, so that the net transaction is that the customer pays $5.</p>\n\n<p>Note that you don&#39;t have any change&nbsp;in hand at first.</p>\n\n<p>Return <code>true</code>&nbsp;if and only if you can provide every customer with correct change.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[5,5,5,10,20]</span>\n<strong>Output: </strong><span id=\"example-output-1\">true</span>\n<strong>Explanation: </strong>\nFrom the first 3 customers, we collect three $5 bills in order.\nFrom the fourth customer, we collect a $10 bill and give back a $5.\nFrom the fifth customer, we give a $10 bill and a $5 bill.\nSince all customers got correct change, we output true.\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[5,5,10]</span>\n<strong>Output: </strong><span id=\"example-output-2\">true</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">[10,10]</span>\n<strong>Output: </strong><span id=\"example-output-3\">false</span>\n</pre>\n\n<div>\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-4-1\">[5,5,10,10,20]</span>\n<strong>Output: </strong><span id=\"example-output-4\">false</span>\n<strong>Explanation: </strong>\nFrom the first two customers in order, we collect two $5 bills.\nFor the next two customers in order, we collect a $10 bill and give back a $5 bill.\nFor the last customer, we can't give change of $15 back because we only have two $10 bills.\nSince not every customer received correct change, the answer is false.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong><span>Note:</span></strong></p>\n\n<ul>\n\t<li><code>0 &lt;= bills.length &lt;= 10000</code></li>\n\t<li><code>bills[i]</code>&nbsp;will be either&nbsp;<code>5</code>, <code>10</code>, or <code>20</code>.</li>\n</ul>\n</div>\n</div>\n</div>\n</div>\n"
    },
    {
        "id": "501",
        "title": "Find Mode in Binary Search Tree",
        "slug": "find-mode-in-binary-search-tree",
        "difficulty": "Easy",
        "likes": 622,
        "dislikes": 248,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Validate Binary Search Tree\", \"titleSlug\": \"validate-binary-search-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Tree"
        ],
        "content": "<p>Given a binary search tree (BST) with duplicates, find all the <a href=\"https://en.wikipedia.org/wiki/Mode_(statistics)\" target=\"_blank\">mode(s)</a> (the most frequently occurred element) in the given BST.</p>\n\n<p>Assume a BST is defined as follows:</p>\n\n<ul>\n\t<li>The left subtree of a node contains only nodes with keys <b>less than or equal to</b> the node&#39;s key.</li>\n\t<li>The right subtree of a node contains only nodes with keys <b>greater than or equal to</b> the node&#39;s key.</li>\n\t<li>Both the left and right subtrees must also be binary search trees.</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p>For example:<br />\nGiven BST <code>[1,null,2,2]</code>,</p>\n\n<pre>\n   1\n    \\\n     2\n    /\n   2\n</pre>\n\n<p>&nbsp;</p>\n\n<p>return <code>[2]</code>.</p>\n\n<p><b>Note:</b> If a tree has more than one mode, you can return them in any order.</p>\n\n<p><b>Follow up:</b> Could you do that without using any extra space? (Assume that the implicit stack space incurred due to recursion does not count).</p>\n"
    },
    {
        "id": "829",
        "title": "Consecutive Numbers Sum",
        "slug": "consecutive-numbers-sum",
        "difficulty": "Hard",
        "likes": 192,
        "dislikes": 288,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "461",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math"
        ],
        "content": "<p>Given a positive integer&nbsp;<code>N</code>, how many ways can we write it as a sum of&nbsp;consecutive positive integers?</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>5\n<strong>Output: </strong>2\n<strong>Explanation: </strong>5 = 5 = 2 + 3</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>9\n<strong>Output: </strong>3\n<strong>Explanation: </strong>9 = 9 = 4 + 5 = 2 + 3 + 4</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>15\n<strong>Output: </strong>4\n<strong>Explanation: </strong>15 = 15 = 8 + 7 = 4 + 5 + 6 = 1 + 2 + 3 + 4 + 5</pre>\n\n<p><strong>Note:</strong>&nbsp;<code>1 &lt;= N &lt;= 10 ^ 9</code>.</p>\n"
    },
    {
        "id": "689",
        "title": "Maximum Sum of 3 Non-Overlapping Subarrays",
        "slug": "maximum-sum-of-3-non-overlapping-subarrays",
        "difficulty": "Hard",
        "likes": 634,
        "dislikes": 33,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Best Time to Buy and Sell Stock III\", \"titleSlug\": \"best-time-to-buy-and-sell-stock-iii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "255",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Dynamic Programming"
        ],
        "content": "<p>In a given array <code>nums</code> of positive integers, find three non-overlapping subarrays with maximum sum.</p>\n\n<p>Each subarray will be of size <code>k</code>, and we want to maximize the sum of all <code>3*k</code> entries.</p>\n\n<p>Return the result as a list of indices representing the starting position of each interval (0-indexed). If there are multiple answers, return the lexicographically smallest one.</p>\n\n<p><b>Example:</b></p>\n\n<pre>\n<b>Input:</b> [1,2,1,2,6,7,5,1], 2\n<b>Output:</b> [0, 3, 5]\n<b>Explanation:</b> Subarrays [1, 2], [2, 6], [7, 5] correspond to the starting indices [0, 3, 5].\nWe could have also taken [2, 1], but an answer of [1, 3, 5] would be lexicographically larger.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b></p>\n\n<ul>\n\t<li><code>nums.length</code> will be between 1 and 20000.</li>\n\t<li><code>nums[i]</code> will be between 1 and 65535.</li>\n\t<li><code>k</code> will be between 1 and floor(nums.length / 3).</li>\n</ul>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "779",
        "title": "K-th Symbol in Grammar",
        "slug": "k-th-symbol-in-grammar",
        "difficulty": "Medium",
        "likes": 254,
        "dislikes": 91,
        "hints": [
            "Try to represent the current (N, K) in terms of some (N-1, prevK).  What is prevK ?"
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "409",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Recursion"
        ],
        "content": "<p>On the first row, we write a <code>0</code>. Now in every subsequent row, we look at the previous row and replace each occurrence of <code>0</code> with <code>01</code>, and each occurrence of <code>1</code> with <code>10</code>.</p>\n\n<p>Given row <code>N</code> and index <code>K</code>, return the <code>K</code>-th indexed symbol in row <code>N</code>. (The values of <code>K</code> are 1-indexed.) (1 indexed).</p>\n\n<pre>\n<strong>Examples:</strong>\n<strong>Input:</strong> N = 1, K = 1\n<strong>Output:</strong> 0\n\n<strong>Input:</strong> N = 2, K = 1\n<strong>Output:</strong> 0\n\n<strong>Input:</strong> N = 2, K = 2\n<strong>Output:</strong> 1\n\n<strong>Input:</strong> N = 4, K = 5\n<strong>Output:</strong> 1\n\n<strong>Explanation:</strong>\nrow 1: 0\nrow 2: 01\nrow 3: 0110\nrow 4: 01101001\n</pre>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>N</code> will be an integer in the range <code>[1, 30]</code>.</li>\n\t<li><code>K</code> will be an integer in the range <code>[1, 2^(N-1)]</code>.</li>\n</ol>\n"
    },
    {
        "id": "50",
        "title": "Pow(x, n)",
        "slug": "powx-n",
        "difficulty": "Medium",
        "likes": 951,
        "dislikes": 2337,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Sqrt(x)\", \"titleSlug\": \"sqrtx\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Super Pow\", \"titleSlug\": \"super-pow\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "360",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math",
            "Binary Search"
        ],
        "content": "<p>Implement <a href=\"http://www.cplusplus.com/reference/valarray/pow/\" target=\"_blank\">pow(<em>x</em>, <em>n</em>)</a>, which calculates&nbsp;<em>x</em> raised to the power <em>n</em> (x<sup><span style=\"font-size:10.8333px\">n</span></sup>).</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> 2.00000, 10\n<strong>Output:</strong> 1024.00000\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> 2.10000, 3\n<strong>Output:</strong> 9.26100\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> 2.00000, -2\n<strong>Output:</strong> 0.25000\n<strong>Explanation:</strong> 2<sup>-2</sup> = 1/2<sup>2</sup> = 1/4 = 0.25\n</pre>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>-100.0 &lt; <em>x</em> &lt; 100.0</li>\n\t<li><em>n</em> is a 32-bit signed integer, within the range&nbsp;[&minus;2<sup>31</sup>,&nbsp;2<sup>31&nbsp;</sup>&minus; 1]</li>\n</ul>\n"
    },
    {
        "id": "495",
        "title": "Teemo Attacking",
        "slug": "teemo-attacking",
        "difficulty": "Medium",
        "likes": 263,
        "dislikes": 562,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Merge Intervals\", \"titleSlug\": \"merge-intervals\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Can Place Flowers\", \"titleSlug\": \"can-place-flowers\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Dota2 Senate\", \"titleSlug\": \"dota2-senate\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "752",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array"
        ],
        "content": "<p>In LOL world, there is a hero called Teemo and his attacking can make his enemy Ashe be in poisoned condition. Now, given the Teemo&#39;s attacking <b>ascending</b> time series towards Ashe and the poisoning time duration per Teemo&#39;s attacking, you need to output the total time that Ashe is in poisoned condition.</p>\n\n<p>You may assume that Teemo attacks at the very beginning of a specific time point, and makes Ashe be in poisoned condition immediately.</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> [1,4], 2\n<b>Output:</b> 4\n<b>Explanation:</b> At time point 1, Teemo starts attacking Ashe and makes Ashe be poisoned immediately. \nThis poisoned status will last 2 seconds until the end of time point 2. \nAnd at time point 4, Teemo attacks Ashe again, and causes Ashe to be in poisoned status for another 2 seconds. \nSo you finally need to output 4.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input:</b> [1,2], 2\n<b>Output:</b> 3\n<b>Explanation:</b> At time point 1, Teemo starts attacking Ashe and makes Ashe be poisoned. \nThis poisoned status will last 2 seconds until the end of time point 2. \nHowever, at the beginning of time point 2, Teemo attacks Ashe again who is already in poisoned status. \nSince the poisoned status won&#39;t add up together, though the second poisoning attack will still work at time point 2, it will stop at the end of time point 3. \nSo you finally need to output 3.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b></p>\n\n<ol>\n\t<li>You may assume the length of given time series array won&#39;t exceed 10000.</li>\n\t<li>You may assume the numbers in the Teemo&#39;s attacking time series and his poisoning time duration per attacking are non-negative integers, which won&#39;t exceed 10,000,000.</li>\n</ol>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "205",
        "title": "Isomorphic Strings",
        "slug": "isomorphic-strings",
        "difficulty": "Easy",
        "likes": 864,
        "dislikes": 248,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Word Pattern\", \"titleSlug\": \"word-pattern\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Hash Table"
        ],
        "content": "<p>Given two strings <b><i>s</i></b> and <b><i>t</i></b>, determine if they are isomorphic.</p>\n\n<p>Two strings are isomorphic if the characters in <b><i>s</i></b> can be replaced to get <b><i>t</i></b>.</p>\n\n<p>All occurrences of a character must be replaced with another character while preserving the order of characters. No two characters may map to the same character but a character may map to itself.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> <b><i>s</i></b> = <code>&quot;egg&quot;, </code><b><i>t = </i></b><code>&quot;add&quot;</code>\n<strong>Output:</strong> true\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> <b><i>s</i></b> = <code>&quot;foo&quot;, </code><b><i>t = </i></b><code>&quot;bar&quot;</code>\n<strong>Output:</strong> false</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> <b><i>s</i></b> = <code>&quot;paper&quot;, </code><b><i>t = </i></b><code>&quot;title&quot;</code>\n<strong>Output:</strong> true</pre>\n\n<p><b>Note:</b><br />\nYou may assume both <b><i>s&nbsp;</i></b>and <b><i>t&nbsp;</i></b>have the same length.</p>\n"
    },
    {
        "id": "436",
        "title": "Find Right Interval",
        "slug": "find-right-interval",
        "difficulty": "Medium",
        "likes": 236,
        "dislikes": 102,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Data Stream as Disjoint Intervals\", \"titleSlug\": \"data-stream-as-disjoint-intervals\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "89",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Binary Search"
        ],
        "content": "<p>Given a set of intervals, for each of the interval i, check if there exists an interval j whose start point is bigger than or equal to the end point of the interval i, which can be called that j is on the &quot;right&quot; of i.</p>\n\n<p>For any interval i, you need to store the minimum interval j&#39;s index, which means that the interval j has the minimum start point to build the &quot;right&quot; relationship for interval i. If the interval j doesn&#39;t exist, store -1 for the interval i. Finally, you need output the stored value of each interval as an array.</p>\n\n<p><b>Note:</b></p>\n\n<ol>\n\t<li>You may assume the interval&#39;s end point is always bigger than its start point.</li>\n\t<li>You may assume none of these intervals have the same start point.</li>\n</ol>\n\n<p>&nbsp;</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> [ [1,2] ]\n\n<b>Output:</b> [-1]\n\n<b>Explanation:</b> There is only one interval in the collection, so it outputs -1.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input:</b> [ [3,4], [2,3], [1,2] ]\n\n<b>Output:</b> [-1, 0, 1]\n\n<b>Explanation:</b> There is no satisfied &quot;right&quot; interval for [3,4].\nFor [2,3], the interval [3,4] has minimum-&quot;right&quot; start point;\nFor [1,2], the interval [2,3] has minimum-&quot;right&quot; start point.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Example 3:</b></p>\n\n<pre>\n<b>Input:</b> [ [1,4], [2,3], [3,4] ]\n\n<b>Output:</b> [-1, 2, -1]\n\n<b>Explanation:</b> There is no satisfied &quot;right&quot; interval for [1,4] and [3,4].\nFor [2,3], the interval [3,4] has minimum-&quot;right&quot; start point.\n</pre>\n\n<p><strong>NOTE:</strong>&nbsp;input types have been changed on April 15, 2019. Please reset to default code definition to get new method signature.</p>\n"
    },
    {
        "id": "54",
        "title": "Spiral Matrix",
        "slug": "spiral-matrix",
        "difficulty": "Medium",
        "likes": 1332,
        "dislikes": 447,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Spiral Matrix II\", \"titleSlug\": \"spiral-matrix-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "235",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array"
        ],
        "content": "<p>Given a matrix of <em>m</em> x <em>n</em> elements (<em>m</em> rows, <em>n</em> columns), return all elements of the matrix in spiral order.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong>\n[\n [ 1, 2, 3 ],\n [ 4, 5, 6 ],\n [ 7, 8, 9 ]\n]\n<strong>Output:</strong> [1,2,3,6,9,8,7,4,5]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n<pre>\n<strong>Input:</strong>\n[\n  [1, 2, 3, 4],\n  [5, 6, 7, 8],\n  [9,10,11,12]\n]\n<strong>Output:</strong> [1,2,3,4,8,12,11,10,9,5,6,7]\n</pre>"
    },
    {
        "id": "497",
        "title": "Random Point in Non-overlapping Rectangles",
        "slug": "random-point-in-non-overlapping-rectangles",
        "difficulty": "Medium",
        "likes": 116,
        "dislikes": 143,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Random Pick with Weight\", \"titleSlug\": \"random-pick-with-weight\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Generate Random Point in a Circle\", \"titleSlug\": \"generate-random-point-in-a-circle\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "519",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Binary Search",
            "Random"
        ],
        "content": "<p>Given a list of <strong>non-overlapping</strong>&nbsp;axis-aligned rectangles <code>rects</code>, write a function <code>pick</code> which randomly and uniformily picks an <strong>integer point</strong> in the space&nbsp;covered by the rectangles.</p>\n\n<p>Note:</p>\n\n<ol>\n\t<li>An <strong>integer point</strong>&nbsp;is a point that has integer coordinates.&nbsp;</li>\n\t<li>A point&nbsp;on the perimeter&nbsp;of a rectangle is&nbsp;<strong>included</strong> in the space covered by the rectangles.&nbsp;</li>\n\t<li><code>i</code>th rectangle = <code>rects[i]</code> =&nbsp;<code>[x1,y1,x2,y2]</code>, where <code>[x1, y1]</code>&nbsp;are the integer coordinates of the bottom-left corner, and <code>[x2, y2]</code>&nbsp;are the integer coordinates of the top-right corner.</li>\n\t<li>length and width of each rectangle does not exceed <code>2000</code>.</li>\n\t<li><code>1 &lt;= rects.length&nbsp;&lt;= 100</code></li>\n\t<li><code>pick</code> return a point as an array of integer coordinates&nbsp;<code>[p_x, p_y]</code></li>\n\t<li><code>pick</code> is called at most <code>10000</code>&nbsp;times.</li>\n</ol>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: \n</strong><span id=\"example-input-1-1\">[&quot;Solution&quot;,&quot;pick&quot;,&quot;pick&quot;,&quot;pick&quot;]\n</span><span id=\"example-input-1-2\">[[[[1,1,5,5]]],[],[],[]]</span>\n<strong>Output: \n</strong><span id=\"example-output-1\">[null,[4,1],[4,1],[3,3]]</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: \n</strong><span id=\"example-input-2-1\">[&quot;Solution&quot;,&quot;pick&quot;,&quot;pick&quot;,&quot;pick&quot;,&quot;pick&quot;,&quot;pick&quot;]\n</span><span id=\"example-input-2-2\">[[[[-2,-2,-1,-1],[1,0,3,0]]],[],[],[],[],[]]</span>\n<strong>Output: \n</strong><span id=\"example-output-2\">[null,[-1,-2],[2,0],[-2,-1],[3,0],[-2,-2]]</span></pre>\n</div>\n\n<div>\n<p><strong>Explanation of Input Syntax:</strong></p>\n\n<p>The input is two lists:&nbsp;the subroutines called&nbsp;and their&nbsp;arguments.&nbsp;<code>Solution</code>&#39;s&nbsp;constructor has one argument, the array of rectangles <code>rects</code>. <code>pick</code>&nbsp;has no arguments.&nbsp;Arguments&nbsp;are&nbsp;always wrapped with a list, even if there aren&#39;t any.</p>\n</div>\n</div>\n\n<div>\n<div>&nbsp;</div>\n</div>\n"
    },
    {
        "id": "935",
        "title": "Knight Dialer",
        "slug": "knight-dialer",
        "difficulty": "Medium",
        "likes": 287,
        "dislikes": 96,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "609",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>A chess knight can move as indicated in the chess diagram below:</p>\n\n<p><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2018/10/12/knight.png\" style=\"width: 150px; height: 150px;\" />&nbsp;.&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<img alt=\"\" src=\"./img/knight-dialer_1.png\" style=\"width: 134px; height: 150px;\" /></p>\n\n<p>&nbsp;</p>\n\n<p>This time, we place our chess knight on any numbered key of a phone pad (indicated above), and the knight makes <code>N-1</code> hops.&nbsp; Each hop must be from one key to another numbered key.</p>\n\n<p>Each time it lands on a key (including the initial placement of the knight), it presses the number of that key, pressing <code>N</code> digits total.</p>\n\n<p>How many distinct numbers can you dial in this manner?</p>\n\n<p>Since the answer may be large, <strong>output the answer&nbsp;modulo <code>10^9 + 7</code></strong>.</p>\n\n<p>&nbsp;</p>\n\n<ul>\n</ul>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">1</span>\n<strong>Output: </strong><span id=\"example-output-1\">10</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">2</span>\n<strong>Output: </strong><span id=\"example-output-2\">20</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">3</span>\n<strong>Output: </strong><span id=\"example-output-3\">46</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= N &lt;= 5000</code></li>\n</ul>\n</div>\n</div>\n</div>\n"
    },
    {
        "id": "868",
        "title": "Binary Gap",
        "slug": "binary-gap",
        "difficulty": "Easy",
        "likes": 142,
        "dislikes": 365,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "509",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math"
        ],
        "content": "<p>Given a positive&nbsp;integer <code>N</code>, find and return the longest distance between two consecutive 1&#39;s in the binary representation of <code>N</code>.</p>\n\n<p>If there aren&#39;t two consecutive 1&#39;s, return <font face=\"monospace\">0</font>.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<div>\n<div>\n<ul>\n</ul>\n</div>\n</div>\n</div>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">22</span>\n<strong>Output: </strong>2\n<strong>Explanation: </strong>\n22 in binary is 0b10110.\nIn the binary representation of 22, there are three ones, and two consecutive pairs of 1&#39;s.\nThe first consecutive pair of 1&#39;s have distance 2.\nThe second consecutive pair of 1&#39;s have distance 1.\nThe answer is the largest of these two distances, which is 2.\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">5</span>\n<strong>Output: </strong><span id=\"example-output-2\">2</span>\n<strong>Explanation: </strong>\n5 in binary is 0b101.\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">6</span>\n<strong>Output: </strong><span id=\"example-output-3\">1</span>\n<strong>Explanation: </strong>\n6 in binary is 0b110.\n</pre>\n\n<div>\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-4-1\">8</span>\n<strong>Output: </strong><span id=\"example-output-4\">0</span>\n<strong>Explanation: </strong>\n8 in binary is 0b1000.\nThere aren&#39;t any consecutive pairs of 1&#39;s in the binary representation of 8, so we return 0.\n</pre>\n\n<p>&nbsp;</p>\n\n<div>\n<div>\n<div>\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= N &lt;= 10^9</code></li>\n</ul>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n"
    },
    {
        "id": "446",
        "title": "Arithmetic Slices II - Subsequence",
        "slug": "arithmetic-slices-ii-subsequence",
        "difficulty": "Hard",
        "likes": 302,
        "dislikes": 43,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Arithmetic Slices\", \"titleSlug\": \"arithmetic-slices\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "367",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>A sequence of numbers is called arithmetic if it consists of at least three elements and if the difference between any two consecutive elements is the same.</p>\n\n<p>For example, these are arithmetic sequences:</p>\n\n<pre>\n1, 3, 5, 7, 9\n7, 7, 7, 7\n3, -1, -5, -9</pre>\n\n<p>The following sequence is not arithmetic.</p>\n\n<pre>\n1, 1, 2, 5, 7</pre>\n&nbsp;\n\n<p>A zero-indexed array A consisting of N numbers is given. A <b>subsequence</b> slice of that array is any sequence of integers (P<sub>0</sub>, P<sub>1</sub>, ..., P<sub>k</sub>) such that 0 &le; P<sub>0</sub> &lt; P<sub>1</sub> &lt; ... &lt; P<sub>k</sub> &lt; N.</p>\n\n<p>A <b>subsequence</b> slice (P<sub>0</sub>, P<sub>1</sub>, ..., P<sub>k</sub>) of array A is called arithmetic if the sequence A[P<sub>0</sub>], A[P<sub>1</sub>], ..., A[P<sub>k-1</sub>], A[P<sub>k</sub>] is arithmetic. In particular, this means that k &ge; 2.</p>\n\n<p>The function should return the number of arithmetic subsequence slices in the array A.</p>\n\n<p>The input contains N integers. Every integer is in the range of -2<sup>31</sup> and 2<sup>31</sup>-1 and 0 &le; N &le; 1000. The output is guaranteed to be less than 2<sup>31</sup>-1.</p>\n&nbsp;\n\n<p><b>Example:</b></p>\n\n<pre>\n<b>Input:</b> [2, 4, 6, 8, 10]\n\n<b>Output:</b> 7\n\n<b>Explanation:</b>\nAll arithmetic subsequence slices are:\n[2,4,6]\n[4,6,8]\n[6,8,10]\n[2,4,6,8]\n[4,6,8,10]\n[2,4,6,8,10]\n[2,6,10]\n</pre>\n"
    },
    {
        "id": "778",
        "title": "Swim in Rising Water",
        "slug": "swim-in-rising-water",
        "difficulty": "Hard",
        "likes": 345,
        "dislikes": 33,
        "hints": [
            "Use either Dijkstra's, or binary search for the best time T for which you can reach the end if you only step on squares at most T."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "408",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Binary Search",
            "Heap",
            "Depth-first Search",
            "Union Find"
        ],
        "content": "<p>On an N x N <code>grid</code>, each square <code>grid[i][j]</code> represents the elevation at that point <code>(i,j)</code>.</p>\n\n<p>Now rain starts to fall. At time <code>t</code>, the depth of the water everywhere is <code>t</code>. You can swim from a square to another 4-directionally adjacent square if and only if the elevation of both squares individually are&nbsp;at most&nbsp;<code>t</code>. You can swim infinite distance in zero time. Of course, you must stay within the boundaries of the grid during your swim.</p>\n\n<p>You start at the top left square <code>(0, 0)</code>. What is the least time until you can reach the bottom right square <code>(N-1, N-1)</code>?</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> [[0,2],[1,3]]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong>\nAt time <code>0</code>, you are in grid location <code>(0, 0)</code>.\nYou cannot go anywhere else because 4-directionally adjacent neighbors have a higher elevation than t = 0.\n\nYou cannot reach point <code>(1, 1)</code> until time <code>3</code>.\nWhen the depth of water is <code>3</code>, we can swim anywhere inside the grid.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> [[0,1,2,3,4],[24,23,22,21,5],[12,13,14,15,16],[11,17,18,19,20],[10,9,8,7,6]]\n<strong>Output:</strong> 16\n<strong>Explanation:</strong>\n<strong> 0  1  2  3  4</strong>\n24 23 22 21  <strong>5</strong>\n<strong>12 13 14 15 16</strong>\n<strong>11</strong> 17 18 19 20\n<strong>10  9  8  7  6</strong>\n\nThe final route is marked in bold.\nWe need to wait until time 16 so that (0, 0) and (4, 4) are connected.\n</pre>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>2 &lt;= N &lt;= 50</code>.</li>\n\t<li>grid[i][j] is a permutation of [0, ..., N*N - 1].</li>\n</ol>\n"
    },
    {
        "id": "284",
        "title": "Peeking Iterator",
        "slug": "peeking-iterator",
        "difficulty": "Medium",
        "likes": 322,
        "dislikes": 224,
        "hints": [
            "Think of \"looking ahead\". You want to cache the next element.",
            "Is one variable sufficient? Why or why not?",
            "Test your design with call order of <code>peek()</code> before <code>next()</code> vs <code>next()</code> before <code>peek()</code>.",
            "For a clean implementation, check out <a href=\"https://github.com/google/guava/blob/703ef758b8621cfbab16814f01ddcc5324bdea33/guava-gwt/src-super/com/google/common/collect/super/com/google/common/collect/Iterators.java#L1125\" target=\"_blank\">Google's guava library source code</a>."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Binary Search Tree Iterator\", \"titleSlug\": \"binary-search-tree-iterator\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Flatten 2D Vector\", \"titleSlug\": \"flatten-2d-vector\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Zigzag Iterator\", \"titleSlug\": \"zigzag-iterator\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Design"
        ],
        "content": "<p>Given an Iterator class interface with methods: <code>next()</code> and <code>hasNext()</code>, design and implement a PeekingIterator that support the <code>peek()</code> operation -- it essentially peek() at the element that will be returned by the next call to next().</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\nAssume that the iterator is initialized to the beginning of the list: <strong><code>[1,2,3]</code></strong>.\n\nCall <strong><code>next()</code></strong> gets you <strong>1</strong>, the first element in the list.\nNow you call <strong><code>peek()</code></strong> and it returns <strong>2</strong>, the next element. Calling <strong><code>next()</code></strong> after that <i><b>still</b></i> return <strong>2</strong>. \nYou call <strong><code>next()</code></strong> the final time and it returns <strong>3</strong>, the last element. \nCalling <strong><code>hasNext()</code></strong> after that should return <strong>false</strong>.\n</pre>\n\n<p><b>Follow up</b>: How would you extend your design to be generic and work with all types, not just integer?</p>\n"
    },
    {
        "id": "187",
        "title": "Repeated DNA Sequences",
        "slug": "repeated-dna-sequences",
        "difficulty": "Medium",
        "likes": 494,
        "dislikes": 203,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Hash Table",
            "Bit Manipulation"
        ],
        "content": "<p>All DNA is composed of a series of nucleotides abbreviated as A, C, G, and T, for example: &quot;ACGAATTCCG&quot;. When studying DNA, it is sometimes useful to identify repeated sequences within the DNA.</p>\n\n<p>Write a function to find all the 10-letter-long sequences (substrings) that occur more than once in a DNA molecule.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;AAAAACCCCCAAAAACCCCCCAAAAAGGGTTT&quot;\n\n<strong>Output:</strong> [&quot;AAAAACCCCC&quot;, &quot;CCCCCAAAAA&quot;]\n</pre>\n"
    },
    {
        "id": "1028",
        "title": "Recover a Tree From Preorder Traversal",
        "slug": "recover-a-tree-from-preorder-traversal",
        "difficulty": "Hard",
        "likes": 216,
        "dislikes": 8,
        "hints": [
            "Do an iterative depth first search, parsing dashes from the string to inform you how to link the nodes together."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Tree",
            "Depth-first Search"
        ],
        "content": "<p>We run a&nbsp;preorder&nbsp;depth first search on the <code>root</code> of a binary tree.</p>\n\n<p>At each node in this traversal, we output <code>D</code> dashes (where <code>D</code> is the <em>depth</em> of this node), then we output the value of this node.&nbsp;&nbsp;<em>(If the depth of a node is <code>D</code>, the depth of its immediate child is <code>D+1</code>.&nbsp; The depth of the root node is <code>0</code>.)</em></p>\n\n<p>If a node has only one child, that child is guaranteed to be the left child.</p>\n\n<p>Given the output <code>S</code> of this traversal, recover the tree and return its <code>root</code>.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<p><strong><img alt=\"\" src=\"./img/recover-a-tree-from-preorder-traversal_1.png\" style=\"width: 320px; height: 200px;\" /></strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">&quot;1-2--3--4-5--6--7&quot;</span>\n<strong>Output: </strong><span id=\"example-output-1\">[1,2,5,3,4,6,7]</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<p><strong><img alt=\"\" src=\"./img/recover-a-tree-from-preorder-traversal_2.png\" style=\"width: 256px; height: 250px;\" /></strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">&quot;1-2--3---4-5--6---7&quot;</span>\n<strong>Output: </strong><span id=\"example-output-2\">[1,2,5,3,null,6,null,4,null,7]</span></pre>\n</div>\n\n<div>\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<p><span><img alt=\"\" src=\"./img/recover-a-tree-from-preorder-traversal_3.png\" style=\"width: 276px; height: 250px;\" /></span></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">&quot;1-401--349---90--88&quot;</span>\n<strong>Output: </strong><span id=\"example-output-3\">[1,401,null,349,88,90]</span>\n</pre>\n</div>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the original tree is between <code>1</code> and <code>1000</code>.</li>\n\t<li>Each node will have a value between <code>1</code> and <code>10^9</code>.</li>\n</ul>\n</div>\n"
    },
    {
        "id": "114",
        "title": "Flatten Binary Tree to Linked List",
        "slug": "flatten-binary-tree-to-linked-list",
        "difficulty": "Medium",
        "likes": 1736,
        "dislikes": 228,
        "hints": [
            "If you notice carefully in the flattened tree, each node's right child points to the next node of a pre-order traversal."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Flatten a Multilevel Doubly Linked List\", \"titleSlug\": \"flatten-a-multilevel-doubly-linked-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Tree",
            "Depth-first Search"
        ],
        "content": "<p>Given a binary tree, flatten it to a linked list in-place.</p>\n\n<p>For example, given the following tree:</p>\n\n<pre>\n    1\n   / \\\n  2   5\n / \\   \\\n3   4   6\n</pre>\n\n<p>The flattened tree should look like:</p>\n\n<pre>\n1\n \\\n  2\n   \\\n    3\n     \\\n      4\n       \\\n        5\n         \\\n          6\n</pre>\n"
    },
    {
        "id": "837",
        "title": "New 21 Game",
        "slug": "new-21-game",
        "difficulty": "Medium",
        "likes": 368,
        "dislikes": 187,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "469",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>Alice plays the following game, loosely based on the card game &quot;21&quot;.</p>\n\n<p>Alice starts with <code>0</code> points, and draws numbers while she has less than <code>K</code> points.&nbsp; During each draw, she gains an integer number of points randomly from the range <code>[1, W]</code>, where <code>W</code> is an integer.&nbsp; Each draw is independent and the outcomes have equal probabilities.</p>\n\n<p>Alice stops drawing numbers when she gets <code>K</code> or more points.&nbsp; What is the probability&nbsp;that she has <code>N</code> or less points?</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>N = 10, K = 1, W = 10\n<strong>Output: </strong>1.00000\n<strong>Explanation: </strong> Alice gets a single card, then stops.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>N = 6, K = 1, W = 10\n<strong>Output: </strong>0.60000\n<strong>Explanation: </strong> Alice gets a single card, then stops.\nIn 6 out of W = 10 possibilities, she is at or below N = 6 points.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>N = 21, K = 17, W = 10\n<strong>Output: </strong>0.73278</pre>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>0 &lt;= K &lt;= N &lt;= 10000</code></li>\n\t<li><code>1 &lt;= W &lt;= 10000</code></li>\n\t<li>Answers will be accepted as correct if they are within <code>10^-5</code> of the correct answer.</li>\n\t<li>The judging time limit has been reduced for this question.</li>\n</ol>\n"
    },
    {
        "id": "150",
        "title": "Evaluate Reverse Polish Notation",
        "slug": "evaluate-reverse-polish-notation",
        "difficulty": "Medium",
        "likes": 614,
        "dislikes": 377,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Basic Calculator\", \"titleSlug\": \"basic-calculator\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Expression Add Operators\", \"titleSlug\": \"expression-add-operators\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Stack"
        ],
        "content": "<p>Evaluate the value of an arithmetic expression in <a href=\"http://en.wikipedia.org/wiki/Reverse_Polish_notation\" target=\"_blank\">Reverse Polish Notation</a>.</p>\n\n<p>Valid operators are <code>+</code>, <code>-</code>, <code>*</code>, <code>/</code>. Each operand may be an integer or another expression.</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>Division between two integers should truncate toward zero.</li>\n\t<li>The given RPN expression is always valid. That means the expression would always evaluate to a result and there won&#39;t&nbsp;be any&nbsp;divide&nbsp;by zero operation.</li>\n</ul>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> [&quot;2&quot;, &quot;1&quot;, &quot;+&quot;, &quot;3&quot;, &quot;*&quot;]\n<strong>Output:</strong> 9\n<strong>Explanation:</strong> ((2 + 1) * 3) = 9\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> [&quot;4&quot;, &quot;13&quot;, &quot;5&quot;, &quot;/&quot;, &quot;+&quot;]\n<strong>Output:</strong> 6\n<strong>Explanation:</strong> (4 + (13 / 5)) = 6\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> [&quot;10&quot;, &quot;6&quot;, &quot;9&quot;, &quot;3&quot;, &quot;+&quot;, &quot;-11&quot;, &quot;*&quot;, &quot;/&quot;, &quot;*&quot;, &quot;17&quot;, &quot;+&quot;, &quot;5&quot;, &quot;+&quot;]\n<strong>Output:</strong> 22\n<strong>Explanation:</strong> \n  ((10 * (6 / ((9 + 3) * -11))) + 17) + 5\n= ((10 * (6 / (12 * -11))) + 17) + 5\n= ((10 * (6 / -132)) + 17) + 5\n= ((10 * 0) + 17) + 5\n= (0 + 17) + 5\n= 17 + 5\n= 22\n</pre>\n"
    },
    {
        "id": "915",
        "title": "Partition Array into Disjoint Intervals",
        "slug": "partition-array-into-disjoint-intervals",
        "difficulty": "Medium",
        "likes": 231,
        "dislikes": 17,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "574",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array"
        ],
        "content": "<p>Given an array <code>A</code>, partition it&nbsp;into two (contiguous) subarrays&nbsp;<code>left</code>&nbsp;and <code>right</code>&nbsp;so that:</p>\n\n<ul>\n\t<li>Every element in <code>left</code>&nbsp;is less than or equal to every element in <code>right</code>.</li>\n\t<li><code>left</code> and <code>right</code> are non-empty.</li>\n\t<li><code>left</code>&nbsp;has the smallest possible size.</li>\n</ul>\n\n<p>Return the <strong>length</strong> of <code>left</code> after such a partitioning.&nbsp; It is guaranteed that such a partitioning exists.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[5,0,3,8,6]</span>\n<strong>Output: </strong><span id=\"example-output-1\">3</span>\n<strong>Explanation: </strong>left = [5,0,3], right = [8,6]\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[1,1,1,0,6,12]</span>\n<strong>Output: </strong><span id=\"example-output-2\">4</span>\n<strong>Explanation: </strong>left = [1,1,1,0], right = [6,12]\n</pre>\n\n<p>&nbsp;</p>\n</div>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>2 &lt;= A.length&nbsp;&lt;= 30000</code></li>\n\t<li><code>0 &lt;= A[i] &lt;= 10^6</code></li>\n\t<li>It is guaranteed there is at least one way to partition <code>A</code> as described.</li>\n</ol>\n\n<div>\n<div>&nbsp;</div>\n</div>\n"
    },
    {
        "id": "506",
        "title": "Relative Ranks",
        "slug": "relative-ranks",
        "difficulty": "Easy",
        "likes": 200,
        "dislikes": 411,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [],
        "content": "<p>\nGiven scores of <b>N</b> athletes, find their relative ranks and the people with the top three highest scores, who will be awarded medals: \"Gold Medal\", \"Silver Medal\" and \"Bronze Medal\".</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> [5, 4, 3, 2, 1]\n<b>Output:</b> [\"Gold Medal\", \"Silver Medal\", \"Bronze Medal\", \"4\", \"5\"]\n<b>Explanation:</b> The first three athletes got the top three highest scores, so they got \"Gold Medal\", \"Silver Medal\" and \"Bronze Medal\". <br/>For the left two athletes, you just need to output their relative ranks according to their scores.\n</pre>\n</p>\n\n<p><b>Note:</b><br>\n<ol>\n<li>N is a positive integer and won't exceed 10,000.</li>\n<li>All the scores of athletes are guaranteed to be unique.</li>\n</ol>\n</p>\n"
    },
    {
        "id": "814",
        "title": "Binary Tree Pruning",
        "slug": "binary-tree-pruning",
        "difficulty": "Medium",
        "likes": 640,
        "dislikes": 21,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "445",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree"
        ],
        "content": "<p>We are given the head node <code>root</code>&nbsp;of a binary tree, where additionally every node&#39;s value is either a 0 or a 1.</p>\n\n<p>Return the same tree where every subtree (of the given tree) not containing a 1 has been removed.</p>\n\n<p>(Recall that the subtree of a node X is X, plus every node that is a descendant of X.)</p>\n\n<pre>\n<strong>Example 1:</strong>\n<strong>Input:</strong> [1,null,0,0,1]\n<strong>Output: </strong>[1,null,0,null,1]\n \n<strong>Explanation:</strong> \nOnly the red nodes satisfy the property &quot;every subtree not containing a 1&quot;.\nThe diagram on the right represents the answer.\n\n<img alt=\"\" src=\"./img/binary-tree-pruning_1.png\" style=\"width:450px\" />\n</pre>\n\n<pre>\n<strong>Example 2:</strong>\n<strong>Input:</strong> [1,0,1,0,0,0,1]\n<strong>Output: </strong>[1,null,1,null,1]\n\n\n<img alt=\"\" src=\"./img/binary-tree-pruning_2.png\" style=\"width:450px\" />\n</pre>\n\n<pre>\n<strong>Example 3:</strong>\n<strong>Input:</strong> [1,1,0,1,1,0,1,0]\n<strong>Output: </strong>[1,1,0,1,1,null,1]\n\n\n<img alt=\"\" src=\"./img/binary-tree-pruning_3.png\" style=\"width:450px\" />\n</pre>\n\n<p><strong>Note: </strong></p>\n\n<ul>\n\t<li>The binary tree&nbsp;will&nbsp;have&nbsp;at&nbsp;most <code>100 nodes</code>.</li>\n\t<li>The value of each node will only be <code>0</code> or <code>1</code>.</li>\n</ul>\n"
    },
    {
        "id": "515",
        "title": "Find Largest Value in Each Tree Row",
        "slug": "find-largest-value-in-each-tree-row",
        "difficulty": "Medium",
        "likes": 557,
        "dislikes": 48,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Tree",
            "Depth-first Search",
            "Breadth-first Search"
        ],
        "content": "<p>You need to find the largest value in each row of a binary tree.</p>\n\n<p><b>Example:</b><br />\n<pre>\n<b>Input:</b> \n\n          1\n         / \\\n        3   2\n       / \\   \\  \n      5   3   9 \n\n<b>Output:</b> [1, 3, 9]\n</pre>\n</p>\n"
    },
    {
        "id": "698",
        "title": "Partition to K Equal Sum Subsets",
        "slug": "partition-to-k-equal-sum-subsets",
        "difficulty": "Medium",
        "likes": 977,
        "dislikes": 57,
        "hints": [
            "We can figure out what target each subset must sum to.  Then, let's recursively search, where at each call to our function, we choose which of k subsets the next value will join."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Partition Equal Subset Sum\", \"titleSlug\": \"partition-equal-subset-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "262",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming",
            "Recursion"
        ],
        "content": "<p>Given an array of integers <code>nums</code> and a positive integer <code>k</code>, find whether it&#39;s possible to divide this array into <code>k</code> non-empty subsets whose sums are all equal.</p>\n\n<p>&nbsp;</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> nums = [4, 3, 2, 3, 5, 2, 1], k = 4\n<b>Output:</b> True\n<b>Explanation:</b> It&#39;s possible to divide it into 4 subsets (5), (1, 4), (2,3), (2,3) with equal sums.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b></p>\n\n<ul>\n\t<li><code>1 &lt;= k &lt;= len(nums) &lt;= 16</code>.</li>\n\t<li><code>0 &lt; nums[i] &lt; 10000</code>.</li>\n</ul>\n"
    },
    {
        "id": "306",
        "title": "Additive Number",
        "slug": "additive-number",
        "difficulty": "Medium",
        "likes": 232,
        "dislikes": 322,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Split Array into Fibonacci Sequence\", \"titleSlug\": \"split-array-into-fibonacci-sequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Backtracking"
        ],
        "content": "<p>Additive number is a string whose digits can form additive sequence.</p>\n\n<p>A valid additive sequence should contain <b>at least</b> three numbers. Except for the first two numbers, each subsequent number in the sequence must be the sum of the preceding two.</p>\n\n<p>Given a string containing only digits <code>&#39;0&#39;-&#39;9&#39;</code>, write a function to determine if it&#39;s an additive number.</p>\n\n<p><b>Note:</b> Numbers in the additive sequence <b>cannot</b> have leading zeros, so sequence <code>1, 2, 03</code> or <code>1, 02, 3</code> is invalid.</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> <code>&quot;112358&quot;</code>\n<b>Output:</b> true \n<strong>Explanation: </strong>The digits can form an additive sequence: <code>1, 1, 2, 3, 5, 8</code>. \n&nbsp;            1 + 1 = 2, 1 + 2 = 3, 2 + 3 = 5, 3 + 5 = 8\n</pre>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input:</b> <code>&quot;199100199&quot;</code>\n<b>Output:</b> true \n<strong>Explanation: </strong>The additive sequence is: <code>1, 99, 100, 199</code><span style=\"font-family: sans-serif, Arial, Verdana, &quot;Trebuchet MS&quot;;\">.</span>&nbsp;\n&nbsp;            1 + 99 = 100, 99 + 100 = 199</pre>\n\n<p><b>Follow up:</b><br />\nHow would you handle overflow for very large input integers?</p>"
    },
    {
        "id": "504",
        "title": "Base 7",
        "slug": "base-7",
        "difficulty": "Easy",
        "likes": 163,
        "dislikes": 125,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [],
        "content": "<p>Given an integer, return its base 7 string representation.</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> 100\n<b>Output:</b> \"202\"\n</pre>\n</p>\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b> -7\n<b>Output:</b> \"-10\"\n</pre>\n</p>\n\n<p><b>Note:</b>\nThe input will be in range of [-1e7, 1e7].\n</p>"
    },
    {
        "id": "16",
        "title": "3Sum Closest",
        "slug": "3sum-closest",
        "difficulty": "Medium",
        "likes": 1312,
        "dislikes": 94,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"3Sum\", \"titleSlug\": \"3sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"3Sum Smaller\", \"titleSlug\": \"3sum-smaller\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Array",
            "Two Pointers"
        ],
        "content": "<p>Given an array <code>nums</code> of <em>n</em> integers and an integer <code>target</code>, find three integers in <code>nums</code>&nbsp;such that the sum is closest to&nbsp;<code>target</code>. Return the sum of the three integers. You may assume that each input would have exactly one solution.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\nGiven array nums = [-1, 2, 1, -4], and target = 1.\n\nThe sum that is closest to the target is 2. (-1 + 2 + 1 = 2).\n</pre>\n"
    },
    {
        "id": "890",
        "title": "Find and Replace Pattern",
        "slug": "find-and-replace-pattern",
        "difficulty": "Medium",
        "likes": 431,
        "dislikes": 43,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "534",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String"
        ],
        "content": "<p>You have a list of&nbsp;<code>words</code> and a <code>pattern</code>, and you want to know which words in <code>words</code> matches the pattern.</p>\n\n<p>A word matches the pattern if there exists a permutation of letters <code>p</code> so that after replacing every letter <code>x</code> in the pattern with <code>p(x)</code>, we get the desired word.</p>\n\n<p>(<em>Recall that a permutation of letters is a bijection from letters to letters: every letter maps to another letter, and no two letters map to the same letter.</em>)</p>\n\n<p>Return a list of the words in <code>words</code>&nbsp;that match the given pattern.&nbsp;</p>\n\n<p>You may return the answer in any order.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>words = <span id=\"example-input-1-1\">[&quot;abc&quot;,&quot;deq&quot;,&quot;mee&quot;,&quot;aqq&quot;,&quot;dkd&quot;,&quot;ccc&quot;]</span>, pattern = <span id=\"example-input-1-2\">&quot;abb&quot;</span>\n<strong>Output: </strong><span id=\"example-output-1\">[&quot;mee&quot;,&quot;aqq&quot;]</span>\n<strong><span>Explanation: </span></strong>&quot;mee&quot; matches the pattern because there is a permutation {a -&gt; m, b -&gt; e, ...}. \n&quot;ccc&quot; does not match the pattern because {a -&gt; c, b -&gt; c, ...} is not a permutation,\nsince a and b map to the same letter.</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= words.length &lt;= 50</code></li>\n\t<li><code>1 &lt;= pattern.length = words[i].length&nbsp;&lt;= 20</code></li>\n</ul>\n</div>\n"
    },
    {
        "id": "1171",
        "title": "Remove Zero Sum Consecutive Nodes from Linked List",
        "slug": "remove-zero-sum-consecutive-nodes-from-linked-list",
        "difficulty": "Medium",
        "likes": 128,
        "dislikes": 14,
        "hints": [
            "Convert the linked list into an array.",
            "While you can find a non-empty subarray with sum = 0, erase it.",
            "Convert the array into a linked list."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Linked List"
        ],
        "content": "<p>Given the <code>head</code> of a linked list, we repeatedly delete consecutive sequences of nodes that sum to <code>0</code> until there are no such sequences.</p>\n\n<p>After doing so, return the head of the final linked list.&nbsp; You may return any such answer.</p>\n\n<p>&nbsp;</p>\n<p>(Note that in the examples below, all sequences are serializations of <code>ListNode</code> objects.)</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> head = [1,2,-3,3,1]\n<strong>Output:</strong> [3,1]\n<strong>Note:</strong> The answer [1,2,1] would also be accepted.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> head = [1,2,3,-3,4]\n<strong>Output:</strong> [1,2,4]\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> head = [1,2,3,-3,-2]\n<strong>Output:</strong> [1]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The given linked list will contain between <code>1</code> and <code>1000</code> nodes.</li>\n\t<li>Each node in the linked list has <code>-1000 &lt;= node.val &lt;= 1000</code>.</li>\n</ul>\n"
    },
    {
        "id": "1130",
        "title": "Minimum Cost Tree From Leaf Values",
        "slug": "minimum-cost-tree-from-leaf-values",
        "difficulty": "Medium",
        "likes": 187,
        "dislikes": 16,
        "hints": [
            "Do a DP, where dp(i, j) is the answer for the subarray arr[i]..arr[j].",
            "For each possible way to partition the subarray i <= k < j, the answer is max(arr[i]..arr[k]) * max(arr[k+1]..arr[j]) + dp(i, k) + dp(k+1, j)."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Dynamic Programming",
            "Stack",
            "Tree"
        ],
        "content": "<p>Given an array <code>arr</code> of positive integers, consider all binary trees such that:</p>\n\n<ul>\n\t<li>Each node has either 0 or 2 children;</li>\n\t<li>The values of <code>arr</code> correspond to the values of each&nbsp;<strong>leaf</strong> in an in-order traversal of the tree.&nbsp; <em>(Recall that a node is a leaf if and only if it has 0 children.)</em></li>\n\t<li>The value&nbsp;of each non-leaf node is equal to the product of the largest leaf value in its left and right subtree respectively.</li>\n</ul>\n\n<p>Among all possible binary trees considered,&nbsp;return the smallest possible sum of the values of each non-leaf node.&nbsp; It is guaranteed this sum fits into a 32-bit integer.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr = [6,2,4]\n<strong>Output:</strong> 32\n<strong>Explanation:</strong>\nThere are two possible trees.  The first has non-leaf node sum 36, and the second has non-leaf node sum 32.\n\n    24            24\n   /  \\          /  \\\n  12   4        6    8\n /  \\               / \\\n6    2             2   4\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= arr.length &lt;= 40</code></li>\n\t<li><code>1 &lt;= arr[i] &lt;= 15</code></li>\n\t<li>It is guaranteed that the answer fits into a 32-bit signed integer (ie.&nbsp;it is less than <code>2^31</code>).</li>\n</ul>"
    },
    {
        "id": "849",
        "title": "Maximize Distance to Closest Person",
        "slug": "maximize-distance-to-closest-person",
        "difficulty": "Easy",
        "likes": 485,
        "dislikes": 78,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Exam Room\", \"titleSlug\": \"exam-room\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "481",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array"
        ],
        "content": "<p>In a row of <code>seats</code>, <code>1</code> represents a person sitting in that seat, and <code>0</code> represents that the seat is empty.&nbsp;</p>\n\n<p>There is at least one empty seat, and at least one person sitting.</p>\n\n<p>Alex wants to sit in the seat such that the distance between him and the closest person to him is maximized.&nbsp;</p>\n\n<p>Return that maximum distance to closest person.</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[1,0,0,0,1,0,1]</span>\n<strong>Output: </strong><span id=\"example-output-1\">2</span>\n<strong>Explanation: </strong>\nIf Alex sits in the second open seat (seats[2]), then the closest person has distance 2.\nIf Alex sits in any other open seat, the closest person has distance 1.\nThus, the maximum distance to the closest person is 2.</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[1,0,0,0]</span>\n<strong>Output: </strong><span id=\"example-output-2\">3</span>\n<strong>Explanation: </strong>\nIf Alex sits in the last seat, the closest person is 3 seats away.\nThis is the maximum distance possible, so the answer is 3.\n</pre>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= seats.length &lt;= 20000</code></li>\n\t<li><code>seats</code>&nbsp;contains only 0s or 1s, at least one <code>0</code>, and at least one <code>1</code>.</li>\n</ol>\n</div>\n</div>\n"
    },
    {
        "id": "6",
        "title": "ZigZag Conversion",
        "slug": "zigzag-conversion",
        "difficulty": "Medium",
        "likes": 1176,
        "dislikes": 3578,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "484",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String"
        ],
        "content": "<p>The string <code>&quot;PAYPALISHIRING&quot;</code> is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)</p>\n\n<pre>\nP   A   H   N\nA P L S I I G\nY   I   R\n</pre>\n\n<p>And then read line by line: <code>&quot;PAHNAPLSIIGYIR&quot;</code></p>\n\n<p>Write the code that will take a string and make this conversion given a number of rows:</p>\n\n<pre>\nstring convert(string s, int numRows);</pre>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;PAYPALISHIRING&quot;, numRows = 3\n<strong>Output:</strong> &quot;PAHNAPLSIIGYIR&quot;\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;PAYPALISHIRING&quot;, numRows =&nbsp;4\n<strong>Output:</strong>&nbsp;&quot;PINALSIGYAHRPI&quot;\n<strong>Explanation:</strong>\n\nP     I    N\nA   L S  I G\nY A   H R\nP     I</pre>\n"
    },
    {
        "id": "911",
        "title": "Online Election",
        "slug": "online-election",
        "difficulty": "Medium",
        "likes": 216,
        "dislikes": 156,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "568",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Binary Search"
        ],
        "content": "<p>In an election, the <code>i</code>-th&nbsp;vote was cast for <code>persons[i]</code> at time <code>times[i]</code>.</p>\n\n<p>Now, we would like to implement the following query function: <code>TopVotedCandidate.q(int t)</code> will return the number of the person that was leading the election at time <code>t</code>.&nbsp;&nbsp;</p>\n\n<p>Votes cast at time <code>t</code> will count towards our query.&nbsp; In the case of a tie, the most recent vote (among tied candidates) wins.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[&quot;TopVotedCandidate&quot;,&quot;q&quot;,&quot;q&quot;,&quot;q&quot;,&quot;q&quot;,&quot;q&quot;,&quot;q&quot;]</span>, <span id=\"example-input-1-2\">[[[0,1,1,0,0,1,0],[0,5,10,15,20,25,30]],[3],[12],[25],[15],[24],[8]]</span>\n<strong>Output: </strong><span id=\"example-output-1\">[null,0,1,1,0,0,1]</span>\n<strong>Explanation: </strong>\nAt time 3, the votes are [0], and 0 is leading.\nAt time 12, the votes are [0,1,1], and 1 is leading.\nAt time 25, the votes are [0,1,1,0,0,1], and 1 is leading (as ties go to the most recent vote.)\nThis continues for 3 more queries at time 15, 24, and 8.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= persons.length = times.length &lt;= 5000</code></li>\n\t<li><code>0 &lt;= persons[i] &lt;= persons.length</code></li>\n\t<li><code>times</code>&nbsp;is a strictly increasing array with all elements in <code>[0, 10^9]</code>.</li>\n\t<li><code>TopVotedCandidate.q</code> is called at most <code>10000</code> times per test case.</li>\n\t<li><code>TopVotedCandidate.q(int t)</code> is always called with <code>t &gt;= times[0]</code>.</li>\n</ol>\n</div>\n"
    },
    {
        "id": "674",
        "title": "Longest Continuous Increasing Subsequence",
        "slug": "longest-continuous-increasing-subsequence",
        "difficulty": "Easy",
        "likes": 492,
        "dislikes": 101,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Number of Longest Increasing Subsequence\", \"titleSlug\": \"number-of-longest-increasing-subsequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Window Subsequence\", \"titleSlug\": \"minimum-window-subsequence\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "278",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array"
        ],
        "content": "<p>\nGiven an unsorted array of integers, find the length of longest <code>continuous</code> increasing subsequence (subarray).\n</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> [1,3,5,4,7]\n<b>Output:</b> 3\n<b>Explanation:</b> The longest continuous increasing subsequence is [1,3,5], its length is 3. \nEven though [1,3,5,7] is also an increasing subsequence, it's not a continuous one where 5 and 7 are separated by 4. \n</pre>\n</p>\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b> [2,2,2,2,2]\n<b>Output:</b> 1\n<b>Explanation:</b> The longest continuous increasing subsequence is [2], its length is 1. \n</pre>\n</p>\n\n<p><b>Note:</b>\nLength of the array will not exceed 10,000.\n</p>"
    },
    {
        "id": "944",
        "title": "Delete Columns to Make Sorted",
        "slug": "delete-columns-to-make-sorted",
        "difficulty": "Easy",
        "likes": 65,
        "dislikes": 1055,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "618",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Greedy"
        ],
        "content": "<p>We are given an array&nbsp;<code>A</code> of <code>N</code> lowercase letter strings, all of the same length.</p>\n\n<p>Now, we may choose any set of deletion indices, and for each string, we delete all the characters in those indices.</p>\n\n<p>For example, if we have an array <code>A = [&quot;</code><code>abcdef</code><code>&quot;,&quot;uvwxyz&quot;]</code> and deletion indices <code>{0, 2, 3}</code>, then the final array after deletions is <code>[&quot;bef&quot;, &quot;vyz&quot;]</code>,&nbsp;and the remaining columns of <code>A</code> are&nbsp;<code>[&quot;b&quot;</code><code>,&quot;</code><code>v&quot;]</code>, <code>[&quot;e&quot;,&quot;y&quot;]</code>, and <code>[&quot;f&quot;,&quot;z&quot;]</code>.&nbsp; (Formally, the <code>c</code>-th column is <code>[A[0][c], A[1][c], ..., A[A.length-1][c]]</code>.)</p>\n\n<p>Suppose we chose a set of deletion indices <code>D</code> such that after deletions, each remaining column in A is in <strong>non-decreasing</strong> sorted order.</p>\n\n<p>Return the minimum possible value of <code>D.length</code>.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[&quot;cba&quot;,&quot;daf&quot;,&quot;ghi&quot;]</span>\n<strong>Output: </strong><span id=\"example-output-1\">1</span>\n<strong>Explanation: </strong>\nAfter choosing D = {1}, each column [&quot;c&quot;,&quot;d&quot;,&quot;g&quot;] and [&quot;a&quot;,&quot;f&quot;,&quot;i&quot;] are in non-decreasing sorted order.\nIf we chose D = {}, then a column [&quot;b&quot;,&quot;a&quot;,&quot;h&quot;] would not be in non-decreasing sorted order.\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[&quot;a&quot;,&quot;b&quot;]</span>\n<strong>Output: </strong><span id=\"example-output-2\">0</span>\n<strong>Explanation: </strong>D = {}\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">[&quot;zyx&quot;,&quot;wvu&quot;,&quot;tsr&quot;]</span>\n<strong>Output: </strong><span id=\"example-output-3\">3</span>\n<strong>Explanation: </strong>D = {0, 1, 2}\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong><span>Note:</span></strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= A[i].length &lt;= 1000</code></li>\n</ol>\n</div>\n</div>\n</div>\n"
    },
    {
        "id": "903",
        "title": "Valid Permutations for DI Sequence",
        "slug": "valid-permutations-for-di-sequence",
        "difficulty": "Hard",
        "likes": 188,
        "dislikes": 25,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "553",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Divide and Conquer",
            "Dynamic Programming"
        ],
        "content": "<p>We are given <code>S</code>, a length <code>n</code> string of characters from the set <code>{&#39;D&#39;, &#39;I&#39;}</code>. (These letters stand for &quot;decreasing&quot; and &quot;increasing&quot;.)</p>\n\n<p>A&nbsp;<em>valid permutation</em>&nbsp;is a permutation <code>P[0], P[1], ..., P[n]</code> of integers&nbsp;<code>{0, 1, ..., n}</code>, such that for all <code>i</code>:</p>\n\n<ul>\n\t<li>If <code>S[i] == &#39;D&#39;</code>, then <code>P[i] &gt; P[i+1]</code>, and;</li>\n\t<li>If <code>S[i] == &#39;I&#39;</code>, then <code>P[i] &lt; P[i+1]</code>.</li>\n</ul>\n\n<p>How many valid permutations are there?&nbsp; Since the answer may be large, <strong>return your answer modulo <code>10^9 + 7</code></strong>.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">&quot;DID&quot;</span>\n<strong>Output: </strong><span id=\"example-output-1\">5</span>\n<strong>Explanation: </strong>\nThe 5 valid permutations of (0, 1, 2, 3) are:\n(1, 0, 3, 2)\n(2, 0, 3, 1)\n(2, 1, 3, 0)\n(3, 0, 2, 1)\n(3, 1, 2, 0)\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= S.length &lt;= 200</code></li>\n\t<li><code>S</code> consists only of characters from the set <code>{&#39;D&#39;, &#39;I&#39;}</code>.</li>\n</ol>\n\n<div>\n<p>&nbsp;</p>\n</div>\n"
    },
    {
        "id": "230",
        "title": "Kth Smallest Element in a BST",
        "slug": "kth-smallest-element-in-a-bst",
        "difficulty": "Medium",
        "likes": 1356,
        "dislikes": 43,
        "hints": [
            "Try to utilize the property of a BST.",
            "Try in-order traversal. (Credits to @chan13)",
            "What if you could modify the BST node's structure?",
            "The optimal runtime complexity is O(height of BST)."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Binary Tree Inorder Traversal\", \"titleSlug\": \"binary-tree-inorder-traversal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Second Minimum Node In a Binary Tree\", \"titleSlug\": \"second-minimum-node-in-a-binary-tree\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "723",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Binary Search",
            "Tree"
        ],
        "content": "<p>Given a binary search tree, write a function <code>kthSmallest</code> to find the <b>k</b>th smallest element in it.</p>\n\n<p><b>Note: </b><br />\nYou may assume k is always valid, 1 &le; k &le; BST&#39;s total elements.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [3,1,4,null,2], k = 1\n   3\n  / \\\n 1   4\n  \\\n&nbsp;  2\n<strong>Output:</strong> 1</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [5,3,6,2,4,null,null,1], k = 3\n       5\n      / \\\n     3   6\n    / \\\n   2   4\n  /\n 1\n<strong>Output:</strong> 3\n</pre>\n\n<p><b>Follow up:</b><br />\nWhat if the BST is modified (insert/delete operations) often and you need to find the kth smallest frequently? How would you optimize the kthSmallest routine?</p>\n"
    },
    {
        "id": "715",
        "title": "Range Module",
        "slug": "range-module",
        "difficulty": "Hard",
        "likes": 318,
        "dislikes": 25,
        "hints": [
            "Maintain a sorted set of disjoint intervals.  addRange and removeRange can be performed with time complexity linear to the size of this set; queryRange can be performed with time complexity logarithmic to the size of this set."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Merge Intervals\", \"titleSlug\": \"merge-intervals\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Insert Interval\", \"titleSlug\": \"insert-interval\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Data Stream as Disjoint Intervals\", \"titleSlug\": \"data-stream-as-disjoint-intervals\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "268",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Segment Tree",
            "Ordered Map"
        ],
        "content": "<p>A Range Module is a module that tracks ranges of numbers. Your task is to design and implement the following interfaces in an efficient manner.</p>\n\n<p><li><code>addRange(int left, int right)</code> Adds the half-open interval <code>[left, right)</code>, tracking every real number in that interval.  Adding an interval that partially overlaps with currently tracked numbers should add any numbers in the interval <code>[left, right)</code> that are not already tracked.</li></p>\n\n<p><li><code>queryRange(int left, int right)</code> Returns true if and only if every real number in the interval <code>[left, right)</code>\n is currently being tracked.</li></p>\n\n<p><li><code>removeRange(int left, int right)</code> Stops tracking every real number currently being tracked in the interval <code>[left, right)</code>.</li></p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>addRange(10, 20)</b>: null\n<b>removeRange(14, 16)</b>: null\n<b>queryRange(10, 14)</b>: true (Every number in [10, 14) is being tracked)\n<b>queryRange(13, 15)</b>: false (Numbers like 14, 14.03, 14.17 in [13, 15) are not being tracked)\n<b>queryRange(16, 17)</b>: true (The number 16 in [16, 17) is still being tracked, despite the remove operation)\n</pre>\n</p>\n\n<p><b>Note:</b>\n<li>A half open interval <code>[left, right)</code> denotes all real numbers <code>left <= x < right</code>.</li>\n\n<li><code>0 < left < right < 10^9</code> in all calls to <code>addRange, queryRange, removeRange</code>.</li>\n<li>The total number of calls to <code>addRange</code> in a single test case is at most <code>1000</code>.</li>\n<li>The total number of calls to <code>queryRange</code> in a single test case is at most <code>5000</code>.</li>\n<li>The total number of calls to <code>removeRange</code> in a single test case is at most <code>1000</code>.</li>\n</p>"
    },
    {
        "id": "387",
        "title": "First Unique Character in a String",
        "slug": "first-unique-character-in-a-string",
        "difficulty": "Easy",
        "likes": 1174,
        "dislikes": 86,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Sort Characters By Frequency\", \"titleSlug\": \"sort-characters-by-frequency\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "638",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Hash Table",
            "String"
        ],
        "content": "<p>\nGiven a string, find the first non-repeating character in it and return it's index. If it doesn't exist, return -1.\n</p>\n<p><b>Examples:</b>\n<pre>\ns = \"leetcode\"\nreturn 0.\n\ns = \"loveleetcode\",\nreturn 2.\n</pre>\n</p>\n\n<p>\n<b>Note:</b> You may assume the string contain only lowercase letters.\n</p>"
    },
    {
        "id": "785",
        "title": "Is Graph Bipartite?",
        "slug": "is-graph-bipartite",
        "difficulty": "Medium",
        "likes": 770,
        "dislikes": 97,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "417",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Depth-first Search",
            "Breadth-first Search",
            "Graph"
        ],
        "content": "<p>Given an undirected&nbsp;<code>graph</code>, return <code>true</code> if and only if it is bipartite.</p>\n\n<p>Recall that a graph is <em>bipartite</em> if we can split it&#39;s set of nodes into two independent&nbsp;subsets A and B such that every edge in the graph has one node in A and another node in B.</p>\n\n<p>The graph is given in the following form: <code>graph[i]</code> is a list of indexes <code>j</code> for which the edge between nodes <code>i</code> and <code>j</code> exists.&nbsp; Each node is an integer between <code>0</code> and <code>graph.length - 1</code>.&nbsp; There are no self edges or parallel edges: <code>graph[i]</code> does not contain <code>i</code>, and it doesn&#39;t contain any element twice.</p>\n\n<pre>\n<strong>Example 1:</strong>\n<strong>Input:</strong> [[1,3], [0,2], [1,3], [0,2]]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> \nThe graph looks like this:\n0----1\n|    |\n|    |\n3----2\nWe can divide the vertices into two groups: {0, 2} and {1, 3}.\n</pre>\n\n<pre>\n<strong>Example 2:</strong>\n<strong>Input:</strong> [[1,2,3], [0,2], [0,1,3], [0,2]]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> \nThe graph looks like this:\n0----1\n| \\  |\n|  \\ |\n3----2\nWe cannot find a way to divide the set of nodes into two independent subsets.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li><code>graph</code> will have length in range <code>[1, 100]</code>.</li>\n\t<li><code>graph[i]</code> will contain integers in range <code>[0, graph.length - 1]</code>.</li>\n\t<li><code>graph[i]</code> will not contain <code>i</code> or duplicate values.</li>\n\t<li>The graph is undirected: if any element <code>j</code> is in <code>graph[i]</code>, then <code>i</code> will be in <code>graph[j]</code>.</li>\n</ul>\n"
    },
    {
        "id": "219",
        "title": "Contains Duplicate II",
        "slug": "contains-duplicate-ii",
        "difficulty": "Easy",
        "likes": 564,
        "dislikes": 699,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Contains Duplicate\", \"titleSlug\": \"contains-duplicate\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Contains Duplicate III\", \"titleSlug\": \"contains-duplicate-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "24",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Hash Table"
        ],
        "content": "<p>Given an array of integers and an integer <i>k</i>, find out whether there are two distinct indices <i>i</i> and <i>j</i> in the array such that <b>nums[i] = nums[j]</b> and the <b>absolute</b> difference between <i>i</i> and <i>j</i> is at most <i>k</i>.</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>nums = <span id=\"example-input-1-1\">[1,2,3,1]</span>, k = <span id=\"example-input-1-2\">3</span>\n<strong>Output: </strong><span id=\"example-output-1\">true</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>nums = <span id=\"example-input-2-1\">[1,0,1,1]</span>, k = <span id=\"example-input-2-2\">1</span>\n<strong>Output: </strong><span id=\"example-output-2\">true</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>nums = <span id=\"example-input-3-1\">[1,2,3,1,2,3]</span>, k = <span id=\"example-input-3-2\">2</span>\n<strong>Output: </strong><span id=\"example-output-3\">false</span>\n</pre>\n</div>\n</div>\n</div>\n"
    },
    {
        "id": "53",
        "title": "Maximum Subarray",
        "slug": "maximum-subarray",
        "difficulty": "Easy",
        "likes": 5010,
        "dislikes": 187,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Best Time to Buy and Sell Stock\", \"titleSlug\": \"best-time-to-buy-and-sell-stock\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Maximum Product Subarray\", \"titleSlug\": \"maximum-product-subarray\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Degree of an Array\", \"titleSlug\": \"degree-of-an-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Longest Turbulent Subarray\", \"titleSlug\": \"longest-turbulent-subarray\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "735",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Divide and Conquer",
            "Dynamic Programming"
        ],
        "content": "<p>Given an integer array <code>nums</code>, find the contiguous subarray&nbsp;(containing at least one number) which has the largest sum and return its sum.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input:</strong> [-2,1,-3,4,-1,2,1,-5,4],\n<strong>Output:</strong> 6\n<strong>Explanation:</strong>&nbsp;[4,-1,2,1] has the largest sum = 6.\n</pre>\n\n<p><strong>Follow up:</strong></p>\n\n<p>If you have figured out the O(<em>n</em>) solution, try coding another solution using the divide and conquer approach, which is more subtle.</p>\n"
    },
    {
        "id": "770",
        "title": "Basic Calculator IV",
        "slug": "basic-calculator-iv",
        "difficulty": "Hard",
        "likes": 43,
        "dislikes": 381,
        "hints": [
            "One way is with a Polynomial class.  For example,\r\n\r\n* `Poly:add(this, that)` returns the result of `this + that`.\r\n* `Poly:sub(this, that)` returns the result of `this - that`.\r\n* `Poly:mul(this, that)` returns the result of `this * that`.\r\n* `Poly:evaluate(this, evalmap)` returns the polynomial after replacing all free variables with constants as specified by `evalmap`.\r\n* `Poly:toList(this)` returns the polynomial in the correct output format.\r\n\r\n* `Solution::combine(left, right, symbol)` returns the result of applying the binary operator represented by `symbol` to `left` and `right`.\r\n* `Solution::make(expr)` makes a new `Poly` represented by either the constant or free variable specified by `expr`.\r\n* `Solution::parse(expr)` parses an expression into a new `Poly`."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Parse Lisp Expression\", \"titleSlug\": \"parse-lisp-expression\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Basic Calculator III\", \"titleSlug\": \"basic-calculator-iii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "386",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Hash Table",
            "String",
            "Stack"
        ],
        "content": "<p>Given an <code>expression</code>&nbsp;such as <code>expression = &quot;e + 8 - a + 5&quot;</code> and an evaluation map such as <code>{&quot;e&quot;: 1}</code> (given in terms of <code>evalvars = [&quot;e&quot;]</code> and <code>evalints = [1]</code>), return a list of tokens representing the simplified expression, such as <code>[&quot;-1*a&quot;,&quot;14&quot;]</code></p>\n\n<ul>\n\t<li>An expression alternates chunks and symbols, with a space separating each chunk and symbol.</li>\n\t<li>A chunk is either an expression in parentheses, a variable, or a non-negative integer.</li>\n\t<li>A variable is a string of lowercase letters (not including digits.) Note that variables can be multiple letters, and note that variables never have a leading coefficient or unary operator like <code>&quot;2x&quot;</code> or <code>&quot;-x&quot;</code>.</li>\n</ul>\n\n<p>Expressions are evaluated in the usual order: brackets first, then multiplication, then addition and subtraction. For example, <code>expression = &quot;1 + 2 * 3&quot;</code> has an answer of <code>[&quot;7&quot;]</code>.</p>\n\n<p>The format of the output is as follows:</p>\n\n<ul>\n\t<li>For each term of free variables with non-zero coefficient, we write the free variables within a term in sorted order lexicographically. For example, we would never write a term like <code>&quot;b*a*c&quot;</code>, only <code>&quot;a*b*c&quot;</code>.</li>\n\t<li>Terms have degree equal to the number of free variables being multiplied, counting multiplicity. (For example, <code>&quot;a*a*b*c&quot;</code> has degree 4.) We write the largest degree terms of our answer first, breaking ties by lexicographic order ignoring the leading coefficient of the term.</li>\n\t<li>The leading coefficient of the term is placed directly to the left with an asterisk separating it from the variables (if they exist.)&nbsp; A leading coefficient of 1 is still printed.</li>\n\t<li>An example of a well formatted answer is <code>[&quot;-2*a*a*a&quot;, &quot;3*a*a*b&quot;, &quot;3*b*b&quot;, &quot;4*a&quot;, &quot;5*c&quot;, &quot;-6&quot;]</code>&nbsp;</li>\n\t<li>Terms (including constant terms) with coefficient 0 are not included.&nbsp; For example, an expression of &quot;0&quot; has an output of [].</li>\n</ul>\n\n<p><strong>Examples:</strong></p>\n\n<pre>\n<strong>Input:</strong> expression = &quot;e + 8 - a + 5&quot;, evalvars = [&quot;e&quot;], evalints = [1]\n<strong>Output:</strong> [&quot;-1*a&quot;,&quot;14&quot;]\n\n<strong>Input:</strong> expression = &quot;e - 8 + temperature - pressure&quot;,\nevalvars = [&quot;e&quot;, &quot;temperature&quot;], evalints = [1, 12]\n<strong>Output:</strong> [&quot;-1*pressure&quot;,&quot;5&quot;]\n\n<strong>Input:</strong> expression = &quot;(e + 8) * (e - 8)&quot;, evalvars = [], evalints = []\n<strong>Output:</strong> [&quot;1*e*e&quot;,&quot;-64&quot;]\n\n<strong>Input:</strong> expression = &quot;7 - 7&quot;, evalvars = [], evalints = []\n<strong>Output:</strong> []\n\n<strong>Input:</strong> expression = &quot;a * b * c + b * a * c * 4&quot;, evalvars = [], evalints = []\n<strong>Output:</strong> [&quot;5*a*b*c&quot;]\n\n<strong>Input:</strong> expression = &quot;((a - b) * (b - c) + (c - a)) * ((a - b) + (b - c) * (c - a))&quot;,\nevalvars = [], evalints = []\n<strong>Output:</strong> [&quot;-1*a*a*b*b&quot;,&quot;2*a*a*b*c&quot;,&quot;-1*a*a*c*c&quot;,&quot;1*a*b*b*b&quot;,&quot;-1*a*b*b*c&quot;,&quot;-1*a*b*c*c&quot;,&quot;1*a*c*c*c&quot;,&quot;-1*b*b*b*c&quot;,&quot;2*b*b*c*c&quot;,&quot;-1*b*c*c*c&quot;,&quot;2*a*a*b&quot;,&quot;-2*a*a*c&quot;,&quot;-2*a*b*b&quot;,&quot;2*a*c*c&quot;,&quot;1*b*b*b&quot;,&quot;-1*b*b*c&quot;,&quot;1*b*c*c&quot;,&quot;-1*c*c*c&quot;,&quot;-1*a*a&quot;,&quot;1*a*b&quot;,&quot;1*a*c&quot;,&quot;-1*b*c&quot;]\n</pre>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>expression</code> will have length in range <code>[1, 250]</code>.</li>\n\t<li><code>evalvars, evalints</code> will have equal lengths in range <code>[0, 100]</code>.</li>\n</ol>\n"
    },
    {
        "id": "707",
        "title": "Design Linked List",
        "slug": "design-linked-list",
        "difficulty": "Easy",
        "likes": 357,
        "dislikes": 480,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Linked List",
            "Design"
        ],
        "content": "<p>Design your&nbsp;implementation of the linked list. You can choose to use the singly linked list or the doubly linked list. A node in a singly&nbsp;linked list should have two attributes: <code>val</code>&nbsp;and <code>next</code>. <code>val</code> is the value of the current node, and <code>next</code>&nbsp;is&nbsp;a&nbsp;pointer/reference to the next node. If you want to use the doubly linked list,&nbsp;you will need&nbsp;one more attribute <code>prev</code> to indicate the previous node in the linked list. Assume all nodes in the linked list are 0-indexed.</p>\n\n<p>Implement these functions in your linked list class:</p>\n\n<ul>\n\t<li>get(index) : Get the value of&nbsp;the <code>index</code>-th&nbsp;node in the linked list. If the index is invalid, return <code>-1</code>.</li>\n\t<li>addAtHead(val) : Add a node of value <code>val</code>&nbsp;before the first element of the linked list. After the insertion, the new node will be the first node of the linked list.</li>\n\t<li>addAtTail(val) : Append a node of value <code>val</code>&nbsp;to the last element of the linked list.</li>\n\t<li>addAtIndex(index, val) : Add a node of value <code>val</code>&nbsp;before the <code>index</code>-th&nbsp;node in the linked list.&nbsp;If <code>index</code>&nbsp;equals&nbsp;to the length of&nbsp;linked list, the node will be appended to the end of linked list. If index is greater than the length, the node will not be inserted. If index is negative, the node will be inserted at the head&nbsp;of the list.</li>\n\t<li>deleteAtIndex(index) : Delete&nbsp;the <code>index</code>-th&nbsp;node in the linked list, if the index is valid.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<pre>\nMyLinkedList linkedList = new MyLinkedList();\nlinkedList.addAtHead(1);\nlinkedList.addAtTail(3);\nlinkedList.addAtIndex(1, 2);  // linked list becomes 1-&gt;2-&gt;3\nlinkedList.get(1);            // returns 2\nlinkedList.deleteAtIndex(1);  // now the linked list is 1-&gt;3\nlinkedList.get(1);&nbsp;&nbsp;&nbsp;         // returns 3\n</pre>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>All values will be in the range of <code>[1, 1000]</code>.</li>\n\t<li>The number of operations will be in the range of&nbsp;<code>[1, 1000]</code>.</li>\n\t<li>Please do not use the built-in LinkedList library.</li>\n</ul>\n"
    },
    {
        "id": "336",
        "title": "Palindrome Pairs",
        "slug": "palindrome-pairs",
        "difficulty": "Hard",
        "likes": 893,
        "dislikes": 124,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Longest Palindromic Substring\", \"titleSlug\": \"longest-palindromic-substring\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Shortest Palindrome\", \"titleSlug\": \"shortest-palindrome\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Hash Table",
            "String",
            "Trie"
        ],
        "content": "<p>Given a list of <b>unique</b> words, find all pairs of <b><i>distinct</i></b> indices <code>(i, j)</code> in the given list, so that the concatenation of the two words, i.e. <code>words[i] + words[j]</code> is a palindrome.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<div>\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[&quot;abcd&quot;,&quot;dcba&quot;,&quot;lls&quot;,&quot;s&quot;,&quot;sssll&quot;]</span>\n<strong>Output: </strong><span id=\"example-output-1\">[[0,1],[1,0],[3,2],[2,4]] \n<strong>E</strong></span><strong>xplanation<span>: </span></strong>The palindromes are <code>[&quot;dcbaabcd&quot;,&quot;abcddcba&quot;,&quot;slls&quot;,&quot;llssssll&quot;]</code>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[&quot;bat&quot;,&quot;tab&quot;,&quot;cat&quot;]</span>\n<strong>Output: </strong><span id=\"example-output-2\">[[0,1],[1,0]] \n</span><span id=\"example-output-1\"><strong>E</strong></span><strong>xplanation<span>: </span></strong>The palindromes are <code>[&quot;battab&quot;,&quot;tabbat&quot;]</code>\n</pre>\n</div>\n</div>\n"
    },
    {
        "id": "395",
        "title": "Longest Substring with At Least K Repeating Characters",
        "slug": "longest-substring-with-at-least-k-repeating-characters",
        "difficulty": "Medium",
        "likes": 835,
        "dislikes": 77,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [],
        "content": "<p>\nFind the length of the longest substring <b><i>T</i></b> of a given string (consists of lowercase letters only) such that every character in <b><i>T</i></b> appears no less than <i>k</i> times.\n</p>\n\n<p><b>Example 1:</b>\n<pre>\nInput:\ns = \"aaabb\", k = 3\n\nOutput:\n3\n\nThe longest substring is \"aaa\", as 'a' is repeated 3 times.\n</pre>\n</p>\n\n<p><b>Example 2:</b>\n<pre>\nInput:\ns = \"ababbc\", k = 2\n\nOutput:\n5\n\nThe longest substring is \"ababb\", as 'a' is repeated 2 times and 'b' is repeated 3 times.\n</pre>\n</p>"
    },
    {
        "id": "836",
        "title": "Rectangle Overlap",
        "slug": "rectangle-overlap",
        "difficulty": "Easy",
        "likes": 400,
        "dislikes": 78,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Rectangle Area\", \"titleSlug\": \"rectangle-area\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "468",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math"
        ],
        "content": "<p>A rectangle is&nbsp;represented as a&nbsp;list <code>[x1, y1, x2, y2]</code>, where&nbsp;<code>(x1, y1)</code>&nbsp;are the coordinates of its bottom-left corner, and <code>(x2,&nbsp;y2)</code>&nbsp;are the coordinates of its top-right corner.</p>\n\n<p>Two rectangles overlap if the area of their intersection is positive.&nbsp; To be clear, two rectangles that only touch at the corner or edges do not overlap.</p>\n\n<p>Given two (axis-aligned) rectangles, return whether&nbsp;they overlap.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>rec1 = [0,0,2,2], rec2 = [1,1,3,3]\n<strong>Output: </strong>true\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>rec1 = [0,0,1,1], rec2 = [1,0,2,1]\n<strong>Output: </strong>false\n</pre>\n\n<p><strong>Notes:</strong></p>\n\n<ol>\n\t<li>Both rectangles <code>rec1</code> and <code>rec2</code> are lists of 4 integers.</li>\n\t<li>All coordinates in rectangles will be between&nbsp;<code>-10^9 </code>and<code> 10^9</code>.</li>\n</ol>\n"
    },
    {
        "id": "951",
        "title": "Flip Equivalent Binary Trees",
        "slug": "flip-equivalent-binary-trees",
        "difficulty": "Medium",
        "likes": 298,
        "dislikes": 13,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "630",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree"
        ],
        "content": "<p>For a binary tree T, we can define a flip operation as follows: choose any node, and swap the left and right child subtrees.</p>\n\n<p>A binary tree X&nbsp;is <em>flip equivalent</em> to a binary tree Y if and only if we can make X equal to Y after some number of flip operations.</p>\n\n<p>Write a function that determines whether two binary trees&nbsp;are <em>flip equivalent</em>.&nbsp; The trees are given by root nodes <code>root1</code> and <code>root2</code>.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>root1 = <span id=\"example-input-1-1\">[1,2,3,4,5,6,null,null,null,7,8]</span>, root2 = <span id=\"example-input-1-2\">[1,3,2,null,6,4,5,null,null,null,null,8,7]</span>\n<strong>Output: </strong><span id=\"example-output-1\">true</span>\n<strong>Explanation: </strong>We flipped at nodes with values 1, 3, and 5.\n<img alt=\"Flipped Trees Diagram\" src=\"./img/flip-equivalent-binary-trees_1.png\" style=\"font-family: sans-serif, Arial, Verdana, &quot;Trebuchet MS&quot;; width: 455px; height: 200px;\" />\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li>Each tree will have at most <code>100</code> nodes.</li>\n\t<li>Each value in each tree will be a unique&nbsp;integer in the range <code>[0, 99]</code>.</li>\n</ol>\n\n<div>\n<p>&nbsp;</p>\n</div>\n"
    },
    {
        "id": "405",
        "title": "Convert a Number to Hexadecimal",
        "slug": "convert-a-number-to-hexadecimal",
        "difficulty": "Easy",
        "likes": 303,
        "dislikes": 78,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Bit Manipulation"
        ],
        "content": "<p>\nGiven an integer, write an algorithm to convert it to hexadecimal. For negative integer, <a href=\"https://en.wikipedia.org/wiki/Two%27s_complement\" target=\"_blank\">two\u2019s complement</a> method is used.\n</p>\n\n<p><b>Note:</b>\n<ol>\n<li>All letters in hexadecimal (<code>a-f</code>) must be in lowercase.</li>\n<li>The hexadecimal string must not contain extra leading <code>0</code>s. If the number is zero, it is represented by a single zero character <code>'0'</code>; otherwise, the first character in the hexadecimal string will not be the zero character.</li>\n<li>The given number is guaranteed to fit within the range of a 32-bit signed integer.</li>\n<li>You <b>must not use <i>any</i> method provided by the library</b> which converts/formats the number to hex directly.</li>\n</ol>\n</p>\n\n<p><b>Example 1:</b>\n<pre>\nInput:\n26\n\nOutput:\n\"1a\"\n</pre>\n</p>\n\n<p><b>Example 2:</b>\n<pre>\nInput:\n-1\n\nOutput:\n\"ffffffff\"\n</pre>\n</p>"
    },
    {
        "id": "193",
        "title": "Valid Phone Numbers",
        "slug": "valid-phone-numbers",
        "difficulty": "Easy",
        "likes": 106,
        "dislikes": 271,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [],
        "content": "<p>Given a text file <code>file.txt</code> that contains list of phone numbers (one per line), write a one liner bash script to print all valid phone numbers.</p>\n\n<p>You may assume that a valid phone number must appear in one of the following two formats: (xxx) xxx-xxxx or xxx-xxx-xxxx. (x means a digit)</p>\n\n<p>You may also assume each line in the text file must not contain leading or trailing white spaces.</p>\n\n<p><strong>Example:</strong></p>\n\n<p>Assume that <code>file.txt</code> has the following content:</p>\n\n<pre>\n987-123-4567\n123 456 7890\n(123) 456-7890\n</pre>\n\n<p>Your script should output the following valid phone numbers:</p>\n\n<pre>\n987-123-4567\n(123) 456-7890\n</pre>\n"
    },
    {
        "id": "739",
        "title": "Daily Temperatures",
        "slug": "daily-temperatures",
        "difficulty": "Medium",
        "likes": 1558,
        "dislikes": 46,
        "hints": [
            "If the temperature is say, 70 today, then in the future a warmer temperature must be either 71, 72, 73, ..., 99, or 100.  We could remember when all of them occur next."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Next Greater Element I\", \"titleSlug\": \"next-greater-element-i\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "312",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Hash Table",
            "Stack"
        ],
        "content": "<p>\nGiven a list of daily temperatures <code>T</code>, return a list such that, for each day in the input, tells you how many days you would have to wait until a warmer temperature.  If there is no future day for which this is possible, put <code>0</code> instead.\n</p><p>\nFor example, given the list of temperatures <code>T = [73, 74, 75, 71, 69, 72, 76, 73]</code>, your output should be <code>[1, 1, 4, 2, 1, 1, 0, 0]</code>.\n</p>\n\n<p><b>Note:</b>\nThe length of <code>temperatures</code> will be in the range <code>[1, 30000]</code>.\nEach temperature will be an integer in the range <code>[30, 100]</code>.\n</p>"
    },
    {
        "id": "904",
        "title": "Fruit Into Baskets",
        "slug": "fruit-into-baskets",
        "difficulty": "Medium",
        "likes": 522,
        "dislikes": 810,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "558",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Two Pointers"
        ],
        "content": "<p>In a row of trees, the <code>i</code>-th tree&nbsp;produces&nbsp;fruit with type&nbsp;<code>tree[i]</code>.</p>\n\n<p>You <strong>start at any tree&nbsp;of your choice</strong>, then repeatedly perform the following steps:</p>\n\n<ol>\n\t<li>Add one piece of fruit from this tree to your baskets.&nbsp; If you cannot, stop.</li>\n\t<li>Move to the next tree to the right of the current tree.&nbsp; If there is no tree to the right, stop.</li>\n</ol>\n\n<p>Note that you do not have any choice after the initial choice of starting tree:&nbsp;you must perform step 1, then step 2, then back to step 1, then step 2, and so on until you stop.</p>\n\n<p>You have two baskets, and each basket can carry any quantity of fruit, but you want each basket to only carry one type of fruit each.</p>\n\n<p>What is the total amount of fruit you can collect with this procedure?</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[1,2,1]</span>\n<strong>Output: </strong><span id=\"example-output-1\">3</span>\n<strong><span>Explanation: </span></strong><span>We can collect [1,2,1].</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[0,1,2,2]</span>\n<strong>Output: </strong><span id=\"example-output-2\">3\n</span><strong><span>Explanation: </span></strong><span>We can collect [1,2,2].\nIf we started at the first tree, we would only collect [0, 1].</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">[1,2,3,2,2]</span>\n<strong>Output: </strong><span id=\"example-output-3\">4\n</span><strong><span>Explanation: </span></strong><span>We can collect [2,3,2,2].</span>\n<span>If we started at the first tree, we would only collect [1, 2].</span>\n</pre>\n\n<div>\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-4-1\">[3,3,3,1,2,1,1,2,3,3,4]</span>\n<strong>Output: </strong>5<span id=\"example-output-4\">\n</span><strong><span>Explanation: </span></strong><span>We can collect [1,2,1,1,2].</span>\n<span>If we started at the first tree or the eighth tree, we would only collect 4 fruits.</span>\n</pre>\n\n<p>&nbsp;</p>\n</div>\n</div>\n</div>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= tree.length &lt;= 40000</code></li>\n\t<li><code>0 &lt;= tree[i] &lt; tree.length</code></li>\n</ol>\n"
    },
    {
        "id": "669",
        "title": "Trim a Binary Search Tree",
        "slug": "trim-a-binary-search-tree",
        "difficulty": "Easy",
        "likes": 1252,
        "dislikes": 137,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "242",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree"
        ],
        "content": "<p>\nGiven a binary search tree and the lowest and highest boundaries as <code>L</code> and <code>R</code>, trim the tree so that all its elements lies in <code>[L, R]</code> (R >= L). You might need to change the root of the tree, so the result should return the new root of the trimmed binary search tree.\n</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> \n    1\n   / \\\n  0   2\n\n  L = 1\n  R = 2\n\n<b>Output:</b> \n    1\n      \\\n       2\n</pre>\n</p>\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b> \n    3\n   / \\\n  0   4\n   \\\n    2\n   /\n  1\n\n  L = 1\n  R = 3\n\n<b>Output:</b> \n      3\n     / \n   2   \n  /\n 1\n</pre>\n</p>"
    },
    {
        "id": "32",
        "title": "Longest Valid Parentheses",
        "slug": "longest-valid-parentheses",
        "difficulty": "Hard",
        "likes": 2225,
        "dislikes": 100,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Valid Parentheses\", \"titleSlug\": \"valid-parentheses\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "74",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String",
            "Dynamic Programming"
        ],
        "content": "<p>Given a string containing just the characters <code>&#39;(&#39;</code> and <code>&#39;)&#39;</code>, find the length of the longest valid (well-formed) parentheses substring.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> &quot;(()&quot;\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The longest valid parentheses substring is <code>&quot;()&quot;</code>\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> &quot;<code>)()())</code>&quot;\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> The longest valid parentheses substring is <code>&quot;()()&quot;</code>\n</pre>\n"
    },
    {
        "id": "732",
        "title": "My Calendar III",
        "slug": "my-calendar-iii",
        "difficulty": "Hard",
        "likes": 255,
        "dislikes": 89,
        "hints": [
            "Treat each interval [start, end) as two events \"start\" and \"end\", and process them in sorted order."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"My Calendar I\", \"titleSlug\": \"my-calendar-i\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"My Calendar II\", \"titleSlug\": \"my-calendar-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "304",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Segment Tree",
            "Ordered Map"
        ],
        "content": "<p>Implement a <code>MyCalendarThree</code> class to store your events. A new event can <b>always</b> be added.</p>\n\n<p>Your class will have one method, <code>book(int start, int end)</code>. Formally, this represents a booking on the half open interval <code>[start, end)</code>, the range of real numbers <code>x</code> such that <code>start &lt;= x &lt; end</code>.</p>\n\n<p>A <i>K-booking</i> happens when <b>K</b> events have some non-empty intersection (ie., there is some time that is common to all K events.)</p>\n\n<p>For each call to the method <code>MyCalendar.book</code>, return an integer <code>K</code> representing the largest integer such that there exists a <code>K</code>-booking in the calendar.</p>\nYour class will be called like this: <code>MyCalendarThree cal = new MyCalendarThree();</code> <code>MyCalendarThree.book(start, end)</code>\n\n<p><b>Example 1:</b></p>\n\n<pre>\nMyCalendarThree();\nMyCalendarThree.book(10, 20); // returns 1\nMyCalendarThree.book(50, 60); // returns 1\nMyCalendarThree.book(10, 40); // returns 2\nMyCalendarThree.book(5, 15); // returns 3\nMyCalendarThree.book(5, 10); // returns 3\nMyCalendarThree.book(25, 55); // returns 3\n<b>Explanation:</b> \nThe first two events can be booked and are disjoint, so the maximum K-booking is a 1-booking.\nThe third event [10, 40) intersects the first event, and the maximum K-booking is a 2-booking.\nThe remaining events cause the maximum K-booking to be only a 3-booking.\nNote that the last event locally causes a 2-booking, but the answer is still 3 because\neg. [10, 20), [10, 40), and [5, 15) are still triple booked.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b></p>\n\n<ul>\n\t<li>The number of calls to <code>MyCalendarThree.book</code> per test case will be at most <code>400</code>.</li>\n\t<li>In calls to <code>MyCalendarThree.book(start, end)</code>, <code>start</code> and <code>end</code> are integers in the range <code>[0, 10^9]</code>.</li>\n</ul>\n\n<p>&nbsp;</p>"
    },
    {
        "id": "57",
        "title": "Insert Interval",
        "slug": "insert-interval",
        "difficulty": "Hard",
        "likes": 981,
        "dislikes": 127,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Merge Intervals\", \"titleSlug\": \"merge-intervals\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Range Module\", \"titleSlug\": \"range-module\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "728",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Sort"
        ],
        "content": "<p>Given a set of <em>non-overlapping</em> intervals, insert a new interval into the intervals (merge if necessary).</p>\n\n<p>You may assume that the intervals were initially sorted according to their start times.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> intervals = [[1,3],[6,9]], newInterval = [2,5]\n<strong>Output:</strong> [[1,5],[6,9]]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> intervals = <code>[[1,2],[3,5],[6,7],[8,10],[12,16]]</code>, newInterval = <code>[4,8]</code>\n<strong>Output:</strong> [[1,2],[3,10],[12,16]]\n<strong>Explanation:</strong> Because the new interval <code>[4,8]</code> overlaps with <code>[3,5],[6,7],[8,10]</code>.</pre>\n\n<p><strong>NOTE:</strong>&nbsp;input types have been changed on April 15, 2019. Please reset to default code definition to get new method signature.</p>\n"
    },
    {
        "id": "90",
        "title": "Subsets II",
        "slug": "subsets-ii",
        "difficulty": "Medium",
        "likes": 1055,
        "dislikes": 51,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Subsets\", \"titleSlug\": \"subsets\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Array",
            "Backtracking"
        ],
        "content": "<p>Given a collection of integers that might contain duplicates, <strong><em>nums</em></strong>, return all possible subsets (the power set).</p>\n\n<p><strong>Note:</strong> The solution set must not contain duplicate subsets.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input:</strong> [1,2,2]\n<strong>Output:</strong>\n[\n  [2],\n  [1],\n  [1,2,2],\n  [2,2],\n  [1,2],\n  []\n]\n</pre>\n"
    },
    {
        "id": "766",
        "title": "Toeplitz Matrix",
        "slug": "toeplitz-matrix",
        "difficulty": "Easy",
        "likes": 686,
        "dislikes": 68,
        "hints": [
            "Check whether each value is equal to the value of it's top-left neighbor."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Valid Word Square\", \"titleSlug\": \"valid-word-square\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "384",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array"
        ],
        "content": "<p>A matrix is <em>Toeplitz</em> if every diagonal from top-left to bottom-right has the same element.</p>\n\n<p>Now given an <code>M x N</code> matrix, return&nbsp;<code>True</code>&nbsp;if and only if the matrix is <em>Toeplitz</em>.<br />\n&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:\n</strong>matrix = [\n&nbsp; [1,2,3,4],\n&nbsp; [5,1,2,3],\n&nbsp; [9,5,1,2]\n]\n<strong>Output:</strong> True\n<strong>Explanation:</strong>\nIn the above grid, the&nbsp;diagonals are:\n&quot;[9]&quot;, &quot;[5, 5]&quot;, &quot;[1, 1, 1]&quot;, &quot;[2, 2, 2]&quot;, &quot;[3, 3]&quot;, &quot;[4]&quot;.\nIn each diagonal all elements are the same, so the answer is True.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:\n</strong>matrix = [\n&nbsp; [1,2],\n&nbsp; [2,2]\n]\n<strong>Output:</strong> False\n<strong>Explanation:</strong>\nThe diagonal &quot;[1, 2]&quot; has different elements.\n</pre>\n\n<p><br />\n<strong>Note:</strong></p>\n\n<ol>\n\t<li><code>matrix</code> will be a 2D array of integers.</li>\n\t<li><code>matrix</code> will have a number of rows and columns in range <code>[1, 20]</code>.</li>\n\t<li><code>matrix[i][j]</code> will be integers in range <code>[0, 99]</code>.</li>\n</ol>\n\n<p><br />\n<strong>Follow up:</strong></p>\n\n<ol>\n\t<li>What if the matrix is stored on disk, and the memory is limited such that you can only load at most one row of the matrix into the memory at once?</li>\n\t<li>What if the matrix is so large that you can only load up a partial row into the memory at once?</li>\n</ol>\n"
    },
    {
        "id": "1078",
        "title": "Occurrences After Bigram",
        "slug": "occurrences-after-bigram",
        "difficulty": "Easy",
        "likes": 54,
        "dislikes": 79,
        "hints": [
            "Split the string into words, then look at adjacent triples of words."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Hash Table"
        ],
        "content": "<p>Given words <code>first</code> and <code>second</code>, consider occurrences in some&nbsp;<code>text</code> of the form &quot;<code>first second third</code>&quot;, where <code>second</code> comes immediately after <code>first</code>, and <code>third</code> comes immediately after <code>second</code>.</p>\n\n<p>For each such occurrence, add &quot;<code>third</code>&quot; to the answer, and return the answer.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>text = <span id=\"example-input-1-1\">&quot;alice is a good girl she is a good student&quot;</span>, first = <span id=\"example-input-1-2\">&quot;a&quot;</span>, second = <span id=\"example-input-1-3\">&quot;good&quot;</span>\n<strong>Output: </strong><span id=\"example-output-1\">[&quot;girl&quot;,&quot;student&quot;]</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>text = <span id=\"example-input-2-1\">&quot;we will we will rock you&quot;</span>, first = <span id=\"example-input-2-2\">&quot;we&quot;</span>, second = <span id=\"example-input-2-3\">&quot;will&quot;</span>\n<strong>Output: </strong><span id=\"example-output-2\">[&quot;we&quot;,&quot;rock&quot;]</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= text.length &lt;= 1000</code></li>\n\t<li><code>text</code> consists of space separated words, where each word consists of lowercase English letters.</li>\n\t<li><code>1 &lt;= first.length, second.length &lt;= 10</code></li>\n\t<li><code>first</code> and <code>second</code> consist of lowercase English letters.</li>\n</ol>\n</div>\n"
    },
    {
        "id": "700",
        "title": "Search in a Binary Search Tree",
        "slug": "search-in-a-binary-search-tree",
        "difficulty": "Easy",
        "likes": 381,
        "dislikes": 96,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Closest Binary Search Tree Value\", \"titleSlug\": \"closest-binary-search-tree-value\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Insert into a Binary Search Tree\", \"titleSlug\": \"insert-into-a-binary-search-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Tree"
        ],
        "content": "<p>Given the root node of a binary search tree (BST) and a value. You need to find the node in the BST that the node&#39;s value equals the given value. Return the subtree rooted with that node. If such node doesn&#39;t exist, you should return NULL.</p>\n\n<p>For example,&nbsp;</p>\n\n<pre>\nGiven the tree:\n        4\n       / \\\n      2   7\n     / \\\n    1   3\n\nAnd the value to search: 2\n</pre>\n\n<p>You should return this subtree:</p>\n\n<pre>\n      2     \n     / \\   \n    1   3\n</pre>\n\n<p>In the example above, if we want to search the value <code>5</code>, since there is no node with value <code>5</code>, we should return <code>NULL</code>.</p>\n\n<p>Note that an empty tree is represented by <code>NULL</code>, therefore you would see the expected output (serialized tree format) as&nbsp;<code>[]</code>, not <code>null</code>.</p>\n"
    },
    {
        "id": "430",
        "title": "Flatten a Multilevel Doubly Linked List",
        "slug": "flatten-a-multilevel-doubly-linked-list",
        "difficulty": "Medium",
        "likes": 457,
        "dislikes": 74,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Flatten Binary Tree to Linked List\", \"titleSlug\": \"flatten-binary-tree-to-linked-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Linked List",
            "Depth-first Search"
        ],
        "content": "<p>You are given a doubly linked list which in addition to the next and previous pointers, it could have a child pointer, which may or may not point to a separate doubly linked list. These child lists may have one or more children of their own, and so on, to produce a multilevel data structure, as shown in the example below.</p>\n\n<p>Flatten the list so that all the nodes appear in a single-level, doubly linked list. You are given the head of the first level of the list.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input:</strong>\n 1---2---3---4---5---6--NULL\n         |\n         7---8---9---10--NULL\n             |\n             11--12--NULL\n\n<strong>Output:</strong>\n1-2-3-7-8-11-12-9-10-4-5-6-NULL\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Explanation for the above example:</strong></p>\n\n<p>Given the following multilevel doubly linked list:</p>\n\n<pre>\n<img src=\"./img/flatten-a-multilevel-doubly-linked-list_1.png\" style=\"width: 640px;\" /></pre>\n\n<p>&nbsp;</p>\n\n<p>We should return the following flattened doubly linked list:</p>\n\n<pre>\n<img src=\"./img/flatten-a-multilevel-doubly-linked-list_2.png\" style=\"width: 1100px;\" /></pre>\n"
    },
    {
        "id": "443",
        "title": "String Compression",
        "slug": "string-compression",
        "difficulty": "Easy",
        "likes": 429,
        "dislikes": 1373,
        "hints": [
            "How do you know if you are at the end of a consecutive group of characters?"
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Count and Say\", \"titleSlug\": \"count-and-say\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Encode and Decode Strings\", \"titleSlug\": \"encode-and-decode-strings\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Design Compressed String Iterator\", \"titleSlug\": \"design-compressed-string-iterator\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "272",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String"
        ],
        "content": "<p>Given an array of characters, compress it <a href=\"https://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\"><b>in-place</b></a>.</p>\n\n<p>The length after compression must always be smaller than or equal to the original array.</p>\n\n<p>Every element of the array should be a <b>character</b> (not int) of length 1.</p>\n\n<p>After you are done <b>modifying the input array <a href=\"https://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\">in-place</a></b>, return the new length of the array.</p>\n&nbsp;\n\n<p><b>Follow up:</b><br />\nCould you solve it using only O(1) extra space?</p>\n&nbsp;\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b>\n[&quot;a&quot;,&quot;a&quot;,&quot;b&quot;,&quot;b&quot;,&quot;c&quot;,&quot;c&quot;,&quot;c&quot;]\n\n<b>Output:</b>\nReturn 6, and the first 6 characters of the input array should be: [&quot;a&quot;,&quot;2&quot;,&quot;b&quot;,&quot;2&quot;,&quot;c&quot;,&quot;3&quot;]\n\n<b>Explanation:</b>\n&quot;aa&quot; is replaced by &quot;a2&quot;. &quot;bb&quot; is replaced by &quot;b2&quot;. &quot;ccc&quot; is replaced by &quot;c3&quot;.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input:</b>\n[&quot;a&quot;]\n\n<b>Output:</b>\nReturn 1, and the first 1 characters of the input array should be: [&quot;a&quot;]\n\n<b>Explanation:</b>\nNothing is replaced.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Example 3:</b></p>\n\n<pre>\n<b>Input:</b>\n[&quot;a&quot;,&quot;b&quot;,&quot;b&quot;,&quot;b&quot;,&quot;b&quot;,&quot;b&quot;,&quot;b&quot;,&quot;b&quot;,&quot;b&quot;,&quot;b&quot;,&quot;b&quot;,&quot;b&quot;,&quot;b&quot;]\n\n<b>Output:</b>\nReturn 4, and the first 4 characters of the input array should be: [&quot;a&quot;,&quot;b&quot;,&quot;1&quot;,&quot;2&quot;].\n\n<b>Explanation:</b>\nSince the character &quot;a&quot; does not repeat, it is not compressed. &quot;bbbbbbbbbbbb&quot; is replaced by &quot;b12&quot;.\nNotice each digit has it&#39;s own entry in the array.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b></p>\n\n<ol>\n\t<li>All characters have an ASCII value in <code>[35, 126]</code>.</li>\n\t<li><code>1 &lt;= len(chars) &lt;= 1000</code>.</li>\n</ol>\n"
    },
    {
        "id": "480",
        "title": "Sliding Window Median",
        "slug": "sliding-window-median",
        "difficulty": "Hard",
        "likes": 493,
        "dislikes": 52,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Find Median from Data Stream\", \"titleSlug\": \"find-median-from-data-stream\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "86",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Sliding Window"
        ],
        "content": "<p>Median is the middle value in an ordered integer list. If the size of the list is even, there is no middle value. So the median is the mean of the two middle value.</p>\nExamples: <br />\n<p><code>[2,3,4]</code> , the median is <code>3</code></p>\n<p><code>[2,3]</code>, the median is <code>(2 + 3) / 2 = 2.5</code> </p>\n\n<p>Given an array <i>nums</i>, there is a sliding window of size <i>k</i> which is moving from the very left of the array to the very right. You can only see the <i>k</i> numbers in the window. Each time the sliding window moves right by one position. Your job is to output the median array for each window in the original array.</p>\n\n<p>For example,<br>\nGiven <i>nums</i> = <code>[1,3,-1,-3,5,3,6,7]</code>, and <i>k</i> = 3.</p>\n\n<pre>\nWindow position                Median\n---------------               -----\n[1  3  -1] -3  5  3  6  7       1\n 1 [3  -1  -3] 5  3  6  7       -1\n 1  3 [-1  -3  5] 3  6  7       -1\n 1  3  -1 [-3  5  3] 6  7       3\n 1  3  -1  -3 [5  3  6] 7       5\n 1  3  -1  -3  5 [3  6  7]      6\n</pre>\n\n<p>Therefore, return the median sliding window as <code>[1,-1,-1,3,5,6]</code>.</p>\n\n<p><b>Note: </b><br>\nYou may assume <code>k</code> is always valid, ie: <code>k</code> is always smaller than input array's size for non-empty array.</p>"
    },
    {
        "id": "229",
        "title": "Majority Element II",
        "slug": "majority-element-ii",
        "difficulty": "Medium",
        "likes": 1005,
        "dislikes": 119,
        "hints": [
            "How many majority elements could it possibly have?\r\n<br/>\r\nDo you have a better hint? <a href=\"mailto:admin@leetcode.com?subject=Hints for Majority Element II\" target=\"_blank\">Suggest it</a>!"
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Majority Element\", \"titleSlug\": \"majority-element\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Check If a Number Is Majority Element in a Sorted Array\", \"titleSlug\": \"check-if-a-number-is-majority-element-in-a-sorted-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Array"
        ],
        "content": "<p>Given an integer array of size <i>n</i>, find all elements that appear more than <code>&lfloor; n/3 &rfloor;</code> times.</p>\n\n<p><strong>Note: </strong>The algorithm should run in linear time and in O(1) space.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> [3,2,3]\n<strong>Output:</strong> [3]</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> [1,1,1,3,3,2,2,2]\n<strong>Output:</strong> [1,2]</pre>\n"
    },
    {
        "id": "754",
        "title": "Reach a Number",
        "slug": "reach-a-number",
        "difficulty": "Easy",
        "likes": 326,
        "dislikes": 270,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "364",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math"
        ],
        "content": "<p>\nYou are standing at position <code>0</code> on an infinite number line.  There is a goal at position <code>target</code>.\n</p><p>\nOn each move, you can either go left or right.  During the <i>n</i>-th move (starting from 1), you take <i>n</i> steps.\n</p><p>\nReturn the minimum number of steps required to reach the destination.\n</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> target = 3\n<b>Output:</b> 2\n<b>Explanation:</b>\nOn the first move we step from 0 to 1.\nOn the second step we step from 1 to 3.\n</pre>\n</p>\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b> target = 2\n<b>Output:</b> 3\n<b>Explanation:</b>\nOn the first move we step from 0 to 1.\nOn the second move we step  from 1 to -1.\nOn the third move we step from -1 to 2.\n</pre>\n</p>\n\n<p><b>Note:</b><br>\n<li><code>target</code> will be a non-zero integer in the range <code>[-10^9, 10^9]</code>.</li>\n</p>"
    },
    {
        "id": "81",
        "title": "Search in Rotated Sorted Array II",
        "slug": "search-in-rotated-sorted-array-ii",
        "difficulty": "Medium",
        "likes": 783,
        "dislikes": 349,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Search in Rotated Sorted Array\", \"titleSlug\": \"search-in-rotated-sorted-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Array",
            "Binary Search"
        ],
        "content": "<p>Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.</p>\n\n<p>(i.e., <code>[0,0,1,2,2,5,6]</code> might become <code>[2,5,6,0,0,1,2]</code>).</p>\n\n<p>You are given a target value to search. If found in the array return <code>true</code>, otherwise return <code>false</code>.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2<code>,5,6,0,0,1,2]</code>, target = 0\n<strong>Output:</strong> true\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [2<code>,5,6,0,0,1,2]</code>, target = 3\n<strong>Output:</strong> false</pre>\n\n<p><strong>Follow up:</strong></p>\n\n<ul>\n\t<li>This is a follow up problem to&nbsp;<a href=\"/problems/search-in-rotated-sorted-array/description/\">Search in Rotated Sorted Array</a>, where <code>nums</code> may contain duplicates.</li>\n\t<li>Would this affect the run-time complexity? How and why?</li>\n</ul>\n"
    },
    {
        "id": "542",
        "title": "01 Matrix",
        "slug": "01-matrix",
        "difficulty": "Medium",
        "likes": 805,
        "dislikes": 82,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "113",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Depth-first Search",
            "Breadth-first Search"
        ],
        "content": "<p>Given a matrix consists of 0 and 1, find the distance of the nearest 0 for each cell.</p>\n\n<p>The distance between two adjacent cells is 1.</p>\n\n<p>&nbsp;</p>\n\n<p><b>Example 1: </b></p>\n\n<pre>\n<strong>Input:</strong>\n[[0,0,0],\n [0,1,0],\n [0,0,0]]\n\n<strong>Output:</strong>\n[[0,0,0],\n&nbsp;[0,1,0],\n&nbsp;[0,0,0]]\n</pre>\n\n<p><b>Example 2: </b></p>\n\n<pre>\n<b>Input:</b>\n[[0,0,0],\n [0,1,0],\n [1,1,1]]\n\n<strong>Output:</strong>\n[[0,0,0],\n [0,1,0],\n [1,2,1]]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b></p>\n\n<ol>\n\t<li>The number of elements of the given matrix will not exceed 10,000.</li>\n\t<li>There are at least one 0 in the given matrix.</li>\n\t<li>The cells are adjacent in only four directions: up, down, left and right.</li>\n</ol>\n"
    },
    {
        "id": "564",
        "title": "Find the Closest Palindrome",
        "slug": "find-the-closest-palindrome",
        "difficulty": "Hard",
        "likes": 166,
        "dislikes": 650,
        "hints": [
            "Will brute force work for this problem? Think of something else.",
            "Take some examples like 1234, 999,1000, etc and check their closest palindromes. How many different cases are possible?",
            "Do we have to consider only left half or right half of the string or both?",
            "Try to find the closest palindrome of these numbers- 12932, 99800, 12120. Did you observe something?"
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "116",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String"
        ],
        "content": "<p>Given an integer n, find the closest integer (not including itself), which is a palindrome. </p>\n\n<p>The 'closest' is defined as absolute difference minimized between two integers.</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> \"123\"\n<b>Output:</b> \"121\"\n</pre>\n</p>\n\n<p><b>Note:</b><br>\n<ol>\n<li>The input <b>n</b> is a positive integer represented by string, whose length will not exceed 18.</li>\n<li>If there is a tie, return the smaller one as answer.</li>\n</ol>\n</p>"
    },
    {
        "id": "35",
        "title": "Search Insert Position",
        "slug": "search-insert-position",
        "difficulty": "Easy",
        "likes": 1519,
        "dislikes": 200,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"First Bad Version\", \"titleSlug\": \"first-bad-version\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Array",
            "Binary Search"
        ],
        "content": "<p>Given a sorted array and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.</p>\n\n<p>You may assume no duplicates in the array.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> [1,3,5,6], 5\n<strong>Output:</strong> 2\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> [1,3,5,6], 2\n<strong>Output:</strong> 1\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> [1,3,5,6], 7\n<strong>Output:</strong> 4\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> [1,3,5,6], 0\n<strong>Output:</strong> 0\n</pre>\n"
    },
    {
        "id": "735",
        "title": "Asteroid Collision",
        "slug": "asteroid-collision",
        "difficulty": "Medium",
        "likes": 518,
        "dislikes": 66,
        "hints": [
            "Say a row of asteroids is stable.  What happens when a new asteroid is added on the right?"
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Can Place Flowers\", \"titleSlug\": \"can-place-flowers\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "309",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Stack"
        ],
        "content": "<p>\nWe are given an array <code>asteroids</code> of integers representing asteroids in a row.\n</p><p>\nFor each asteroid, the absolute value represents its size, and the sign represents its direction (positive meaning right, negative meaning left).  Each asteroid moves at the same speed.\n</p><p>\nFind out the state of the asteroids after all collisions.  If two asteroids meet, the smaller one will explode.  If both are the same size, both will explode.  Two asteroids moving in the same direction will never meet.\n</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> \nasteroids = [5, 10, -5]\n<b>Output:</b> [5, 10]\n<b>Explanation:</b> \nThe 10 and -5 collide resulting in 10.  The 5 and 10 never collide.\n</pre>\n</p>\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b> \nasteroids = [8, -8]\n<b>Output:</b> []\n<b>Explanation:</b> \nThe 8 and -8 collide exploding each other.\n</pre>\n</p>\n\n<p><b>Example 3:</b><br />\n<pre>\n<b>Input:</b> \nasteroids = [10, 2, -5]\n<b>Output:</b> [10]\n<b>Explanation:</b> \nThe 2 and -5 collide resulting in -5.  The 10 and -5 collide resulting in 10.\n</pre>\n</p>\n\n<p><b>Example 4:</b><br />\n<pre>\n<b>Input:</b> \nasteroids = [-2, -1, 1, 2]\n<b>Output:</b> [-2, -1, 1, 2]\n<b>Explanation:</b> \nThe -2 and -1 are moving left, while the 1 and 2 are moving right.\nAsteroids moving the same direction never meet, so no asteroids will meet each other.\n</pre>\n</p>\n\n<p><b>Note:</b>\n<li>The length of <code>asteroids</code> will be at most <code>10000</code>.</li>\n<li>Each asteroid will be a non-zero integer in the range <code>[-1000, 1000].</code>.</li>\n</p>"
    },
    {
        "id": "940",
        "title": "Distinct Subsequences II",
        "slug": "distinct-subsequences-ii",
        "difficulty": "Hard",
        "likes": 222,
        "dislikes": 10,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "613",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>Given a string <code>S</code>, count the number of distinct, non-empty subsequences of <code>S</code> .</p>\n\n<p>Since the result may be large, <strong>return the answer modulo <code>10^9 + 7</code></strong>.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">&quot;abc&quot;</span>\n<strong>Output: </strong><span id=\"example-output-1\">7</span>\n<span><strong>Explanation</strong>: The 7 distinct subsequences are &quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;ab&quot;, &quot;ac&quot;, &quot;bc&quot;, and &quot;abc&quot;.</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">&quot;aba&quot;</span>\n<strong>Output: </strong><span id=\"example-output-2\">6\n</span><strong>Explanation</strong>: The 6 distinct subsequences are &quot;a&quot;, &quot;b&quot;, &quot;ab&quot;, &quot;ba&quot;, &quot;aa&quot; and &quot;aba&quot;.\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">&quot;aaa&quot;</span>\n<strong>Output: </strong><span id=\"example-output-3\">3\n</span><strong>Explanation</strong>: The 3 distinct subsequences are &quot;a&quot;, &quot;aa&quot; and &quot;aaa&quot;.\n</pre>\n</div>\n</div>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>S</code> contains only lowercase letters.</li>\n\t<li><code>1 &lt;= S.length &lt;= 2000</code></li>\n</ol>\n\n<div>\n<p>&nbsp;</p>\n\n<div>\n<div>&nbsp;</div>\n</div>\n</div>"
    },
    {
        "id": "321",
        "title": "Create Maximum Number",
        "slug": "create-maximum-number",
        "difficulty": "Hard",
        "likes": 449,
        "dislikes": 165,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Remove K Digits\", \"titleSlug\": \"remove-k-digits\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Swap\", \"titleSlug\": \"maximum-swap\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Dynamic Programming",
            "Greedy"
        ],
        "content": "<p>Given two arrays of length <code>m</code> and <code>n</code> with digits <code>0-9</code> representing two numbers. Create the maximum number of length <code>k &lt;= m + n</code> from digits of the two. The relative order of the digits from the same array must be preserved. Return an array of the <code>k</code> digits.</p>\n\n<p><strong>Note: </strong>You should try to optimize your time and space complexity.</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<strong>Input:</strong>\nnums1 = <code>[3, 4, 6, 5]</code>\nnums2 = <code>[9, 1, 2, 5, 8, 3]</code>\nk = <code>5</code>\n<strong>Output:</strong>\n<code>[9, 8, 6, 5, 3]</code></pre>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<strong>Input:</strong>\nnums1 = <code>[6, 7]</code>\nnums2 = <code>[6, 0, 4]</code>\nk = <code>5</code>\n<strong>Output:</strong>\n<code>[6, 7, 6, 0, 4]</code></pre>\n\n<p><b>Example 3:</b></p>\n\n<pre>\n<strong>Input:</strong>\nnums1 = <code>[3, 9]</code>\nnums2 = <code>[8, 9]</code>\nk = <code>3</code>\n<strong>Output:</strong>\n<code>[9, 8, 9]</code>\n</pre>"
    },
    {
        "id": "43",
        "title": "Multiply Strings",
        "slug": "multiply-strings",
        "difficulty": "Medium",
        "likes": 1167,
        "dislikes": 532,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Add Two Numbers\", \"titleSlug\": \"add-two-numbers\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Plus One\", \"titleSlug\": \"plus-one\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Add Binary\", \"titleSlug\": \"add-binary\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Add Strings\", \"titleSlug\": \"add-strings\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Math",
            "String"
        ],
        "content": "<p>Given two non-negative integers <code>num1</code> and <code>num2</code> represented as strings, return the product of <code>num1</code> and <code>num2</code>, also represented as a string.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> num1 = &quot;2&quot;, num2 = &quot;3&quot;\n<strong>Output:</strong> &quot;6&quot;</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> num1 = &quot;123&quot;, num2 = &quot;456&quot;\n<strong>Output:</strong> &quot;56088&quot;\n</pre>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li>The length of both <code>num1</code> and <code>num2</code> is &lt; 110.</li>\n\t<li>Both <code>num1</code> and <code>num2</code> contain&nbsp;only digits <code>0-9</code>.</li>\n\t<li>Both <code>num1</code> and <code>num2</code>&nbsp;do not contain any leading zero, except the number 0 itself.</li>\n\t<li>You <strong>must not use any built-in BigInteger library</strong> or <strong>convert the inputs to integer</strong> directly.</li>\n</ol>\n"
    },
    {
        "id": "162",
        "title": "Find Peak Element",
        "slug": "find-peak-element",
        "difficulty": "Medium",
        "likes": 993,
        "dislikes": 1491,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Peak Index in a Mountain Array\", \"titleSlug\": \"peak-index-in-a-mountain-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "149",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Binary Search"
        ],
        "content": "<p>A peak element is an element that is greater than its neighbors.</p>\n\n<p>Given an input array <code>nums</code>, where <code>nums[i] &ne; nums[i+1]</code>, find a peak element and return its index.</p>\n\n<p>The array may contain multiple peaks, in that case return the index to any one of the peaks is fine.</p>\n\n<p>You may imagine that <code>nums[-1] = nums[n] = -&infin;</code>.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> <strong>nums</strong> = <code>[1,2,3,1]</code>\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> 3 is a peak element and your function should return the index number 2.</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> <strong>nums</strong> = <code>[</code>1,2,1,3,5,6,4]\n<strong>Output:</strong> 1 or 5 \n<strong>Explanation:</strong> Your function can return either index number 1 where the peak element is 2, \n&nbsp;            or index number 5 where the peak element is 6.\n</pre>\n\n<p><strong>Note:</strong></p>\n\n<p>Your solution should be in logarithmic complexity.</p>\n"
    },
    {
        "id": "1179",
        "title": "Reformat Department Table",
        "slug": "reformat-department-table",
        "difficulty": "Easy",
        "likes": 7,
        "dislikes": 2,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [],
        "content": "<p>Table: <code>Department</code></p>\n\n<pre>\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| id            | int     |\n| revenue       | int     |\n| month         | varchar |\n+---------------+---------+\n(id, month) is the primary key of this table.\nThe table has information about the revenue of each department per month.\nThe month has values in [&quot;Jan&quot;,&quot;Feb&quot;,&quot;Mar&quot;,&quot;Apr&quot;,&quot;May&quot;,&quot;Jun&quot;,&quot;Jul&quot;,&quot;Aug&quot;,&quot;Sep&quot;,&quot;Oct&quot;,&quot;Nov&quot;,&quot;Dec&quot;].\n</pre>\n\n<p>&nbsp;</p>\n\n<p>Write an SQL query to reformat the table such that there is a department id column&nbsp;and a revenue column <strong>for each month</strong>.</p>\n\n<p>The query result format is in the following example:</p>\n\n<pre>\nDepartment table:\n+------+---------+-------+\n| id   | revenue | month |\n+------+---------+-------+\n| 1    | 8000    | Jan   |\n| 2    | 9000    | Jan   |\n| 3    | 10000   | Feb   |\n| 1    | 7000    | Feb   |\n| 1    | 6000    | Mar   |\n+------+---------+-------+\n\nResult table:\n+------+-------------+-------------+-------------+-----+-------------+\n| id   | Jan_Revenue | Feb_Revenue | Mar_Revenue | ... | Dec_Revenue |\n+------+-------------+-------------+-------------+-----+-------------+\n| 1    | 8000        | 7000        | 6000        | ... | null        |\n| 2    | 9000        | null        | null        | ... | null        |\n| 3    | null        | 10000       | null        | ... | null        |\n+------+-------------+-------------+-------------+-----+-------------+\n\nNote that the result table has 13 columns (1 for the department id + 12 for the months).\n</pre>"
    },
    {
        "id": "260",
        "title": "Single Number III",
        "slug": "single-number-iii",
        "difficulty": "Medium",
        "likes": 977,
        "dislikes": 81,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Single Number\", \"titleSlug\": \"single-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Single Number II\", \"titleSlug\": \"single-number-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "764",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Bit Manipulation"
        ],
        "content": "<p>Given an array of numbers <code>nums</code>, in which exactly two elements appear only once and all the other elements appear exactly twice. Find the two elements that appear only once.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input:</strong>  <code>[1,2,1,3,2,5]</code>\n<strong>Output:</strong> <code>[3,5]</code></pre>\n\n<p><b>Note</b>:</p>\n\n<ol>\n\t<li>The order of the result is not important. So in the above example, <code>[5, 3]</code> is also correct.</li>\n\t<li>Your algorithm should run in linear runtime complexity. Could you implement it using only constant space complexity?</li>\n</ol>"
    },
    {
        "id": "263",
        "title": "Ugly Number",
        "slug": "ugly-number",
        "difficulty": "Easy",
        "likes": 265,
        "dislikes": 484,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Happy Number\", \"titleSlug\": \"happy-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Count Primes\", \"titleSlug\": \"count-primes\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Ugly Number II\", \"titleSlug\": \"ugly-number-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Math"
        ],
        "content": "<p>Write a program to check whether a given number is an ugly number.</p>\n\n<p>Ugly numbers are <strong>positive numbers</strong> whose prime factors only include <code>2, 3, 5</code>.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> 6\n<strong>Output:</strong> true\n<strong>Explanation: </strong>6 = 2 &times;&nbsp;3</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> 8\n<strong>Output:</strong> true\n<strong>Explanation: </strong>8 = 2 &times; 2 &times;&nbsp;2\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> 14\n<strong>Output:</strong> false \n<strong>Explanation: </strong><code>14</code> is not ugly since it includes another prime factor <code>7</code>.\n</pre>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1</code> is typically treated as an ugly number.</li>\n\t<li>Input is within the 32-bit signed integer range:&nbsp;[&minus;2<sup>31</sup>,&nbsp; 2<sup>31&nbsp;</sup>&minus; 1].</li>\n</ol>"
    },
    {
        "id": "116",
        "title": "Populating Next Right Pointers in Each Node",
        "slug": "populating-next-right-pointers-in-each-node",
        "difficulty": "Medium",
        "likes": 1167,
        "dislikes": 100,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Populating Next Right Pointers in Each Node II\", \"titleSlug\": \"populating-next-right-pointers-in-each-node-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Binary Tree Right Side View\", \"titleSlug\": \"binary-tree-right-side-view\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Tree",
            "Depth-first Search"
        ],
        "content": "<p>You are given a <strong>perfect binary tree</strong>&nbsp;where&nbsp;all leaves are on the same level, and every parent has two children. The binary tree has the following definition:</p>\n\n<pre>\nstruct Node {\n  int val;\n  Node *left;\n  Node *right;\n  Node *next;\n}\n</pre>\n\n<p>Populate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to <code>NULL</code>.</p>\n\n<p>Initially, all next pointers are set to <code>NULL</code>.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example:</strong></p>\n\n<p><img alt=\"\" src=\"./img/populating-next-right-pointers-in-each-node_1.png\" style=\"width: 640px; height: 218px;\" /></p>\n\n<pre>\n<strong>Input: </strong><span>{&quot;$id&quot;:&quot;1&quot;,&quot;left&quot;:{&quot;$id&quot;:&quot;2&quot;,&quot;left&quot;:{&quot;$id&quot;:&quot;3&quot;,&quot;left&quot;:null,&quot;next&quot;:null,&quot;right&quot;:null,&quot;val&quot;:4},&quot;next&quot;:null,&quot;right&quot;:{&quot;$id&quot;:&quot;4&quot;,&quot;left&quot;:null,&quot;next&quot;:null,&quot;right&quot;:null,&quot;val&quot;:5},&quot;val&quot;:2},&quot;next&quot;:null,&quot;right&quot;:{&quot;$id&quot;:&quot;5&quot;,&quot;left&quot;:{&quot;$id&quot;:&quot;6&quot;,&quot;left&quot;:null,&quot;next&quot;:null,&quot;right&quot;:null,&quot;val&quot;:6},&quot;next&quot;:null,&quot;right&quot;:{&quot;$id&quot;:&quot;7&quot;,&quot;left&quot;:null,&quot;next&quot;:null,&quot;right&quot;:null,&quot;val&quot;:7},&quot;val&quot;:3},&quot;val&quot;:1}</span>\n\n<strong>Output: </strong><span>{&quot;$id&quot;:&quot;1&quot;,&quot;left&quot;:{&quot;$id&quot;:&quot;2&quot;,&quot;left&quot;:{&quot;$id&quot;:&quot;3&quot;,&quot;left&quot;:null,&quot;next&quot;:{&quot;$id&quot;:&quot;4&quot;,&quot;left&quot;:null,&quot;next&quot;:{&quot;$id&quot;:&quot;5&quot;,&quot;left&quot;:null,&quot;next&quot;:{&quot;$id&quot;:&quot;6&quot;,&quot;left&quot;:null,&quot;next&quot;:null,&quot;right&quot;:null,&quot;val&quot;:7},&quot;right&quot;:null,&quot;val&quot;:6},&quot;right&quot;:null,&quot;val&quot;:5},&quot;right&quot;:null,&quot;val&quot;:4},&quot;next&quot;:{&quot;$id&quot;:&quot;7&quot;,&quot;left&quot;:{&quot;$ref&quot;:&quot;5&quot;},&quot;next&quot;:null,&quot;right&quot;:{&quot;$ref&quot;:&quot;6&quot;},&quot;val&quot;:3},&quot;right&quot;:{&quot;$ref&quot;:&quot;4&quot;},&quot;val&quot;:2},&quot;next&quot;:null,&quot;right&quot;:{&quot;$ref&quot;:&quot;7&quot;},&quot;val&quot;:1}</span>\n\n<strong>Explanation: </strong>Given the above perfect binary tree (Figure A), your function should populate each next pointer to point to its next right node, just like in Figure B.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>You may only use constant extra space.</li>\n\t<li>Recursive approach is fine, implicit stack space does not count as extra space for this problem.</li>\n</ul>\n"
    },
    {
        "id": "164",
        "title": "Maximum Gap",
        "slug": "maximum-gap",
        "difficulty": "Hard",
        "likes": 576,
        "dislikes": 140,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "81",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Sort"
        ],
        "content": "<p>Given an unsorted array, find the maximum difference between the successive elements in its sorted form.</p>\n\n<p>Return 0 if the array contains less than 2 elements.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> [3,6,9,1]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> The sorted form of the array is [1,3,6,9], either\n&nbsp;            (3,6) or (6,9) has the maximum difference 3.</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> [10]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> The array contains less than 2 elements, therefore return 0.</pre>\n\n<p><b>Note:</b></p>\n\n<ul>\n\t<li>You may assume all elements in the array are non-negative integers and fit in the 32-bit signed integer range.</li>\n\t<li>Try to solve it in linear time/space.</li>\n</ul>\n"
    },
    {
        "id": "1161",
        "title": "Maximum Level Sum of a Binary Tree",
        "slug": "maximum-level-sum-of-a-binary-tree",
        "difficulty": "Medium",
        "likes": 69,
        "dislikes": 6,
        "hints": [
            "Calculate the sum for each level then find the level with the maximum sum.",
            "How can you traverse the tree ?",
            "How can you sum up the values for every level ?",
            "Use DFS or BFS to traverse the tree keeping the level of each node, and sum up those values with a map or a frequency array."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "765",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Graph"
        ],
        "content": "<p>Given the <code>root</code> of a binary tree, the level of its root is <code>1</code>,&nbsp;the level of its children is <code>2</code>,&nbsp;and so on.</p>\n\n<p>Return the <strong>smallest</strong> level <code>X</code> such that the sum of all the values of nodes at level <code>X</code> is <strong>maximal</strong>.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<p><strong><img alt=\"\" src=\"./img/maximum-level-sum-of-a-binary-tree_1.JPG\" style=\"width: 200px; height: 175px;\" /></strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[1,7,0,7,-8,null,null]</span>\n<strong>Output: </strong><span id=\"example-output-1\">2</span>\n<strong>Explanation: </strong>\nLevel 1 sum = 1.\nLevel 2 sum = 7 + 0 = 7.\nLevel 3 sum = 7 + -8 = -1.\nSo we return the level with the maximum sum which is level 2.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li>The number of nodes in the given tree is between <code>1</code> and <code>10^4</code>.</li>\n\t<li><code>-10^5 &lt;= node.val &lt;= 10^5</code></li>\n</ol>\n"
    },
    {
        "id": "833",
        "title": "Find And Replace in String",
        "slug": "find-and-replace-in-string",
        "difficulty": "Medium",
        "likes": 189,
        "dislikes": 264,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "466",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String"
        ],
        "content": "<p>To some string <code>S</code>, we will perform some&nbsp;replacement&nbsp;operations that replace groups of letters with new ones (not necessarily the same size).</p>\n\n<p>Each replacement operation has <code>3</code> parameters: a starting index <code>i</code>, a source word&nbsp;<code>x</code>&nbsp;and a target word&nbsp;<code>y</code>.&nbsp; The rule is that if <code><font face=\"monospace\">x</font></code>&nbsp;starts at position <code>i</code>&nbsp;in the <strong>original</strong> <strong>string</strong> <strong><code>S</code></strong>, then we will replace that occurrence of&nbsp;<code>x</code>&nbsp;with&nbsp;<code>y</code>.&nbsp; If not, we do nothing.</p>\n\n<p>For example, if we have&nbsp;<code>S = &quot;abcd&quot;</code>&nbsp;and we have some replacement operation&nbsp;<code>i = 2, x = &quot;cd&quot;, y = &quot;ffff&quot;</code>, then because&nbsp;<code>&quot;cd&quot;</code>&nbsp;starts at position <code><font face=\"monospace\">2</font></code>&nbsp;in the original string <code>S</code>, we will replace it with <code>&quot;ffff&quot;</code>.</p>\n\n<p>Using another example on <code>S = &quot;abcd&quot;</code>, if we have both the replacement operation <code>i = 0, x = &quot;ab&quot;, y = &quot;eee&quot;</code>, as well as another replacement operation&nbsp;<code>i = 2, x = &quot;ec&quot;, y = &quot;ffff&quot;</code>, this second operation does nothing because in the original string&nbsp;<code>S[2] = &#39;c&#39;</code>, which doesn&#39;t match&nbsp;<code>x[0] = &#39;e&#39;</code>.</p>\n\n<p>All these operations occur simultaneously.&nbsp; It&#39;s guaranteed that there won&#39;t be any overlap in replacement: for example,&nbsp;<code>S = &quot;abc&quot;, indexes = [0, 1],&nbsp;sources = [&quot;ab&quot;,&quot;bc&quot;]</code> is not a valid test case.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>S = &quot;abcd&quot;, indexes = [0,2], sources = [&quot;a&quot;,&quot;cd&quot;], targets = [&quot;eee&quot;,&quot;ffff&quot;]\n<strong>Output: </strong>&quot;eeebffff&quot;\n<strong>Explanation:</strong> &quot;a&quot; starts at index 0 in S, so it&#39;s replaced by &quot;eee&quot;.\n&quot;cd&quot; starts at index 2 in S, so it&#39;s replaced by &quot;ffff&quot;.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>S = &quot;abcd&quot;, indexes = [0,2], sources = [&quot;ab&quot;,&quot;ec&quot;], targets = [&quot;eee&quot;,&quot;ffff&quot;]\n<strong>Output: </strong>&quot;eeecd&quot;\n<strong>Explanation:</strong> &quot;ab&quot; starts at index 0 in S, so it&#39;s replaced by &quot;eee&quot;. \n&quot;ec&quot; doesn&#39;t starts at index 2 in the <strong>original</strong> S, so we do nothing.\n</pre>\n\n<p>Notes:</p>\n\n<ol>\n\t<li><code>0 &lt;=&nbsp;indexes.length =&nbsp;sources.length =&nbsp;targets.length &lt;= 100</code></li>\n\t<li><code>0&nbsp;&lt;&nbsp;indexes[i]&nbsp;&lt; S.length &lt;= 1000</code></li>\n\t<li>All characters in given inputs are lowercase letters.</li>\n</ol>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "1143",
        "title": "Longest Common Subsequence",
        "slug": "longest-common-subsequence",
        "difficulty": "Medium",
        "likes": 167,
        "dislikes": 8,
        "hints": [
            "Try dynamic programming. \r\nDP[i][j] represents the longest common subsequence of text1[0 ... i] & text2[0 ... j].",
            "DP[i][j] = DP[i - 1][j - 1] + 1 , if text1[i] == text2[j]\r\nDP[i][j] = max(DP[i - 1][j], DP[i][j - 1]) , otherwise"
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Longest Palindromic Subsequence\", \"titleSlug\": \"longest-palindromic-subsequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Delete Operation for Two Strings\", \"titleSlug\": \"delete-operation-for-two-strings\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Shortest Common Supersequence \", \"titleSlug\": \"shortest-common-supersequence\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>Given two strings <code>text1</code> and <code>text2</code>, return the length of their longest common subsequence.</p>\n\n<p>A <em>subsequence</em> of a string is a new string generated from the original string with some characters(can be none) deleted without changing the relative order of the remaining characters. (eg, &quot;ace&quot; is a subsequence of &quot;abcde&quot; while &quot;aec&quot; is not).&nbsp;A <em>common subsequence</em>&nbsp;of two strings is a subsequence that is common to both strings.</p>\n\n<p>&nbsp;</p>\n\n<p>If there is no common subsequence, return 0.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> text1 = &quot;abcde&quot;, text2 = &quot;ace&quot; \n<strong>Output:</strong> 3  \n<strong>Explanation:</strong> The longest common subsequence is &quot;ace&quot; and its length is 3.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> text1 = &quot;abc&quot;, text2 = &quot;abc&quot;\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> The longest common subsequence is &quot;abc&quot; and its length is 3.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> text1 = &quot;abc&quot;, text2 = &quot;def&quot;\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> There is no such common subsequence, so the result is 0.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= text1.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= text2.length &lt;= 1000</code></li>\n\t<li>The input strings consist of lowercase English characters only.</li>\n</ul>\n"
    },
    {
        "id": "34",
        "title": "Find First and Last Position of Element in Sorted Array",
        "slug": "find-first-and-last-position-of-element-in-sorted-array",
        "difficulty": "Medium",
        "likes": 1914,
        "dislikes": 97,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"First Bad Version\", \"titleSlug\": \"first-bad-version\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "505",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Binary Search"
        ],
        "content": "<p>Given an array of integers <code>nums</code> sorted in ascending order, find the starting and ending position of a given <code>target</code> value.</p>\n\n<p>Your algorithm&#39;s runtime complexity must be in the order of <em>O</em>(log <em>n</em>).</p>\n\n<p>If the target is not found in the array, return <code>[-1, -1]</code>.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [<code>5,7,7,8,8,10]</code>, target = 8\n<strong>Output:</strong> [3,4]</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [<code>5,7,7,8,8,10]</code>, target = 6\n<strong>Output:</strong> [-1,-1]</pre>\n"
    },
    {
        "id": "69",
        "title": "Sqrt(x)",
        "slug": "sqrtx",
        "difficulty": "Easy",
        "likes": 873,
        "dislikes": 1503,
        "hints": [
            "Try exploring all integers. (Credits: @annujoshi)",
            "Use the sorted property of integers to reduced the search space. (Credits: @annujoshi)"
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Pow(x, n)\", \"titleSlug\": \"powx-n\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Valid Perfect Square\", \"titleSlug\": \"valid-perfect-square\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "757",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math",
            "Binary Search"
        ],
        "content": "<p>Implement <code>int sqrt(int x)</code>.</p>\n\n<p>Compute and return the square root of <em>x</em>, where&nbsp;<em>x</em>&nbsp;is guaranteed to be a non-negative integer.</p>\n\n<p>Since the return type&nbsp;is an integer, the decimal digits are truncated and only the integer part of the result&nbsp;is returned.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> 4\n<strong>Output:</strong> 2\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> 8\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> The square root of 8 is 2.82842..., and since \n&nbsp;            the decimal part is truncated, 2 is returned.\n</pre>\n"
    },
    {
        "id": "929",
        "title": "Unique Email Addresses",
        "slug": "unique-email-addresses",
        "difficulty": "Easy",
        "likes": 564,
        "dislikes": 152,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "599",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String"
        ],
        "content": "<p>Every email consists of a local name and a domain name, separated by the @ sign.</p>\n\n<p>For example, in <code>alice@leetcode.com</code>,&nbsp;<code>alice</code> is the local name, and <code>leetcode.com</code> is the domain name.</p>\n\n<p>Besides lowercase letters, these emails may contain <code>&#39;.&#39;</code>s or <code>&#39;+&#39;</code>s.</p>\n\n<p>If you add periods (<code>&#39;.&#39;</code>) between some characters in the <strong>local name</strong> part of an email address, mail sent there will be forwarded to the same address without dots in the local name.&nbsp; For example, <code>&quot;alice.z@leetcode.com&quot;</code> and <code>&quot;alicez@leetcode.com&quot;</code> forward to the same email address.&nbsp; (Note that this rule does not apply for domain names.)</p>\n\n<p>If you add a plus (<code>&#39;+&#39;</code>) in the <strong>local name</strong>, everything after the first plus sign will be&nbsp;<strong>ignored</strong>. This allows certain emails to be filtered, for example&nbsp;<code>m.y+name@email.com</code>&nbsp;will be forwarded to&nbsp;<code>my@email.com</code>.&nbsp; (Again, this rule does not apply for domain names.)</p>\n\n<p>It is possible to use both of these rules at the same time.</p>\n\n<p>Given a list of <code>emails</code>, we send one email to each address in the list.&nbsp;&nbsp;How many different addresses actually receive mails?&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[&quot;test.email+alex@leetcode.com&quot;,&quot;test.e.mail+bob.cathy@leetcode.com&quot;,&quot;testemail+david@lee.tcode.com&quot;]</span>\n<strong>Output: </strong><span id=\"example-output-1\">2</span>\n<strong><span>Explanation:</span></strong><span>&nbsp;&quot;</span><span id=\"example-input-1-1\">testemail@leetcode.com&quot; and &quot;testemail@lee.tcode.com&quot; </span>actually receive mails\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= emails[i].length&nbsp;&lt;= 100</code></li>\n\t<li><code>1 &lt;= emails.length &lt;= 100</code></li>\n\t<li>Each <code>emails[i]</code> contains exactly one <code>&#39;@&#39;</code> character.</li>\n\t<li>All local and domain names are non-empty.</li>\n\t<li>Local names do not start with a <code>&#39;+&#39;</code> character.</li>\n</ul>\n</div>\n"
    },
    {
        "id": "338",
        "title": "Counting Bits",
        "slug": "counting-bits",
        "difficulty": "Medium",
        "likes": 1606,
        "dislikes": 116,
        "hints": [
            "You should make use of what you have produced already.",
            "Divide the numbers in ranges like [2-3], [4-7], [8-15] and so on. And try to generate new range from previous.",
            "Or does the odd/even status of the number help you in calculating the number of 1s?"
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Number of 1 Bits\", \"titleSlug\": \"number-of-1-bits\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "73",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming",
            "Bit Manipulation"
        ],
        "content": "<p>Given a non negative integer number <b>num</b>. For every numbers <b>i</b> in the range <b>0 &le; i &le; num</b> calculate the number of 1&#39;s in their binary representation and return them as an array.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">2</span>\n<strong>Output: </strong><span id=\"example-output-1\">[0,1,1]</span></pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">5</span>\n<strong>Output: </strong><code>[0,1,1,2,1,2]</code>\n</pre>\n\n<p><b>Follow up:</b></p>\n\n<ul>\n\t<li>It is very easy to come up with a solution with run time <b>O(n*sizeof(integer))</b>. But can you do it in linear time <b>O(n)</b> /possibly in a single pass?</li>\n\t<li>Space complexity should be <b>O(n)</b>.</li>\n\t<li>Can you do it like a boss? Do it without using any builtin function like <b>__builtin_popcount</b> in c++ or in any other language.</li>\n</ul>"
    },
    {
        "id": "653",
        "title": "Two Sum IV - Input is a BST",
        "slug": "two-sum-iv-input-is-a-bst",
        "difficulty": "Easy",
        "likes": 976,
        "dislikes": 115,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Two Sum\", \"titleSlug\": \"two-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Two Sum II - Input array is sorted\", \"titleSlug\": \"two-sum-ii-input-array-is-sorted\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Two Sum III - Data structure design\", \"titleSlug\": \"two-sum-iii-data-structure-design\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "226",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree"
        ],
        "content": "<p>Given a Binary Search Tree and a target number, return true if there exist two elements in the BST such that their sum is equal to the given target.</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> \n    5\n   / \\\n  3   6\n / \\   \\\n2   4   7\n\nTarget = 9\n\n<b>Output:</b> True\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input:</b> \n    5\n   / \\\n  3   6\n / \\   \\\n2   4   7\n\nTarget = 28\n\n<b>Output:</b> False\n</pre>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "645",
        "title": "Set Mismatch",
        "slug": "set-mismatch",
        "difficulty": "Easy",
        "likes": 457,
        "dislikes": 251,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Find the Duplicate Number\", \"titleSlug\": \"find-the-duplicate-number\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "224",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Hash Table",
            "Math"
        ],
        "content": "<p>\nThe set <code>S</code> originally contains numbers from 1 to <code>n</code>. But unfortunately, due to the data error, one of the numbers in the set got duplicated to <b>another</b> number in the set, which results in repetition of one number and loss of another number. \n</p>\n\n<p>\nGiven an array <code>nums</code> representing the data status of this set after the error. Your task is to firstly find the number occurs twice and then find the number that is missing. Return them in the form of an array.\n</p>\n\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> nums = [1,2,2,4]\n<b>Output:</b> [2,3]\n</pre>\n</p>\n\n<p><b>Note:</b><br>\n<ol>\n<li>The given array size will in the range [2, 10000].</li>\n<li>The given array's numbers won't have any order.</li>\n</ol>\n</p>"
    },
    {
        "id": "1035",
        "title": "Uncrossed Lines",
        "slug": "uncrossed-lines",
        "difficulty": "Medium",
        "likes": 232,
        "dislikes": 7,
        "hints": [
            "Think dynamic programming.  Given an oracle dp(i,j) that tells us how many lines A[i:], B[j:]  [the sequence A[i], A[i+1], ... and B[j], B[j+1], ...] are uncrossed, can we write this as a recursion?"
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Edit Distance\", \"titleSlug\": \"edit-distance\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Array"
        ],
        "content": "<p>We write the integers of <code>A</code> and <code>B</code>&nbsp;(in the order they are given) on two separate horizontal lines.</p>\n\n<p>Now, we may draw <em>connecting lines</em>: a straight line connecting two numbers <code>A[i]</code> and <code>B[j]</code>&nbsp;such that:</p>\n\n<ul>\n\t<li><code>A[i] == B[j]</code>;</li>\n\t<li>The line we draw does not intersect any other connecting (non-horizontal) line.</li>\n</ul>\n\n<p>Note that a connecting lines cannot intersect even at the endpoints:&nbsp;each number can only belong to one connecting line.</p>\n\n<p>Return the maximum number of connecting lines we can draw in this way.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"./img/uncrossed-lines_1.png\" style=\"width: 100px; height: 72px;\" />\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-1-1\">[1,4,2]</span>, B = <span id=\"example-input-1-2\">[1,2,4]</span>\n<strong>Output: </strong><span id=\"example-output-1\">2</span>\n<strong>Explanation: </strong>We can draw 2 uncrossed lines as in the diagram.\nWe cannot draw 3 uncrossed lines, because the line from A[1]=4 to B[2]=4 will intersect the line from A[2]=2 to B[1]=2.\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-2-1\">[2,5,1,2,5]</span>, B = <span id=\"example-input-2-2\">[10,5,2,1,5,2]</span>\n<strong>Output: </strong><span id=\"example-output-2\">3</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-3-1\">[1,3,7,1,7,5]</span>, B = <span id=\"example-input-3-2\">[1,9,2,5,1]</span>\n<strong>Output: </strong><span id=\"example-output-3\">2</span></pre>\n\n<p>&nbsp;</p>\n</div>\n</div>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 500</code></li>\n\t<li><code>1 &lt;= B.length &lt;= 500</code></li>\n\t<li><code><font face=\"monospace\">1 &lt;= A[i], B[i] &lt;= 2000</font></code></li>\n</ol>\n"
    },
    {
        "id": "68",
        "title": "Text Justification",
        "slug": "text-justification",
        "difficulty": "Hard",
        "likes": 415,
        "dislikes": 1139,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "String"
        ],
        "content": "<p>Given an array of words and a width&nbsp;<em>maxWidth</em>, format the text such that each line has exactly <em>maxWidth</em> characters and is fully (left and right) justified.</p>\n\n<p>You should pack your words in a greedy approach; that is, pack as many words as you can in each line. Pad extra spaces <code>&#39; &#39;</code> when necessary so that each line has exactly <em>maxWidth</em> characters.</p>\n\n<p>Extra spaces between words should be distributed as evenly as possible. If the number of spaces on a line do not divide evenly between words, the empty slots on the left will be assigned more spaces than the slots on the right.</p>\n\n<p>For the last line of text, it should be left justified and no <strong>extra</strong> space is inserted between words.</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>A word is defined as a character sequence consisting&nbsp;of non-space characters only.</li>\n\t<li>Each word&#39;s length is&nbsp;guaranteed to be greater than 0 and not exceed <em>maxWidth</em>.</li>\n\t<li>The input array <code>words</code>&nbsp;contains at least one word.</li>\n</ul>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong>\nwords = [&quot;This&quot;, &quot;is&quot;, &quot;an&quot;, &quot;example&quot;, &quot;of&quot;, &quot;text&quot;, &quot;justification.&quot;]\nmaxWidth = 16\n<strong>Output:</strong>\n[\n&nbsp; &nbsp;&quot;This &nbsp; &nbsp;is &nbsp; &nbsp;an&quot;,\n&nbsp; &nbsp;&quot;example &nbsp;of text&quot;,\n&nbsp; &nbsp;&quot;justification. &nbsp;&quot;\n]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong>\nwords = [&quot;What&quot;,&quot;must&quot;,&quot;be&quot;,&quot;acknowledgment&quot;,&quot;shall&quot;,&quot;be&quot;]\nmaxWidth = 16\n<strong>Output:</strong>\n[\n&nbsp; &quot;What &nbsp; must &nbsp; be&quot;,\n&nbsp; &quot;acknowledgment &nbsp;&quot;,\n&nbsp; &quot;shall be &nbsp; &nbsp; &nbsp; &nbsp;&quot;\n]\n<strong>Explanation:</strong> Note that the last line is &quot;shall be    &quot; instead of &quot;shall     be&quot;,\n&nbsp;            because the last line must be left-justified instead of fully-justified.\n             Note that the second line is also left-justified becase it contains only one word.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong>\nwords = [&quot;Science&quot;,&quot;is&quot;,&quot;what&quot;,&quot;we&quot;,&quot;understand&quot;,&quot;well&quot;,&quot;enough&quot;,&quot;to&quot;,&quot;explain&quot;,\n&nbsp;        &quot;to&quot;,&quot;a&quot;,&quot;computer.&quot;,&quot;Art&quot;,&quot;is&quot;,&quot;everything&quot;,&quot;else&quot;,&quot;we&quot;,&quot;do&quot;]\nmaxWidth = 20\n<strong>Output:</strong>\n[\n&nbsp; &quot;Science &nbsp;is &nbsp;what we&quot;,\n  &quot;understand &nbsp; &nbsp; &nbsp;well&quot;,\n&nbsp; &quot;enough to explain to&quot;,\n&nbsp; &quot;a &nbsp;computer. &nbsp;Art is&quot;,\n&nbsp; &quot;everything &nbsp;else &nbsp;we&quot;,\n&nbsp; &quot;do &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&quot;\n]\n</pre>\n"
    },
    {
        "id": "855",
        "title": "Exam Room",
        "slug": "exam-room",
        "difficulty": "Medium",
        "likes": 364,
        "dislikes": 167,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Maximize Distance to Closest Person\", \"titleSlug\": \"maximize-distance-to-closest-person\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "489",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Ordered Map"
        ],
        "content": "<p>In an exam room, there are <code>N</code> seats in a single row, numbered <code>0, 1, 2, ..., N-1</code>.</p>\n\n<p>When a student enters the room, they must sit in the seat that maximizes the distance to the closest person.&nbsp; If there are multiple such seats, they sit in the seat with the lowest number.&nbsp; (Also, if no one is in the room, then the student sits at seat number 0.)</p>\n\n<p>Return a class <code>ExamRoom(int N)</code>&nbsp;that exposes two functions: <code>ExamRoom.seat()</code>&nbsp;returning an <code>int</code>&nbsp;representing what seat the student sat in, and <code>ExamRoom.leave(int p)</code>&nbsp;representing that the student in seat number <code>p</code>&nbsp;now leaves the room.&nbsp; It is guaranteed that any calls to <code>ExamRoom.leave(p)</code> have a student sitting in seat <code>p</code>.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[&quot;ExamRoom&quot;,&quot;seat&quot;,&quot;seat&quot;,&quot;seat&quot;,&quot;seat&quot;,&quot;leave&quot;,&quot;seat&quot;]</span>, <span id=\"example-input-1-2\">[[10],[],[],[],[],[4],[]]</span>\n<strong>Output: </strong><span id=\"example-output-1\">[null,0,9,4,2,null,5]</span>\n<span><strong>Explanation</strong>:\nExamRoom(10) -&gt; null\nseat() -&gt; 0, no one is in the room, then the student sits at seat number 0.\nseat() -&gt; 9, the student sits at the last seat number 9.\nseat() -&gt; 4, the student sits at the last seat number 4.\nseat() -&gt; 2, the student sits at the last seat number 2.\nleave(4) -&gt; null\nseat() -&gt; 5, the student sits at the last seat number 5.</span>\n</pre>\n\n<p><span>\u200b\u200b\u200b\u200b\u200b\u200b\u200b</span></p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= N &lt;= 10^9</code></li>\n\t<li><code>ExamRoom.seat()</code> and <code>ExamRoom.leave()</code> will be called at most <code>10^4</code> times across all test cases.</li>\n\t<li>Calls to <code>ExamRoom.leave(p)</code> are guaranteed to have a student currently sitting in seat number <code>p</code>.</li>\n</ol>\n"
    },
    {
        "id": "488",
        "title": "Zuma Game",
        "slug": "zuma-game",
        "difficulty": "Hard",
        "likes": 148,
        "dislikes": 141,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Depth-first Search"
        ],
        "content": "<p>Think about Zuma Game. You have a row of balls on the table, colored red(R), yellow(Y), blue(B), green(G), and white(W). You also have several balls in your hand.</p>\n<p>\nEach time, you may choose a ball in your hand, and insert it into the row (including the leftmost place and rightmost place). Then, if there is a group of 3 or more balls in the same color touching, remove these balls. Keep doing this until no more balls can be removed.</p>\n<p>\nFind the minimal balls you have to insert to remove all the balls on the table. If you cannot remove all the balls, output -1.\n</p>\n<pre>\n<p><b>Examples:</b><br />\n<b>Input:</b> \"WRRBBW\", \"RB\"\n<b>Output:</b> -1\n<b>Explanation:</b> WRRBBW -> WRR[R]BBW -> WBBW -> WBB[B]W -> WW\n\n<b>Input:</b> \"WWRRBBWW\", \"WRBRW\"\n<b>Output:</b> 2\n<b>Explanation:</b> WWRRBBWW -> WWRR[R]BBWW -> WWBBWW -> WWBB[B]WW -> WWWW -> empty\n\n<b>Input:</b>\"G\", \"GGGGG\"\n<b>Output:</b> 2\n<b>Explanation:</b> G -> G[G] -> GG[G] -> empty \n\n<b>Input:</b> \"RBYYBBRRB\", \"YRBGB\"\n<b>Output:</b> 3\n<b>Explanation:</b> RBYYBBRRB -> RBYY[Y]BBRRB -> RBBBRRB -> RRRB -> B -> B[B] -> BB[B] -> empty \n</pre>\n</p>\n\n<p><b>Note:</b><br>\n<ol>\n<li>You may assume that the initial row of balls on the table won\u2019t have any 3 or more consecutive balls with the same color.</li>\n<li>The number of balls on the table won't exceed 20, and the string represents these balls is called \"board\" in the input.</li>\n<li>The number of balls in your hand won't exceed 5, and the string represents these balls is called \"hand\" in the input.</li>\n<li>Both input strings will be non-empty and only contain characters 'R','Y','B','G','W'.</li>\n</ol>\n</p>"
    },
    {
        "id": "22",
        "title": "Generate Parentheses",
        "slug": "generate-parentheses",
        "difficulty": "Medium",
        "likes": 3223,
        "dislikes": 195,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Letter Combinations of a Phone Number\", \"titleSlug\": \"letter-combinations-of-a-phone-number\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Valid Parentheses\", \"titleSlug\": \"valid-parentheses\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "349",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String",
            "Backtracking"
        ],
        "content": "<p>\nGiven <i>n</i> pairs of parentheses, write a function to generate all combinations of well-formed parentheses.\n</p>\n\n<p>\nFor example, given <i>n</i> = 3, a solution set is:\n</p>\n<pre>\n[\n  \"((()))\",\n  \"(()())\",\n  \"(())()\",\n  \"()(())\",\n  \"()()()\"\n]\n</pre>"
    },
    {
        "id": "740",
        "title": "Delete and Earn",
        "slug": "delete-and-earn",
        "difficulty": "Medium",
        "likes": 655,
        "dislikes": 57,
        "hints": [
            "If you take a number, you might as well take them all.  Keep track of what the value is of the subset of the input with maximum M when you either take or don't take M."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"House Robber\", \"titleSlug\": \"house-robber\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "314",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>Given an array <code>nums</code> of integers, you can perform operations on the array.</p>\n\n<p>In each operation, you pick any <code>nums[i]</code> and delete it to earn <code>nums[i]</code> points. After, you must delete <b>every</b> element equal to <code>nums[i] - 1</code> or <code>nums[i] + 1</code>.</p>\n\n<p>You start with 0 points. Return the maximum number of points you can earn by applying such operations.</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> nums = [3, 4, 2]\n<b>Output:</b> 6\n<b>Explanation:</b> \nDelete 4 to earn 4 points, consequently 3 is also deleted.\nThen, delete 2 to earn 2 points. 6 total points are earned.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input:</b> nums = [2, 2, 3, 3, 3, 4]\n<b>Output:</b> 9\n<b>Explanation:</b> \nDelete 3 to earn 3 points, deleting both 2&#39;s and the 4.\nThen, delete 3 again to earn 3 points, and 3 again to earn 3 points.\n9 total points are earned.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b></p>\n\n<ul>\n\t<li>The length of <code>nums</code> is at most <code>20000</code>.</li>\n\t<li>Each element <code>nums[i]</code> is an integer in the range <code>[1, 10000]</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "537",
        "title": "Complex Number Multiplication",
        "slug": "complex-number-multiplication",
        "difficulty": "Medium",
        "likes": 178,
        "dislikes": 603,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "96",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math",
            "String"
        ],
        "content": "<p>\nGiven two strings representing two <a href = \"https://en.wikipedia.org/wiki/Complex_number\">complex numbers</a>.</p>\n\n<p>\nYou need to return a string representing their multiplication. Note i<sup>2</sup> = -1 according to the definition.\n</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> \"1+1i\", \"1+1i\"\n<b>Output:</b> \"0+2i\"\n<b>Explanation:</b> (1 + i) * (1 + i) = 1 + i<sup>2</sup> + 2 * i = 2i, and you need convert it to the form of 0+2i.\n</pre>\n</p>\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b> \"1+-1i\", \"1+-1i\"\n<b>Output:</b> \"0+-2i\"\n<b>Explanation:</b> (1 - i) * (1 - i) = 1 + i<sup>2</sup> - 2 * i = -2i, and you need convert it to the form of 0+-2i.\n</pre>\n</p>\n\n<p><b>Note:</b>\n<ol>\n<li>The input strings will not have extra blank.</li>\n<li>The input strings will be given in the form of <b>a+bi</b>, where the integer <b>a</b> and <b>b</b> will both belong to the range of [-100, 100]. And <b>the output should be also in this form</b>.</li>\n</ol>\n</p>"
    },
    {
        "id": "882",
        "title": "Reachable Nodes In Subdivided Graph",
        "slug": "reachable-nodes-in-subdivided-graph",
        "difficulty": "Hard",
        "likes": 107,
        "dislikes": 96,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "524",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Heap"
        ],
        "content": "<p>Starting with an&nbsp;<strong>undirected</strong> graph (the &quot;original graph&quot;) with nodes from <code>0</code> to <code>N-1</code>, subdivisions are made to some of the edges.</p>\n\n<p>The graph is given as follows: <code>edges[k]</code> is a list of integer pairs <code>(i, j, n)</code> such that <code>(i, j)</code> is an edge of the original graph,</p>\n\n<p>and <code>n</code> is the total number of <strong>new</strong> nodes on that edge.&nbsp;</p>\n\n<p>Then, the edge <code>(i, j)</code> is deleted from the original graph,&nbsp;<code>n</code>&nbsp;new nodes <code>(x_1, x_2, ..., x_n)</code> are added to the original graph,</p>\n\n<p>and <code>n+1</code> new&nbsp;edges <code>(i, x_1), (x_1, x_2), (x_2, x_3), ..., (x_{n-1}, x_n), (x_n, j)</code>&nbsp;are added to the original&nbsp;graph.</p>\n\n<p>Now, you start at node <code>0</code>&nbsp;from the original graph, and in each move, you travel along one&nbsp;edge.&nbsp;</p>\n\n<p>Return how many nodes you can reach in at most <code>M</code> moves.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><code>edges </code>= <span id=\"example-input-1-1\">[[0,1,10],[0,2,1],[1,2,2]]</span>, M = <span id=\"example-input-1-2\">6</span>, N = <span id=\"example-input-1-3\">3</span>\n<strong>Output: </strong><span id=\"example-output-1\">13</span>\n<strong>Explanation: </strong>\nThe nodes that are reachable in the final graph after M = 6 moves are indicated below.\n<span><img alt=\"\" src=\"./img/reachable-nodes-in-subdivided-graph_1.png\" style=\"width: 487px; height: 200px;\" /></span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><code>edges </code>= <span id=\"example-input-2-1\">[[0,1,4],[1,2,6],[0,2,8],[1,3,1]]</span>, M = <span id=\"example-input-2-2\">10</span>, N = <span id=\"example-input-2-3\">4</span>\n<strong>Output: </strong><span id=\"example-output-2\">23</span></pre>\n\n<p>&nbsp;</p>\n</div>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>0 &lt;= edges.length &lt;= 10000</code></li>\n\t<li><code>0 &lt;= edges[i][0] &lt;&nbsp;edges[i][1] &lt; N</code></li>\n\t<li>There does not exist any&nbsp;<code>i != j</code> for which <code>edges[i][0] == edges[j][0]</code> and <code>edges[i][1] == edges[j][1]</code>.</li>\n\t<li>The original graph&nbsp;has no parallel edges.</li>\n\t<li><code>0 &lt;= edges[i][2] &lt;= 10000</code></li>\n\t<li><code>0 &lt;= M &lt;= 10^9</code></li>\n\t<li><code><font face=\"monospace\">1 &lt;= N &lt;= 3000</font></code></li>\n\t<li>A reachable node is a node that can be travelled to&nbsp;using at most&nbsp;M moves starting from&nbsp;node 0.</li>\n</ol>\n\n<div>\n<div>&nbsp;</div>\n</div>\n"
    },
    {
        "id": "875",
        "title": "Koko Eating Bananas",
        "slug": "koko-eating-bananas",
        "difficulty": "Medium",
        "likes": 353,
        "dislikes": 35,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Minimize Max Distance to Gas Station\", \"titleSlug\": \"minimize-max-distance-to-gas-station\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "514",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Binary Search"
        ],
        "content": "<p>Koko loves to eat bananas.&nbsp; There are <code>N</code>&nbsp;piles of bananas, the <code>i</code>-th&nbsp;pile has <code>piles[i]</code> bananas.&nbsp; The guards have gone and will come back in <code>H</code> hours.</p>\n\n<p>Koko can decide her bananas-per-hour eating speed of <code>K</code>.&nbsp; Each hour, she chooses some pile of bananas, and eats K bananas from that pile.&nbsp; If the pile has less than <code>K</code> bananas, she eats all of them instead, and won&#39;t eat any more bananas during this hour.</p>\n\n<p>Koko likes to eat slowly, but still wants to finish eating all the bananas before the guards come back.</p>\n\n<p>Return the minimum integer <code>K</code> such that she can eat all the bananas within <code>H</code> hours.</p>\n\n<p>&nbsp;</p>\n\n<ul>\n</ul>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>piles = <span id=\"example-input-1-1\">[3,6,7,11]</span>, H = <span id=\"example-input-1-2\">8</span>\n<strong>Output: </strong><span id=\"example-output-1\">4</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>piles = <span id=\"example-input-2-1\">[30,11,23,4,20]</span>, H = <span id=\"example-input-2-2\">5</span>\n<strong>Output: </strong><span id=\"example-output-2\">30</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>piles = <span id=\"example-input-3-1\">[30,11,23,4,20]</span>, H = <span id=\"example-input-3-2\">6</span>\n<strong>Output: </strong><span id=\"example-output-3\">23</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= piles.length &lt;= 10^4</code></li>\n\t<li><code>piles.length &lt;= H &lt;= 10^9</code></li>\n\t<li><code>1 &lt;= piles[i] &lt;= 10^9</code></li>\n</ul>\n</div>\n</div>\n</div>\n"
    },
    {
        "id": "780",
        "title": "Reaching Points",
        "slug": "reaching-points",
        "difficulty": "Hard",
        "likes": 272,
        "dislikes": 54,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "413",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math"
        ],
        "content": "<p>A move consists of taking a point <code>(x, y)</code> and transforming it to either <code>(x, x+y)</code> or <code>(x+y, y)</code>.</p>\n\n<p>Given a starting point <code>(sx, sy)</code> and a target point <code>(tx, ty)</code>, return <code>True</code> if and only if a sequence of moves exists to transform the point <code>(sx, sy)</code> to <code>(tx, ty)</code>. Otherwise, return <code>False</code>.</p>\n\n<pre>\n<strong>Examples:</strong>\n<strong>Input:</strong> sx = 1, sy = 1, tx = 3, ty = 5\n<strong>Output:</strong> True\n<strong>Explanation:</strong>\nOne series of moves that transforms the starting point to the target is:\n(1, 1) -&gt; (1, 2)\n(1, 2) -&gt; (3, 2)\n(3, 2) -&gt; (3, 5)\n\n<strong>Input:</strong> sx = 1, sy = 1, tx = 2, ty = 2\n<strong>Output:</strong> False\n\n<strong>Input:</strong> sx = 1, sy = 1, tx = 1, ty = 1\n<strong>Output:</strong> True\n\n</pre>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li><code>sx, sy, tx, ty</code> will all be integers in the range <code>[1, 10^9]</code>.</li>\n</ul>\n"
    },
    {
        "id": "626",
        "title": "Exchange Seats",
        "slug": "exchange-seats",
        "difficulty": "Medium",
        "likes": 198,
        "dislikes": 185,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "195",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [],
        "content": "<p>Mary is a teacher in a middle school and she has a table <code>seat</code> storing students&#39; names and their corresponding seat ids.</p>\nThe column <b>id</b> is continuous increment.\n\n<p>&nbsp;</p>\nMary wants to change seats for the adjacent students.\n\n<p>&nbsp;</p>\nCan you write a SQL query to output the result for Mary?\n\n<p>&nbsp;</p>\n\n<pre>\n+---------+---------+\n|    id   | student |\n+---------+---------+\n|    1    | Abbot   |\n|    2    | Doris   |\n|    3    | Emerson |\n|    4    | Green   |\n|    5    | Jeames  |\n+---------+---------+\n</pre>\nFor the sample input, the output is:\n\n<p>&nbsp;</p>\n\n<pre>\n+---------+---------+\n|    id   | student |\n+---------+---------+\n|    1    | Doris   |\n|    2    | Abbot   |\n|    3    | Green   |\n|    4    | Emerson |\n|    5    | Jeames  |\n+---------+---------+\n</pre>\n\n<p><b>Note:</b><br />\nIf the number of students is odd, there is no need to change the last one&#39;s seat.</p>\n"
    },
    {
        "id": "83",
        "title": "Remove Duplicates from Sorted List",
        "slug": "remove-duplicates-from-sorted-list",
        "difficulty": "Easy",
        "likes": 896,
        "dislikes": 86,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Remove Duplicates from Sorted List II\", \"titleSlug\": \"remove-duplicates-from-sorted-list-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "43",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Linked List"
        ],
        "content": "<p>Given a sorted linked list, delete all duplicates such that each element appear only <em>once</em>.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> 1-&gt;1-&gt;2\n<strong>Output:</strong> 1-&gt;2\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> 1-&gt;1-&gt;2-&gt;3-&gt;3\n<strong>Output:</strong> 1-&gt;2-&gt;3\n</pre>\n"
    },
    {
        "id": "46",
        "title": "Permutations",
        "slug": "permutations",
        "difficulty": "Medium",
        "likes": 2381,
        "dislikes": 75,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Next Permutation\", \"titleSlug\": \"next-permutation\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Permutations II\", \"titleSlug\": \"permutations-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Permutation Sequence\", \"titleSlug\": \"permutation-sequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Combinations\", \"titleSlug\": \"combinations\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "672",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Backtracking"
        ],
        "content": "<p>Given a collection of <strong>distinct</strong> integers, return all possible permutations.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input:</strong> [1,2,3]\n<strong>Output:</strong>\n[\n  [1,2,3],\n  [1,3,2],\n  [2,1,3],\n  [2,3,1],\n  [3,1,2],\n  [3,2,1]\n]\n</pre>\n"
    },
    {
        "id": "491",
        "title": "Increasing Subsequences",
        "slug": "increasing-subsequences",
        "difficulty": "Medium",
        "likes": 469,
        "dislikes": 87,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Maximum Length of Pair Chain\", \"titleSlug\": \"maximum-length-of-pair-chain\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Depth-first Search"
        ],
        "content": "<p>Given an integer array, your task is to find all the different possible increasing subsequences of the given array, and the length of an increasing subsequence should be at least 2.</p>\n\n<p>&nbsp;</p>\n\n<p><b>Example:</b></p>\n\n<pre>\n<b>Input:</b> [4, 6, 7, 7]\n<b>Output:</b> [[4, 6], [4, 7], [4, 6, 7], [4, 6, 7, 7], [6, 7], [6, 7, 7], [7,7], [4,7,7]]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b></p>\n\n<ol>\n\t<li>The length of the given array will not exceed 15.</li>\n\t<li>The range of integer in the given array is [-100,100].</li>\n\t<li>The given array may contain duplicates, and two equal integers should also be considered as a special case of increasing sequence.</li>\n</ol>\n"
    },
    {
        "id": "1146",
        "title": "Snapshot Array",
        "slug": "snapshot-array",
        "difficulty": "Medium",
        "likes": 114,
        "dislikes": 22,
        "hints": [
            "Use a list of lists, adding both the element and the snap_id to each index."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Array"
        ],
        "content": "<p>Implement a SnapshotArray that supports the following interface:</p>\n\n<ul>\n\t<li><code>SnapshotArray(int length)</code> initializes an array-like data structure with the given length.&nbsp; <strong>Initially, each element equals 0</strong>.</li>\n\t<li><code>void set(index, val)</code> sets the element at the given <code>index</code> to be equal to <code>val</code>.</li>\n\t<li><code>int snap()</code>&nbsp;takes a snapshot of the array and returns the <code>snap_id</code>: the total number of times we called <code>snap()</code> minus <code>1</code>.</li>\n\t<li><code>int get(index, snap_id)</code>&nbsp;returns the value at the given <code>index</code>, at the time we took the snapshot with the given <code>snap_id</code></li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> [&quot;SnapshotArray&quot;,&quot;set&quot;,&quot;snap&quot;,&quot;set&quot;,&quot;get&quot;]\n[[3],[0,5],[],[0,6],[0,0]]\n<strong>Output:</strong> [null,null,0,null,5]\n<strong>Explanation: </strong>\nSnapshotArray snapshotArr = new SnapshotArray(3); // set the length to be 3\nsnapshotArr.set(0,5);  // Set array[0] = 5\nsnapshotArr.snap();  // Take a snapshot, return snap_id = 0\nsnapshotArr.set(0,6);\nsnapshotArr.get(0,0);  // Get the value of array[0] with snap_id = 0, return 5</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= length&nbsp;&lt;= 50000</code></li>\n\t<li>At most <code>50000</code>&nbsp;calls will be made to <code>set</code>, <code>snap</code>, and <code>get</code>.</li>\n\t<li><code>0 &lt;= index&nbsp;&lt;&nbsp;length</code></li>\n\t<li><code>0 &lt;=&nbsp;snap_id &lt;&nbsp;</code>(the total number of times we call <code>snap()</code>)</li>\n\t<li><code>0 &lt;=&nbsp;val &lt;= 10^9</code></li>\n</ul>\n"
    },
    {
        "id": "398",
        "title": "Random Pick Index",
        "slug": "random-pick-index",
        "difficulty": "Medium",
        "likes": 290,
        "dislikes": 488,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Linked List Random Node\", \"titleSlug\": \"linked-list-random-node\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Random Pick with Blacklist\", \"titleSlug\": \"random-pick-with-blacklist\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Random Pick with Weight\", \"titleSlug\": \"random-pick-with-weight\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Reservoir Sampling"
        ],
        "content": "<p>Given an array of integers with possible duplicates, randomly output the index of a given target number. You can assume that the given target number must exist in the array.</p>\n\n<p><b>Note:</b><br />\nThe array size can be very large. Solution that uses too much extra space will not pass the judge.</p>\n\n<p><b>Example:</b></p>\n\n<pre>\nint[] nums = new int[] {1,2,3,3,3};\nSolution solution = new Solution(nums);\n\n// pick(3) should return either index 2, 3, or 4 randomly. Each index should have equal probability of returning.\nsolution.pick(3);\n\n// pick(1) should return 0. Since in the array only nums[0] is equal to 1.\nsolution.pick(1);\n</pre>\n"
    },
    {
        "id": "377",
        "title": "Combination Sum IV",
        "slug": "combination-sum-iv",
        "difficulty": "Medium",
        "likes": 902,
        "dislikes": 104,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Combination Sum\", \"titleSlug\": \"combination-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>Given an integer array with all positive numbers and no duplicates, find the number of possible combinations that add up to a positive integer target.</p>\n\n<p><b>Example:</b></p>\n\n<pre>\n<i><b>nums</b></i> = [1, 2, 3]\n<i><b>target</b></i> = 4\n\nThe possible combination ways are:\n(1, 1, 1, 1)\n(1, 1, 2)\n(1, 2, 1)\n(1, 3)\n(2, 1, 1)\n(2, 2)\n(3, 1)\n\nNote that different sequences are counted as different combinations.\n\nTherefore the output is <i><b>7</b></i>.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Follow up:</b><br />\nWhat if negative numbers are allowed in the given array?<br />\nHow does it change the problem?<br />\nWhat limitation we need to add to the question to allow negative numbers?</p>\n\n<p><b>Credits:</b><br />\nSpecial thanks to <a href=\"https://leetcode.com/pbrother/\">@pbrother</a> for adding this problem and creating all test cases.</p>\n"
    },
    {
        "id": "371",
        "title": "Sum of Two Integers",
        "slug": "sum-of-two-integers",
        "difficulty": "Easy",
        "likes": 841,
        "dislikes": 1560,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Add Two Numbers\", \"titleSlug\": \"add-two-numbers\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Bit Manipulation"
        ],
        "content": "<p>Calculate the sum of two integers <i>a</i> and <i>b</i>, but you are <b>not allowed</b> to use the operator <code>+</code> and <code>-</code>.</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>a = <span id=\"example-input-1-1\">1</span>, b = <span id=\"example-input-1-2\">2</span>\n<strong>Output: </strong><span id=\"example-output-1\">3</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>a = -<span id=\"example-input-2-1\">2</span>, b = <span id=\"example-input-2-2\">3</span>\n<strong>Output: </strong>1\n</pre>\n</div>\n</div>\n"
    },
    {
        "id": "665",
        "title": "Non-decreasing Array",
        "slug": "non-decreasing-array",
        "difficulty": "Easy",
        "likes": 1208,
        "dislikes": 273,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "239",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array"
        ],
        "content": "<p>\nGiven an array with <code>n</code> integers, your task is to check if it could become non-decreasing by modifying <b>at most</b> <code>1</code> element.\n</p>\n\n<p>\nWe define an array is non-decreasing if <code>array[i] <= array[i + 1]</code> holds for every <code>i</code> (1 <= i < n).\n</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> [4,2,3]\n<b>Output:</b> True\n<b>Explanation:</b> You could modify the first <code>4</code> to <code>1</code> to get a non-decreasing array.\n</pre>\n</p>\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b> [4,2,1]\n<b>Output:</b> False\n<b>Explanation:</b> You can't get a non-decreasing array by modify at most one element.\n</pre>\n</p>\n\n<p><b>Note:</b>\nThe <code>n</code> belongs to [1, 10,000].\n</p>"
    },
    {
        "id": "28",
        "title": "Implement strStr()",
        "slug": "implement-strstr",
        "difficulty": "Easy",
        "likes": 1026,
        "dislikes": 1479,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Shortest Palindrome\", \"titleSlug\": \"shortest-palindrome\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Repeated Substring Pattern\", \"titleSlug\": \"repeated-substring-pattern\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Two Pointers",
            "String"
        ],
        "content": "<p>Implement <a href=\"http://www.cplusplus.com/reference/cstring/strstr/\" target=\"_blank\">strStr()</a>.</p>\n\n<p>Return the index of the first occurrence of needle in haystack, or <strong>-1</strong> if needle is not part of haystack.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> haystack = &quot;hello&quot;, needle = &quot;ll&quot;\n<strong>Output:</strong> 2\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> haystack = &quot;aaaaa&quot;, needle = &quot;bba&quot;\n<strong>Output:</strong> -1\n</pre>\n\n<p><strong>Clarification:</strong></p>\n\n<p>What should we return when <code>needle</code> is an empty string? This is a great question to ask during an interview.</p>\n\n<p>For the purpose of this problem, we will return 0 when <code>needle</code> is an empty string. This is consistent to C&#39;s&nbsp;<a href=\"http://www.cplusplus.com/reference/cstring/strstr/\" target=\"_blank\">strstr()</a> and Java&#39;s&nbsp;<a href=\"https://docs.oracle.com/javase/7/docs/api/java/lang/String.html#indexOf(java.lang.String)\" target=\"_blank\">indexOf()</a>.</p>\n"
    },
    {
        "id": "80",
        "title": "Remove Duplicates from Sorted Array II",
        "slug": "remove-duplicates-from-sorted-array-ii",
        "difficulty": "Medium",
        "likes": 753,
        "dislikes": 577,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Remove Duplicates from Sorted Array\", \"titleSlug\": \"remove-duplicates-from-sorted-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Array",
            "Two Pointers"
        ],
        "content": "<p>Given a sorted array <em>nums</em>, remove the duplicates <a href=\"https://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\"><strong>in-place</strong></a> such that duplicates appeared at most&nbsp;<em>twice</em> and return the new length.</p>\n\n<p>Do not allocate extra space for another array, you must do this by <strong>modifying the input array <a href=\"https://en.wikipedia.org/wiki/In-place_algorithm\" target=\"_blank\">in-place</a></strong> with O(1) extra memory.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\nGiven <em>nums</em> = <strong>[1,1,1,2,2,3]</strong>,\n\nYour function should return length = <strong><code>5</code></strong>, with the first five elements of <em><code>nums</code></em> being <strong><code>1, 1, 2, 2</code></strong> and <strong>3</strong> respectively.\n\nIt doesn&#39;t matter what you leave beyond the returned length.</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\nGiven <em>nums</em> = <strong>[0,0,1,1,1,1,2,3,3]</strong>,\n\nYour function should return length = <strong><code>7</code></strong>, with the first seven elements of <em><code>nums</code></em> being modified to&nbsp;<strong><code>0</code></strong>, <strong>0</strong>, <strong>1</strong>, <strong>1</strong>, <strong>2</strong>, <strong>3</strong> and&nbsp;<strong>3</strong> respectively.\n\nIt doesn&#39;t matter what values are set beyond&nbsp;the returned length.\n</pre>\n\n<p><strong>Clarification:</strong></p>\n\n<p>Confused why the returned value is an integer but your answer is an array?</p>\n\n<p>Note that the input array is passed in by <strong>reference</strong>, which means modification to the input array will be known to the caller as well.</p>\n\n<p>Internally you can think of this:</p>\n\n<pre>\n// <strong>nums</strong> is passed in by reference. (i.e., without making a copy)\nint len = removeDuplicates(nums);\n\n// any modification to <strong>nums</strong> in your function would be known by the caller.\n// using the length returned by your function, it prints the first <strong>len</strong> elements.\nfor (int i = 0; i &lt; len; i++) {\n&nbsp; &nbsp; print(nums[i]);\n}\n</pre>\n"
    },
    {
        "id": "44",
        "title": "Wildcard Matching",
        "slug": "wildcard-matching",
        "difficulty": "Hard",
        "likes": 1259,
        "dislikes": 78,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Regular Expression Matching\", \"titleSlug\": \"regular-expression-matching\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "730",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String",
            "Dynamic Programming",
            "Backtracking",
            "Greedy"
        ],
        "content": "<p>Given an input string (<code>s</code>) and a pattern (<code>p</code>), implement wildcard pattern matching with support for <code>&#39;?&#39;</code> and <code>&#39;*&#39;</code>.</p>\n\n<pre>\n&#39;?&#39; Matches any single character.\n&#39;*&#39; Matches any sequence of characters (including the empty sequence).\n</pre>\n\n<p>The matching should cover the <strong>entire</strong> input string (not partial).</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li><code>s</code>&nbsp;could be empty and contains only lowercase letters <code>a-z</code>.</li>\n\t<li><code>p</code> could be empty and contains only lowercase letters <code>a-z</code>, and characters like <code><font face=\"monospace\">?</font></code>&nbsp;or&nbsp;<code>*</code>.</li>\n</ul>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong>\ns = &quot;aa&quot;\np = &quot;a&quot;\n<strong>Output:</strong> false\n<strong>Explanation:</strong> &quot;a&quot; does not match the entire string &quot;aa&quot;.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong>\ns = &quot;aa&quot;\np = &quot;*&quot;\n<strong>Output:</strong> true\n<strong>Explanation:</strong>&nbsp;&#39;*&#39; matches any sequence.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong>\ns = &quot;cb&quot;\np = &quot;?a&quot;\n<strong>Output:</strong> false\n<strong>Explanation:</strong>&nbsp;&#39;?&#39; matches &#39;c&#39;, but the second letter is &#39;a&#39;, which does not match &#39;b&#39;.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong>\ns = &quot;adceb&quot;\np = &quot;*a*b&quot;\n<strong>Output:</strong> true\n<strong>Explanation:</strong>&nbsp;The first &#39;*&#39; matches the empty sequence, while the second &#39;*&#39; matches the substring &quot;dce&quot;.\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong>\ns = &quot;acdcb&quot;\np = &quot;a*c?b&quot;\n<strong>Output:</strong> false\n</pre>\n"
    },
    {
        "id": "973",
        "title": "K Closest Points to Origin",
        "slug": "k-closest-points-to-origin",
        "difficulty": "Medium",
        "likes": 656,
        "dislikes": 61,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Kth Largest Element in an Array\", \"titleSlug\": \"kth-largest-element-in-an-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Top K Frequent Elements\", \"titleSlug\": \"top-k-frequent-elements\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Top K Frequent Words\", \"titleSlug\": \"top-k-frequent-words\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "667",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Divide and Conquer",
            "Heap",
            "Sort"
        ],
        "content": "<p>We have a list of <code>points</code>&nbsp;on the plane.&nbsp; Find the <code>K</code> closest points to the origin <code>(0, 0)</code>.</p>\n\n<p>(Here, the distance between two points on a plane is the Euclidean distance.)</p>\n\n<p>You may return the answer in any order.&nbsp; The&nbsp;answer is guaranteed to be unique (except for the order that it is in.)</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>points = <span id=\"example-input-1-1\">[[1,3],[-2,2]]</span>, K = <span id=\"example-input-1-2\">1</span>\n<strong>Output: </strong><span id=\"example-output-1\">[[-2,2]]</span>\n<strong>Explanation: </strong>\nThe distance between (1, 3) and the origin is sqrt(10).\nThe distance between (-2, 2) and the origin is sqrt(8).\nSince sqrt(8) &lt; sqrt(10), (-2, 2) is closer to the origin.\nWe only want the closest K = 1 points from the origin, so the answer is just [[-2,2]].\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>points = <span id=\"example-input-2-1\">[[3,3],[5,-1],[-2,4]]</span>, K = <span id=\"example-input-2-2\">2</span>\n<strong>Output: </strong><span id=\"example-output-2\">[[3,3],[-2,4]]</span>\n(The answer [[-2,4],[3,3]] would also be accepted.)\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= K &lt;= points.length &lt;= 10000</code></li>\n\t<li><code>-10000 &lt; points[i][0] &lt; 10000</code></li>\n\t<li><code>-10000 &lt; points[i][1] &lt; 10000</code></li>\n</ol>\n</div>\n</div>"
    },
    {
        "id": "482",
        "title": "License Key Formatting",
        "slug": "license-key-formatting",
        "difficulty": "Easy",
        "likes": 327,
        "dislikes": 554,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [],
        "content": "<p>You are given a license key represented as a string S which consists only alphanumeric character and dashes. The string is separated into N+1 groups by N dashes.</p>\n\n<p>Given a number K, we would want to reformat the strings such that each group contains <i>exactly</i> K characters, except for the first group which could be shorter than K, but still must contain at least one character. Furthermore, there must be a dash inserted between two groups and all lowercase letters should be converted to uppercase.</p>\n\n<p>Given a non-empty string S and a number K, format the string according to the rules described above.</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> S = \"5F3Z-2e-9-w\", K = 4\n\n<b>Output:</b> \"5F3Z-2E9W\"\n\n<b>Explanation:</b> The string S has been split into two parts, each part has 4 characters.\nNote that the two extra dashes are not needed and can be removed.\n</pre>\n</p>\n\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b> S = \"2-5g-3-J\", K = 2\n\n<b>Output:</b> \"2-5G-3J\"\n\n<b>Explanation:</b> The string S has been split into three parts, each part has 2 characters except the first part as it could be shorter as mentioned above.\n</pre>\n</p>\n\n<p><b>Note:</b><br>\n<ol>\n<li>The length of string S will not exceed 12,000, and K is a positive integer.</li>\n<li>String S consists only of alphanumerical characters (a-z and/or A-Z and/or 0-9) and dashes(-).</li>\n<li>String S is non-empty.</li>\n</ol>\n</p>"
    },
    {
        "id": "743",
        "title": "Network Delay Time",
        "slug": "network-delay-time",
        "difficulty": "Medium",
        "likes": 749,
        "dislikes": 181,
        "hints": [
            "We visit each node at some time, and if that time is better than the fastest time we've reached this node, we travel along outgoing edges in sorted order.  Alternatively, we could use Dijkstra's algorithm."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "335",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Heap",
            "Depth-first Search",
            "Breadth-first Search",
            "Graph"
        ],
        "content": "<p>There are <code>N</code> network nodes, labelled <code>1</code> to <code>N</code>.</p>\n\n<p>Given <code>times</code>, a list of travel times as <b>directed</b> edges <code>times[i] = (u, v, w)</code>, where <code>u</code> is the source node, <code>v</code> is the target node, and <code>w</code> is the time it takes for a signal to travel from source to target.</p>\n\n<p>Now, we send a signal from a certain node <code>K</code>. How long will it take for all nodes to receive the signal? If it is impossible, return <code>-1</code>.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<p><img alt=\"\" src=\"./img/network-delay-time_1.png\" style=\"width: 200px; height: 220px;\" /></p>\n\n<pre>\n<strong>Input: </strong>times = <span id=\"example-input-1-1\">[[2,1,1],[2,3,1],[3,4,1]]</span>, N = <span id=\"example-input-1-2\">4</span>, K = <span id=\"example-input-1-3\">2</span>\n<strong>Output: </strong><span id=\"example-output-1\">2</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b></p>\n\n<ol>\n\t<li><code>N</code> will be in the range <code>[1, 100]</code>.</li>\n\t<li><code>K</code> will be in the range <code>[1, N]</code>.</li>\n\t<li>The length of <code>times</code> will be in the range <code>[1, 6000]</code>.</li>\n\t<li>All edges <code>times[i] = (u, v, w)</code> will have <code>1 &lt;= u, v &lt;= N</code> and <code>0 &lt;= w &lt;= 100</code>.</li>\n</ol>\n"
    },
    {
        "id": "60",
        "title": "Permutation Sequence",
        "slug": "permutation-sequence",
        "difficulty": "Medium",
        "likes": 960,
        "dislikes": 257,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Next Permutation\", \"titleSlug\": \"next-permutation\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Permutations\", \"titleSlug\": \"permutations\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Math",
            "Backtracking"
        ],
        "content": "<p>The set <code>[1,2,3,...,<em>n</em>]</code> contains a total of <em>n</em>! unique permutations.</p>\n\n<p>By listing and labeling all of the permutations in order, we get the following sequence for <em>n</em> = 3:</p>\n\n<ol>\n\t<li><code>&quot;123&quot;</code></li>\n\t<li><code>&quot;132&quot;</code></li>\n\t<li><code>&quot;213&quot;</code></li>\n\t<li><code>&quot;231&quot;</code></li>\n\t<li><code>&quot;312&quot;</code></li>\n\t<li><code>&quot;321&quot;</code></li>\n</ol>\n\n<p>Given <em>n</em> and <em>k</em>, return the <em>k</em><sup>th</sup> permutation sequence.</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>Given <em>n</em> will be between 1 and 9 inclusive.</li>\n\t<li>Given&nbsp;<em>k</em>&nbsp;will be between 1 and <em>n</em>! inclusive.</li>\n</ul>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 3, k = 3\n<strong>Output:</strong> &quot;213&quot;\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 4, k = 9\n<strong>Output:</strong> &quot;2314&quot;\n</pre>\n"
    },
    {
        "id": "1052",
        "title": "Grumpy Bookstore Owner",
        "slug": "grumpy-bookstore-owner",
        "difficulty": "Medium",
        "likes": 131,
        "dislikes": 13,
        "hints": [
            "Say the store owner uses their power in minute 1 to X and we have some answer A.  If they instead use their power from minute 2 to X+1, we only have to use data from minutes 1, 2, X and X+1 to update our answer A."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Array",
            "Sliding Window"
        ],
        "content": "<p>Today, the bookstore owner has a store open for <code>customers.length</code> minutes.&nbsp; Every minute, some number of customers (<code>customers[i]</code>) enter the store, and all those customers leave after the end of that minute.</p>\n\n<p>On some minutes, the bookstore owner is grumpy.&nbsp; If the bookstore owner is grumpy on the i-th minute, <code>grumpy[i] = 1</code>, otherwise <code>grumpy[i] = 0</code>.&nbsp; When the bookstore owner is grumpy, the customers of that minute are not satisfied, otherwise they are satisfied.</p>\n\n<p>The bookstore owner knows a secret technique to keep themselves&nbsp;not grumpy for <code>X</code>&nbsp;minutes straight, but can only use it once.</p>\n\n<p>Return the maximum number of customers that can be satisfied throughout the day.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>customers = [1,0,1,2,1,1,7,5], grumpy = [0,1,0,1,0,1,0,1], X = 3\n<strong>Output: </strong>16\n<strong>Explanation:</strong>&nbsp;The bookstore owner keeps themselves&nbsp;not grumpy for the last 3 minutes. \nThe maximum number of customers that can be satisfied = 1 + 1 + 1 + 1 + 7 + 5 = 16.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= X &lt;=&nbsp;customers.length ==&nbsp;grumpy.length &lt;= 20000</code></li>\n\t<li><code>0 &lt;=&nbsp;customers[i] &lt;= 1000</code></li>\n\t<li><code>0 &lt;=&nbsp;grumpy[i] &lt;= 1</code></li>\n</ul>"
    },
    {
        "id": "731",
        "title": "My Calendar II",
        "slug": "my-calendar-ii",
        "difficulty": "Medium",
        "likes": 419,
        "dislikes": 66,
        "hints": [
            "Store two sorted lists of intervals: one list will be all times that are at least single booked, and another list will be all times that are definitely double booked.  If none of the double bookings conflict, then the booking will succeed, and you should update your single and double bookings accordingly."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"My Calendar I\", \"titleSlug\": \"my-calendar-i\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"My Calendar III\", \"titleSlug\": \"my-calendar-iii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "299",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Ordered Map"
        ],
        "content": "<p>Implement a <code>MyCalendarTwo</code> class to store your events. A new event can be added if adding the event will not cause a <b>triple</b> booking.</p>\n\n<p>Your class will have one method, <code>book(int start, int end)</code>. Formally, this represents a booking on the half open interval <code>[start, end)</code>, the range of real numbers <code>x</code> such that <code>start &lt;= x &lt; end</code>.</p>\n\n<p>A <i>triple booking</i> happens when <b>three</b> events have some non-empty intersection (ie., there is some time that is common to all 3 events.)</p>\n\n<p>For each call to the method <code>MyCalendar.book</code>, return <code>true</code> if the event can be added to the calendar successfully without causing a <b>triple</b> booking. Otherwise, return <code>false</code> and do not add the event to the calendar.</p>\nYour class will be called like this: <code>MyCalendar cal = new MyCalendar();</code> <code>MyCalendar.book(start, end)</code>\n\n<p><b>Example 1:</b></p>\n\n<pre>\nMyCalendar();\nMyCalendar.book(10, 20); // returns true\nMyCalendar.book(50, 60); // returns true\nMyCalendar.book(10, 40); // returns true\nMyCalendar.book(5, 15); // returns false\nMyCalendar.book(5, 10); // returns true\nMyCalendar.book(25, 55); // returns true\n<b>Explanation:</b> \nThe first two events can be booked.  The third event can be double booked.\nThe fourth event (5, 15) can&#39;t be booked, because it would result in a triple booking.\nThe fifth event (5, 10) can be booked, as it does not use time 10 which is already double booked.\nThe sixth event (25, 55) can be booked, as the time in [25, 40) will be double booked with the third event;\nthe time [40, 50) will be single booked, and the time [50, 55) will be double booked with the second event.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b></p>\n\n<ul>\n\t<li>The number of calls to <code>MyCalendar.book</code> per test case will be at most <code>1000</code>.</li>\n\t<li>In calls to <code>MyCalendar.book(start, end)</code>, <code>start</code> and <code>end</code> are integers in the range <code>[0, 10^9]</code>.</li>\n</ul>\n\n<p>&nbsp;</p>"
    },
    {
        "id": "137",
        "title": "Single Number II",
        "slug": "single-number-ii",
        "difficulty": "Medium",
        "likes": 947,
        "dislikes": 268,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Single Number\", \"titleSlug\": \"single-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Single Number III\", \"titleSlug\": \"single-number-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "758",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Bit Manipulation"
        ],
        "content": "<p>Given a <strong>non-empty</strong>&nbsp;array of integers, every element appears <em>three</em> times except for one, which appears exactly once. Find that single one.</p>\n\n<p><strong>Note:</strong></p>\n\n<p>Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> [2,2,3,2]\n<strong>Output:</strong> 3\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> [0,1,0,1,0,1,99]\n<strong>Output:</strong> 99</pre>\n"
    },
    {
        "id": "671",
        "title": "Second Minimum Node In a Binary Tree",
        "slug": "second-minimum-node-in-a-binary-tree",
        "difficulty": "Easy",
        "likes": 421,
        "dislikes": 633,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Kth Smallest Element in a BST\", \"titleSlug\": \"kth-smallest-element-in-a-bst\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "244",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree"
        ],
        "content": "<p>Given a non-empty special binary tree consisting of nodes with the non-negative value, where each node in this tree has exactly <code>two</code> or <code>zero</code> sub-node. If the node has two sub-nodes, then this node&#39;s value is the smaller value among its two sub-nodes. More formally, the property&nbsp;<code>root.val = min(root.left.val, root.right.val)</code>&nbsp;always holds.</p>\n\n<p>Given such a binary tree, you need to output the <b>second minimum</b> value in the set made of all the nodes&#39; value in the whole tree.</p>\n\n<p>If no such second minimum value exists, output -1 instead.</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> \n    2\n   / \\\n  2   5\n     / \\\n    5   7\n\n<b>Output:</b> 5\n<b>Explanation:</b> The smallest value is 2, the second smallest value is 5.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input:</b> \n    2\n   / \\\n  2   2\n\n<b>Output:</b> -1\n<b>Explanation:</b> The smallest value is 2, but there isn&#39;t any second smallest value.\n</pre>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "753",
        "title": "Cracking the Safe",
        "slug": "cracking-the-safe",
        "difficulty": "Hard",
        "likes": 315,
        "dislikes": 356,
        "hints": [
            "We can think of this problem as the problem of finding an Euler path (a path visiting every edge exactly once) on the following graph: there are $$k^{n-1}$$ nodes with each node having $$k$$ edges.  It turns out this graph always has an Eulerian circuit (path starting where it ends.)\r\n\r\nWe should visit each node in \"post-order\" so as to not get stuck in the graph prematurely."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "356",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math",
            "Depth-first Search"
        ],
        "content": "<p>There is a box protected by a password. The password is a sequence of&nbsp;<code>n</code> digits&nbsp;where each digit can be one of the first <code>k</code> digits <code>0, 1, ..., k-1</code>.</p>\n\n<p>While entering a password,&nbsp;the last <code>n</code> digits entered will automatically be matched against the correct password.</p>\n\n<p>For example, assuming the correct password is <code>&quot;345&quot;</code>,&nbsp;if you type <code>&quot;012345&quot;</code>, the box will open because the correct password matches the suffix of the entered password.</p>\n\n<p>Return any password of <strong>minimum length</strong> that is guaranteed to open the box at some point of entering it.</p>\n\n<p>&nbsp;</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> n = 1, k = 2\n<b>Output:</b> &quot;01&quot;\n<b>Note:</b> &quot;10&quot; will be accepted too.\n</pre>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input:</b> n = 2, k = 2\n<b>Output:</b> &quot;00110&quot;\n<b>Note:</b> &quot;01100&quot;, &quot;10011&quot;, &quot;11001&quot; will be accepted too.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b></p>\n\n<ol>\n\t<li><code>n</code> will be in the range <code>[1, 4]</code>.</li>\n\t<li><code>k</code> will be in the range <code>[1, 10]</code>.</li>\n\t<li><code>k^n</code> will be at most <code>4096</code>.</li>\n</ol>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "203",
        "title": "Remove Linked List Elements",
        "slug": "remove-linked-list-elements",
        "difficulty": "Easy",
        "likes": 944,
        "dislikes": 59,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Remove Element\", \"titleSlug\": \"remove-element\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Delete Node in a Linked List\", \"titleSlug\": \"delete-node-in-a-linked-list\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Linked List"
        ],
        "content": "<p>Remove all elements from a linked list of integers that have value <b><i>val</i></b>.</p>\n\n<p><b>Example:</b></p>\n\n<pre>\n<b>Input:</b>  1-&gt;2-&gt;6-&gt;3-&gt;4-&gt;5-&gt;6, <em><b>val</b></em> = 6\n<b>Output:</b> 1-&gt;2-&gt;3-&gt;4-&gt;5\n</pre>\n"
    },
    {
        "id": "101",
        "title": "Symmetric Tree",
        "slug": "symmetric-tree",
        "difficulty": "Easy",
        "likes": 2605,
        "dislikes": 57,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "42",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree",
            "Depth-first Search",
            "Breadth-first Search"
        ],
        "content": "<p>Given a binary tree, check whether it is a mirror of itself (ie, symmetric around its center).</p>\n\n<p>For example, this binary tree <code>[1,2,2,3,4,4,3]</code> is symmetric:</p>\n\n<pre>\n    1\n   / \\\n  2   2\n / \\ / \\\n3  4 4  3\n</pre>\n\n<p>&nbsp;</p>\n\n<p>But the following <code>[1,2,2,null,3,null,3]</code> is not:</p>\n\n<pre>\n    1\n   / \\\n  2   2\n   \\   \\\n   3    3\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b><br />\nBonus points if you could solve it both recursively and iteratively.</p>\n"
    },
    {
        "id": "383",
        "title": "Ransom Note",
        "slug": "ransom-note",
        "difficulty": "Easy",
        "likes": 356,
        "dislikes": 134,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Stickers to Spell Word\", \"titleSlug\": \"stickers-to-spell-word\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "String"
        ],
        "content": "<p>\nGiven an arbitrary ransom note string and another string containing letters from all the magazines, write a function that will return true if the ransom \nnote can be constructed from the magazines ; otherwise, it will return false. \n</p>\n<p>\nEach letter in the magazine string can only be used once in your ransom note.\n</p>\n\n<p><b>Note:</b><br />\nYou may assume that both strings contain only lowercase letters.\n</p>\n\n<pre>\ncanConstruct(\"a\", \"b\") -> false\ncanConstruct(\"aa\", \"ab\") -> false\ncanConstruct(\"aa\", \"aab\") -> true\n</pre>\n"
    },
    {
        "id": "805",
        "title": "Split Array With Same Average",
        "slug": "split-array-with-same-average",
        "difficulty": "Hard",
        "likes": 248,
        "dislikes": 51,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "438",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math"
        ],
        "content": "<p>In a given integer array A, we must move every element of A to either list B or list C. (B and C initially start empty.)</p>\n\n<p>Return true if and only if after such a move, it is possible that the average value of B is equal to the average value of C, and B and C are both non-empty.</p>\n\n<pre>\n<strong>Example :</strong>\n<strong>Input:</strong> \n[1,2,3,4,5,6,7,8]\n<strong>Output:</strong> true\n<strong>Explanation: </strong>We can split the array into [1,4,5,8] and [2,3,6,7], and both of them have the average of 4.5.\n</pre>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>The length of <code>A</code> will be in the range&nbsp;[1, 30].</li>\n\t<li><code>A[i]</code> will be in the range of <code>[0, 10000]</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "583",
        "title": "Delete Operation for Two Strings",
        "slug": "delete-operation-for-two-strings",
        "difficulty": "Medium",
        "likes": 773,
        "dislikes": 20,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Edit Distance\", \"titleSlug\": \"edit-distance\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Minimum ASCII Delete Sum for Two Strings\", \"titleSlug\": \"minimum-ascii-delete-sum-for-two-strings\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Longest Common Subsequence\", \"titleSlug\": \"longest-common-subsequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "137",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String"
        ],
        "content": "<p>\nGiven two words <i>word1</i> and <i>word2</i>, find the minimum number of steps required to make <i>word1</i> and <i>word2</i> the same, where in each step you can delete one character in either string.\n</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> \"sea\", \"eat\"\n<b>Output:</b> 2\n<b>Explanation:</b> You need one step to make \"sea\" to \"ea\" and another step to make \"eat\" to \"ea\".\n</pre>\n</p>\n\n<p><b>Note:</b><br>\n<ol>\n<li>The length of given words won't exceed 500.</li>\n<li>Characters in given words can only be lower-case letters.</li>\n</ol>\n</p>"
    },
    {
        "id": "178",
        "title": "Rank Scores",
        "slug": "rank-scores",
        "difficulty": "Medium",
        "likes": 538,
        "dislikes": 79,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [],
        "content": "<p>Write a SQL query to rank scores. If there is a tie between two scores, both should have the same ranking. Note that after a tie, the next ranking number should be the next consecutive integer value. In other words, there should be no &quot;holes&quot; between ranks.</p>\n\n<pre>\n+----+-------+\n| Id | Score |\n+----+-------+\n| 1  | 3.50  |\n| 2  | 3.65  |\n| 3  | 4.00  |\n| 4  | 3.85  |\n| 5  | 4.00  |\n| 6  | 3.65  |\n+----+-------+\n</pre>\n\n<p>For example, given the above <code>Scores</code> table, your query should generate the following report (order by highest score):</p>\n\n<pre>\n+-------+------+\n| Score | Rank |\n+-------+------+\n| 4.00  | 1    |\n| 4.00  | 1    |\n| 3.85  | 2    |\n|&nbsp;3.65  | 3    |\n| 3.65  | 3    |\n| 3.50  | 4    |\n+-------+------+\n</pre>\n"
    },
    {
        "id": "1147",
        "title": "Longest Chunked Palindrome Decomposition",
        "slug": "longest-chunked-palindrome-decomposition",
        "difficulty": "Hard",
        "likes": 75,
        "dislikes": 7,
        "hints": [
            "Using a rolling hash, we can quickly check whether two strings are equal.",
            "Use that as the basis of a dp."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Dynamic Programming",
            "Rolling Hash"
        ],
        "content": "<p>Return the largest possible <code>k</code>&nbsp;such that there exists&nbsp;<code>a_1, a_2, ..., a_k</code>&nbsp;such that:</p>\n\n<ul>\n\t<li>Each <code>a_i</code> is a non-empty string;</li>\n\t<li>Their concatenation <code>a_1 + a_2 + ... + a_k</code> is equal to <code>text</code>;</li>\n\t<li>For all <code>1 &lt;= i &lt;= k</code>,&nbsp;&nbsp;<code>a_i = a_{k+1 - i}</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> text = &quot;ghiabcdefhelloadamhelloabcdefghi&quot;\n<strong>Output:</strong> 7\n<strong>Explanation:</strong> We can split the string on &quot;(ghi)(abcdef)(hello)(adam)(hello)(abcdef)(ghi)&quot;.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> text = &quot;merchant&quot;\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> We can split the string on &quot;(merchant)&quot;.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> text = &quot;antaprezatepzapreanta&quot;\n<strong>Output:</strong> 11\n<strong>Explanation:</strong> We can split the string on &quot;(a)(nt)(a)(pre)(za)(tpe)(za)(pre)(a)(nt)(a)&quot;.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> text = &quot;aaa&quot;\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> We can split the string on &quot;(a)(a)(a)&quot;.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>text</code> consists only of lowercase English characters.</li>\n\t<li><code>1 &lt;= text.length &lt;= 1000</code></li>\n</ul>"
    },
    {
        "id": "98",
        "title": "Validate Binary Search Tree",
        "slug": "validate-binary-search-tree",
        "difficulty": "Medium",
        "likes": 2327,
        "dislikes": 348,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Binary Tree Inorder Traversal\", \"titleSlug\": \"binary-tree-inorder-traversal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find Mode in Binary Search Tree\", \"titleSlug\": \"find-mode-in-binary-search-tree\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "639",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree",
            "Depth-first Search"
        ],
        "content": "<p>Given a binary tree, determine if it is a valid binary search tree (BST).</p>\n\n<p>Assume a BST is defined as follows:</p>\n\n<ul>\n\t<li>The left subtree of a node contains only nodes with keys <strong>less than</strong> the node&#39;s key.</li>\n\t<li>The right subtree of a node contains only nodes with keys <strong>greater than</strong> the node&#39;s key.</li>\n\t<li>Both the left and right subtrees must also be binary search trees.</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n    2\n   / \\\n  1   3\n\n<strong>Input:</strong>&nbsp;[2,1,3]\n<strong>Output:</strong> true\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n    5\n   / \\\n  1   4\n&nbsp;    / \\\n&nbsp;   3   6\n\n<strong>Input:</strong> [5,1,4,null,null,3,6]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> The root node&#39;s value is 5 but its right child&#39;s value is 4.\n</pre>\n"
    },
    {
        "id": "891",
        "title": "Sum of Subsequence Widths",
        "slug": "sum-of-subsequence-widths",
        "difficulty": "Hard",
        "likes": 140,
        "dislikes": 81,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "535",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Math"
        ],
        "content": "<p>Given an array of integers <code>A</code>, consider all non-empty subsequences of <code>A</code>.</p>\n\n<p>For any sequence S, let the&nbsp;<em>width</em>&nbsp;of S be the difference between the maximum and minimum element of S.</p>\n\n<p>Return the sum of the widths of all subsequences of A.&nbsp;</p>\n\n<p>As the answer may be very large, <strong>return the answer modulo 10^9 + 7</strong>.</p>\n\n<div>\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[2,1,3]</span>\n<strong>Output: </strong><span id=\"example-output-1\">6</span>\n<strong>Explanation:\n</strong>Subsequences are [1], [2], [3], [2,1], [2,3], [1,3], [2,1,3].\nThe corresponding widths are 0, 0, 0, 1, 1, 2, 2.\nThe sum of these widths is 6.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= A.length &lt;= 20000</code></li>\n\t<li><code>1 &lt;= A[i] &lt;= 20000</code></li>\n</ul>\n</div>\n"
    },
    {
        "id": "818",
        "title": "Race Car",
        "slug": "race-car",
        "difficulty": "Hard",
        "likes": 319,
        "dislikes": 36,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "448",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming",
            "Heap"
        ],
        "content": "<p>Your car starts at position 0 and speed +1 on an infinite number line.&nbsp; (Your car can go into negative positions.)</p>\n\n<p>Your car drives automatically according to a sequence of instructions A (accelerate) and R (reverse).</p>\n\n<p>When you get an instruction &quot;A&quot;, your car does the following:&nbsp;<code>position += speed, speed *= 2</code>.</p>\n\n<p>When you get an instruction &quot;R&quot;, your car does the following: if your speed is positive then&nbsp;<code>speed = -1</code>&nbsp;, otherwise&nbsp;<code>speed = 1</code>.&nbsp; (Your position stays the same.)</p>\n\n<p>For example, after commands &quot;AAR&quot;, your car goes to positions 0-&gt;1-&gt;3-&gt;3, and your speed goes to 1-&gt;2-&gt;4-&gt;-1.</p>\n\n<p>Now for some target position, say the <strong>length</strong> of the shortest sequence of instructions to get there.</p>\n\n<pre>\n<strong>Example 1:</strong>\n<strong>Input:</strong> \ntarget = 3\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> \nThe shortest instruction sequence is &quot;AA&quot;.\nYour position goes from 0-&gt;1-&gt;3.\n</pre>\n\n<pre>\n<strong>Example 2:</strong>\n<strong>Input:</strong> \ntarget = 6\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> \nThe shortest instruction sequence is &quot;AAARA&quot;.\nYour position goes from 0-&gt;1-&gt;3-&gt;7-&gt;7-&gt;6.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note: </strong></p>\n\n<ul>\n\t<li><code>1 &lt;= target &lt;= 10000</code>.</li>\n</ul>\n"
    },
    {
        "id": "816",
        "title": "Ambiguous Coordinates",
        "slug": "ambiguous-coordinates",
        "difficulty": "Medium",
        "likes": 85,
        "dislikes": 176,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "451",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String"
        ],
        "content": "<p>We had some 2-dimensional coordinates, like <code>&quot;(1, 3)&quot;</code> or <code>&quot;(2, 0.5)&quot;</code>.&nbsp; Then, we removed&nbsp;all commas, decimal points, and spaces, and ended up with the string&nbsp;<code>S</code>.&nbsp; Return a list of strings representing&nbsp;all possibilities for what our original coordinates could have been.</p>\n\n<p>Our original representation never had extraneous zeroes, so we never started with numbers like &quot;00&quot;, &quot;0.0&quot;, &quot;0.00&quot;, &quot;1.0&quot;, &quot;001&quot;, &quot;00.01&quot;, or any other number that can be represented with&nbsp;less digits.&nbsp; Also, a decimal point within a number never occurs without at least one digit occuring before it, so we never started with numbers like &quot;.1&quot;.</p>\n\n<p>The final answer list can be returned in any order.&nbsp; Also note that all coordinates in the final answer&nbsp;have exactly one space between them (occurring after the comma.)</p>\n\n<pre>\n<strong>Example 1:</strong>\n<strong>Input:</strong> &quot;(123)&quot;\n<strong>Output:</strong> [&quot;(1, 23)&quot;, &quot;(12, 3)&quot;, &quot;(1.2, 3)&quot;, &quot;(1, 2.3)&quot;]\n</pre>\n\n<pre>\n<strong>Example 2:</strong>\n<strong>Input:</strong> &quot;(00011)&quot;\n<strong>Output:</strong> &nbsp;[&quot;(0.001, 1)&quot;, &quot;(0, 0.011)&quot;]\n<strong>Explanation:</strong> \n0.0, 00, 0001 or 00.01 are not allowed.\n</pre>\n\n<pre>\n<strong>Example 3:</strong>\n<strong>Input:</strong> &quot;(0123)&quot;\n<strong>Output:</strong> [&quot;(0, 123)&quot;, &quot;(0, 12.3)&quot;, &quot;(0, 1.23)&quot;, &quot;(0.1, 23)&quot;, &quot;(0.1, 2.3)&quot;, &quot;(0.12, 3)&quot;]\n</pre>\n\n<pre>\n<strong>Example 4:</strong>\n<strong>Input:</strong> &quot;(100)&quot;\n<strong>Output:</strong> [(10, 0)]\n<strong>Explanation:</strong> \n1.0 is not allowed.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note: </strong></p>\n\n<ul>\n\t<li><code>4 &lt;= S.length &lt;= 12</code>.</li>\n\t<li><code>S[0]</code> = &quot;(&quot;, <code>S[S.length - 1]</code> = &quot;)&quot;, and the other elements in <code>S</code> are digits.</li>\n</ul>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "221",
        "title": "Maximal Square",
        "slug": "maximal-square",
        "difficulty": "Medium",
        "likes": 1541,
        "dislikes": 36,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Maximal Rectangle\", \"titleSlug\": \"maximal-rectangle\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Largest Plus Sign\", \"titleSlug\": \"largest-plus-sign\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "54",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>Given a 2D binary matrix filled with 0&#39;s and 1&#39;s, find the largest square containing only 1&#39;s and return its area.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input: \n</strong>\n1 0 1 0 0\n1 0 <font color=\"red\">1</font> <font color=\"red\">1</font> 1\n1 1 <font color=\"red\">1</font> <font color=\"red\">1</font> 1\n1 0 0 1 0\n\n<strong>Output: </strong>4\n</pre>"
    },
    {
        "id": "1177",
        "title": "Can Make Palindrome from Substring",
        "slug": "can-make-palindrome-from-substring",
        "difficulty": "Medium",
        "likes": 73,
        "dislikes": 68,
        "hints": [
            "Since we can rearrange the substring, all we care about is the frequency of each character in that substring.",
            "How to find the character frequencies efficiently ?",
            "As a preprocess, calculate the accumulate frequency of all characters for all prefixes of the string.",
            "How to check if a substring can be changed to a palindrome given its characters frequency ?",
            "Count the number of odd frequencies, there can be at most one odd frequency in a palindrome."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Array",
            "String"
        ],
        "content": "<p>Given a string <code>s</code>, we make queries on substrings of <code>s</code>.</p>\n\n<p>For each query <code>queries[i] = [left, right, k]</code>, we may <strong>rearrange</strong>&nbsp;the substring <code>s[left], ..., s[right]</code>, and then choose <strong>up to</strong> <code>k</code> of them to replace with any lowercase English letter.&nbsp;</p>\n\n<p>If the substring&nbsp;is possible to be a&nbsp;palindrome string after the operations above, the result of the query is <code>true</code>.&nbsp;Otherwise, the result&nbsp;is <code>false</code>.</p>\n\n<p>Return an array <code>answer[]</code>, where <code>answer[i]</code> is the result of the <code>i</code>-th query <code>queries[i]</code>.</p>\n\n<p>Note that: Each letter is counted <strong>individually</strong> for replacement so&nbsp;if for example&nbsp;<code>s[left..right] = &quot;aaa&quot;</code>, and <code>k = 2</code>, we can only replace two of the letters.&nbsp; (Also, note that the initial string <code>s</code>&nbsp;is never modified by any query.)</p>\n\n<p>&nbsp;</p>\n<p><strong>Example :</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;abcda&quot;, queries = [[3,3,0],[1,2,0],[0,3,1],[0,3,2],[0,4,1]]\n<strong>Output:</strong> [true,false,false,true,true]\n<strong>Explanation:</strong>\nqueries[0] : substring = &quot;d&quot;, is palidrome.\nqueries[1] :&nbsp;substring = &quot;bc&quot;, is not palidrome.\nqueries[2] :&nbsp;substring = &quot;abcd&quot;, is not palidrome after replacing only 1 character.\nqueries[3] :&nbsp;substring = &quot;abcd&quot;, could be changed to &quot;abba&quot; which is palidrome. Also this can be changed to &quot;baab&quot; first rearrange it &quot;bacd&quot; then replace &quot;cd&quot; with &quot;ab&quot;.\nqueries[4] :&nbsp;substring = &quot;abcda&quot;,&nbsp;could be changed to &quot;abcba&quot; which is palidrome.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= s.length,&nbsp;queries.length&nbsp;&lt;= 10^5</code></li>\n\t<li><code>0 &lt;= queries[i][0] &lt;= queries[i][1] &lt;&nbsp;s.length</code></li>\n\t<li><code>0 &lt;= queries[i][2] &lt;= s.length</code></li>\n\t<li><code>s</code> only contains lowercase English letters.</li>\n</ul>\n"
    },
    {
        "id": "844",
        "title": "Backspace String Compare",
        "slug": "backspace-string-compare",
        "difficulty": "Easy",
        "likes": 767,
        "dislikes": 49,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "476",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Two Pointers",
            "Stack"
        ],
        "content": "<p>Given two&nbsp;strings&nbsp;<code>S</code>&nbsp;and <code>T</code>,&nbsp;return if they are equal when both are typed into empty text editors. <code>#</code> means a backspace character.</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>S = <span id=\"example-input-1-1\">&quot;ab#c&quot;</span>, T = <span id=\"example-input-1-2\">&quot;ad#c&quot;</span>\n<strong>Output: </strong><span id=\"example-output-1\">true\n</span><span><strong>Explanation</strong>: Both S and T become &quot;ac&quot;.</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>S = <span id=\"example-input-2-1\">&quot;ab##&quot;</span>, T = <span id=\"example-input-2-2\">&quot;c#d#&quot;</span>\n<strong>Output: </strong><span id=\"example-output-2\">true\n</span><span><strong>Explanation</strong>: Both S and T become &quot;&quot;.</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>S = <span id=\"example-input-3-1\">&quot;a##c&quot;</span>, T = <span id=\"example-input-3-2\">&quot;#a#c&quot;</span>\n<strong>Output: </strong><span id=\"example-output-3\">true\n</span><span><strong>Explanation</strong>: Both S and T become &quot;c&quot;.</span>\n</pre>\n\n<div>\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input: </strong>S = <span id=\"example-input-4-1\">&quot;a#c&quot;</span>, T = <span id=\"example-input-4-2\">&quot;b&quot;</span>\n<strong>Output: </strong><span id=\"example-output-4\">false\n</span><span><strong>Explanation</strong>: S becomes &quot;c&quot; while T becomes &quot;b&quot;.</span>\n</pre>\n\n<p><span><strong>Note</strong>:</span></p>\n\n<ol>\n\t<li><code><span>1 &lt;= S.length &lt;= 200</span></code></li>\n\t<li><code><span>1 &lt;= T.length &lt;= 200</span></code></li>\n\t<li><span><code>S</code>&nbsp;and <code>T</code> only contain&nbsp;lowercase letters and <code>&#39;#&#39;</code> characters.</span></li>\n</ol>\n\n<p><strong>Follow up:</strong></p>\n\n<ul>\n\t<li>Can you solve it in <code>O(N)</code> time and <code>O(1)</code> space?</li>\n</ul>\n</div>\n</div>\n</div>\n</div>\n"
    },
    {
        "id": "523",
        "title": "Continuous Subarray Sum",
        "slug": "continuous-subarray-sum",
        "difficulty": "Medium",
        "likes": 776,
        "dislikes": 1054,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Subarray Sum Equals K\", \"titleSlug\": \"subarray-sum-equals-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "107",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math",
            "Dynamic Programming"
        ],
        "content": "<p>Given a list of <b>non-negative</b> numbers and a target <b>integer</b> k, write a function to check if the array has a continuous subarray of size at least 2 that sums up to a multiple of <b>k</b>, that is, sums up to n*k where n is also an <b>integer</b>.</p>\n\n<p>&nbsp;</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> [23, 2, 4, 6, 7],  k=6\n<b>Output:</b> True\n<b>Explanation:</b> Because [2, 4] is a continuous subarray of size 2 and sums up to 6.\n</pre>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input:</b> [23, 2, 6, 4, 7],  k=6\n<b>Output:</b> True\n<b>Explanation:</b> Because [23, 2, 6, 4, 7] is an continuous subarray of size 5 and sums up to 42.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b></p>\n\n<ol>\n\t<li>The length of the array won&#39;t exceed 10,000.</li>\n\t<li>You may assume the sum of all the numbers is in the range of a signed 32-bit integer.</li>\n</ol>\n"
    },
    {
        "id": "920",
        "title": "Number of Music Playlists",
        "slug": "number-of-music-playlists",
        "difficulty": "Hard",
        "likes": 234,
        "dislikes": 31,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "580",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>Your music player contains <code>N</code>&nbsp;different songs and she wants to listen to <code>L</code><strong> </strong>(not necessarily different) songs during your trip. &nbsp;You&nbsp;create&nbsp;a playlist so&nbsp;that:</p>\n\n<ul>\n\t<li>Every song is played at least once</li>\n\t<li>A song can only be played again only if&nbsp;<code>K</code>&nbsp;other songs have been played</li>\n</ul>\n\n<p>Return the number of possible playlists.&nbsp; <strong>As the answer can be very large, return it modulo <code>10^9 + 7</code></strong>.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<div>\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>N = <span id=\"example-input-1-1\">3</span>, L = <span id=\"example-input-1-2\">3</span>, K = <span id=\"example-input-1-3\">1</span>\n<strong>Output: </strong><span id=\"example-output-1\">6\n<strong>Explanation</strong>: </span><span>There are 6 possible playlists. [1, 2, 3], [1, 3, 2], [2, 1, 3], [2, 3, 1], [3, 1, 2], [3, 2, 1].</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>N = <span id=\"example-input-2-1\">2</span>, L = <span id=\"example-input-2-2\">3</span>, K = <span id=\"example-input-2-3\">0</span>\n<strong>Output: </strong><span id=\"example-output-2\">6\n</span><span id=\"example-output-1\"><strong>Explanation</strong>: </span><span>There are 6 possible playlists. [1, 1, 2], [1, 2, 1], [2, 1, 1], [2, 2, 1], [2, 1, 2], [1, 2, 2]</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>N = <span id=\"example-input-3-1\">2</span>, L = <span id=\"example-input-3-2\">3</span>, K = <span id=\"example-input-3-3\">1</span>\n<strong>Output: </strong><span id=\"example-output-3\">2\n<strong>Explanation</strong>: </span><span>There are 2 possible playlists. [1, 2, 1], [2, 1, 2]</span>\n</pre>\n</div>\n</div>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>0 &lt;= K &lt; N &lt;= L &lt;= 100</code></li>\n</ol>\n</div>\n</div>\n</div>"
    },
    {
        "id": "966",
        "title": "Vowel Spellchecker",
        "slug": "vowel-spellchecker",
        "difficulty": "Medium",
        "likes": 77,
        "dislikes": 153,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "653",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Hash Table",
            "String"
        ],
        "content": "<p>Given a&nbsp;<code>wordlist</code>, we want to implement a spellchecker that converts a query word into a correct word.</p>\n\n<p>For a given <code>query</code> word, the spell checker handles two categories of spelling mistakes:</p>\n\n<ul>\n\t<li>Capitalization: If the query matches a word in the wordlist (<strong>case-insensitive</strong>), then the query word is returned with the same case as the case in the wordlist.\n\n\t<ul>\n\t\t<li>Example: <code>wordlist = [&quot;yellow&quot;]</code>, <code>query = &quot;YellOw&quot;</code>: <code>correct = &quot;yellow&quot;</code></li>\n\t\t<li>Example: <code>wordlist = [&quot;Yellow&quot;]</code>, <code>query = &quot;yellow&quot;</code>: <code>correct = &quot;Yellow&quot;</code></li>\n\t\t<li>Example: <code>wordlist = [&quot;yellow&quot;]</code>, <code>query = &quot;yellow&quot;</code>: <code>correct = &quot;yellow&quot;</code></li>\n\t</ul>\n\t</li>\n\t<li>Vowel Errors: If after replacing the vowels (&#39;a&#39;, &#39;e&#39;, &#39;i&#39;, &#39;o&#39;, &#39;u&#39;) of the query word with any vowel individually, it matches a word in the wordlist (<strong>case-insensitive</strong>), then the query word is returned with the same case as the match in the wordlist.\n\t<ul>\n\t\t<li>Example: <code>wordlist = [&quot;YellOw&quot;]</code>, <code>query = &quot;yollow&quot;</code>: <code>correct = &quot;YellOw&quot;</code></li>\n\t\t<li>Example: <code>wordlist = [&quot;YellOw&quot;]</code>, <code>query = &quot;yeellow&quot;</code>: <code>correct = &quot;&quot;</code> (no match)</li>\n\t\t<li>Example: <code>wordlist = [&quot;YellOw&quot;]</code>, <code>query = &quot;yllw&quot;</code>: <code>correct = &quot;&quot;</code> (no match)</li>\n\t</ul>\n\t</li>\n</ul>\n\n<p>In addition, the spell checker operates under the following precedence rules:</p>\n\n<ul>\n\t<li>When the query exactly matches a word in the wordlist (<strong>case-sensitive</strong>), you should return the same word back.</li>\n\t<li>When the query matches a word up to capitlization, you should return the first such match in the wordlist.</li>\n\t<li>When the query matches a word up to vowel errors, you should return the first such match in the wordlist.</li>\n\t<li>If the query has no matches in the wordlist, you should return the empty string.</li>\n</ul>\n\n<p>Given some <code>queries</code>, return a&nbsp;list of words <code>answer</code>, where <code>answer[i]</code>&nbsp;is&nbsp;the correct word for <code>query = queries[i]</code>.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>wordlist = <span id=\"example-input-1-1\">[&quot;KiTe&quot;,&quot;kite&quot;,&quot;hare&quot;,&quot;Hare&quot;]</span>, queries = <span id=\"example-input-1-2\">[&quot;kite&quot;,&quot;Kite&quot;,&quot;KiTe&quot;,&quot;Hare&quot;,&quot;HARE&quot;,&quot;Hear&quot;,&quot;hear&quot;,&quot;keti&quot;,&quot;keet&quot;,&quot;keto&quot;]</span>\n<strong>Output: </strong><span id=\"example-output-1\">[&quot;kite&quot;,&quot;KiTe&quot;,&quot;KiTe&quot;,&quot;Hare&quot;,&quot;hare&quot;,&quot;&quot;,&quot;&quot;,&quot;KiTe&quot;,&quot;&quot;,&quot;KiTe&quot;]</span></pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= wordlist.length &lt;= 5000</code></li>\n\t<li><code>1 &lt;= queries.length &lt;= 5000</code></li>\n\t<li><code>1 &lt;= wordlist[i].length &lt;= 7</code></li>\n\t<li><code>1 &lt;= queries[i].length &lt;= 7</code></li>\n\t<li>All strings in <code>wordlist</code> and <code>queries</code> consist only of <strong>english</strong>&nbsp;letters.</li>\n</ul>\n"
    },
    {
        "id": "172",
        "title": "Factorial Trailing Zeroes",
        "slug": "factorial-trailing-zeroes",
        "difficulty": "Easy",
        "likes": 543,
        "dislikes": 782,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Number of Digit One\", \"titleSlug\": \"number-of-digit-one\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Preimage Size of Factorial Zeroes Function\", \"titleSlug\": \"preimage-size-of-factorial-zeroes-function\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Math"
        ],
        "content": "<p>Given an integer <i>n</i>, return the number of trailing zeroes in <i>n</i>!.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> 3\n<strong>Output:</strong> 0\n<strong>Explanation:</strong>&nbsp;3! = 6, no trailing zero.</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> 5\n<strong>Output:</strong> 1\n<strong>Explanation:</strong>&nbsp;5! = 120, one trailing zero.</pre>\n\n<p><b>Note: </b>Your solution should be in logarithmic time complexity.</p>\n"
    },
    {
        "id": "647",
        "title": "Palindromic Substrings",
        "slug": "palindromic-substrings",
        "difficulty": "Medium",
        "likes": 1607,
        "dislikes": 82,
        "hints": [
            "How can we reuse a previously computed palindrome to compute a larger palindrome?",
            "If \u201caba\u201d is a palindrome, is \u201cxabax\u201d and palindrome? Similarly is \u201cxabay\u201d a palindrome?",
            "Complexity based hint:</br>\r\nIf we use brute-force and check whether for every start and end position a substring is a palindrome we have O(n^2) start - end pairs and O(n) palindromic checks. Can we reduce the time for palindromic checks to O(1) by reusing some previous computation?"
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Longest Palindromic Substring\", \"titleSlug\": \"longest-palindromic-substring\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Longest Palindromic Subsequence\", \"titleSlug\": \"longest-palindromic-subsequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Palindromic Substrings\", \"titleSlug\": \"palindromic-substrings\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "319",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String",
            "Dynamic Programming"
        ],
        "content": "<p>Given a string, your task is to count how many palindromic substrings in this string.</p>\n\n<p>The substrings with different start indexes or end indexes are counted as different substrings even they consist of same characters.</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> &quot;abc&quot;\n<b>Output:</b> 3\n<b>Explanation:</b> Three palindromic strings: &quot;a&quot;, &quot;b&quot;, &quot;c&quot;.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input:</b> &quot;aaa&quot;\n<b>Output:</b> 6\n<b>Explanation:</b> Six palindromic strings: &quot;a&quot;, &quot;a&quot;, &quot;a&quot;, &quot;aa&quot;, &quot;aa&quot;, &quot;aaa&quot;.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b></p>\n\n<ol>\n\t<li>The input string length won&#39;t exceed 1000.</li>\n</ol>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "941",
        "title": "Valid Mountain Array",
        "slug": "valid-mountain-array",
        "difficulty": "Easy",
        "likes": 194,
        "dislikes": 50,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "621",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array"
        ],
        "content": "<p>Given an array <code>A</code> of integers, return <code>true</code> if and only if it is a <em>valid mountain array</em>.</p>\n\n<p>Recall that A is a mountain array if and only if:</p>\n\n<ul>\n\t<li><code>A.length &gt;= 3</code></li>\n\t<li>There exists some <code>i</code> with&nbsp;<code>0 &lt; i&nbsp;&lt; A.length - 1</code>&nbsp;such that:\n\t<ul>\n\t\t<li><code>A[0] &lt; A[1] &lt; ... A[i-1] &lt; A[i] </code></li>\n\t\t<li><code>A[i] &gt; A[i+1] &gt; ... &gt; A[A.length - 1]</code></li>\n\t</ul>\n\t</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[2,1]</span>\n<strong>Output: </strong><span id=\"example-output-1\">false</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[3,5,5]</span>\n<strong>Output: </strong><span id=\"example-output-2\">false</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">[0,3,2,1]</span>\n<strong>Output: </strong><span id=\"example-output-3\">true</span></pre>\n</div>\n</div>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>0 &lt;= A.length &lt;= 10000</code></li>\n\t<li><code>0 &lt;= A[i] &lt;= 10000&nbsp;</code></li>\n</ol>\n\n<div>\n<p>&nbsp;</p>\n\n<div>\n<div>&nbsp;</div>\n</div>\n</div>\n"
    },
    {
        "id": "709",
        "title": "To Lower Case",
        "slug": "to-lower-case",
        "difficulty": "Easy",
        "likes": 328,
        "dislikes": 1130,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "String"
        ],
        "content": "<p>Implement function ToLowerCase() that has a string parameter str, and returns the same string in lowercase.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">&quot;Hello&quot;</span>\n<strong>Output: </strong><span id=\"example-output-1\">&quot;hello&quot;</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">&quot;here&quot;</span>\n<strong>Output: </strong><span id=\"example-output-2\">&quot;here&quot;</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">&quot;LOVELY&quot;</span>\n<strong>Output: </strong><span id=\"example-output-3\">&quot;lovely&quot;</span>\n</pre>\n</div>\n</div>\n</div>\n"
    },
    {
        "id": "1072",
        "title": "Flip Columns For Maximum Number of Equal Rows",
        "slug": "flip-columns-for-maximum-number-of-equal-rows",
        "difficulty": "Medium",
        "likes": 120,
        "dislikes": 12,
        "hints": [
            "Flipping a subset of columns is like doing a bitwise XOR of some number K onto each row.  We want rows X with X ^ K = all 0s or all 1s.  This is the same as X = X^K ^K = (all 0s or all 1s) ^ K, so we want to count rows that have opposite bits set.  For example, if K = 1, then we count rows X = (00000...001, or 1111....110)."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Hash Table"
        ],
        "content": "<p>Given a <code>matrix</code> consisting of 0s and 1s, we may choose any number of columns in the matrix and flip <strong>every</strong>&nbsp;cell in that column.&nbsp; Flipping a cell changes the value of that cell from 0 to 1 or from 1 to 0.</p>\n\n<p>Return the maximum number of rows that have all values equal after some number of flips.</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[[0,1],[1,1]]</span>\n<strong>Output: </strong><span id=\"example-output-1\">1</span>\n<strong>Explanation: </strong>After flipping no values, 1 row has all values equal.\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[[0,1],[1,0]]</span>\n<strong>Output: </strong><span id=\"example-output-2\">2</span>\n<strong>Explanation: </strong>After flipping values in the first column, both rows have equal values.\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">[[0,0,0],[0,0,1],[1,1,0]]</span>\n<strong>Output: </strong><span id=\"example-output-3\">2</span>\n<strong>Explanation: </strong>After flipping values in the first two columns, the last two rows have equal values.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= matrix.length &lt;= 300</code></li>\n\t<li><code>1 &lt;= matrix[i].length &lt;= 300</code></li>\n\t<li>All <code>matrix[i].length</code>&#39;s are equal</li>\n\t<li><code>matrix[i][j]</code> is&nbsp;<code>0</code> or <code>1</code></li>\n</ol>\n</div>\n</div>\n</div>"
    },
    {
        "id": "1129",
        "title": "Shortest Path with Alternating Colors",
        "slug": "shortest-path-with-alternating-colors",
        "difficulty": "Medium",
        "likes": 120,
        "dislikes": 5,
        "hints": [
            "Do a breadth-first search, where the \"nodes\" are actually (Node, color of last edge taken)."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Breadth-first Search",
            "Graph"
        ],
        "content": "<p>Consider a directed graph, with nodes labelled <code>0, 1, ..., n-1</code>.&nbsp; In this graph, each edge is either red or blue, and there could&nbsp;be self-edges or parallel edges.</p>\n\n<p>Each <code>[i, j]</code> in <code>red_edges</code> denotes a red directed edge from node <code>i</code> to node <code>j</code>.&nbsp; Similarly, each <code>[i, j]</code> in <code>blue_edges</code> denotes a blue directed edge from node <code>i</code> to node <code>j</code>.</p>\n\n<p>Return an array <code>answer</code>&nbsp;of length <code>n</code>,&nbsp;where each&nbsp;<code>answer[X]</code>&nbsp;is&nbsp;the length of the shortest path from node <code>0</code>&nbsp;to node <code>X</code>&nbsp;such that the edge colors alternate along the path (or <code>-1</code> if such a path doesn&#39;t exist).</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> n = 3, red_edges = [[0,1],[1,2]], blue_edges = []\n<strong>Output:</strong> [0,1,-1]\n</pre><p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> n = 3, red_edges = [[0,1]], blue_edges = [[2,1]]\n<strong>Output:</strong> [0,1,-1]\n</pre><p><strong>Example 3:</strong></p>\n<pre><strong>Input:</strong> n = 3, red_edges = [[1,0]], blue_edges = [[2,1]]\n<strong>Output:</strong> [0,-1,-1]\n</pre><p><strong>Example 4:</strong></p>\n<pre><strong>Input:</strong> n = 3, red_edges = [[0,1]], blue_edges = [[1,2]]\n<strong>Output:</strong> [0,1,2]\n</pre><p><strong>Example 5:</strong></p>\n<pre><strong>Input:</strong> n = 3, red_edges = [[0,1],[0,2]], blue_edges = [[1,0]]\n<strong>Output:</strong> [0,1,1]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= n &lt;= 100</code></li>\n\t<li><code>red_edges.length &lt;= 400</code></li>\n\t<li><code>blue_edges.length &lt;= 400</code></li>\n\t<li><code>red_edges[i].length == blue_edges[i].length == 2</code></li>\n\t<li><code>0 &lt;= red_edges[i][j], blue_edges[i][j] &lt; n</code></li>\n</ul>"
    },
    {
        "id": "943",
        "title": "Find the Shortest Superstring",
        "slug": "find-the-shortest-superstring",
        "difficulty": "Hard",
        "likes": 194,
        "dislikes": 55,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "619",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>Given an array A of strings, find any&nbsp;smallest string that contains each string in <code>A</code> as a&nbsp;substring.</p>\n\n<p>We may assume that no string in <code>A</code> is substring of another string in <code>A</code>.</p>\n\n<div>&nbsp;</div>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[&quot;alex&quot;,&quot;loves&quot;,&quot;leetcode&quot;]</span>\n<strong>Output: </strong><span id=\"example-output-1\">&quot;alexlovesleetcode&quot;</span>\n<strong>Explanation: </strong>All permutations of &quot;alex&quot;,&quot;loves&quot;,&quot;leetcode&quot; would also be accepted.\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[&quot;catg&quot;,&quot;ctaagt&quot;,&quot;gcta&quot;,&quot;ttca&quot;,&quot;atgcatc&quot;]</span>\n<strong>Output: </strong><span id=\"example-output-2\">&quot;gctaagttcatgcatc&quot;</span></pre>\n\n<p>&nbsp;</p>\n</div>\n</div>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 12</code></li>\n\t<li><code>1 &lt;= A[i].length &lt;= 20</code></li>\n</ol>\n\n<div>\n<div>&nbsp;</div>\n</div>"
    },
    {
        "id": "232",
        "title": "Implement Queue using Stacks",
        "slug": "implement-queue-using-stacks",
        "difficulty": "Easy",
        "likes": 649,
        "dislikes": 117,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Implement Stack using Queues\", \"titleSlug\": \"implement-stack-using-queues\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "47",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Stack",
            "Design"
        ],
        "content": "<p>Implement the following operations of a queue using stacks.</p>\n\n<ul>\n\t<li>push(x) -- Push element x to the back of queue.</li>\n\t<li>pop() -- Removes the element from in front of queue.</li>\n\t<li>peek() -- Get the front element.</li>\n\t<li>empty() -- Return whether the queue is empty.</li>\n</ul>\n\n<p><b>Example:</b></p>\n\n<pre>\nMyQueue queue = new MyQueue();\n\nqueue.push(1);\nqueue.push(2);  \nqueue.peek();  // returns 1\nqueue.pop();   // returns 1\nqueue.empty(); // returns false</pre>\n\n<p><b>Notes:</b></p>\n\n<ul>\n\t<li>You must use <i>only</i> standard operations of a stack -- which means only <code>push to top</code>, <code>peek/pop from top</code>, <code>size</code>, and <code>is empty</code> operations are valid.</li>\n\t<li>Depending on your language, stack may not be supported natively. You may simulate a stack by using a list or deque (double-ended queue), as long as you use only standard operations of a stack.</li>\n\t<li>You may assume that all operations are valid (for example, no pop or peek operations will be called on an empty queue).</li>\n</ul>\n"
    },
    {
        "id": "468",
        "title": "Validate IP Address",
        "slug": "validate-ip-address",
        "difficulty": "Medium",
        "likes": 144,
        "dislikes": 848,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"IP to CIDR\", \"titleSlug\": \"ip-to-cidr\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "String"
        ],
        "content": "<p>\nWrite a function to check whether an input string is a valid IPv4 address or IPv6 address or neither.\n</p>\n\n<p>\n<b>IPv4</b> addresses are canonically represented in dot-decimal notation, which consists of four decimal numbers, each ranging from 0 to 255, separated by dots (\".\"), e.g.,<code>172.16.254.1</code>;\n</p>\n\n<p>\nBesides, leading zeros in the IPv4 is invalid. For example, the address <code>172.16.254.01</code> is invalid.\n</p>\n\n<p>\n<b>IPv6</b> addresses are represented as eight groups of four hexadecimal digits, each group representing 16 bits. The groups are separated by colons (\":\"). For example, the address <code>2001:0db8:85a3:0000:0000:8a2e:0370:7334</code> is a valid one. Also, we could omit some leading zeros among four hexadecimal digits and some low-case characters in the address to upper-case ones, so <code>2001:db8:85a3:0:0:8A2E:0370:7334</code> is also a valid IPv6 address(Omit leading zeros and using upper cases).\n</p>\n\n\n<p>\nHowever, we don't replace a consecutive group of zero value with a single empty group using two consecutive colons (::) to pursue simplicity. For example, <code>2001:0db8:85a3::8A2E:0370:7334</code> is an invalid IPv6 address.\n</p>\n\n<p>\nBesides, extra leading zeros in the IPv6 is also invalid. For example, the address <code>02001:0db8:85a3:0000:0000:8a2e:0370:7334</code> is invalid.\n</p>\n\n\n<p><b>Note:</b>\nYou may assume there is no extra space or special characters in the input string.\n</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> \"172.16.254.1\"\n\n<b>Output:</b> \"IPv4\"\n\n<b>Explanation:</b> This is a valid IPv4 address, return \"IPv4\".\n</pre>\n</p>\n\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b> \"2001:0db8:85a3:0:0:8A2E:0370:7334\"\n\n<b>Output:</b> \"IPv6\"\n\n<b>Explanation:</b> This is a valid IPv6 address, return \"IPv6\".\n</pre>\n</p>\n\n<p><b>Example 3:</b><br />\n<pre>\n<b>Input:</b> \"256.256.256.256\"\n\n<b>Output:</b> \"Neither\"\n\n<b>Explanation:</b> This is neither a IPv4 address nor a IPv6 address.\n</pre>\n</p>"
    },
    {
        "id": "380",
        "title": "Insert Delete GetRandom O(1)",
        "slug": "insert-delete-getrandom-o1",
        "difficulty": "Medium",
        "likes": 1321,
        "dislikes": 96,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Insert Delete GetRandom O(1) - Duplicates allowed\", \"titleSlug\": \"insert-delete-getrandom-o1-duplicates-allowed\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Array",
            "Hash Table",
            "Design"
        ],
        "content": "<p>Design a data structure that supports all following operations in <i>average</i> <b>O(1)</b> time.</p>\n\n<p>\n<ol>\n<li><code>insert(val)</code>: Inserts an item val to the set if not already present.</li>\n<li><code>remove(val)</code>: Removes an item val from the set if present.</li>\n<li><code>getRandom</code>: Returns a random element from current set of elements. Each element must have the <b>same probability</b> of being returned.</li>\n</ol>\n</p>\n\n<p><b>Example:</b>\n<pre>\n// Init an empty set.\nRandomizedSet randomSet = new RandomizedSet();\n\n// Inserts 1 to the set. Returns true as 1 was inserted successfully.\nrandomSet.insert(1);\n\n// Returns false as 2 does not exist in the set.\nrandomSet.remove(2);\n\n// Inserts 2 to the set, returns true. Set now contains [1,2].\nrandomSet.insert(2);\n\n// getRandom should return either 1 or 2 randomly.\nrandomSet.getRandom();\n\n// Removes 1 from the set, returns true. Set now contains [2].\nrandomSet.remove(1);\n\n// 2 was already in the set, so return false.\nrandomSet.insert(2);\n\n// Since 2 is the only number in the set, getRandom always return 2.\nrandomSet.getRandom();\n</pre>\n</p>"
    },
    {
        "id": "673",
        "title": "Number of Longest Increasing Subsequence",
        "slug": "number-of-longest-increasing-subsequence",
        "difficulty": "Medium",
        "likes": 898,
        "dislikes": 63,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Longest Increasing Subsequence\", \"titleSlug\": \"longest-increasing-subsequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Longest Continuous Increasing Subsequence\", \"titleSlug\": \"longest-continuous-increasing-subsequence\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "279",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>\nGiven an unsorted array of integers, find the number of longest increasing subsequence.\n</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> [1,3,5,4,7]\n<b>Output:</b> 2\n<b>Explanation:</b> The two longest increasing subsequence are [1, 3, 4, 7] and [1, 3, 5, 7].\n</pre>\n</p>\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b> [2,2,2,2,2]\n<b>Output:</b> 5\n<b>Explanation:</b> The length of longest continuous increasing subsequence is 1, and there are 5 subsequences' length is 1, so output 5.\n</pre>\n</p>\n\n<p><b>Note:</b>\nLength of the given array will be not exceed 2000 and the answer is guaranteed to be fit in 32-bit signed int.\n</p>"
    },
    {
        "id": "641",
        "title": "Design Circular Deque",
        "slug": "design-circular-deque",
        "difficulty": "Medium",
        "likes": 126,
        "dislikes": 30,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Design Circular Queue\", \"titleSlug\": \"design-circular-queue\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Design",
            "Queue"
        ],
        "content": "<p>Design your implementation of the circular double-ended queue (deque).</p>\n\n<p>Your implementation should support following operations:</p>\n\n<ul>\n\t<li><code>MyCircularDeque(k)</code>: Constructor, set the size of the deque to be k.</li>\n\t<li><code>insertFront()</code>: Adds an item at the front of Deque. Return true if the operation is successful.</li>\n\t<li><code>insertLast()</code>: Adds an item at the rear of Deque. Return true if the operation is successful.</li>\n\t<li><code>deleteFront()</code>: Deletes an item from the front of Deque. Return true if the operation is successful.</li>\n\t<li><code>deleteLast()</code>: Deletes an item from the rear of Deque. Return true if the operation is successful.</li>\n\t<li><code>getFront()</code>: Gets the front item from the Deque. If the deque is empty, return -1.</li>\n\t<li><code>getRear()</code>: Gets the last item from Deque. If the deque is empty, return -1.</li>\n\t<li><code>isEmpty()</code>: Checks whether Deque is empty or not.&nbsp;</li>\n\t<li><code>isFull()</code>: Checks whether Deque is full or not.</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\nMyCircularDeque circularDeque = new MycircularDeque(3); // set the size to be 3\ncircularDeque.insertLast(1);\t\t\t// return true\ncircularDeque.insertLast(2);\t\t\t// return true\ncircularDeque.insertFront(3);\t\t\t// return true\ncircularDeque.insertFront(4);\t\t\t// return false, the queue is full\ncircularDeque.getRear();  \t\t\t// return 2\ncircularDeque.isFull();\t\t\t\t// return true\ncircularDeque.deleteLast();\t\t\t// return true\ncircularDeque.insertFront(4);\t\t\t// return true\ncircularDeque.getFront();\t\t\t// return 4\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>All values will be in the range of [0, 1000].</li>\n\t<li>The number of operations will be in the range of&nbsp;[1, 1000].</li>\n\t<li>Please do not use the built-in Deque library.</li>\n</ul>\n"
    },
    {
        "id": "1039",
        "title": "Minimum Score Triangulation of Polygon",
        "slug": "minimum-score-triangulation-of-polygon",
        "difficulty": "Medium",
        "likes": 199,
        "dislikes": 24,
        "hints": [
            "Without loss of generality, there is a triangle that uses adjacent vertices A[0] and A[N-1] (where N = A.length).  Depending on your choice K of it, this breaks down the triangulation into two subproblems A[1:K] and A[K+1:N-1]."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>Given <code>N</code>, consider a convex <code>N</code>-sided polygon with vertices labelled <code>A[0], A[i], ..., A[N-1]</code>&nbsp;in clockwise order.</p>\n\n<p>Suppose you triangulate the polygon into <code>N-2</code> triangles.&nbsp; For each triangle, the value of that triangle is the <strong>product</strong>&nbsp;of the labels of the vertices, and the <em>total score</em> of the triangulation is the sum of these values over all <code>N-2</code> triangles in the triangulation.</p>\n\n<p>Return the smallest possible total score that you can achieve with some triangulation of the polygon.</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[1,2,3]</span>\n<strong>Output: </strong><span id=\"example-output-1\">6</span>\n<strong>Explanation: </strong>The polygon is already triangulated, and the score of the only triangle is 6.\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<p><img alt=\"\" src=\"./img/minimum-score-triangulation-of-polygon_1.png\" style=\"width: 253px; height: 150px;\" /></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[3,7,4,5]</span>\n<strong>Output: </strong><span id=\"example-output-2\">144</span>\n<strong>Explanation: </strong>There are two triangulations, with possible scores: 3*7*5 + 4*5*7 = 245, or 3*4*5 + 3*4*7 = 144.  The minimum score is 144.\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">[1,3,1,4,1,5]</span>\n<strong>Output: </strong><span id=\"example-output-3\">13</span>\n<strong>Explanation: </strong>The minimum score triangulation has score 1*1*3 + 1*1*4 + 1*1*5 + 1*1*1 = 13.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>3 &lt;= A.length &lt;= 50</code></li>\n\t<li><code>1 &lt;= A[i] &lt;= 100</code></li>\n</ol>\n</div>\n</div>\n</div>"
    },
    {
        "id": "396",
        "title": "Rotate Function",
        "slug": "rotate-function",
        "difficulty": "Medium",
        "likes": 287,
        "dislikes": 95,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Math"
        ],
        "content": "<p>\nGiven an array of integers <code>A</code> and let <i>n</i> to be its length.\n</p>\n\n<p>\nAssume <code>B<sub>k</sub></code> to be an array obtained by rotating the array <code>A</code> <i>k</i> positions clock-wise, we define a \"rotation function\" <code>F</code> on <code>A</code> as follow:\n</p>\n\n<p>\n<code>F(k) = 0 * B<sub>k</sub>[0] + 1 * B<sub>k</sub>[1] + ... + (n-1) * B<sub>k</sub>[n-1]</code>.</p>\n\n<p>Calculate the maximum value of <code>F(0), F(1), ..., F(n-1)</code>. \n</p>\n\n<p><b>Note:</b><br />\n<i>n</i> is guaranteed to be less than 10<sup>5</sup>.\n</p>\n\n<p><b>Example:</b>\n<pre>\nA = [4, 3, 2, 6]\n\nF(0) = (0 * 4) + (1 * 3) + (2 * 2) + (3 * 6) = 0 + 3 + 4 + 18 = 25\nF(1) = (0 * 6) + (1 * 4) + (2 * 3) + (3 * 2) = 0 + 4 + 6 + 6 = 16\nF(2) = (0 * 2) + (1 * 6) + (2 * 4) + (3 * 3) = 0 + 6 + 8 + 9 = 23\nF(3) = (0 * 3) + (1 * 2) + (2 * 6) + (3 * 4) = 0 + 2 + 12 + 12 = 26\n\nSo the maximum value of F(0), F(1), F(2), F(3) is F(3) = 26.\n</pre>\n</p>"
    },
    {
        "id": "262",
        "title": "Trips and Users",
        "slug": "trips-and-users",
        "difficulty": "Hard",
        "likes": 234,
        "dislikes": 169,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [],
        "content": "<p>The <code>Trips</code> table holds all taxi trips. Each trip has a unique Id, while Client_Id and Driver_Id are both foreign keys to the Users_Id at the <code>Users</code> table. Status is an ENUM type of (&lsquo;completed&rsquo;, &lsquo;cancelled_by_driver&rsquo;, &lsquo;cancelled_by_client&rsquo;).</p>\n\n<pre>\n+----+-----------+-----------+---------+--------------------+----------+\n| Id | Client_Id | Driver_Id | City_Id |        Status      |Request_at|\n+----+-----------+-----------+---------+--------------------+----------+\n| 1  |     1     |    10     |    1    |     completed      |2013-10-01|\n| 2  |     2     |    11     |    1    | cancelled_by_driver|2013-10-01|\n| 3  |     3     |    12     |    6    |     completed      |2013-10-01|\n| 4  |     4     |    13     |    6    | cancelled_by_client|2013-10-01|\n| 5  |     1     |    10     |    1    |     completed      |2013-10-02|\n| 6  |     2     |    11     |    6    |     completed      |2013-10-02|\n| 7  |     3     |    12     |    6    |     completed      |2013-10-02|\n| 8  |     2     |    12     |    12   |     completed      |2013-10-03|\n| 9  |     3     |    10     |    12   |     completed      |2013-10-03| \n| 10 |     4     |    13     |    12   | cancelled_by_driver|2013-10-03|\n+----+-----------+-----------+---------+--------------------+----------+\n</pre>\n\n<p>The <code>Users</code> table holds all users. Each user has an unique Users_Id, and Role is an ENUM type of (&lsquo;client&rsquo;, &lsquo;driver&rsquo;, &lsquo;partner&rsquo;).</p>\n\n<pre>\n+----------+--------+--------+\n| Users_Id | Banned |  Role  |\n+----------+--------+--------+\n|    1     |   No   | client |\n|    2     |   Yes  | client |\n|    3     |   No   | client |\n|    4     |   No   | client |\n|    10    |   No   | driver |\n|    11    |   No   | driver |\n|    12    |   No   | driver |\n|    13    |   No   | driver |\n+----------+--------+--------+\n</pre>\n\n<p>Write a SQL query to find the cancellation rate of requests made by unbanned users (both client and driver must be unbanned)&nbsp;between <strong>Oct 1, 2013</strong> and <strong>Oct 3, 2013</strong>. The cancellation rate is computed by dividing the number of canceled (by client or driver) requests&nbsp;made by unbanned users by the total number of requests&nbsp;made by unbanned users.</p>\n\n<p>For the above tables, your SQL query should return the following rows with the cancellation rate being rounded to <em>two</em> decimal places.</p>\n\n<pre>\n+------------+-------------------+\n|     Day    | Cancellation Rate |\n+------------+-------------------+\n| 2013-10-01 |       0.33        |\n| 2013-10-02 |       0.00        |\n| 2013-10-03 |       0.50        |\n+------------+-------------------+\n</pre>\n\n<p><strong>Credits:</strong><br />\nSpecial thanks to <a href=\"https://leetcode.com/discuss/user/cak1erlizhou\">@cak1erlizhou</a> for contributing this question, writing the problem description and adding part of the test cases.</p>\n"
    },
    {
        "id": "257",
        "title": "Binary Tree Paths",
        "slug": "binary-tree-paths",
        "difficulty": "Easy",
        "likes": 1012,
        "dislikes": 77,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Path Sum II\", \"titleSlug\": \"path-sum-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Smallest String Starting From Leaf\", \"titleSlug\": \"smallest-string-starting-from-leaf\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "617",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree",
            "Depth-first Search"
        ],
        "content": "<p>Given a binary tree, return all root-to-leaf paths.</p>\n\n<p><strong>Note:</strong>&nbsp;A leaf is a node with no children.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input:</strong>\n\n   1\n /   \\\n2     3\n \\\n  5\n\n<strong>Output:</strong> [&quot;1-&gt;2-&gt;5&quot;, &quot;1-&gt;3&quot;]\n\n<strong>Explanation:</strong> All root-to-leaf paths are: 1-&gt;2-&gt;5, 1-&gt;3\n</pre>"
    },
    {
        "id": "547",
        "title": "Friend Circles",
        "slug": "friend-circles",
        "difficulty": "Medium",
        "likes": 1180,
        "dislikes": 96,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Number of Connected Components in an Undirected Graph\", \"titleSlug\": \"number-of-connected-components-in-an-undirected-graph\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Robot Return to Origin\", \"titleSlug\": \"robot-return-to-origin\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Sentence Similarity\", \"titleSlug\": \"sentence-similarity\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Sentence Similarity II\", \"titleSlug\": \"sentence-similarity-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"The Earliest Moment When Everyone Become Friends\", \"titleSlug\": \"the-earliest-moment-when-everyone-become-friends\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "101",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Depth-first Search",
            "Union Find"
        ],
        "content": "<p>\nThere are <b>N</b> students in a class. Some of them are friends, while some are not. Their friendship is transitive in nature. For example, if A is a <b>direct</b> friend of B, and B is a <b>direct</b> friend of C, then A is an <b>indirect</b> friend of C. And we defined a friend circle is a group of students who are direct or indirect friends.\n</p>\n\n<p>\nGiven a <b>N*N</b> matrix <b>M</b> representing the friend relationship between students in the class. If M[i][j] = 1, then the i<sub>th</sub> and j<sub>th</sub> students are <b>direct</b> friends with each other, otherwise not. And you have to output the total number of friend circles among all the students.\n</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> \n[[1,1,0],\n [1,1,0],\n [0,0,1]]\n<b>Output:</b> 2\n<b>Explanation:</b>The 0<sub>th</sub> and 1<sub>st</sub> students are direct friends, so they are in a friend circle. <br/>The 2<sub>nd</sub> student himself is in a friend circle. So return 2.\n</pre>\n</p>\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b> \n[[1,1,0],\n [1,1,1],\n [0,1,1]]\n<b>Output:</b> 1\n<b>Explanation:</b>The 0<sub>th</sub> and 1<sub>st</sub> students are direct friends, the 1<sub>st</sub> and 2<sub>nd</sub> students are direct friends, <br/>so the 0<sub>th</sub> and 2<sub>nd</sub> students are indirect friends. All of them are in the same friend circle, so return 1.\n</pre>\n</p>\n\n\n<p><b>Note:</b><br>\n<ol>\n<li>N is in range [1,200].</li>\n<li>M[i][i] = 1 for all students.</li>\n<li>If M[i][j] = 1, then M[j][i] = 1.</li>\n</ol>\n</p>"
    },
    {
        "id": "659",
        "title": "Split Array into Consecutive Subsequences",
        "slug": "split-array-into-consecutive-subsequences",
        "difficulty": "Medium",
        "likes": 595,
        "dislikes": 242,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Top K Frequent Elements\", \"titleSlug\": \"top-k-frequent-elements\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "323",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Heap",
            "Greedy"
        ],
        "content": "<p>Given an array <code>nums</code>&nbsp;sorted in ascending order, return <code>true</code> if and only if you can split it into 1 or more subsequences such that each subsequence consists of consecutive integers&nbsp;and has length at least 3.</p>\n\n<p>&nbsp;</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> [1,2,3,3,4,5]\n<b>Output:</b> True\n<b>Explanation:</b>\nYou can split them into two consecutive subsequences : \n1, 2, 3\n3, 4, 5\n\n</pre>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input:</b> [1,2,3,3,4,4,5,5]\n<b>Output:</b> True\n<b>Explanation:</b>\nYou can split them into two consecutive subsequences : \n1, 2, 3, 4, 5\n3, 4, 5\n\n</pre>\n\n<p><b>Example 3:</b></p>\n\n<pre>\n<b>Input:</b> [1,2,3,4,4,5]\n<b>Output:</b> False\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Constraints:</b></p>\n\n<ul>\n\t<li><code>1 &lt;= nums.length &lt;= 10000</code></li>\n</ul>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "224",
        "title": "Basic Calculator",
        "slug": "basic-calculator",
        "difficulty": "Hard",
        "likes": 901,
        "dislikes": 101,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Evaluate Reverse Polish Notation\", \"titleSlug\": \"evaluate-reverse-polish-notation\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Basic Calculator II\", \"titleSlug\": \"basic-calculator-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Different Ways to Add Parentheses\", \"titleSlug\": \"different-ways-to-add-parentheses\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Expression Add Operators\", \"titleSlug\": \"expression-add-operators\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Basic Calculator III\", \"titleSlug\": \"basic-calculator-iii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "744",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math",
            "Stack"
        ],
        "content": "<p>Implement a basic calculator to evaluate a simple expression string.</p>\n\n<p>The expression string may contain open <code>(</code> and closing parentheses <code>)</code>, the plus <code>+</code> or minus sign <code>-</code>, <b>non-negative</b> integers and empty spaces <code> </code>.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> &quot;1 + 1&quot;\n<strong>Output:</strong> 2\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> &quot; 2-1 + 2 &quot;\n<strong>Output:</strong> 3</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> &quot;(1+(4+5+2)-3)+(6+8)&quot;\n<strong>Output:</strong> 23</pre>\n<b>Note:</b>\n\n<ul>\n\t<li>You may assume that the given expression is always valid.</li>\n\t<li><b>Do not</b> use the <code>eval</code> built-in library function.</li>\n</ul>\n"
    },
    {
        "id": "756",
        "title": "Pyramid Transition Matrix",
        "slug": "pyramid-transition-matrix",
        "difficulty": "Medium",
        "likes": 202,
        "dislikes": 280,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "363",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Bit Manipulation",
            "Depth-first Search"
        ],
        "content": "<p>We are stacking blocks to form a pyramid. Each block has a color which is a one letter string.</p>\n\n<p>We are allowed to place any color block <code>C</code> on top of two adjacent blocks of colors <code>A</code> and <code>B</code>, if and only if <code>ABC</code> is an allowed triple.</p>\n\n<p>We start with a bottom row of <code>bottom</code>, represented as a single string. We also start with a list of allowed triples <code>allowed</code>. Each allowed triple is represented as a string of length 3.</p>\n\n<p>Return true if we can build the pyramid all the way to the top, otherwise false.</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> bottom = &quot;BCD&quot;, allowed = [&quot;BCG&quot;, &quot;CDE&quot;, &quot;GEA&quot;, &quot;FFF&quot;]\n<b>Output:</b> true\n<b>Explanation:</b>\nWe can stack the pyramid like this:\n    A\n   / \\\n  G   E\n / \\ / \\\nB   C   D\n\nWe are allowed to place G on top of B and C because BCG is an allowed triple.  Similarly, we can place E on top of C and D, then A on top of G and E.</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input:</b> bottom = &quot;AABA&quot;, allowed = [&quot;AAA&quot;, &quot;AAB&quot;, &quot;ABA&quot;, &quot;ABB&quot;, &quot;BAC&quot;]\n<b>Output:</b> false\n<b>Explanation:</b>\nWe can&#39;t stack the pyramid to the top.\nNote that there could be allowed triples (A, B, C) and (A, B, D) with C != D.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b></p>\n\n<ol>\n\t<li><code>bottom</code> will be a string with length in range <code>[2, 8]</code>.</li>\n\t<li><code>allowed</code> will have length in range <code>[0, 200]</code>.</li>\n\t<li>Letters in all strings will be chosen from the set <code>{&#39;A&#39;, &#39;B&#39;, &#39;C&#39;, &#39;D&#39;, &#39;E&#39;, &#39;F&#39;, &#39;G&#39;}</code>.</li>\n</ol>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "14",
        "title": "Longest Common Prefix",
        "slug": "longest-common-prefix",
        "difficulty": "Easy",
        "likes": 1591,
        "dislikes": 1453,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "46",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String"
        ],
        "content": "<p>Write a function to find the longest common prefix string amongst an array of strings.</p>\n\n<p>If there is no common prefix, return an empty string <code>&quot;&quot;</code>.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>[&quot;flower&quot;,&quot;flow&quot;,&quot;flight&quot;]\n<strong>Output:</strong> &quot;fl&quot;\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>[&quot;dog&quot;,&quot;racecar&quot;,&quot;car&quot;]\n<strong>Output:</strong> &quot;&quot;\n<strong>Explanation:</strong> There is no common prefix among the input strings.\n</pre>\n\n<p><strong>Note:</strong></p>\n\n<p>All given inputs are in lowercase letters <code>a-z</code>.</p>\n"
    },
    {
        "id": "1047",
        "title": "Remove All Adjacent Duplicates In String",
        "slug": "remove-all-adjacent-duplicates-in-string",
        "difficulty": "Easy",
        "likes": 223,
        "dislikes": 20,
        "hints": [
            "Use a stack to process everything greedily."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "743",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Stack"
        ],
        "content": "<p>Given a string <code>S</code> of lowercase letters, a <em>duplicate removal</em> consists of choosing two adjacent and equal letters, and removing&nbsp;them.</p>\n\n<p>We repeatedly make duplicate removals on S until we no longer can.</p>\n\n<p>Return the final string after all such duplicate removals have been made.&nbsp; It is guaranteed the answer is unique.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">&quot;abbaca&quot;</span>\n<strong>Output: </strong><span id=\"example-output-1\">&quot;ca&quot;</span>\n<strong>Explanation: </strong>\nFor example, in &quot;abbaca&quot; we could remove &quot;bb&quot; since the letters are adjacent and equal, and this is the only possible move.&nbsp; The result of this move is that the string is &quot;aaca&quot;, of which only &quot;aa&quot; is possible, so the final string is &quot;ca&quot;.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= S.length &lt;= 20000</code></li>\n\t<li><code>S</code> consists only of English lowercase letters.</li>\n</ol>"
    },
    {
        "id": "1011",
        "title": "Capacity To Ship Packages Within D Days",
        "slug": "capacity-to-ship-packages-within-d-days",
        "difficulty": "Medium",
        "likes": 399,
        "dislikes": 12,
        "hints": [
            "Binary search on the answer.  We need a function possible(capacity) which returns true if and only if we can do the task in D days."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Array",
            "Binary Search"
        ],
        "content": "<p>A conveyor belt has packages that must be shipped from one port to another within <code>D</code> days.</p>\n\n<p>The <code>i</code>-th package on the conveyor belt has a weight of <code>weights[i]</code>.&nbsp; Each day, we load the ship with packages on the conveyor belt (in the order given by <code>weights</code>). We may not load more weight than the maximum weight capacity of the ship.</p>\n\n<p>Return the least weight capacity of the ship that will result in all the packages on the conveyor belt being shipped within <code>D</code> days.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>weights = <span id=\"example-input-1-1\">[1,2,3,4,5,6,7,8,9,10]</span>, D = <span id=\"example-input-1-2\">5</span>\n<strong>Output: </strong><span id=\"example-output-1\">15</span>\n<strong>Explanation: </strong>\nA ship capacity of 15 is the minimum to ship all the packages in 5 days like this:\n1st day: 1, 2, 3, 4, 5\n2nd day: 6, 7\n3rd day: 8\n4th day: 9\n5th day: 10\n\nNote that the cargo must be shipped in the order given, so using a ship of capacity 14 and splitting the packages into parts like (2, 3, 4, 5), (1, 6, 7), (8), (9), (10) is not allowed. \n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>weights = <span id=\"example-input-2-1\">[3,2,2,4,1,4]</span>, D = <span id=\"example-input-2-2\">3</span>\n<strong>Output: </strong><span id=\"example-output-2\">6</span>\n<strong>Explanation: </strong>\nA ship capacity of 6 is the minimum to ship all the packages in 3 days like this:\n1st day: 3, 2\n2nd day: 2, 4\n3rd day: 1, 4\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>weights = <span id=\"example-input-3-1\">[1,2,3,1,1]</span>, D = 4\n<strong>Output: </strong><span id=\"example-output-3\">3</span>\n<strong>Explanation: </strong>\n1st day: 1\n2nd day: 2\n3rd day: 3\n4th day: 1, 1\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= D &lt;= weights.length &lt;= 50000</code></li>\n\t<li><code>1 &lt;= weights[i] &lt;= 500</code></li>\n</ol>"
    },
    {
        "id": "892",
        "title": "Surface Area of 3D Shapes",
        "slug": "surface-area-of-3d-shapes",
        "difficulty": "Easy",
        "likes": 170,
        "dislikes": 217,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "538",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math",
            "Geometry"
        ],
        "content": "<p>On a&nbsp;<code>N&nbsp;*&nbsp;N</code>&nbsp;grid, we place some&nbsp;<code>1 * 1 * 1&nbsp;</code>cubes.</p>\n\n<p>Each value&nbsp;<code>v = grid[i][j]</code>&nbsp;represents a tower of&nbsp;<code>v</code>&nbsp;cubes placed on top of grid cell&nbsp;<code>(i, j)</code>.</p>\n\n<p>Return the total surface area of the resulting shapes.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<div>\n<div>\n<ul>\n</ul>\n</div>\n</div>\n</div>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[[2]]</span>\n<strong>Output: </strong><span id=\"example-output-1\">10</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[[1,2],[3,4]]</span>\n<strong>Output: </strong><span id=\"example-output-2\">34</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">[[1,0],[0,2]]</span>\n<strong>Output: </strong><span id=\"example-output-3\">16</span>\n</pre>\n\n<div>\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-4-1\">[[1,1,1],[1,0,1],[1,1,1]]</span>\n<strong>Output: </strong><span id=\"example-output-4\">32</span>\n</pre>\n\n<div>\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-5-1\">[[2,2,2],[2,1,2],[2,2,2]]</span>\n<strong>Output: </strong><span id=\"example-output-5\">46</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= N &lt;= 50</code></li>\n\t<li><code>0 &lt;= grid[i][j] &lt;= 50</code></li>\n</ul>\n</div>\n</div>\n</div>\n</div>\n</div>\n"
    },
    {
        "id": "23",
        "title": "Merge k Sorted Lists",
        "slug": "merge-k-sorted-lists",
        "difficulty": "Hard",
        "likes": 2879,
        "dislikes": 190,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Merge Two Sorted Lists\", \"titleSlug\": \"merge-two-sorted-lists\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Ugly Number II\", \"titleSlug\": \"ugly-number-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "237",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Linked List",
            "Divide and Conquer",
            "Heap"
        ],
        "content": "<p>Merge <em>k</em> sorted linked lists and return it as one sorted list. Analyze and describe its complexity.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input:</strong>\n[\n&nbsp; 1-&gt;4-&gt;5,\n&nbsp; 1-&gt;3-&gt;4,\n&nbsp; 2-&gt;6\n]\n<strong>Output:</strong> 1-&gt;1-&gt;2-&gt;3-&gt;4-&gt;4-&gt;5-&gt;6\n</pre>\n"
    },
    {
        "id": "447",
        "title": "Number of Boomerangs",
        "slug": "number-of-boomerangs",
        "difficulty": "Easy",
        "likes": 317,
        "dislikes": 497,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Line Reflection\", \"titleSlug\": \"line-reflection\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Hash Table"
        ],
        "content": "<p>Given <i>n</i> points in the plane that are all pairwise distinct, a &quot;boomerang&quot; is a tuple of points <code>(i, j, k)</code> such that the distance between <code>i</code> and <code>j</code> equals the distance between <code>i</code> and <code>k</code> (<b>the order of the tuple matters</b>).</p>\n\n<p>Find the number of boomerangs. You may assume that <i>n</i> will be at most <b>500</b> and coordinates of points are all in the range <b>[-10000, 10000]</b> (inclusive).</p>\n\n<p><b>Example:</b></p>\n\n<pre>\n<b>Input:</b>\n[[0,0],[1,0],[2,0]]\n\n<b>Output:</b>\n2\n\n<b>Explanation:</b>\nThe two boomerangs are <b>[[1,0],[0,0],[2,0]]</b> and <b>[[1,0],[2,0],[0,0]]</b>\n</pre>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "529",
        "title": "Minesweeper",
        "slug": "minesweeper",
        "difficulty": "Medium",
        "likes": 359,
        "dislikes": 357,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Depth-first Search",
            "Breadth-first Search"
        ],
        "content": "<p>Let&#39;s play the minesweeper game (<a href=\"https://en.wikipedia.org/wiki/Minesweeper_(video_game)\">Wikipedia</a>, <a href=\"http://minesweeperonline.com\">online game</a>)!</p>\n\n<p>You are given a 2D char matrix representing the game board. <b>&#39;M&#39;</b> represents an <b>unrevealed</b> mine, <b>&#39;E&#39;</b> represents an <b>unrevealed</b> empty square, <b>&#39;B&#39;</b> represents a <b>revealed</b> blank square that has no adjacent (above, below, left, right, and all 4 diagonals) mines, <b>digit</b> (&#39;1&#39; to &#39;8&#39;) represents how many mines are adjacent to this <b>revealed</b> square, and finally <b>&#39;X&#39;</b> represents a <b>revealed</b> mine.</p>\n\n<p>Now given the next click position (row and column indices) among all the <b>unrevealed</b> squares (&#39;M&#39; or &#39;E&#39;), return the board after revealing this position according to the following rules:</p>\n\n<ol>\n\t<li>If a mine (&#39;M&#39;) is revealed, then the game is over - change it to <b>&#39;X&#39;</b>.</li>\n\t<li>If an empty square (&#39;E&#39;) with <b>no adjacent mines</b> is revealed, then change it to revealed blank (&#39;B&#39;) and all of its adjacent <b>unrevealed</b> squares should be revealed recursively.</li>\n\t<li>If an empty square (&#39;E&#39;) with <b>at least one adjacent mine</b> is revealed, then change it to a digit (&#39;1&#39; to &#39;8&#39;) representing the number of adjacent mines.</li>\n\t<li>Return the board when no more squares will be revealed.</li>\n</ol>\n\n<p>&nbsp;</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> \n\n[[&#39;E&#39;, &#39;E&#39;, &#39;E&#39;, &#39;E&#39;, &#39;E&#39;],\n [&#39;E&#39;, &#39;E&#39;, &#39;M&#39;, &#39;E&#39;, &#39;E&#39;],\n [&#39;E&#39;, &#39;E&#39;, &#39;E&#39;, &#39;E&#39;, &#39;E&#39;],\n [&#39;E&#39;, &#39;E&#39;, &#39;E&#39;, &#39;E&#39;, &#39;E&#39;]]\n\nClick : [3,0]\n\n<b>Output:</b> \n\n[[&#39;B&#39;, &#39;1&#39;, &#39;E&#39;, &#39;1&#39;, &#39;B&#39;],\n [&#39;B&#39;, &#39;1&#39;, &#39;M&#39;, &#39;1&#39;, &#39;B&#39;],\n [&#39;B&#39;, &#39;1&#39;, &#39;1&#39;, &#39;1&#39;, &#39;B&#39;],\n [&#39;B&#39;, &#39;B&#39;, &#39;B&#39;, &#39;B&#39;, &#39;B&#39;]]\n\n<b>Explanation:</b>\n<img src=\"./img/minesweeper_1.png\" style=\"width: 100%; max-width: 400px\" />\n</pre>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input:</b> \n\n[[&#39;B&#39;, &#39;1&#39;, &#39;E&#39;, &#39;1&#39;, &#39;B&#39;],\n [&#39;B&#39;, &#39;1&#39;, &#39;M&#39;, &#39;1&#39;, &#39;B&#39;],\n [&#39;B&#39;, &#39;1&#39;, &#39;1&#39;, &#39;1&#39;, &#39;B&#39;],\n [&#39;B&#39;, &#39;B&#39;, &#39;B&#39;, &#39;B&#39;, &#39;B&#39;]]\n\nClick : [1,2]\n\n<b>Output:</b> \n\n[[&#39;B&#39;, &#39;1&#39;, &#39;E&#39;, &#39;1&#39;, &#39;B&#39;],\n [&#39;B&#39;, &#39;1&#39;, &#39;X&#39;, &#39;1&#39;, &#39;B&#39;],\n [&#39;B&#39;, &#39;1&#39;, &#39;1&#39;, &#39;1&#39;, &#39;B&#39;],\n [&#39;B&#39;, &#39;B&#39;, &#39;B&#39;, &#39;B&#39;, &#39;B&#39;]]\n\n<b>Explanation:</b>\n<img src=\"./img/minesweeper_2.png\" style=\"width: 100%; max-width: 400px\" />\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b></p>\n\n<ol>\n\t<li>The range of the input matrix&#39;s height and width is [1,50].</li>\n\t<li>The click position will only be an unrevealed square (&#39;M&#39; or &#39;E&#39;), which also means the input board contains at least one clickable square.</li>\n\t<li>The input board won&#39;t be a stage when game is over (some mines have been revealed).</li>\n\t<li>For simplicity, not mentioned rules should be ignored in this problem. For example, you <b>don&#39;t</b> need to reveal all the unrevealed mines when the game is over, consider any cases that you will win the game or flag any squares.</li>\n</ol>\n"
    },
    {
        "id": "2",
        "title": "Add Two Numbers",
        "slug": "add-two-numbers",
        "difficulty": "Medium",
        "likes": 5906,
        "dislikes": 1536,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Multiply Strings\", \"titleSlug\": \"multiply-strings\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Add Binary\", \"titleSlug\": \"add-binary\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Sum of Two Integers\", \"titleSlug\": \"sum-of-two-integers\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Add Strings\", \"titleSlug\": \"add-strings\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Add Two Numbers II\", \"titleSlug\": \"add-two-numbers-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Add to Array-Form of Integer\", \"titleSlug\": \"add-to-array-form-of-integer\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "30",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Linked List",
            "Math"
        ],
        "content": "<p>You are given two <b>non-empty</b> linked lists representing two non-negative integers. The digits are stored in <b>reverse order</b> and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.</p>\n\n<p>You may assume the two numbers do not contain any leading zero, except the number 0 itself.</p>\n\n<p><b>Example:</b></p>\n\n<pre>\n<b>Input:</b> (2 -&gt; 4 -&gt; 3) + (5 -&gt; 6 -&gt; 4)\n<b>Output:</b> 7 -&gt; 0 -&gt; 8\n<b>Explanation:</b> 342 + 465 = 807.\n</pre>\n"
    },
    {
        "id": "207",
        "title": "Course Schedule",
        "slug": "course-schedule",
        "difficulty": "Medium",
        "likes": 2153,
        "dislikes": 102,
        "hints": [
            "This problem is equivalent to finding if a cycle exists in a directed graph. If a cycle exists, no topological ordering exists and therefore it will be impossible to take all courses.",
            "<a href=\"https://class.coursera.org/algo-003/lecture/52\" target=\"_blank\">Topological Sort via DFS</a> - A great video tutorial (21 minutes) on Coursera explaining the basic concepts of Topological Sort.",
            "Topological sort could also be done via <a href=\"http://en.wikipedia.org/wiki/Topological_sorting#Algorithms\" target=\"_blank\">BFS</a>."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Course Schedule II\", \"titleSlug\": \"course-schedule-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Graph Valid Tree\", \"titleSlug\": \"graph-valid-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Height Trees\", \"titleSlug\": \"minimum-height-trees\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Course Schedule III\", \"titleSlug\": \"course-schedule-iii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Depth-first Search",
            "Breadth-first Search",
            "Graph",
            "Topological Sort"
        ],
        "content": "<p>There are a total of <i>n</i> courses you have to take, labeled from <code>0</code> to <code>n-1</code>.</p>\n\n<p>Some courses may have prerequisites, for example to take course 0 you have to first take course 1, which is expressed as a pair: <code>[0,1]</code></p>\n\n<p>Given the total number of courses and a list of prerequisite <b>pairs</b>, is it possible for you to finish all courses?</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> 2, [[1,0]] \n<strong>Output: </strong>true\n<strong>Explanation:</strong>&nbsp;There are a total of 2 courses to take. \n&nbsp;            To take course 1 you should have finished course 0. So it is possible.</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> 2, [[1,0],[0,1]]\n<strong>Output: </strong>false\n<strong>Explanation:</strong>&nbsp;There are a total of 2 courses to take. \n&nbsp;            To take course 1 you should have finished course 0, and to take course 0 you should\n&nbsp;            also have finished course 1. So it is impossible.\n</pre>\n\n<p><b>Note:</b></p>\n\n<ol>\n\t<li>The input prerequisites is a graph represented by <b>a list of edges</b>, not adjacency matrices. Read more about <a href=\"https://www.khanacademy.org/computing/computer-science/algorithms/graph-representation/a/representing-graphs\" target=\"_blank\">how a graph is represented</a>.</li>\n\t<li>You may assume that there are no duplicate edges in the input prerequisites.</li>\n</ol>\n"
    },
    {
        "id": "1002",
        "title": "Find Common Characters",
        "slug": "find-common-characters",
        "difficulty": "Easy",
        "likes": 402,
        "dislikes": 52,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Intersection of Two Arrays II\", \"titleSlug\": \"intersection-of-two-arrays-ii\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Array",
            "Hash Table"
        ],
        "content": "<p>Given an array&nbsp;<code>A</code> of strings made only from lowercase letters, return a list of all characters that show up in all strings within the list <strong>(including duplicates)</strong>.&nbsp;&nbsp;For example, if a character occurs 3 times&nbsp;in all strings but not 4 times, you need to include that character three times&nbsp;in the final answer.</p>\n\n<p>You may return the answer in any order.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[&quot;bella&quot;,&quot;label&quot;,&quot;roller&quot;]</span>\n<strong>Output: </strong><span id=\"example-output-1\">[&quot;e&quot;,&quot;l&quot;,&quot;l&quot;]</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[&quot;cool&quot;,&quot;lock&quot;,&quot;cook&quot;]</span>\n<strong>Output: </strong><span id=\"example-output-2\">[&quot;c&quot;,&quot;o&quot;]</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong><span>Note:</span></strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= A[i].length &lt;= 100</code></li>\n\t<li><code>A[i][j]</code> is a lowercase letter</li>\n</ol>\n</div>\n</div>"
    },
    {
        "id": "313",
        "title": "Super Ugly Number",
        "slug": "super-ugly-number",
        "difficulty": "Medium",
        "likes": 409,
        "dislikes": 107,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Ugly Number II\", \"titleSlug\": \"ugly-number-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Math",
            "Heap"
        ],
        "content": "<p>Write a program to find the <code>n<sup>th</sup></code> super ugly number.</p>\n\n<p>Super ugly numbers are positive numbers whose all prime factors are in the given prime list <code>primes</code> of size <code>k</code>.</p>\n\n<p><b>Example:</b></p>\n\n<pre>\n<b>Input:</b> n = 12, <code>primes</code> = <code>[2,7,13,19]</code>\n<b>Output:</b> 32 \n<strong>Explanation: </strong><code>[1,2,4,7,8,13,14,16,19,26,28,32] </code>is the sequence of the first 12 \n             super ugly numbers given <code>primes</code> = <code>[2,7,13,19]</code> of size 4.</pre>\n\n<p><b>Note:</b></p>\n\n<ul>\n\t<li><code>1</code> is a super ugly number for any given <code>primes</code>.</li>\n\t<li>The given numbers in <code>primes</code> are in ascending order.</li>\n\t<li>0 &lt; <code>k</code> &le; 100, 0 &lt; <code>n</code> &le; 10<sup>6</sup>, 0 &lt; <code>primes[i]</code> &lt; 1000.</li>\n\t<li>The n<sup>th</sup> super ugly number is guaranteed to fit in a 32-bit signed integer.</li>\n</ul>\n"
    },
    {
        "id": "322",
        "title": "Coin Change",
        "slug": "coin-change",
        "difficulty": "Medium",
        "likes": 2171,
        "dislikes": 83,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Minimum Cost For Tickets\", \"titleSlug\": \"minimum-cost-for-tickets\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "49",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>You are given coins of different denominations and a total amount of money <i>amount</i>. Write a function to compute the fewest number of coins that you need to make up that amount. If that amount of money cannot be made up by any combination of the coins, return <code>-1</code>.</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<strong>Input: </strong>coins = <code>[1, 2, 5]</code>, amount = <code>11</code>\n<strong>Output: </strong><code>3</code> \n<strong>Explanation:</strong> 11 = 5 + 5 + 1</pre>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<strong>Input: </strong>coins = <code>[2]</code>, amount = <code>3</code>\n<strong>Output: </strong>-1\n</pre>\n\n<p><b>Note</b>:<br />\nYou may assume that you have an infinite number of each kind of coin.</p>\n"
    },
    {
        "id": "92",
        "title": "Reverse Linked List II",
        "slug": "reverse-linked-list-ii",
        "difficulty": "Medium",
        "likes": 1430,
        "dislikes": 100,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Reverse Linked List\", \"titleSlug\": \"reverse-linked-list\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "661",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Linked List"
        ],
        "content": "<p>Reverse a linked list from position <em>m</em> to <em>n</em>. Do it in one-pass.</p>\n\n<p><strong>Note:&nbsp;</strong>1 &le; <em>m</em> &le; <em>n</em> &le; length of list.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input:</strong> 1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;NULL, <em>m</em> = 2, <em>n</em> = 4\n<strong>Output:</strong> 1-&gt;4-&gt;3-&gt;2-&gt;5-&gt;NULL\n</pre>\n"
    },
    {
        "id": "237",
        "title": "Delete Node in a Linked List",
        "slug": "delete-node-in-a-linked-list",
        "difficulty": "Easy",
        "likes": 869,
        "dislikes": 4178,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Remove Linked List Elements\", \"titleSlug\": \"remove-linked-list-elements\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "32",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Linked List"
        ],
        "content": "<p>Write a function to delete a node (except the tail) in a singly linked list, given only access to that node.</p>\n\n<p>Given linked list --&nbsp;head =&nbsp;[4,5,1,9], which looks like following:</p>\n\n<p><img alt=\"\" src=\"./img/delete-node-in-a-linked-list_1.png\" style=\"margin-top: 5px; margin-bottom: 5px; width: 300px; height: 49px;\" /></p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> head = [4,5,1,9], node = 5\n<strong>Output:</strong> [4,1,9]\n<strong>Explanation: </strong>You are given the second node with value 5, the linked list should become 4 -&gt; 1 -&gt; 9 after calling your function.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> head = [4,5,1,9], node = 1\n<strong>Output:</strong> [4,5,9]\n<strong>Explanation: </strong>You are given the third node with value 1, the linked list should become 4 -&gt; 5 -&gt; 9 after calling your function.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>The linked list will have at least two elements.</li>\n\t<li>All of the nodes&#39; values will be unique.</li>\n\t<li>The given node&nbsp;will not be the tail and it will always be a valid node of the linked list.</li>\n\t<li>Do not return anything from your function.</li>\n</ul>\n"
    },
    {
        "id": "1074",
        "title": "Number of Submatrices That Sum to Target",
        "slug": "number-of-submatrices-that-sum-to-target",
        "difficulty": "Hard",
        "likes": 139,
        "dislikes": 5,
        "hints": [
            "Using a 2D prefix sum, we can query the sum of any submatrix in O(1) time.\r\nNow for each (r1, r2), we can find the largest sum of a submatrix that uses every row in [r1, r2] in linear time using a sliding window."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Array",
            "Dynamic Programming",
            "Sliding Window"
        ],
        "content": "<p>Given a <code>matrix</code>, and a <code>target</code>, return the number of non-empty submatrices that sum to <font face=\"monospace\">target</font>.</p>\n\n<p>A submatrix <code>x1, y1, x2, y2</code> is the set of all cells <code>matrix[x][y]</code> with <code>x1 &lt;= x &lt;= x2</code> and <code>y1 &lt;= y &lt;= y2</code>.</p>\n\n<p>Two submatrices <code>(x1, y1, x2, y2)</code> and <code>(x1&#39;, y1&#39;, x2&#39;, y2&#39;)</code> are different if they have some coordinate&nbsp;that is different: for example, if <code>x1 != x1&#39;</code>.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>matrix = <span id=\"example-input-1-1\">[[0,1,0],[1,1,1],[0,1,0]]</span>, target = <span id=\"example-input-1-2\">0</span>\n<strong>Output: </strong><span id=\"example-output-1\">4</span>\n<strong>Explanation: </strong>The four 1x1 submatrices that only contain 0.\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>matrix = <span id=\"example-input-2-1\">[[1,-1],[-1,1]]</span>, target = <span id=\"example-input-2-2\">0</span>\n<strong>Output: </strong><span id=\"example-output-2\">5</span>\n<strong>Explanation: </strong>The two 1x2 submatrices, plus the two 2x1 submatrices, plus the 2x2 submatrix.\n</pre>\n</div>\n\n<p>&nbsp;</p>\n\n<p><strong><strong>Note:</strong></strong></p>\n\n<ol>\n\t<li><code>1 &lt;= matrix.length &lt;= 300</code></li>\n\t<li><code>1 &lt;= matrix[0].length &lt;= 300</code></li>\n\t<li><code>-1000 &lt;= matrix[i] &lt;= 1000</code></li>\n\t<li><code>-10^8 &lt;= target &lt;= 10^8</code></li>\n</ol>\n"
    },
    {
        "id": "1104",
        "title": "Path In Zigzag Labelled Binary Tree",
        "slug": "path-in-zigzag-labelled-binary-tree",
        "difficulty": "Medium",
        "likes": 106,
        "dislikes": 83,
        "hints": [
            "Based on the label of the current node, find what the label must be for the parent of that node."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Math",
            "Tree"
        ],
        "content": "<p>In an infinite binary tree where every node has two children, the nodes are labelled in row order.</p>\n\n<p>In the odd numbered rows (ie., the first, third, fifth,...), the labelling is left to right, while in the even numbered rows (second, fourth, sixth,...), the labelling is right to left.</p>\n\n<p><img alt=\"\" src=\"./img/path-in-zigzag-labelled-binary-tree_1.png\" style=\"width: 300px; height: 138px;\" /></p>\n\n<p>Given the <code>label</code> of a node in this tree, return the labels in the path from the root of the tree to the&nbsp;node with that <code>label</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> label = 14\n<strong>Output:</strong> [1,3,4,14]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> label = 26\n<strong>Output:</strong> [1,2,6,10,26]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= label &lt;= 10^6</code></li>\n</ul>\n"
    },
    {
        "id": "1094",
        "title": "Car Pooling",
        "slug": "car-pooling",
        "difficulty": "Medium",
        "likes": 184,
        "dislikes": 10,
        "hints": [
            "Sort the pickup and dropoff events by location, then process them in order."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Meeting Rooms II\", \"titleSlug\": \"meeting-rooms-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Greedy"
        ],
        "content": "<p>You are driving a vehicle that&nbsp;has <code>capacity</code> empty seats initially available for passengers.&nbsp; The vehicle <strong>only</strong> drives east (ie. it <strong>cannot</strong> turn around and drive west.)</p>\n\n<p>Given a list of <code>trips</code>, <code>trip[i] = [num_passengers, start_location, end_location]</code>&nbsp;contains information about the <code>i</code>-th trip: the number of passengers that must be picked up, and the locations to pick them up and drop them off.&nbsp; The locations are given as the number of kilometers&nbsp;due east from your vehicle&#39;s initial location.</p>\n\n<p>Return <code>true</code> if and only if&nbsp;it is possible to pick up and drop off all passengers for all the given trips.&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>trips = <span id=\"example-input-1-1\">[[2,1,5],[3,3,7]]</span>, capacity = <span id=\"example-input-1-2\">4</span>\n<strong>Output: </strong><span id=\"example-output-1\">false</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>trips = <span id=\"example-input-2-1\">[[2,1,5],[3,3,7]]</span>, capacity = <span id=\"example-input-2-2\">5</span>\n<strong>Output: </strong><span id=\"example-output-2\">true</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>trips = <span id=\"example-input-3-1\">[[2,1,5],[3,5,7]]</span>, capacity = <span id=\"example-input-3-2\">3</span>\n<strong>Output: </strong><span id=\"example-output-3\">true</span>\n</pre>\n\n<div>\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input: </strong>trips = <span id=\"example-input-4-1\">[[3,2,7],[3,7,9],[8,3,9]]</span>, capacity = <span id=\"example-input-4-2\">11</span>\n<strong>Output: </strong><span id=\"example-output-4\">true</span>\n</pre>\n</div>\n</div>\n</div>\n\n<div>\n<div>\n<div>\n<div>&nbsp;</div>\n</div>\n</div>\n</div>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ol>\n\t<li><code>trips.length &lt;= 1000</code></li>\n\t<li><code>trips[i].length == 3</code></li>\n\t<li><code>1 &lt;= trips[i][0] &lt;= 100</code></li>\n\t<li><code>0 &lt;= trips[i][1] &lt; trips[i][2] &lt;= 1000</code></li>\n\t<li><code>1 &lt;=&nbsp;capacity &lt;= 100000</code></li>\n</ol>\n"
    },
    {
        "id": "427",
        "title": "Construct Quad Tree",
        "slug": "construct-quad-tree",
        "difficulty": "Medium",
        "likes": 162,
        "dislikes": 338,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [],
        "content": "<p>We want to use quad trees to store an <code>N x N</code> boolean grid. Each cell in the grid can only be true or false. The root node represents the whole grid. For each node, it will be subdivided into four children nodes <strong>until the values in the region it represents are all the same</strong>.</p>\n\n<p>Each node has another two boolean attributes : <code>isLeaf</code> and <code>val</code>. <code>isLeaf</code> is true if and only if the node is a leaf node. The <code>val</code> attribute for a leaf node contains the value of the region it represents.</p>\n\n<p>Your task is to use a quad tree to represent a given grid. The following example may help you understand the problem better:</p>\n\n<p>Given the <code>8 x 8</code> grid below, we want to construct the corresponding quad tree:</p>\n\n<p><img alt=\"\" src=\"./img/construct-quad-tree_1.png\" style=\"height:27%; max-height:300px; max-width:299px; width:27%\" /></p>\n\n<p>It can be divided according to the definition above:</p>\n\n<p><img alt=\"\" src=\"./img/construct-quad-tree_2.png\" style=\"height:100%; max-height:300px; max-width:1107px; width:100%\" /></p>\n\n<p>&nbsp;</p>\n\n<p>The corresponding quad tree should be as following, where each node is represented as a <code>(isLeaf, val)</code> pair.</p>\n\n<p>For the non-leaf&nbsp;nodes,&nbsp;<code>val</code> can be arbitrary, so it is represented as <code>*</code>.</p>\n\n<p><img alt=\"\" src=\"./img/construct-quad-tree_3.png\" style=\"height:100%; max-height:300px; max-width:836px; width:100%\" /></p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>N</code> is less than <code>1000</code> and guaranteened to be a power of 2.</li>\n\t<li>If you want to know more about the quad tree, you can refer to its <a href=\"https://en.wikipedia.org/wiki/Quadtree\">wiki</a>.</li>\n</ol>\n"
    },
    {
        "id": "129",
        "title": "Sum Root to Leaf Numbers",
        "slug": "sum-root-to-leaf-numbers",
        "difficulty": "Medium",
        "likes": 793,
        "dislikes": 29,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Path Sum\", \"titleSlug\": \"path-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Binary Tree Maximum Path Sum\", \"titleSlug\": \"binary-tree-maximum-path-sum\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Smallest String Starting From Leaf\", \"titleSlug\": \"smallest-string-starting-from-leaf\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Tree",
            "Depth-first Search"
        ],
        "content": "<p>Given a binary tree containing digits from <code>0-9</code> only, each root-to-leaf path could represent a number.</p>\n\n<p>An example is the root-to-leaf path <code>1-&gt;2-&gt;3</code> which represents the number <code>123</code>.</p>\n\n<p>Find the total sum of all root-to-leaf numbers.</p>\n\n<p><strong>Note:</strong>&nbsp;A leaf is a node with no children.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input:</strong> [1,2,3]\n    1\n   / \\\n  2   3\n<strong>Output:</strong> 25\n<strong>Explanation:</strong>\nThe root-to-leaf path <code>1-&gt;2</code> represents the number <code>12</code>.\nThe root-to-leaf path <code>1-&gt;3</code> represents the number <code>13</code>.\nTherefore, sum = 12 + 13 = <code>25</code>.</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> [4,9,0,5,1]\n    4\n   / \\\n  9   0\n&nbsp;/ \\\n5   1\n<strong>Output:</strong> 1026\n<strong>Explanation:</strong>\nThe root-to-leaf path <code>4-&gt;9-&gt;5</code> represents the number 495.\nThe root-to-leaf path <code>4-&gt;9-&gt;1</code> represents the number 491.\nThe root-to-leaf path <code>4-&gt;0</code> represents the number 40.\nTherefore, sum = 495 + 491 + 40 = <code>1026</code>.</pre>\n"
    },
    {
        "id": "850",
        "title": "Rectangle Area II",
        "slug": "rectangle-area-ii",
        "difficulty": "Hard",
        "likes": 208,
        "dislikes": 23,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "480",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Segment Tree",
            "Line Sweep"
        ],
        "content": "<p>We are given a list of (axis-aligned)&nbsp;<code>rectangles</code>.&nbsp; Each&nbsp;<code>rectangle[i] = [x1, y1, x2, y2]&nbsp;</code>, where (x1, y1) are the coordinates of the bottom-left corner, and (x2, y2) are the coordinates of the top-right corner of the <code>i</code>th rectangle.</p>\n\n<p>Find the total area covered by all <code>rectangles</code> in the plane.&nbsp; Since the answer&nbsp;may be too large, <strong>return it modulo 10^9 + 7</strong>.</p>\n\n<p><img alt=\"\" src=\"./img/rectangle-area-ii_1.png\" style=\"width: 480px; height: 360px;\" /></p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>[[0,0,2,2],[1,0,2,3],[1,0,3,1]]\n<strong>Output: </strong>6\n<strong>Explanation: </strong>As illustrated in the picture.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>[[0,0,1000000000,1000000000]]\n<strong>Output: </strong>49\n<strong>Explanation: </strong>The answer is 10^18 modulo (10^9 + 7), which is (10^9)^2 = (-7)^2 = 49.\n</pre>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= rectangles.length &lt;= 200</code></li>\n\t<li><code><font face=\"monospace\">rectanges[i].length = 4</font></code></li>\n\t<li><code>0 &lt;= rectangles[i][j] &lt;= 10^9</code></li>\n\t<li>The total area covered by all rectangles will never exceed&nbsp;<code>2^63 - 1</code>&nbsp;and thus will fit in a 64-bit signed integer.</li>\n</ul>"
    },
    {
        "id": "275",
        "title": "H-Index II",
        "slug": "h-index-ii",
        "difficulty": "Medium",
        "likes": 227,
        "dislikes": 406,
        "hints": [
            "Expected runtime complexity is in <i>O</i>(log <i>n</i>) and the input is sorted."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"H-Index\", \"titleSlug\": \"h-index\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "751",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Binary Search"
        ],
        "content": "<p>Given an array of citations <strong>sorted&nbsp;in ascending order </strong>(each citation is a non-negative integer) of a researcher, write a function to compute the researcher&#39;s h-index.</p>\n\n<p>According to the&nbsp;<a href=\"https://en.wikipedia.org/wiki/H-index\" target=\"_blank\">definition of h-index on Wikipedia</a>: &quot;A scientist has index&nbsp;<i>h</i>&nbsp;if&nbsp;<i>h</i>&nbsp;of his/her&nbsp;<i>N</i>&nbsp;papers have&nbsp;<b>at least</b>&nbsp;<i>h</i>&nbsp;citations each, and the other&nbsp;<i>N &minus; h</i>&nbsp;papers have&nbsp;<b>no more than</b>&nbsp;<i>h&nbsp;</i>citations each.&quot;</p>\n\n<p><b>Example:</b></p>\n\n<pre>\n<b>Input:</b> <code>citations = [0,1,3,5,6]</code>\n<b>Output:</b> 3 \n<strong>Explanation: </strong><code>[0,1,3,5,6] </code>means the researcher has <code>5</code> papers in total and each of them had \n             received 0<code>, 1, 3, 5, 6</code> citations respectively. \n&nbsp;            Since the researcher has <code>3</code> papers with <b>at least</b> <code>3</code> citations each and the remaining \n&nbsp;            two with <b>no more than</b> <code>3</code> citations each, her h-index is <code>3</code>.</pre>\n\n<p><strong>Note:</strong></p>\n\n<p>If there are several possible values for&nbsp;<em>h</em>, the maximum one is taken as the h-index.</p>\n\n<p><strong>Follow up:</strong></p>\n\n<ul>\n\t<li>This is a follow up problem to&nbsp;<a href=\"/problems/h-index/description/\">H-Index</a>, where <code>citations</code> is now guaranteed to be sorted in ascending order.</li>\n\t<li>Could you solve it in logarithmic time complexity?</li>\n</ul>\n"
    },
    {
        "id": "66",
        "title": "Plus One",
        "slug": "plus-one",
        "difficulty": "Easy",
        "likes": 976,
        "dislikes": 1730,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Multiply Strings\", \"titleSlug\": \"multiply-strings\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Add Binary\", \"titleSlug\": \"add-binary\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Plus One Linked List\", \"titleSlug\": \"plus-one-linked-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Add to Array-Form of Integer\", \"titleSlug\": \"add-to-array-form-of-integer\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Array"
        ],
        "content": "<p>Given a <strong>non-empty</strong> array of digits&nbsp;representing a non-negative integer, plus one to the integer.</p>\n\n<p>The digits are stored such that the most significant digit is at the head of the list, and each element in the array contain a single digit.</p>\n\n<p>You may assume the integer does not contain any leading zero, except the number 0 itself.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> [1,2,3]\n<strong>Output:</strong> [1,2,4]\n<strong>Explanation:</strong> The array represents the integer 123.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> [4,3,2,1]\n<strong>Output:</strong> [4,3,2,2]\n<strong>Explanation:</strong> The array represents the integer 4321.\n</pre>"
    },
    {
        "id": "1116",
        "title": "Print Zero Even Odd",
        "slug": "print-zero-even-odd",
        "difficulty": "Medium",
        "likes": 65,
        "dislikes": 34,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Print FooBar Alternately\", \"titleSlug\": \"print-foobar-alternately\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [],
        "content": "<p>Suppose you are given the following code:</p>\n\n<pre>\nclass ZeroEvenOdd {\n&nbsp; public ZeroEvenOdd(int n) { ... }&nbsp;     // constructor\n  public void zero(printNumber) { ... }  // only output 0&#39;s\n  public void even(printNumber) { ... }  // only output even numbers\n  public void odd(printNumber) { ... }   // only output odd numbers\n}\n</pre>\n\n<p>The same instance of <code>ZeroEvenOdd</code> will be passed to three different threads:</p>\n\n<ol>\n\t<li>Thread A will call&nbsp;<code>zero()</code>&nbsp;which should only output 0&#39;s.</li>\n\t<li>Thread B will call&nbsp;<code>even()</code>&nbsp;which should only ouput even numbers.</li>\n\t<li>Thread C will call <code>odd()</code>&nbsp;which should only output odd numbers.</li>\n</ol>\n\n<p>Each of the threads is given a&nbsp;<code>printNumber</code> method to output&nbsp;an integer. Modify the given program to output the series&nbsp;<code>010203040506</code>... where the length of the series must be 2<em>n</em>.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<b>Input:</b> n = 2\n<b>Output:</b> &quot;0102&quot;\n<strong>Explanation:</strong> There are three threads being fired asynchronously. One of them calls zero(), the other calls even(), and the last one calls odd(). &quot;0102&quot; is the correct output.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<b>Input:</b> n = 5\n<b>Output:</b> &quot;0102030405&quot;\n</pre>\n"
    },
    {
        "id": "141",
        "title": "Linked List Cycle",
        "slug": "linked-list-cycle",
        "difficulty": "Easy",
        "likes": 1775,
        "dislikes": 224,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Linked List Cycle II\", \"titleSlug\": \"linked-list-cycle-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Happy Number\", \"titleSlug\": \"happy-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "21",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Linked List",
            "Two Pointers"
        ],
        "content": "<p>Given a linked list, determine if it has a cycle in it.</p>\n\n<p>To represent a cycle in the given linked list, we use an integer <code>pos</code> which represents the position (0-indexed)&nbsp;in the linked list where tail connects to. If <code>pos</code> is <code>-1</code>, then there is no cycle in the linked list.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>head = <span id=\"example-input-1-1\">[3,2,0,-4]</span>, pos = <span id=\"example-input-1-2\">1</span>\n<strong>Output: </strong><span id=\"example-output-1\">true\n<strong>Explanation:</strong> There is a cycle in the linked list, where tail connects to the second node.</span>\n</pre>\n</div>\n\n<div>\n<p><span><img alt=\"\" src=\"./img/linked-list-cycle_1.png\" style=\"width: 300px; height: 97px; margin-top: 8px; margin-bottom: 8px;\" /></span></p>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>head = <span id=\"example-input-1-1\">[1,2]</span>, pos = <span id=\"example-input-1-2\">0</span>\n<strong>Output: </strong><span id=\"example-output-1\">true\n<strong>Explanation:</strong> There is a cycle in the linked list, where tail connects to the first node.</span>\n</pre>\n</div>\n\n<div>\n<p><span><img alt=\"\" src=\"./img/linked-list-cycle_2.png\" style=\"width: 141px; height: 74px;\" /></span></p>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>head = <span id=\"example-input-1-1\">[1]</span>, pos = <span id=\"example-input-1-2\">-1</span>\n<strong>Output: </strong><span id=\"example-output-1\">false\n<strong>Explanation:</strong> There is no cycle in the linked list.</span>\n</pre>\n</div>\n\n<p><span><img alt=\"\" src=\"./img/linked-list-cycle_3.png\" style=\"width: 45px; height: 45px;\" /></span></p>\n\n<p>&nbsp;</p>\n\n<p><strong>Follow up:</strong></p>\n\n<p>Can you solve it using <em>O(1)</em> (i.e. constant) memory?</p>\n"
    },
    {
        "id": "1020",
        "title": "Number of Enclaves",
        "slug": "number-of-enclaves",
        "difficulty": "Medium",
        "likes": 118,
        "dislikes": 16,
        "hints": [
            "Can you model this problem as a graph problem?  Create n * m + 1 nodes where n * m nodes represents each cell of the map and one extra node to represent the exterior of the map.",
            "In the map add edges between neighbors on land cells. And add edges between the exterior and land nodes which are in the boundary.\r\nReturn as answer the number of nodes that are not reachable from the exterior node."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Depth-first Search"
        ],
        "content": "<p>Given a 2D array <code>A</code>, each cell is 0 (representing sea) or 1 (representing land)</p>\n\n<p>A move consists of walking from one land square 4-directionally to another land square, or off the boundary of the grid.</p>\n\n<p>Return the number of land squares in the grid for which we <strong>cannot</strong> walk off the boundary of the grid in any number of moves.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[[0,0,0,0],[1,0,1,0],[0,1,1,0],[0,0,0,0]]</span>\n<strong>Output: </strong><span id=\"example-output-1\">3</span>\n<strong>Explanation: </strong>\nThere are three 1s that are enclosed by 0s, and one 1 that isn&#39;t enclosed because its on the boundary.</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[[0,1,1,0],[0,0,1,0],[0,0,1,0],[0,0,0,0]]</span>\n<strong>Output: </strong><span id=\"example-output-2\">0</span>\n<strong>Explanation: </strong>\nAll 1s are either on the boundary or can reach the boundary.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 500</code></li>\n\t<li><code>1 &lt;= A[i].length &lt;= 500</code></li>\n\t<li><code>0 &lt;= A[i][j] &lt;= 1</code></li>\n\t<li>All rows have the same size.</li>\n</ol>"
    },
    {
        "id": "520",
        "title": "Detect Capital",
        "slug": "detect-capital",
        "difficulty": "Easy",
        "likes": 335,
        "dislikes": 215,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "String"
        ],
        "content": "<p>Given a word, you need to judge whether the usage of capitals in it is right or not.</p>\n\n<p>We define the usage of capitals in a word to be right when one of the following cases holds:</p>\n\n<ol>\n\t<li>All letters in this word are capitals, like &quot;USA&quot;.</li>\n\t<li>All letters in this word are not capitals, like &quot;leetcode&quot;.</li>\n\t<li>Only the first letter in this word is capital, like &quot;Google&quot;.</li>\n</ol>\nOtherwise, we define that this word doesn&#39;t use capitals in a right way.\n\n<p>&nbsp;</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> &quot;USA&quot;\n<b>Output:</b> True\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input:</b> &quot;FlaG&quot;\n<b>Output:</b> False\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b> The input will be a non-empty word consisting of uppercase and lowercase latin letters.</p>\n"
    },
    {
        "id": "815",
        "title": "Bus Routes",
        "slug": "bus-routes",
        "difficulty": "Hard",
        "likes": 488,
        "dislikes": 18,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "444",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Breadth-first Search"
        ],
        "content": "<p>We have a list of bus routes. Each <code>routes[i]</code> is a bus route that the i-th bus&nbsp;repeats forever. For example if <code>routes[0] = [1, 5, 7]</code>, this means that the first&nbsp;bus (0-th indexed) travels in the sequence 1-&gt;5-&gt;7-&gt;1-&gt;5-&gt;7-&gt;1-&gt;... forever.</p>\n\n<p>We start at bus stop <code>S</code> (initially not on a bus), and we want to go to bus stop <code>T</code>. Travelling by buses only, what is the least number of buses we must take to reach our destination? Return -1 if it is not possible.</p>\n\n<pre>\n<strong>Example:</strong>\n<strong>Input:</strong> \nroutes = [[1, 2, 7], [3, 6, 7]]\nS = 1\nT = 6\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> \nThe best strategy is take the first bus to the bus stop 7, then take the second bus to the bus stop 6.\n</pre>\n\n<p><strong>Note: </strong></p>\n\n<ul>\n\t<li><code>1 &lt;= routes.length &lt;= 500</code>.</li>\n\t<li><code>1 &lt;= routes[i].length &lt;= 500</code>.</li>\n\t<li><code>0 &lt;= routes[i][j] &lt; 10 ^ 6</code>.</li>\n</ul>\n"
    },
    {
        "id": "986",
        "title": "Interval List Intersections",
        "slug": "interval-list-intersections",
        "difficulty": "Medium",
        "likes": 431,
        "dislikes": 18,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Merge Intervals\", \"titleSlug\": \"merge-intervals\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Merge Sorted Array\", \"titleSlug\": \"merge-sorted-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Employee Free Time\", \"titleSlug\": \"employee-free-time\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "685",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Two Pointers"
        ],
        "content": "<p>Given two lists&nbsp;of <strong>closed</strong> intervals, each list of intervals is pairwise disjoint and in sorted order.</p>\n\n<p>Return the intersection of these two interval lists.</p>\n\n<p><em>(Formally, a closed interval <code>[a, b]</code> (with <code>a &lt;= b</code>) denotes&nbsp;the set of real numbers <code>x</code> with <code>a &lt;= x &lt;= b</code>.&nbsp; The&nbsp;intersection of two closed intervals is a set of real numbers that is either empty, or can be represented as a closed interval.&nbsp; For example, the intersection of [1, 3] and [2, 4] is [2, 3].)</em></p>\n\n<div>\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<p><strong><img alt=\"\" src=\"./img/interval-list-intersections_1.png\" style=\"width: 506px; height: 140px;\" /></strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-1-1\">[[0,2],[5,10],[13,23],[24,25]]</span>, B = <span id=\"example-input-1-2\">[[1,5],[8,12],[15,24],[25,26]]</span>\n<strong>Output: </strong><span id=\"example-output-1\">[[1,2],[5,5],[8,10],[15,23],[24,24],[25,25]]</span>\n<strong>Reminder: </strong>The inputs and the desired output are lists of Interval&nbsp;objects, and not arrays or lists.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>0 &lt;= A.length &lt; 1000</code></li>\n\t<li><code>0 &lt;= B.length &lt; 1000</code></li>\n\t<li><code>0 &lt;= A[i].start, A[i].end, B[i].start, B[i].end &lt; 10^9</code></li>\n</ol>\n\n<p><strong>NOTE:</strong>&nbsp;input types have been changed on April 15, 2019. Please reset to default code definition to get new method signature.</p>\n</div>\n"
    },
    {
        "id": "517",
        "title": "Super Washing Machines",
        "slug": "super-washing-machines",
        "difficulty": "Hard",
        "likes": 216,
        "dislikes": 117,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "734",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math",
            "Dynamic Programming"
        ],
        "content": "<p>You have <b>n</b> super washing machines on a line. Initially, each washing machine has some dresses or is empty. \n</p>\n\n<p>For each <b>move</b>, you could choose <b>any m</b> (1 &le; m &le; n) washing machines, and pass <b>one dress</b> of each washing machine to one of its adjacent washing machines <b> at the same time </b>.  </p>\n\n<p>Given an integer array representing the number of dresses in each washing machine from left to right on the line, you should find the <b>minimum number of moves</b> to make all the washing machines have the same number of dresses. If it is not possible to do it, return -1.</p>\n\n<p><b>Example1</b>\n<pre>\n<b>Input:</b> [1,0,5]\n\n<b>Output:</b> 3\n\n<b>Explanation:</b> \n1st move:    1     0 <-- 5    =>    1     1     4\n2nd move:    1 <-- 1 <-- 4    =>    2     1     3    \n3rd move:    2     1 <-- 3    =>    2     2     2   \n</pre>\n\n<p><b>Example2</b>\n<pre>\n<b>Input:</b> [0,3,0]\n\n<b>Output:</b> 2\n\n<b>Explanation:</b> \n1st move:    0 <-- 3     0    =>    1     2     0    \n2nd move:    1     2 --> 0    =>    1     1     1     \n</pre>\n\n<p><b>Example3</b>\n<pre>\n<b>Input:</b> [0,2,0]\n\n<b>Output:</b> -1\n\n<b>Explanation:</b> \nIt's impossible to make all the three washing machines have the same number of dresses. \n</pre>\n\n</p>\n\n<p><b>Note:</b><br>\n<ol>\n<li>The range of n is [1, 10000].</li>\n<li>The range of dresses number in a super washing machine is [0, 1e5].</li>\n</ol>\n</p>"
    },
    {
        "id": "388",
        "title": "Longest Absolute File Path",
        "slug": "longest-absolute-file-path",
        "difficulty": "Medium",
        "likes": 469,
        "dislikes": 978,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [],
        "content": "<p>Suppose we abstract our file system by a string in the following manner:</p>\n\n<p>The string <code>\"dir\\n\\tsubdir1\\n\\tsubdir2\\n\\t\\tfile.ext\"</code> represents:</p>\n\n<pre>dir\n    subdir1\n    subdir2\n        file.ext\n</pre>\n\n<p>The directory <code>dir</code> contains an empty sub-directory <code>subdir1</code> and a sub-directory <code>subdir2</code> containing a file <code>file.ext</code>.</p>\n\n<p>The string <code>\"dir\\n\\tsubdir1\\n\\t\\tfile1.ext\\n\\t\\tsubsubdir1\\n\\tsubdir2\\n\\t\\tsubsubdir2\\n\\t\\t\\tfile2.ext\"</code> represents:</p>\n\n<pre>dir\n    subdir1\n        file1.ext\n        subsubdir1\n    subdir2\n        subsubdir2\n            file2.ext\n</pre>\n\n<p>The directory <code>dir</code> contains two sub-directories <code>subdir1</code> and <code>subdir2</code>. <code>subdir1</code> contains a file <code>file1.ext</code> and an empty second-level sub-directory <code>subsubdir1</code>. <code>subdir2</code> contains a second-level sub-directory <code>subsubdir2</code> containing a file <code>file2.ext</code>.</p>\n\n<p>We are interested in finding the longest (number of characters) absolute path to a file within our file system. For example, in the second example above, the longest absolute path is <code>\"dir/subdir2/subsubdir2/file2.ext\"</code>, and its length is <code>32</code> (not including the double quotes).</p>\n\n<p>Given a string representing the file system in the above format, return the length of the longest absolute path to file in the abstracted file system. If there is no file in the system, return <code>0</code>.</p>\n\n<p><b>Note:</b><br />\n<ul>\n<li>The name of a file contains at least a <code>.</code> and an extension.</li>\n<li>The name of a directory or sub-directory will not contain a <code>.</code>.</li>\n</ul>\n</p>\n\n<p>Time complexity required: <code>O(n)</code> where <code>n</code> is the size of the input string.</p>\n\n<p>Notice that <code>a/aa/aaa/file1.txt</code> is not the longest file path, if there is another path <code>aaaaaaaaaaaaaaaaaaaaa/sth.png</code>.</p>"
    },
    {
        "id": "139",
        "title": "Word Break",
        "slug": "word-break",
        "difficulty": "Medium",
        "likes": 2632,
        "dislikes": 139,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Word Break II\", \"titleSlug\": \"word-break-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "75",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>Given a <strong>non-empty</strong> string <em>s</em> and a dictionary <em>wordDict</em> containing a list of <strong>non-empty</strong> words, determine if <em>s</em> can be segmented into a space-separated sequence of one or more dictionary words.</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>The same word in the dictionary may be reused multiple times in the segmentation.</li>\n\t<li>You may assume the dictionary does not contain duplicate words.</li>\n</ul>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;leetcode&quot;, wordDict = [&quot;leet&quot;, &quot;code&quot;]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> Return true because <code>&quot;leetcode&quot;</code> can be segmented as <code>&quot;leet code&quot;</code>.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;applepenapple&quot;, wordDict = [&quot;apple&quot;, &quot;pen&quot;]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> Return true because <code>&quot;</code>applepenapple<code>&quot;</code> can be segmented as <code>&quot;</code>apple pen apple<code>&quot;</code>.\n&nbsp;            Note that you are allowed to reuse a dictionary word.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> s = &quot;catsandog&quot;, wordDict = [&quot;cats&quot;, &quot;dog&quot;, &quot;sand&quot;, &quot;and&quot;, &quot;cat&quot;]\n<strong>Output:</strong> false\n</pre>\n"
    },
    {
        "id": "432",
        "title": "All O`one Data Structure",
        "slug": "all-oone-data-structure",
        "difficulty": "Hard",
        "likes": 398,
        "dislikes": 57,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Design"
        ],
        "content": "<p>Implement a data structure supporting the following operations:</p>\n\n<p>\n<ol>\n<li>Inc(Key) - Inserts a new key <Key> with value 1. Or increments an existing key by 1. Key is guaranteed to be a <b>non-empty</b> string.</li>\n<li>Dec(Key) - If Key's value is 1, remove it from the data structure. Otherwise decrements an existing key by 1. If the key does not exist, this function does nothing. Key is guaranteed to be a <b>non-empty</b> string.</li>\n<li>GetMaxKey() - Returns one of the keys with maximal value. If no element exists, return an empty string <code>\"\"</code>.</li>\n<li>GetMinKey() - Returns one of the keys with minimal value. If no element exists, return an empty string <code>\"\"</code>.</li>\n</ol>\n</p>\n\n<p>\nChallenge: Perform all these in O(1) time complexity.\n</p>"
    },
    {
        "id": "467",
        "title": "Unique Substrings in Wraparound String",
        "slug": "unique-substrings-in-wraparound-string",
        "difficulty": "Medium",
        "likes": 409,
        "dislikes": 67,
        "hints": [
            "One possible solution might be to consider allocating an array size of 26 for each character in the alphabet. (Credits to @r2ysxu)"
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>Consider the string <code>s</code> to be the infinite wraparound string of \"abcdefghijklmnopqrstuvwxyz\", so <code>s</code> will look like this: \"...zabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcd....\".</p>\n\n<p>Now we have another string <code>p</code>. Your job is to find out how many unique non-empty substrings of <code>p</code> are present in <code>s</code>. In particular, your input is the string <code>p</code> and you need to output the number of different non-empty substrings of <code>p</code> in the string <code>s</code>.</p>\n\n<p><b>Note:</b> <code>p</code> consists of only lowercase English letters and the size of p might be over 10000.</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> \"a\"\n<b>Output:</b> 1\n\n<b>Explanation:</b> Only the substring \"a\" of string \"a\" is in the string \u0010s.\n</pre>\n</p>\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b> \"cac\"\n<b>Output:</b> 2\n<b>Explanation:</b> There are two substrings \"a\", \"c\" of string \"cac\" in the string s.\n</pre>\n</p>\n\n<p><b>Example 3:</b><br />\n<pre>\n<b>Input:</b> \"zab\"\n<b>Output:</b> 6\n<b>Explanation:</b> There are six substrings \"z\", \"a\", \"b\", \"za\", \"ab\", \"zab\" of string \"zab\" in the string s.\n</pre>\n</p>"
    },
    {
        "id": "62",
        "title": "Unique Paths",
        "slug": "unique-paths",
        "difficulty": "Medium",
        "likes": 1854,
        "dislikes": 128,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Unique Paths II\", \"titleSlug\": \"unique-paths-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Path Sum\", \"titleSlug\": \"minimum-path-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Dungeon Game\", \"titleSlug\": \"dungeon-game\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Array",
            "Dynamic Programming"
        ],
        "content": "<p>A robot is located at the top-left corner of a <em>m</em> x <em>n</em> grid (marked &#39;Start&#39; in the diagram below).</p>\n\n<p>The robot can only move either down or right at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked &#39;Finish&#39; in the diagram below).</p>\n\n<p>How many possible unique paths are there?</p>\n\n<p><img src=\"./img/unique-paths_1.png\" style=\"width: 400px; height: 183px;\" /><br />\n<small>Above is a 7 x 3 grid. How many possible unique paths are there?</small></p>\n\n<p><strong>Note:</strong> <em>m</em> and <em>n</em> will be at most 100.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> m = 3, n = 2\n<strong>Output:</strong> 3\n<strong>Explanation:</strong>\nFrom the top-left corner, there are a total of 3 ways to reach the bottom-right corner:\n1. Right -&gt; Right -&gt; Down\n2. Right -&gt; Down -&gt; Right\n3. Down -&gt; Right -&gt; Right\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> m = 7, n = 3\n<strong>Output:</strong> 28</pre>\n"
    },
    {
        "id": "552",
        "title": "Student Attendance Record II",
        "slug": "student-attendance-record-ii",
        "difficulty": "Hard",
        "likes": 320,
        "dislikes": 61,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Student Attendance Record I\", \"titleSlug\": \"student-attendance-record-i\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "110",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>Given a positive integer <b>n</b>, return the number of all possible attendance records with length n, which will be regarded as rewardable. The answer may be very large, return it after mod 10<sup>9</sup> + 7.</p>\n\n<p>A student attendance record is a string that only contains the following three characters:</p>\n\n<p>\n<ol>\n<li><b>'A'</b> : Absent. </li>\n<li><b>'L'</b> : Late.</li>\n<li> <b>'P'</b> : Present. </li>\n</ol>\n</p>\n\n<p>\nA record is regarded as rewardable if it doesn't contain <b>more than one 'A' (absent)</b> or <b>more than two continuous 'L' (late)</b>.</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> n = 2\n<b>Output:</b> 8 \n<b>Explanation:</b>\nThere are 8 records with length 2 will be regarded as rewardable:\n\"PP\" , \"AP\", \"PA\", \"LP\", \"PL\", \"AL\", \"LA\", \"LL\"\nOnly \"AA\" won't be regarded as rewardable owing to more than one absent times. \n</pre>\n</p>\n\n<p><b>Note:</b>\nThe value of <b>n</b> won't exceed 100,000.\n</p>\n\n\n"
    },
    {
        "id": "118",
        "title": "Pascal's Triangle",
        "slug": "pascals-triangle",
        "difficulty": "Easy",
        "likes": 835,
        "dislikes": 84,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Pascal's Triangle II\", \"titleSlug\": \"pascals-triangle-ii\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "340",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array"
        ],
        "content": "<p>Given a non-negative integer&nbsp;<em>numRows</em>, generate the first <em>numRows</em> of Pascal&#39;s triangle.</p>\n\n<p><img alt=\"\" src=\"./img/pascals-triangle_1.gif\" style=\"height:240px; width:260px\" /><br />\n<small>In Pascal&#39;s triangle, each number is the sum of the two numbers directly above it.</small></p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input:</strong> 5\n<strong>Output:</strong>\n[\n     [1],\n    [1,1],\n   [1,2,1],\n  [1,3,3,1],\n [1,4,6,4,1]\n]\n</pre>\n"
    },
    {
        "id": "1022",
        "title": "Sum of Root To Leaf Binary Numbers",
        "slug": "sum-of-root-to-leaf-binary-numbers",
        "difficulty": "Easy",
        "likes": 162,
        "dislikes": 59,
        "hints": [
            "Find each path, then transform that path to an integer in base 10."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Tree"
        ],
        "content": "<p>Given a binary tree, each node has value <code>0</code>&nbsp;or <code>1</code>.&nbsp; Each root-to-leaf path represents a binary number starting with the most significant bit.&nbsp; For example, if the path is <code>0 -&gt; 1 -&gt; 1 -&gt; 0 -&gt; 1</code>, then this could represent <code>01101</code> in binary, which is <code>13</code>.</p>\n\n<p>For all leaves in the tree, consider the numbers represented by the path&nbsp;from the root to that leaf.</p>\n\n<p>Return the sum of these numbers.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<p><span id=\"example-output-1\"><img alt=\"\" src=\"./img/sum-of-root-to-leaf-binary-numbers_1.png\" style=\"width: 304px; height: 200px;\" /></span></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[1,0,1,0,1,0,1]</span>\n<strong>Output: </strong><span id=\"example-output-1\">22</span>\n<strong>Explanation: </strong>(100) + (101) + (110) + (111) = 4 + 5 + 6 + 7 = 22\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li>The number of nodes in the tree is between <code>1</code> and <code>1000</code>.</li>\n\t<li>node.val is <code>0</code> or <code>1</code>.</li>\n\t<li>The answer will not exceed <code>2^31 - 1</code>.</li>\n</ol>\n"
    },
    {
        "id": "1001",
        "title": "Grid Illumination",
        "slug": "grid-illumination",
        "difficulty": "Hard",
        "likes": 107,
        "dislikes": 46,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"N-Queens\", \"titleSlug\": \"n-queens\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Hash Table"
        ],
        "content": "<p>On a <code>N x N</code> grid of cells, each cell <code>(x, y)</code> with <code>0 &lt;= x &lt; N</code> and <code>0 &lt;= y &lt; N</code> has a lamp.</p>\n\n<p>Initially, some number of lamps are on.&nbsp; <code>lamps[i]</code> tells us the location of the <code>i</code>-th lamp that is on.&nbsp; Each lamp that is on illuminates every square on its x-axis, y-axis, and both diagonals (similar to a Queen in chess).</p>\n\n<p>For the i-th query&nbsp;<code>queries[i] = (x, y)</code>, the answer to the query is 1 if the cell (x, y) is illuminated, else 0.</p>\n\n<p>After each query <code>(x, y)</code> [in the order given by <code>queries</code>], we turn off any&nbsp;lamps that are at cell <code>(x, y)</code>&nbsp;or are adjacent 8-directionally (ie., share a corner or edge with cell <code>(x, y)</code>.)</p>\n\n<p>Return an array of answers.&nbsp; Each&nbsp;value <code>answer[i]</code> should be equal to the answer of the <code>i</code>-th query <code>queries[i]</code>.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>N = <span id=\"example-input-1-1\">5</span>, lamps = <span id=\"example-input-1-2\">[[0,0],[4,4]]</span>, queries = <span id=\"example-input-1-3\">[[1,1],[1,0]]</span>\n<strong>Output: </strong><span id=\"example-output-1\">[1,0]</span>\n<strong>Explanation: </strong>\nBefore performing the first query we have both lamps [0,0] and [4,4] on.\nThe grid representing which cells are lit looks like this, where [0,0] is the top left corner, and [4,4] is the bottom right corner:\n1 1 1 1 1\n1 1 0 0 1\n1 0 1 0 1\n1 0 0 1 1\n1 1 1 1 1\nThen the query at [1, 1] returns 1 because the cell is lit.  After this query, the lamp at [0, 0] turns off, and the grid now looks like this:\n1 0 0 0 1\n0 1 0 0 1\n0 0 1 0 1\n0 0 0 1 1\n1 1 1 1 1\nBefore performing the second query we have only the lamp [4,4] on.  Now the query at [1,0] returns 0, because the cell is no longer lit.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= N &lt;= 10^9</code></li>\n\t<li><code>0 &lt;= lamps.length &lt;= 20000</code></li>\n\t<li><code>0 &lt;= queries.length &lt;= 20000</code></li>\n\t<li><code>lamps[i].length == queries[i].length == 2</code></li>\n</ol>"
    },
    {
        "id": "197",
        "title": "Rising Temperature",
        "slug": "rising-temperature",
        "difficulty": "Easy",
        "likes": 273,
        "dislikes": 114,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "211",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [],
        "content": "<p>Given a <code>Weather</code> table, write a SQL query to find all dates&#39; Ids with higher temperature compared to its previous (yesterday&#39;s) dates.</p>\n\n<pre>\n+---------+------------------+------------------+\n| Id(INT) | RecordDate(DATE) | Temperature(INT) |\n+---------+------------------+------------------+\n|       1 |       2015-01-01 |               10 |\n|       2 |       2015-01-02 |               25 |\n|       3 |       2015-01-03 |               20 |\n|       4 |       2015-01-04 |               30 |\n+---------+------------------+------------------+\n</pre>\n\n<p>For example, return the following Ids for the above <code>Weather</code> table:</p>\n\n<pre>\n+----+\n| Id |\n+----+\n|  2 |\n|  4 |\n+----+\n</pre>\n"
    },
    {
        "id": "1163",
        "title": "Last Substring in Lexicographical Order",
        "slug": "last-substring-in-lexicographical-order",
        "difficulty": "Hard",
        "likes": 51,
        "dislikes": 136,
        "hints": [
            "Assume that the answer is a sub-string from index i to j. If you add the character at index j+1 you get a better answer.",
            "The answer is always a suffix of the given string.",
            "Since the limits are high, we need an efficient data structure.",
            "Use suffix array."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "String",
            "Suffix Array"
        ],
        "content": "<p>Given a string <code>s</code>, return the last substring of <code>s</code> in lexicographical order.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">&quot;abab&quot;</span>\n<strong>Output: </strong><span id=\"example-output-1\">&quot;bab&quot;</span>\n<strong>Explanation: </strong>The substrings are [&quot;a&quot;, &quot;ab&quot;, &quot;aba&quot;, &quot;abab&quot;, &quot;b&quot;, &quot;ba&quot;, &quot;bab&quot;]. The lexicographically maximum substring is &quot;bab&quot;.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">&quot;leetcode&quot;</span>\n<strong>Output: </strong><span id=\"example-output-2\">&quot;tcode&quot;</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= s.length &lt;= 4&nbsp;* 10^5</code></li>\n\t<li><font face=\"monospace\">s</font> contains only lowercase English letters.</li>\n</ol>\n"
    },
    {
        "id": "897",
        "title": "Increasing Order Search Tree",
        "slug": "increasing-order-search-tree",
        "difficulty": "Easy",
        "likes": 338,
        "dislikes": 346,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "547",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree",
            "Depth-first Search"
        ],
        "content": "<p>Given a binary search tree, rearrange the tree in <strong>in-order</strong> so that the leftmost node in the tree is now the root of the tree, and every node has no left child and only 1 right child.</p>\n\n<pre>\n<strong>Example 1:</strong>\n<strong>Input:</strong> [5,3,6,2,4,null,8,1,null,null,null,7,9]\n\n       5\n      / \\\n    3    6\n   / \\    \\\n  2   4    8\n&nbsp;/        / \\ \n1        7   9\n\n<strong>Output:</strong> [1,null,2,null,3,null,4,null,5,null,6,null,7,null,8,null,9]\n\n 1\n&nbsp; \\\n&nbsp;  2\n&nbsp;   \\\n&nbsp;    3\n&nbsp;     \\\n&nbsp;      4\n&nbsp;       \\\n&nbsp;        5\n&nbsp;         \\\n&nbsp;          6\n&nbsp;           \\\n&nbsp;            7\n&nbsp;             \\\n&nbsp;              8\n&nbsp;               \\\n                 9  </pre>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li>The number of nodes in the given tree will be between 1 and 100.</li>\n\t<li>Each node will have a unique integer value from 0 to 1000.</li>\n</ol>\n"
    },
    {
        "id": "442",
        "title": "Find All Duplicates in an Array",
        "slug": "find-all-duplicates-in-an-array",
        "difficulty": "Medium",
        "likes": 1267,
        "dislikes": 120,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Find All Numbers Disappeared in an Array\", \"titleSlug\": \"find-all-numbers-disappeared-in-an-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Array"
        ],
        "content": "<p>Given an array of integers, 1 &le; a[i] &le; <i>n</i> (<i>n</i> = size of array), some elements appear <b>twice</b> and others appear <b>once</b>.</p>\n\n<p>Find all the elements that appear <b>twice</b> in this array.</p>\n\n<p>Could you do it without extra space and in O(<i>n</i>) runtime?</p>\n</p>\n<p><b>Example:</b><br/>\n<pre>\n<b>Input:</b>\n[4,3,2,7,8,2,3,1]\n\n<b>Output:</b>\n[2,3]\n</pre>"
    },
    {
        "id": "587",
        "title": "Erect the Fence",
        "slug": "erect-the-fence",
        "difficulty": "Hard",
        "likes": 146,
        "dislikes": 154,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "138",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Geometry"
        ],
        "content": "<p>There are some trees, where each tree is represented by (x,y) coordinate in a two-dimensional garden. Your job is to fence the entire garden using the <b>minimum length</b> of rope as it is expensive. The garden is well fenced only if all the trees are enclosed. Your task is to help find the coordinates of trees which are exactly located on the fence perimeter.</p>\n\n<p>&nbsp;</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> [[1,1],[2,2],[2,0],[2,4],[3,3],[4,2]]\n<b>Output:</b> [[1,1],[2,0],[4,2],[3,3],[2,4]]\n<b>Explanation:</b>\n<img src=\"./img/erect-the-fence_1.png\" style=\"width: 100%; max-width: 320px\" />\n</pre>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input:</b> [[1,2],[2,2],[4,2]]\n<b>Output:</b> [[1,2],[2,2],[4,2]]\n<b>Explanation:</b>\n<img src=\"./img/erect-the-fence_2.png\" style=\"width: 100%; max-width: 320px\" />\nEven you only have trees in a line, you need to use rope to enclose them. \n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li>All trees should be enclosed together. You cannot cut the rope to enclose trees that will separate them in more than one group.</li>\n\t<li>All input integers will range from 0 to 100.</li>\n\t<li>The garden has at least one tree.</li>\n\t<li>All coordinates are distinct.</li>\n\t<li>Input points have <b>NO</b> order. No order required for output.</li>\n\t<li>input types have been changed on April 15, 2019. Please reset to default code definition to get new method signature.</li>\n</ol>\n"
    },
    {
        "id": "337",
        "title": "House Robber III",
        "slug": "house-robber-iii",
        "difficulty": "Medium",
        "likes": 1740,
        "dislikes": 35,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"House Robber\", \"titleSlug\": \"house-robber\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"House Robber II\", \"titleSlug\": \"house-robber-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Tree",
            "Depth-first Search"
        ],
        "content": "<p>The thief has found himself a new place for his thievery again. There is only one entrance to this area, called the &quot;root.&quot; Besides the root, each house has one and only one parent house. After a tour, the smart thief realized that &quot;all houses in this place forms a binary tree&quot;. It will automatically contact the police if two directly-linked houses were broken into on the same night.</p>\n\n<p>Determine the maximum amount of money the thief can rob tonight without alerting the police.</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<strong>Input: </strong>[3,2,3,null,3,null,1]\n\n     <font color=\"red\">3</font>\n    / \\\n   2   3\n    \\   \\ \n     <font color=\"red\">3   1\n</font>\n<strong>Output:</strong> 7 \n<strong>Explanation:</strong>&nbsp;Maximum amount of money the thief can rob = <font color=\"red\" style=\"font-family: sans-serif, Arial, Verdana, &quot;Trebuchet MS&quot;;\">3</font><span style=\"font-family: sans-serif, Arial, Verdana, &quot;Trebuchet MS&quot;;\"> + </span><font color=\"red\" style=\"font-family: sans-serif, Arial, Verdana, &quot;Trebuchet MS&quot;;\">3</font><span style=\"font-family: sans-serif, Arial, Verdana, &quot;Trebuchet MS&quot;;\"> + </span><font color=\"red\" style=\"font-family: sans-serif, Arial, Verdana, &quot;Trebuchet MS&quot;;\">1</font><span style=\"font-family: sans-serif, Arial, Verdana, &quot;Trebuchet MS&quot;;\"> = </span><b style=\"font-family: sans-serif, Arial, Verdana, &quot;Trebuchet MS&quot;;\">7</b><span style=\"font-family: sans-serif, Arial, Verdana, &quot;Trebuchet MS&quot;;\">.</span></pre>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<strong>Input: </strong>[3,4,5,1,3,null,1]\n\n&nbsp;    3\n    / \\\n   <font color=\"red\">4</font>   <font color=\"red\">5</font>\n  / \\   \\ \n 1   3   1\n\n<strong>Output:</strong> 9\n<strong>Explanation:</strong>&nbsp;Maximum amount of money the thief can rob = <font color=\"red\">4</font> + <font color=\"red\">5</font> = <b>9</b>.\n</pre>"
    },
    {
        "id": "384",
        "title": "Shuffle an Array",
        "slug": "shuffle-an-array",
        "difficulty": "Medium",
        "likes": 316,
        "dislikes": 732,
        "hints": [
            "The solution expects that we always use the original array to shuffle() else some of the test cases fail. (Credits; @snehasingh31)"
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "287",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [],
        "content": "<p>Shuffle a set of numbers without duplicates.\n</p>\n\n<p><b>Example:</b>\n<pre>\n// Init an array with set 1, 2, and 3.\nint[] nums = {1,2,3};\nSolution solution = new Solution(nums);\n\n// Shuffle the array [1,2,3] and return its result. Any permutation of [1,2,3] must equally likely to be returned.\nsolution.shuffle();\n\n// Resets the array back to its original configuration [1,2,3].\nsolution.reset();\n\n// Returns the random shuffling of array [1,2,3].\nsolution.shuffle();\n</pre>\n</p>"
    },
    {
        "id": "412",
        "title": "Fizz Buzz",
        "slug": "fizz-buzz",
        "difficulty": "Easy",
        "likes": 585,
        "dislikes": 867,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "569",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [],
        "content": "<p>Write a program that outputs the string representation of numbers from 1 to <i>n</i>.</p>\n\n<p>But for multiples of three it should output \u201cFizz\u201d instead of the number and for the multiples of five output \u201cBuzz\u201d. For numbers which are multiples of both three and five output \u201cFizzBuzz\u201d.</p>\n\n<p><b>Example:</b>\n<pre>\nn = 15,\n\nReturn:\n[\n    \"1\",\n    \"2\",\n    \"Fizz\",\n    \"4\",\n    \"Buzz\",\n    \"Fizz\",\n    \"7\",\n    \"8\",\n    \"Fizz\",\n    \"Buzz\",\n    \"11\",\n    \"Fizz\",\n    \"13\",\n    \"14\",\n    \"FizzBuzz\"\n]\n</pre>\n</p>"
    },
    {
        "id": "132",
        "title": "Palindrome Partitioning II",
        "slug": "palindrome-partitioning-ii",
        "difficulty": "Hard",
        "likes": 689,
        "dislikes": 24,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Palindrome Partitioning\", \"titleSlug\": \"palindrome-partitioning\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>Given a string <em>s</em>, partition <em>s</em> such that every substring of the partition is a palindrome.</p>\n\n<p>Return the minimum cuts needed for a palindrome partitioning of <em>s</em>.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input:</strong>&nbsp;&quot;aab&quot;\n<strong>Output:</strong> 1\n<strong>Explanation:</strong> The palindrome partitioning [&quot;aa&quot;,&quot;b&quot;] could be produced using 1 cut.\n</pre>\n"
    },
    {
        "id": "519",
        "title": "Random Flip Matrix",
        "slug": "random-flip-matrix",
        "difficulty": "Medium",
        "likes": 105,
        "dislikes": 43,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "518",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Random"
        ],
        "content": "<p>You are given the number of rows <code>n_rows</code>&nbsp;and number of columns <code>n_cols</code>&nbsp;of a&nbsp;2D&nbsp;binary matrix&nbsp;where all values are initially 0.&nbsp;Write a function <code>flip</code>&nbsp;which chooses&nbsp;a 0 value&nbsp;<a href=\"https://en.wikipedia.org/wiki/Discrete_uniform_distribution\" target=\"_blank\">uniformly at random</a>,&nbsp;changes it to 1,&nbsp;and then returns the position <code>[row.id, col.id]</code> of that value. Also, write a function <code>reset</code> which sets all values back to 0.&nbsp;<strong>Try to minimize the number of calls to system&#39;s Math.random()</strong> and optimize the time and&nbsp;space complexity.</p>\n\n<p>Note:</p>\n\n<ol>\n\t<li><code>1 &lt;= n_rows, n_cols&nbsp;&lt;= 10000</code></li>\n\t<li><code>0 &lt;= row.id &lt; n_rows</code> and <code>0 &lt;= col.id &lt; n_cols</code></li>\n\t<li><code>flip</code>&nbsp;will not be called when the matrix has no&nbsp;0 values left.</li>\n\t<li>the total number of calls to&nbsp;<code>flip</code>&nbsp;and <code>reset</code>&nbsp;will not exceed&nbsp;1000.</li>\n</ol>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: \n</strong><span id=\"example-input-1-1\">[&quot;Solution&quot;,&quot;flip&quot;,&quot;flip&quot;,&quot;flip&quot;,&quot;flip&quot;]\n</span><span id=\"example-input-1-2\">[[2,3],[],[],[],[]]</span>\n<strong>Output: </strong><span id=\"example-output-1\">[null,[0,1],[1,2],[1,0],[1,1]]</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: \n</strong><span id=\"example-input-2-1\">[&quot;Solution&quot;,&quot;flip&quot;,&quot;flip&quot;,&quot;reset&quot;,&quot;flip&quot;]\n</span><span id=\"example-input-2-2\">[[1,2],[],[],[],[]]</span>\n<strong>Output: </strong><span id=\"example-output-2\">[null,[0,0],[0,1],null,[0,0]]</span></pre>\n</div>\n\n<p><strong>Explanation of Input Syntax:</strong></p>\n\n<p>The input is two lists:&nbsp;the subroutines called&nbsp;and their&nbsp;arguments. <code>Solution</code>&#39;s constructor&nbsp;has two arguments, <code>n_rows</code> and <code>n_cols</code>.&nbsp;<code>flip</code>&nbsp;and <code>reset</code> have&nbsp;no&nbsp;arguments.&nbsp;Arguments&nbsp;are&nbsp;always wrapped with a list, even if there aren&#39;t any.</p>\n"
    },
    {
        "id": "576",
        "title": "Out of Boundary Paths",
        "slug": "out-of-boundary-paths",
        "difficulty": "Medium",
        "likes": 327,
        "dislikes": 112,
        "hints": [
            "WIll traversing every path is fesaible? There are many possible paths for a small matrix. Try to optimize it.",
            "Can we use some space to store the number of paths and updating them after every move?",
            "One obvious thing: ball will go out of boundary only by crossing it. Also, there is only one possible way ball can go out of boundary from boundary cell except corner cells. From corner cell ball can go out in two different ways. Can you use this thing to solve the problem?"
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Knight Probability in Chessboard\", \"titleSlug\": \"knight-probability-in-chessboard\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "126",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming",
            "Depth-first Search"
        ],
        "content": "<p>There is an <b>m</b> by <b>n</b> grid with a ball. Given the start coordinate <b>(i,j)</b> of the ball, you can move the ball to <b>adjacent</b> cell or cross the grid boundary in four directions (up, down, left, right). However, you can <b>at most</b> move <b>N</b> times. Find out the number of paths to move the ball out of grid boundary. The answer may be very large, return it after mod 10<sup>9</sup> + 7.</p>\n\n<p>&nbsp;</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input: </b>m = 2, n = 2, N = 2, i = 0, j = 0\n<b>Output:</b> 6\n<b>Explanation:</b>\n<img src=\"./img/out-of-boundary-paths_1.png\" style=\"width: 100%; max-width: 400px\" />\n</pre>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input: </b>m = 1, n = 3, N = 3, i = 0, j = 1\n<b>Output:</b> 12\n<b>Explanation:</b>\n<img src=\"./img/out-of-boundary-paths_2.png\" style=\"width: 100%; max-width: 400px\" />\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b></p>\n\n<ol>\n\t<li>Once you move the ball out of boundary, you cannot move it back.</li>\n\t<li>The length and height of the grid is in range [1,50].</li>\n\t<li>N is in range [0,50].</li>\n</ol>\n"
    },
    {
        "id": "862",
        "title": "Shortest Subarray with Sum at Least K",
        "slug": "shortest-subarray-with-sum-at-least-k",
        "difficulty": "Hard",
        "likes": 555,
        "dislikes": 15,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "496",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Binary Search",
            "Queue"
        ],
        "content": "<p>Return the <strong>length</strong> of the shortest, non-empty, contiguous&nbsp;subarray of <code>A</code> with sum at least <code>K</code>.</p>\n\n<p>If there is no non-empty subarray with sum at least <code>K</code>, return <code>-1</code>.</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-1-1\">[1]</span>, K = <span id=\"example-input-1-2\">1</span>\n<strong>Output: </strong><span id=\"example-output-1\">1</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-2-1\">[1,2]</span>, K = <span id=\"example-input-2-2\">4</span>\n<strong>Output: </strong><span id=\"example-output-2\">-1</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-3-1\">[2,-1,2]</span>, K = <span id=\"example-input-3-2\">3</span>\n<strong>Output: </strong><span id=\"example-output-3\">3</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 50000</code></li>\n\t<li><code>-10 ^ 5&nbsp;&lt;= A[i] &lt;= 10 ^ 5</code></li>\n\t<li><code>1 &lt;= K &lt;= 10 ^ 9</code></li>\n</ol>\n</div>\n</div>\n</div>\n"
    },
    {
        "id": "893",
        "title": "Groups of Special-Equivalent Strings",
        "slug": "groups-of-special-equivalent-strings",
        "difficulty": "Easy",
        "likes": 163,
        "dislikes": 808,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "537",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String"
        ],
        "content": "<p>You are given an array <code>A</code> of strings.</p>\n\n<p>Two strings <code>S</code> and <code>T</code> are&nbsp;<em>special-equivalent</em>&nbsp;if after any number of <em>moves</em>, S == T.</p>\n\n<p>A <em>move</em> consists of choosing two indices <code>i</code> and <code>j</code> with <code>i % 2 == j % 2</code>, and swapping <code>S[i]</code> with <code>S[j]</code>.</p>\n\n<p>Now, a <em>group of special-equivalent strings from <code>A</code></em>&nbsp;is a&nbsp;non-empty subset S of <code>A</code>&nbsp;such that any string not in S&nbsp;is not special-equivalent with any string in S.</p>\n\n<p>Return the number of groups of special-equivalent strings from <code>A</code>.</p>\n\n<p>&nbsp;</p>\n\n<ul>\n</ul>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;a&quot;,&quot;c&quot;,&quot;c&quot;]</span>\n<strong>Output: </strong><span id=\"example-output-1\">3</span>\n<span><strong>Explanation</strong>: 3 groups [&quot;a&quot;,&quot;a&quot;], [&quot;b&quot;], [&quot;c&quot;,&quot;c&quot;,&quot;c&quot;]</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[&quot;aa&quot;,&quot;bb&quot;,&quot;ab&quot;,&quot;ba&quot;]</span>\n<strong>Output: </strong><span id=\"example-output-2\">4</span>\n<strong>Explanation</strong>: 4 groups <span id=\"example-input-2-1\">[&quot;aa&quot;], [&quot;bb&quot;], [&quot;ab&quot;], [&quot;ba&quot;]</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">[&quot;abc&quot;,&quot;acb&quot;,&quot;bac&quot;,&quot;bca&quot;,&quot;cab&quot;,&quot;cba&quot;]</span>\n<strong>Output: </strong><span id=\"example-output-3\">3</span>\n<strong>Explanation</strong>: 3 groups [&quot;abc&quot;,&quot;cba&quot;], [&quot;acb&quot;,&quot;bca&quot;], [&quot;bac&quot;,&quot;cab&quot;]\n</pre>\n\n<div>\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-4-1\">[&quot;abcd&quot;,&quot;cdab&quot;,&quot;adcb&quot;,&quot;cbad&quot;]</span>\n<strong>Output: </strong><span id=\"example-output-4\">1</span>\n<strong>Explanation</strong>: 1 group <span id=\"example-input-4-1\">[&quot;abcd&quot;,&quot;cdab&quot;,&quot;adcb&quot;,&quot;cbad&quot;]</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= A.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= A[i].length &lt;= 20</code></li>\n\t<li>All <code>A[i]</code> have the same length.</li>\n\t<li>All <code>A[i]</code> consist of only lowercase letters.</li>\n</ul>\n</div>\n</div>\n</div>\n</div>\n"
    },
    {
        "id": "347",
        "title": "Top K Frequent Elements",
        "slug": "top-k-frequent-elements",
        "difficulty": "Medium",
        "likes": 1812,
        "dislikes": 113,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Word Frequency\", \"titleSlug\": \"word-frequency\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Kth Largest Element in an Array\", \"titleSlug\": \"kth-largest-element-in-an-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Sort Characters By Frequency\", \"titleSlug\": \"sort-characters-by-frequency\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Split Array into Consecutive Subsequences\", \"titleSlug\": \"split-array-into-consecutive-subsequences\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Top K Frequent Words\", \"titleSlug\": \"top-k-frequent-words\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"K Closest Points to Origin\", \"titleSlug\": \"k-closest-points-to-origin\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "628",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Hash Table",
            "Heap"
        ],
        "content": "<p>Given a non-empty array of integers, return the <b><i>k</i></b> most frequent elements.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>nums = <span id=\"example-input-1-1\">[1,1,1,2,2,3]</span>, k = <span id=\"example-input-1-2\">2</span>\n<strong>Output: </strong><span id=\"example-output-1\">[1,2]</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>nums = <span id=\"example-input-2-1\">[1]</span>, k = <span id=\"example-input-2-2\">1</span>\n<strong>Output: </strong><span id=\"example-output-2\">[1]</span></pre>\n</div>\n\n<p><b>Note: </b></p>\n\n<ul>\n\t<li>You may assume <i>k</i> is always valid, 1 &le; <i>k</i> &le; number of unique elements.</li>\n\t<li>Your algorithm&#39;s time complexity <b>must be</b> better than O(<i>n</i> log <i>n</i>), where <i>n</i> is the array&#39;s size.</li>\n</ul>\n"
    },
    {
        "id": "96",
        "title": "Unique Binary Search Trees",
        "slug": "unique-binary-search-trees",
        "difficulty": "Medium",
        "likes": 2011,
        "dislikes": 77,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Unique Binary Search Trees II\", \"titleSlug\": \"unique-binary-search-trees-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "555",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming",
            "Tree"
        ],
        "content": "<p>Given <em>n</em>, how many structurally unique <strong>BST&#39;s</strong> (binary search trees) that store values 1 ...&nbsp;<em>n</em>?</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input:</strong> 3\n<strong>Output:</strong> 5\n<strong>Explanation:\n</strong>Given <em>n</em> = 3, there are a total of 5 unique BST&#39;s:\n\n   1         3     3      2      1\n    \\       /     /      / \\      \\\n     3     2     1      1   3      2\n    /     /       \\                 \\\n   2     1         2                 3\n</pre>\n"
    },
    {
        "id": "970",
        "title": "Powerful Integers",
        "slug": "powerful-integers",
        "difficulty": "Easy",
        "likes": 79,
        "dislikes": 177,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "659",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Hash Table",
            "Math"
        ],
        "content": "<p>Given two positive integers <code>x</code> and <code>y</code>, an integer is <em>powerful</em>&nbsp;if it is equal to <code>x^i + y^j</code>&nbsp;for&nbsp;some integers <code>i &gt;= 0</code> and <code>j &gt;= 0</code>.</p>\n\n<p>Return a list of all <em>powerful</em> integers that have value less than or equal to <code>bound</code>.</p>\n\n<p>You may return the answer in any order.&nbsp; In your answer, each value should occur at most once.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>x = <span id=\"example-input-1-1\">2</span>, y = <span id=\"example-input-1-2\">3</span>, bound = <span id=\"example-input-1-3\">10</span>\n<strong>Output: </strong><span id=\"example-output-1\">[2,3,4,5,7,9,10]</span>\n<strong>Explanation: </strong>\n2 = 2^0 + 3^0\n3 = 2^1 + 3^0\n4 = 2^0 + 3^1\n5 = 2^1 + 3^1\n7 = 2^2 + 3^1\n9 = 2^3 + 3^0\n10 = 2^0 + 3^2\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>x = <span id=\"example-input-2-1\">3</span>, y = <span id=\"example-input-2-2\">5</span>, bound = <span id=\"example-input-2-3\">15</span>\n<strong>Output: </strong><span id=\"example-output-2\">[2,4,6,8,10,14]</span>\n</pre>\n</div>\n</div>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= x &lt;= 100</code></li>\n\t<li><code>1 &lt;= y&nbsp;&lt;= 100</code></li>\n\t<li><code>0 &lt;= bound&nbsp;&lt;= 10^6</code></li>\n</ul>"
    },
    {
        "id": "485",
        "title": "Max Consecutive Ones",
        "slug": "max-consecutive-ones",
        "difficulty": "Easy",
        "likes": 404,
        "dislikes": 327,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Max Consecutive Ones II\", \"titleSlug\": \"max-consecutive-ones-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Max Consecutive Ones III\", \"titleSlug\": \"max-consecutive-ones-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Array"
        ],
        "content": "<p>Given a binary array, find the maximum number of consecutive 1s in this array.</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> [1,1,0,1,1,1]\n<b>Output:</b> 3\n<b>Explanation:</b> The first two digits or the last three digits are consecutive 1s.\n    The maximum number of consecutive 1s is 3.\n</pre>\n</p>\n\n<p><b>Note:</b>\n<ul>\n<li>The input array will only contain <code>0</code> and <code>1</code>.</li>\n<li>The length of input array is a positive integer and will not exceed 10,000</li>\n</ul>\n</p>"
    },
    {
        "id": "119",
        "title": "Pascal's Triangle II",
        "slug": "pascals-triangle-ii",
        "difficulty": "Easy",
        "likes": 542,
        "dislikes": 178,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Pascal's Triangle\", \"titleSlug\": \"pascals-triangle\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Array"
        ],
        "content": "<p>Given a non-negative&nbsp;index <em>k</em>&nbsp;where <em>k</em> &le;&nbsp;33, return the <em>k</em><sup>th</sup>&nbsp;index row of the Pascal&#39;s triangle.</p>\n\n<p>Note that the row index starts from&nbsp;0.</p>\n\n<p><img alt=\"\" src=\"./img/pascals-triangle-ii_1.gif\" /><br />\n<small>In Pascal&#39;s triangle, each number is the sum of the two numbers directly above it.</small></p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input:</strong> 3\n<strong>Output:</strong> [1,3,3,1]\n</pre>\n\n<p><strong>Follow up:</strong></p>\n\n<p>Could you optimize your algorithm to use only <em>O</em>(<em>k</em>) extra space?</p>\n"
    },
    {
        "id": "518",
        "title": "Coin Change 2",
        "slug": "coin-change-2",
        "difficulty": "Medium",
        "likes": 897,
        "dislikes": 38,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [],
        "content": "<p>You are given coins of different denominations and a total amount of money. Write a function to compute the number of combinations that make up that amount. You may assume that you have infinite number of each kind of coin.</p>\n\n<ul>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> amount = 5, coins = [1, 2, 5]\n<b>Output:</b> 4\n<b>Explanation:</b> there are four ways to make up the amount:\n5=5\n5=2+2+1\n5=2+1+1+1\n5=1+1+1+1+1\n</pre>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input:</b> amount = 3, coins = [2]\n<b>Output:</b> 0\n<b>Explanation:</b> the amount of 3 cannot be made up just with coins of 2.\n</pre>\n\n<p><b>Example 3:</b></p>\n\n<pre>\n<b>Input:</b> amount = 10, coins = [10] \n<b>Output:</b> 1\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b></p>\n\n<p>You can assume that</p>\n\n<ul>\n\t<li>0 &lt;= amount &lt;= 5000</li>\n\t<li>1 &lt;= coin &lt;= 5000</li>\n\t<li>the number of coins is less than 500</li>\n\t<li>the answer is guaranteed to fit into signed 32-bit integer</li>\n</ul>\n"
    },
    {
        "id": "956",
        "title": "Tallest Billboard",
        "slug": "tallest-billboard",
        "difficulty": "Hard",
        "likes": 203,
        "dislikes": 10,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "635",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>You are installing a billboard and want it to have the largest height.&nbsp; The billboard will have two steel supports, one on each side.&nbsp; Each steel support must be an equal height.</p>\n\n<p>You have a collection of <code>rods</code> which can be welded together.&nbsp; For example, if you have rods of lengths 1, 2, and 3, you can weld them together to make a support of length 6.</p>\n\n<p>Return the largest possible height of your billboard installation.&nbsp; If you cannot support the billboard, return 0.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[1,2,3,6]</span>\n<strong>Output: </strong><span id=\"example-output-1\">6</span>\n<strong>Explanation:</strong> We have two disjoint subsets {1,2,3} and {6}, which have the same sum = 6.\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[1,2,3,4,5,6]</span>\n<strong>Output: </strong><span id=\"example-output-2\">10</span>\n<strong>Explanation:</strong> We have two disjoint subsets {2,3,5} and {4,6}, which have the same sum = 10.\n</pre>\n</div>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">[1,2]</span>\n<strong>Output: </strong><span id=\"example-output-3\">0</span>\n<strong>Explanation: </strong>The billboard cannot be supported, so we return 0.\n</pre>\n</div>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>0 &lt;= rods.length &lt;= 20</code></li>\n\t<li><code>1 &lt;= rods[i] &lt;= 1000</code></li>\n\t<li><code>The sum of rods is at most 5000.</code></li>\n</ol>\n"
    },
    {
        "id": "109",
        "title": "Convert Sorted List to Binary Search Tree",
        "slug": "convert-sorted-list-to-binary-search-tree",
        "difficulty": "Medium",
        "likes": 1205,
        "dislikes": 73,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Convert Sorted Array to Binary Search Tree\", \"titleSlug\": \"convert-sorted-array-to-binary-search-tree\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "614",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Linked List",
            "Depth-first Search"
        ],
        "content": "<p>Given a singly linked list where elements are sorted in ascending order, convert it to a height balanced BST.</p>\n\n<p>For this problem, a height-balanced binary tree is defined as a binary tree in which the depth of the two subtrees of <em>every</em> node never differ by more than 1.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\nGiven the sorted linked list: [-10,-3,0,5,9],\n\nOne possible answer is: [0,-3,9,-10,null,5], which represents the following height balanced BST:\n\n      0\n     / \\\n   -3   9\n   /   /\n -10  5\n</pre>\n"
    },
    {
        "id": "152",
        "title": "Maximum Product Subarray",
        "slug": "maximum-product-subarray",
        "difficulty": "Medium",
        "likes": 2468,
        "dislikes": 114,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Maximum Subarray\", \"titleSlug\": \"maximum-subarray\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"House Robber\", \"titleSlug\": \"house-robber\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Product of Array Except Self\", \"titleSlug\": \"product-of-array-except-self\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Product of Three Numbers\", \"titleSlug\": \"maximum-product-of-three-numbers\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Subarray Product Less Than K\", \"titleSlug\": \"subarray-product-less-than-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Array",
            "Dynamic Programming"
        ],
        "content": "<p>Given an integer array&nbsp;<code>nums</code>, find the contiguous subarray within an array (containing at least one number) which has the largest product.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> [2,3,-2,4]\n<strong>Output:</strong> <code>6</code>\n<strong>Explanation:</strong>&nbsp;[2,3] has the largest product 6.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> [-2,0,-1]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong>&nbsp;The result cannot be 2, because [-2,-1] is not a subarray.</pre>\n"
    },
    {
        "id": "386",
        "title": "Lexicographical Numbers",
        "slug": "lexicographical-numbers",
        "difficulty": "Medium",
        "likes": 413,
        "dislikes": 62,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [],
        "content": "<p>Given an integer <i>n</i>, return 1 - <i>n</i> in lexicographical order.</p>\n\n<p>For example, given 13, return: [1,10,11,12,13,2,3,4,5,6,7,8,9].</p>\n\n<p>Please optimize your algorithm to use less time and space. The input size may be as large as 5,000,000.</p>\n"
    },
    {
        "id": "661",
        "title": "Image Smoother",
        "slug": "image-smoother",
        "difficulty": "Easy",
        "likes": 192,
        "dislikes": 868,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "327",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array"
        ],
        "content": "<p>Given a 2D integer matrix M representing the gray scale of an image, you need to design a smoother to make the gray scale of each cell becomes the average gray scale (rounding down) of all the 8 surrounding cells and itself.  If a cell has less than 8 surrounding cells, then use as many as you can.</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b>\n[[1,1,1],\n [1,0,1],\n [1,1,1]]\n<b>Output:</b>\n[[0, 0, 0],\n [0, 0, 0],\n [0, 0, 0]]\n<b>Explanation:</b>\nFor the point (0,0), (0,2), (2,0), (2,2): floor(3/4) = floor(0.75) = 0\nFor the point (0,1), (1,0), (1,2), (2,1): floor(5/6) = floor(0.83333333) = 0\nFor the point (1,1): floor(8/9) = floor(0.88888889) = 0\n</pre>\n</p>\n\n<p><b>Note:</b><br>\n<ol>\n<li>The value in the given matrix is in the range of [0, 255].</li>\n<li>The length and width of the given matrix are in the range of [1, 150].</li>\n</ol>\n</p>"
    },
    {
        "id": "601",
        "title": "Human Traffic of Stadium",
        "slug": "human-traffic-of-stadium",
        "difficulty": "Hard",
        "likes": 105,
        "dislikes": 216,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "203",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [],
        "content": "<p>X city built a new stadium, each day many people visit it and the stats are saved as these columns: <b>id</b>, <strong>visit_</strong><b>date</b>, <b>people</b></p>\n\n<p>Please write a query to display the records which have 3 or more consecutive rows and the amount of people more than 100(inclusive).</p>\nFor example, the table <code>stadium</code>:\n\n<pre>\n+------+------------+-----------+\n| id   | visit_date | people    |\n+------+------------+-----------+\n| 1    | 2017-01-01 | 10        |\n| 2    | 2017-01-02 | 109       |\n| 3    | 2017-01-03 | 150       |\n| 4    | 2017-01-04 | 99        |\n| 5    | 2017-01-05 | 145       |\n| 6    | 2017-01-06 | 1455      |\n| 7    | 2017-01-07 | 199       |\n| 8    | 2017-01-08 | 188       |\n+------+------------+-----------+\n</pre>\n\n<p>For the sample data above, the output is:</p>\n\n<pre>\n+------+------------+-----------+\n| id   | visit_date | people    |\n+------+------------+-----------+\n| 5    | 2017-01-05 | 145       |\n| 6    | 2017-01-06 | 1455      |\n| 7    | 2017-01-07 | 199       |\n| 8    | 2017-01-08 | 188       |\n+------+------------+-----------+\n</pre>\n\n<p><b>Note:</b><br />\nEach day only have one row record, and the dates are increasing with id increasing.</p>\n"
    },
    {
        "id": "1042",
        "title": "Flower Planting With No Adjacent",
        "slug": "flower-planting-with-no-adjacent",
        "difficulty": "Easy",
        "likes": 115,
        "dislikes": 143,
        "hints": [
            "Since each garden is connected to at most 3 gardens, there's always an available color for each garden.  For example, if one garden is next to gardens with colors 1, 3, 4,  then color #2 is available."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Graph"
        ],
        "content": "<p>You have <code>N</code> gardens, labelled <code>1</code> to <code>N</code>.&nbsp; In each garden, you want to plant one of 4 types of flowers.</p>\n\n<p><code>paths[i] = [x, y]</code> describes the existence of a bidirectional path from garden <code>x</code> to garden <code>y</code>.</p>\n\n<p>Also, there is no garden that has more than 3 paths coming into or leaving it.</p>\n\n<p>Your task is to choose a flower type for each garden such that,&nbsp;for any two gardens connected by a path, they have different types of flowers.</p>\n\n<p>Return <strong>any</strong> such a choice as an array <code>answer</code>, where&nbsp;<code>answer[i]</code> is the type of flower&nbsp;planted in the <code>(i+1)</code>-th garden.&nbsp; The flower types are denoted&nbsp;<font face=\"monospace\">1</font>, <font face=\"monospace\">2</font>, <font face=\"monospace\">3</font>, or <font face=\"monospace\">4</font>.&nbsp; It is guaranteed an answer exists.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>N = <span id=\"example-input-1-1\">3</span>, paths = <span id=\"example-input-1-2\">[[1,2],[2,3],[3,1]]</span>\n<strong>Output: </strong><span id=\"example-output-1\">[1,2,3]</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>N = <span id=\"example-input-2-1\">4</span>, paths = <span id=\"example-input-2-2\">[[1,2],[3,4]]</span>\n<strong>Output: </strong><span id=\"example-output-2\">[1,2,1,2]</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>N = <span id=\"example-input-3-1\">4</span>, paths = <span id=\"example-input-3-2\">[[1,2],[2,3],[3,4],[4,1],[1,3],[2,4]]</span>\n<strong>Output: </strong><span id=\"example-output-3\">[1,2,3,4]</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong><span>Note:</span></strong></p>\n\n<ul>\n\t<li><code><span>1 &lt;= N &lt;= 10000</span></code></li>\n\t<li><code><span>0 &lt;= paths.size &lt;= 20000</span></code></li>\n\t<li>No garden has 4 or more paths coming into or leaving it.</li>\n\t<li>It is guaranteed an answer exists.</li>\n</ul>\n</div>\n</div>\n</div>"
    },
    {
        "id": "349",
        "title": "Intersection of Two Arrays",
        "slug": "intersection-of-two-arrays",
        "difficulty": "Easy",
        "likes": 470,
        "dislikes": 877,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Intersection of Two Arrays II\", \"titleSlug\": \"intersection-of-two-arrays-ii\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "704",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Hash Table",
            "Two Pointers",
            "Binary Search",
            "Sort"
        ],
        "content": "<p>Given two arrays, write a function to compute their intersection.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>nums1 = <span id=\"example-input-1-1\">[1,2,2,1]</span>, nums2 = <span id=\"example-input-1-2\">[2,2]</span>\n<strong>Output: </strong><span id=\"example-output-1\">[2]</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>nums1 = <span id=\"example-input-2-1\">[4,9,5]</span>, nums2 = <span id=\"example-input-2-2\">[9,4,9,8,4]</span>\n<strong>Output: </strong><span id=\"example-output-2\">[9,4]</span></pre>\n</div>\n\n<p><b>Note:</b></p>\n\n<ul>\n\t<li>Each element in the result must be unique.</li>\n\t<li>The result can be in any order.</li>\n</ul>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "343",
        "title": "Integer Break",
        "slug": "integer-break",
        "difficulty": "Medium",
        "likes": 657,
        "dislikes": 184,
        "hints": [
            "There is a simple O(n) solution to this problem.",
            "You may check the breaking results of <i>n</i> ranging from 7 to 10 to discover the regularities."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Math",
            "Dynamic Programming"
        ],
        "content": "<p>Given a positive integer <i>n</i>, break it into the sum of <b>at least</b> two positive integers and maximize the product of those integers. Return the maximum product you can get.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<div>\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">2</span>\n<strong>Output: </strong><span id=\"example-output-1\">1</span>\n<strong>Explanation: </strong>2 = 1 + 1, 1 &times; 1 = 1.</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">10</span>\n<strong>Output: </strong><span id=\"example-output-2\">36</span>\n<strong>Explanation: </strong>10 = 3 + 3 + 4, 3 &times;&nbsp;3 &times;&nbsp;4 = 36.</pre>\n\n<p><b>Note</b>: You may assume that <i>n</i> is not less than 2 and not larger than 58.</p>\n</div>\n</div>"
    },
    {
        "id": "38",
        "title": "Count and Say",
        "slug": "count-and-say",
        "difficulty": "Easy",
        "likes": 886,
        "dislikes": 6916,
        "hints": [
            "The following are the terms from n=1 to n=10 of the count-and-say sequence:\r\n<pre>\r\n 1.     1\r\n 2.     11\r\n 3.     21\r\n 4.     1211\r\n 5.     111221 \r\n 6.     312211\r\n 7.     13112221\r\n 8.     1113213211\r\n 9.     31131211131221\r\n10.     13211311123113112211\r\n</pre>",
            "To generate the <i>n</i><sup>th</sup> term, just <i>count and say</i> the <i>n</i>-1<sup>th</sup> term."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Encode and Decode Strings\", \"titleSlug\": \"encode-and-decode-strings\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"String Compression\", \"titleSlug\": \"string-compression\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "String"
        ],
        "content": "<p>The count-and-say sequence is the sequence of integers with the first five terms as following:</p>\n\n<pre>\n1.     1\n2.     11\n3.     21\n4.     1211\n5.     111221\n</pre>\n\n<p><code>1</code> is read off as <code>&quot;one 1&quot;</code> or <code>11</code>.<br />\n<code>11</code> is read off as <code>&quot;two 1s&quot;</code> or <code>21</code>.<br />\n<code>21</code> is read off as <code>&quot;one 2</code>, then <code>one 1&quot;</code> or <code>1211</code>.</p>\n\n<p>Given an integer <i>n</i>&nbsp;where 1 &le; <em>n</em> &le; 30, generate the <i>n</i><sup>th</sup> term of the count-and-say sequence.</p>\n\n<p>Note: Each term of the sequence of integers will be represented as a string.</p>\n\n<p>&nbsp;</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> 1\n<b>Output:</b> &quot;1&quot;\n</pre>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input:</b> 4\n<b>Output:</b> &quot;1211&quot;</pre>\n"
    },
    {
        "id": "797",
        "title": "All Paths From Source to Target",
        "slug": "all-paths-from-source-to-target",
        "difficulty": "Medium",
        "likes": 466,
        "dislikes": 38,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "430",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [],
        "content": "<p>Given a directed, acyclic graph of <code>N</code> nodes.&nbsp; Find all possible paths from node <code>0</code> to node <code>N-1</code>, and return them in any order.</p>\n\n<p>The graph is given as follows:&nbsp; the nodes are 0, 1, ..., graph.length - 1.&nbsp; graph[i] is a list of all nodes j for which the edge (i, j) exists.</p>\n\n<pre>\n<strong>Example:</strong>\n<strong>Input:</strong> [[1,2], [3], [3], []] \n<strong>Output:</strong> [[0,1,3],[0,2,3]] \n<strong>Explanation:</strong> The graph looks like this:\n0---&gt;1\n|    |\nv    v\n2---&gt;3\nThere are two paths: 0 -&gt; 1 -&gt; 3 and 0 -&gt; 2 -&gt; 3.\n</pre>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the graph will be in the range <code>[2, 15]</code>.</li>\n\t<li>You can print different paths in any order, but you should keep the order of nodes inside one path.</li>\n</ul>"
    },
    {
        "id": "987",
        "title": "Vertical Order Traversal of a Binary Tree",
        "slug": "vertical-order-traversal-of-a-binary-tree",
        "difficulty": "Medium",
        "likes": 181,
        "dislikes": 405,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "684",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Hash Table",
            "Tree"
        ],
        "content": "<p>Given a binary tree, return the <em>vertical order</em> traversal of its nodes&nbsp;values.</p>\n\n<p>For each node at position <code>(X, Y)</code>, its left and right children respectively&nbsp;will be at positions <code>(X-1, Y-1)</code> and <code>(X+1, Y-1)</code>.</p>\n\n<p>Running a vertical line from <code>X = -infinity</code> to <code>X = +infinity</code>, whenever the vertical line touches some nodes, we report the values of the nodes in order from top to bottom (decreasing <code>Y</code> coordinates).</p>\n\n<p>If two nodes have the same position, then the value of the node that is reported first is the value that is smaller.</p>\n\n<p>Return an list&nbsp;of non-empty reports in order of <code>X</code> coordinate.&nbsp; Every report will have a list of values of nodes.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<p><img alt=\"\" src=\"./img/vertical-order-traversal-of-a-binary-tree_1.PNG\" style=\"width: 201px; height: 186px;\" /></p>\n\n<div>\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[3,9,20,null,null,15,7]</span>\n<strong>Output: </strong><span id=\"example-output-1\">[[9],[3,15],[20],[7]]</span>\n<strong>Explanation: </strong>\nWithout loss of generality, we can assume the root node is at position (0, 0):\nThen, the node with value 9 occurs at position (-1, -1);\nThe nodes with values 3 and 15 occur at positions (0, 0) and (0, -2);\nThe node with value 20 occurs at position (1, -1);\nThe node with value 7 occurs at position (2, -2).\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<p><strong><img alt=\"\" src=\"./img/vertical-order-traversal-of-a-binary-tree_2.png\" style=\"width: 236px; height: 150px;\" /></strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[1,2,3,4,5,6,7]</span>\n<strong>Output: </strong><span id=\"example-output-2\">[[4],[2],[1,5,6],[3],[7]]</span>\n<strong>Explanation: </strong>\nThe node with value 5 and the node with value 6 have the same position according to the given scheme.\nHowever, in the report &quot;[1,5,6]&quot;, the node value of 5 comes first since 5 is smaller than 6.\n</pre>\n\n<p>&nbsp;</p>\n</div>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li>The tree will have between <font face=\"monospace\">1</font>&nbsp;and <code>1000</code> nodes.</li>\n\t<li>Each node&#39;s value will be between <code>0</code> and <code>1000</code>.</li>\n</ol>\n</div>\n\n<div>\n<div>&nbsp;</div>\n</div>\n"
    },
    {
        "id": "5",
        "title": "Longest Palindromic Substring",
        "slug": "longest-palindromic-substring",
        "difficulty": "Medium",
        "likes": 4271,
        "dislikes": 396,
        "hints": [
            "How can we reuse a previously computed palindrome to compute a larger palindrome?",
            "If \u201caba\u201d is a palindrome, is \u201cxabax\u201d and palindrome? Similarly is \u201cxabay\u201d a palindrome?",
            "Complexity based hint:</br>\r\nIf we use brute-force and check whether for every start and end position a substring is a palindrome we have O(n^2) start - end pairs and O(n) palindromic checks. Can we reduce the time for palindromic checks to O(1) by reusing some previous computation."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Shortest Palindrome\", \"titleSlug\": \"shortest-palindrome\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Palindrome Permutation\", \"titleSlug\": \"palindrome-permutation\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Palindrome Pairs\", \"titleSlug\": \"palindrome-pairs\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Longest Palindromic Subsequence\", \"titleSlug\": \"longest-palindromic-subsequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Palindromic Substrings\", \"titleSlug\": \"palindromic-substrings\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "34",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String",
            "Dynamic Programming"
        ],
        "content": "<p>Given a string <strong>s</strong>, find the longest palindromic substring in <strong>s</strong>. You may assume that the maximum length of <strong>s</strong> is 1000.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> &quot;babad&quot;\n<strong>Output:</strong> &quot;bab&quot;\n<strong>Note:</strong> &quot;aba&quot; is also a valid answer.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> &quot;cbbd&quot;\n<strong>Output:</strong> &quot;bb&quot;\n</pre>\n"
    },
    {
        "id": "652",
        "title": "Find Duplicate Subtrees",
        "slug": "find-duplicate-subtrees",
        "difficulty": "Medium",
        "likes": 857,
        "dislikes": 167,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Serialize and Deserialize Binary Tree\", \"titleSlug\": \"serialize-and-deserialize-binary-tree\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Serialize and Deserialize BST\", \"titleSlug\": \"serialize-and-deserialize-bst\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Construct String from Binary Tree\", \"titleSlug\": \"construct-string-from-binary-tree\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "326",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree"
        ],
        "content": "<p>Given a binary tree, return all duplicate subtrees. For each kind of duplicate subtrees, you only need to return the root node of any <b>one</b> of them.</p>\n\n<p>Two trees are duplicate if they have the same structure with same node values.</p>\n\n<p><b>Example 1: </b></p>\n\n<pre>\n        1\n       / \\\n      2   3\n     /   / \\\n    4   2   4\n       /\n      4\n</pre>\n\n<p>The following are two duplicate subtrees:</p>\n\n<pre>\n      2\n     /\n    4\n</pre>\n\n<p>and</p>\n\n<pre>\n    4\n</pre>\nTherefore, you need to return above trees&#39; root in the form of a list."
    },
    {
        "id": "213",
        "title": "House Robber II",
        "slug": "house-robber-ii",
        "difficulty": "Medium",
        "likes": 1035,
        "dislikes": 35,
        "hints": [
            "Since House[1] and House[n] are adjacent, they cannot be robbed together. Therefore, the problem becomes to rob either House[1]-House[n-1] or House[2]-House[n], depending on which choice offers more money. Now the problem has degenerated to the <a href =\"https://leetcode.com/problems/house-robber/description/\">House Robber</a>, which is already been solved."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"House Robber\", \"titleSlug\": \"house-robber\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Paint House\", \"titleSlug\": \"paint-house\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Paint Fence\", \"titleSlug\": \"paint-fence\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"House Robber III\", \"titleSlug\": \"house-robber-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Non-negative Integers without Consecutive Ones\", \"titleSlug\": \"non-negative-integers-without-consecutive-ones\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Coin Path\", \"titleSlug\": \"coin-path\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>You are a professional robber planning to rob houses along a street. Each house has a certain amount of money stashed. All houses at this place are <strong>arranged in a circle.</strong> That means the first house is the neighbor of the last one. Meanwhile, adjacent houses have security system connected and&nbsp;<b>it will automatically contact the police if two adjacent houses were broken into on the same night</b>.</p>\n\n<p>Given a list of non-negative integers representing the amount of money of each house, determine the maximum amount of money you can rob tonight <strong>without alerting the police</strong>.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> [2,3,2]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> You cannot rob house 1 (money = 2) and then rob house 3 (money = 2),\n&nbsp;            because they are adjacent houses.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> [1,2,3,1]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> Rob house 1 (money = 1) and then rob house 3 (money = 3).\n&nbsp;            Total amount you can rob = 1 + 3 = 4.</pre>\n"
    },
    {
        "id": "1155",
        "title": "Number of Dice Rolls With Target Sum",
        "slug": "number-of-dice-rolls-with-target-sum",
        "difficulty": "Medium",
        "likes": 138,
        "dislikes": 12,
        "hints": [
            "Use dynamic programming.  The states are how many dice are remaining, and what sum total you have rolled so far."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>You have <code>d</code> dice, and each die has <code>f</code> faces numbered <code>1, 2, ..., f</code>.</p>\n\n<p>Return the number of possible ways (out of <code>f<sup>d</sup></code>&nbsp;total ways) <strong>modulo <code>10^9 + 7</code></strong> to roll the dice so the sum of the face up numbers equals <code>target</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> d = 1, f = 6, target = 3\n<strong>Output:</strong> 1\n<strong>Explanation: </strong>\nYou throw one die with 6 faces.  There is only one way to get a sum of 3.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> d = 2, f = 6, target = 7\n<strong>Output:</strong> 6\n<strong>Explanation: </strong>\nYou throw two dice, each with 6 faces.  There are 6 ways to get a sum of 7:\n1+6, 2+5, 3+4, 4+3, 5+2, 6+1.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> d = 2, f = 5, target = 10\n<strong>Output:</strong> 1\n<strong>Explanation: </strong>\nYou throw two dice, each with 5 faces.  There is only one way to get a sum of 10: 5+5.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> d = 1, f = 2, target = 3\n<strong>Output:</strong> 0\n<strong>Explanation: </strong>\nYou throw one die with 2 faces.  There is no way to get a sum of 3.\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> d = 30, f = 30, target = 500\n<strong>Output:</strong> 222616187\n<strong>Explanation: </strong>\nThe answer must be returned modulo 10^9 + 7.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= d, f &lt;= 30</code></li>\n\t<li><code>1 &lt;= target &lt;= 1000</code></li>\n</ul>"
    },
    {
        "id": "983",
        "title": "Minimum Cost For Tickets",
        "slug": "minimum-cost-for-tickets",
        "difficulty": "Medium",
        "likes": 636,
        "dislikes": 13,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Coin Change\", \"titleSlug\": \"coin-change\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "675",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>In a country popular for train travel, you&nbsp;have planned some train travelling one year in advance.&nbsp; The days of the year that you will travel is given as an array <code>days</code>.&nbsp; Each day is an integer from <code>1</code> to <code>365</code>.</p>\n\n<p>Train tickets are sold in 3 different ways:</p>\n\n<ul>\n\t<li>a 1-day pass is sold for <code>costs[0]</code> dollars;</li>\n\t<li>a 7-day pass is sold for <code>costs[1]</code> dollars;</li>\n\t<li>a 30-day pass is sold for <code>costs[2]</code> dollars.</li>\n</ul>\n\n<p>The passes allow that many days of consecutive travel.&nbsp; For example, if we get a 7-day pass on day 2, then we can travel for 7 days: day 2, 3, 4, 5, 6, 7, and 8.</p>\n\n<p>Return the minimum number of dollars you need to travel every day in the given list of <code>days</code>.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>days = <span id=\"example-input-1-1\">[1,4,6,7,8,20]</span>, costs = <span id=\"example-input-1-2\">[2,7,15]</span>\n<strong>Output: </strong><span id=\"example-output-1\">11</span>\n<strong>Explanation: </strong>\nFor example, here is one way to buy passes that lets you travel your travel plan:\nOn day 1, you bought a 1-day pass for costs[0] = $2, which covered day 1.\nOn day 3, you bought a 7-day pass for costs[1] = $7, which covered days 3, 4, ..., 9.\nOn day 20, you bought a 1-day pass for costs[0] = $2, which covered day 20.\nIn total you spent $11 and covered all the days of your travel.\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>days = <span id=\"example-input-2-1\">[1,2,3,4,5,6,7,8,9,10,30,31]</span>, costs = <span id=\"example-input-2-2\">[2,7,15]</span>\n<strong>Output: </strong><span id=\"example-output-2\">17</span>\n<strong>Explanation: </strong>\nFor example, here is one way to buy passes that lets you travel your travel plan:\nOn day 1, you bought a 30-day pass for costs[2] = $15 which covered days 1, 2, ..., 30.\nOn day 31, you bought a 1-day pass for costs[0] = $2 which covered day 31.\nIn total you spent $17 and covered all the days of your travel.\n</pre>\n\n<p>&nbsp;</p>\n</div>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= days.length &lt;= 365</code></li>\n\t<li><code>1 &lt;= days[i] &lt;= 365</code></li>\n\t<li><code>days</code> is in strictly increasing order.</li>\n\t<li><code>costs.length == 3</code></li>\n\t<li><code>1 &lt;= costs[i] &lt;= 1000</code></li>\n</ol>\n"
    },
    {
        "id": "640",
        "title": "Solve the Equation",
        "slug": "solve-the-equation",
        "difficulty": "Medium",
        "likes": 175,
        "dislikes": 422,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Fraction Addition and Subtraction\", \"titleSlug\": \"fraction-addition-and-subtraction\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "196",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math"
        ],
        "content": "<p>\nSolve a given equation and return the value of <code>x</code> in the form of string \"x=#value\". The equation contains only '+', '-' operation, the variable <code>x</code> and its coefficient.\n</p>\n\n<p>\nIf there is no solution for the equation, return \"No solution\".\n</p>\n<p>\nIf there are infinite solutions for the equation, return \"Infinite solutions\".\n</p>\n<p>\nIf there is exactly one solution for the equation, we ensure that the value of <code>x</code> is an integer.\n</p>\n\n<p><b>Example 1:</b><br/>\n<pre>\n<b>Input:</b> \"x+5-3+x=6+x-2\"\n<b>Output:</b> \"x=2\"\n</pre>\n</p>\n\n<p><b>Example 2:</b><br/>\n<pre>\n<b>Input:</b> \"x=x\"\n<b>Output:</b> \"Infinite solutions\"\n</pre>\n</p>\n\n<p><b>Example 3:</b><br/>\n<pre>\n<b>Input:</b> \"2x=x\"\n<b>Output:</b> \"x=0\"\n</pre>\n</p>\n\n<p><b>Example 4:</b><br/>\n<pre>\n<b>Input:</b> \"2x+3x-6x=x+2\"\n<b>Output:</b> \"x=-1\"\n</pre>\n</p>\n\n<p><b>Example 5:</b><br/>\n<pre>\n<b>Input:</b> \"x=x+2\"\n<b>Output:</b> \"No solution\"\n</pre>\n</p>"
    },
    {
        "id": "895",
        "title": "Maximum Frequency Stack",
        "slug": "maximum-frequency-stack",
        "difficulty": "Hard",
        "likes": 553,
        "dislikes": 11,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "539",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Hash Table",
            "Stack"
        ],
        "content": "<p>Implement <code>FreqStack</code>, a class which simulates the operation of a stack-like data structure.</p>\n\n<p><code>FreqStack</code>&nbsp;has two functions:</p>\n\n<ul>\n\t<li><code>push(int x)</code>, which pushes an integer <code>x</code> onto the stack.</li>\n\t<li><code>pop()</code>, which <strong>removes</strong> and returns the most frequent element in the stack.\n\t<ul>\n\t\t<li>If there is a tie for most frequent element, the element closest to the top of the stack is removed and returned.</li>\n\t</ul>\n\t</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>\n<span id=\"example-input-1-1\">[&quot;FreqStack&quot;,&quot;push&quot;,&quot;push&quot;,&quot;push&quot;,&quot;push&quot;,&quot;push&quot;,&quot;push&quot;,&quot;pop&quot;,&quot;pop&quot;,&quot;pop&quot;,&quot;pop&quot;]</span>,\n<span id=\"example-input-1-2\">[[],[5],[7],[5],[7],[4],[5],[],[],[],[]]</span>\n<strong>Output: </strong><span id=\"example-output-1\">[null,null,null,null,null,null,null,5,7,5,4]</span>\n<strong>Explanation</strong>:\nAfter making six .push operations, the stack is [5,7,5,7,4,5] from bottom to top.  Then:\n\npop() -&gt; returns 5, as 5 is the most frequent.\nThe stack becomes [5,7,5,7,4].\n\npop() -&gt; returns 7, as 5 and 7 is the most frequent, but 7 is closest to the top.\nThe stack becomes [5,7,5,4].\n\npop() -&gt; returns 5.\nThe stack becomes [5,7,4].\n\npop() -&gt; returns 4.\nThe stack becomes [5,7].\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>Calls to <code>FreqStack.push(int x)</code>&nbsp;will be such that <code>0 &lt;= x &lt;= 10^9</code>.</li>\n\t<li>It is guaranteed that <code>FreqStack.pop()</code> won&#39;t be called if the stack has zero elements.</li>\n\t<li>The total number of <code>FreqStack.push</code> calls will not exceed <code>10000</code> in a single test case.</li>\n\t<li>The total number of <code>FreqStack.pop</code>&nbsp;calls will not exceed <code>10000</code> in a single test case.</li>\n\t<li>The total number of <code>FreqStack.push</code> and <code>FreqStack.pop</code> calls will not exceed <code>150000</code> across all test cases.</li>\n</ul>\n\n<div>\n<p>&nbsp;</p>\n</div>\n"
    },
    {
        "id": "560",
        "title": "Subarray Sum Equals K",
        "slug": "subarray-sum-equals-k",
        "difficulty": "Medium",
        "likes": 2392,
        "dislikes": 67,
        "hints": [
            "Will Brute force work here? Try to optimize it.",
            "Can we optimize it by using some extra space?",
            "What about storing sum frequencies in a hash table? Will it be useful?",
            "sum(i,j)=sum(0,j)-sum(0,i), where sum(i,j) represents the sum of all the elements from index i to j-1.\r\n\r\nCan we use this property to optimize it."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Two Sum\", \"titleSlug\": \"two-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Continuous Subarray Sum\", \"titleSlug\": \"continuous-subarray-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Subarray Product Less Than K\", \"titleSlug\": \"subarray-product-less-than-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find Pivot Index\", \"titleSlug\": \"find-pivot-index\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Subarray Sums Divisible by K\", \"titleSlug\": \"subarray-sums-divisible-by-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "119",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Hash Table"
        ],
        "content": "<p>Given an array of integers and an integer <b>k</b>, you need to find the total number of continuous subarrays whose sum equals to <b>k</b>.</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b>nums = [1,1,1], k = 2\n<b>Output:</b> 2\n</pre>\n</p>\n\n<p><b>Note:</b><br>\n<ol>\n<li>The length of the array is in range [1, 20,000].</li>\n<li>The range of numbers in the array is [-1000, 1000] and the range of the integer <b>k</b> is [-1e7, 1e7].</li>\n</ol>\n</p>\n"
    },
    {
        "id": "713",
        "title": "Subarray Product Less Than K",
        "slug": "subarray-product-less-than-k",
        "difficulty": "Medium",
        "likes": 737,
        "dislikes": 34,
        "hints": [
            "For each j, let opt(j) be the smallest i so that nums[i] * nums[i+1] * ... * nums[j] is less than k.  opt is an increasing function."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Maximum Product Subarray\", \"titleSlug\": \"maximum-product-subarray\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Size Subarray Sum Equals k\", \"titleSlug\": \"maximum-size-subarray-sum-equals-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Subarray Sum Equals K\", \"titleSlug\": \"subarray-sum-equals-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Two Sum Less Than K\", \"titleSlug\": \"two-sum-less-than-k\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "267",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Two Pointers"
        ],
        "content": "<p>Your are given an array of positive integers <code>nums</code>.</p>\n<p>Count and print the number of (contiguous) subarrays where the product of all the elements in the subarray is less than <code>k</code>.</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> nums = [10, 5, 2, 6], k = 100\n<b>Output:</b> 8\n<b>Explanation:</b> The 8 subarrays that have product less than 100 are: [10], [5], [2], [6], [10, 5], [5, 2], [2, 6], [5, 2, 6].\nNote that [10, 5, 2] is not included as the product of 100 is not strictly less than k.\n</pre>\n</p>\n\n<p><b>Note:</b>\n<li><code>0 < nums.length <= 50000</code>.</li>\n<li><code>0 < nums[i] < 1000</code>.</li>\n<li><code>0 <= k < 10^6</code>.</li>\n</p>"
    },
    {
        "id": "503",
        "title": "Next Greater Element II",
        "slug": "next-greater-element-ii",
        "difficulty": "Medium",
        "likes": 790,
        "dislikes": 48,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Next Greater Element I\", \"titleSlug\": \"next-greater-element-i\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Next Greater Element III\", \"titleSlug\": \"next-greater-element-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "88",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Stack"
        ],
        "content": "<p>\nGiven a circular array (the next element of the last element is the first element of the array), print the Next Greater Number for every element. The Next Greater Number of a number x is the first greater number to its traversing-order next in the array, which means you could search circularly to find its next greater number. If it doesn't exist, output -1 for this number.\n</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> [1,2,1]\n<b>Output:</b> [2,-1,2]\n<b>Explanation:</b> The first 1's next greater number is 2; </br>The number 2 can't find next greater number; </br>The second 1's next greater number needs to search circularly, which is also 2.\n</pre>\n</p>\n\n<p><b>Note:</b>\nThe length of given array won't exceed 10000.\n</p>"
    },
    {
        "id": "397",
        "title": "Integer Replacement",
        "slug": "integer-replacement",
        "difficulty": "Medium",
        "likes": 238,
        "dislikes": 258,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Math",
            "Bit Manipulation"
        ],
        "content": "<p>\nGiven a positive integer <i>n</i> and you can do operations as follow:\n</p>\n\n<p>\n<ol>\n<li>If <i>n</i> is even, replace <i>n</i> with <code><i>n</i>/2</code>.</li>\n<li>If <i>n</i> is odd, you can replace <i>n</i> with either <code><i>n</i> + 1</code> or <code><i>n</i> - 1</code>.</li>\n</ol>\n</p>\n\n<p>\nWhat is the minimum number of replacements needed for <i>n</i> to become 1?\n</p>\n\n</p>\n\n<p><b>Example 1:</b>\n<pre>\n<b>Input:</b>\n8\n\n<b>Output:</b>\n3\n\n<b>Explanation:</b>\n8 -> 4 -> 2 -> 1\n</pre>\n</p>\n\n<p><b>Example 2:</b>\n<pre>\n<b>Input:</b>\n7\n\n<b>Output:</b>\n4\n\n<b>Explanation:</b>\n7 -> 8 -> 4 -> 2 -> 1\nor\n7 -> 6 -> 3 -> 2 -> 1\n</pre>\n</p>"
    },
    {
        "id": "852",
        "title": "Peak Index in a Mountain Array",
        "slug": "peak-index-in-a-mountain-array",
        "difficulty": "Easy",
        "likes": 344,
        "dislikes": 766,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Find Peak Element\", \"titleSlug\": \"find-peak-element\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find in Mountain Array\", \"titleSlug\": \"find-in-mountain-array\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "488",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Binary Search"
        ],
        "content": "<p>Let&#39;s call an array <code>A</code> a <em>mountain</em>&nbsp;if the following properties hold:</p>\n\n<ul>\n\t<li><code>A.length &gt;= 3</code></li>\n\t<li>There exists some <code>0 &lt; i&nbsp;&lt; A.length - 1</code> such that <code>A[0] &lt; A[1] &lt; ... A[i-1] &lt; A[i] &gt; A[i+1] &gt; ... &gt; A[A.length - 1]</code></li>\n</ul>\n\n<p>Given an array that is definitely a mountain, return any&nbsp;<code>i</code>&nbsp;such that&nbsp;<code>A[0] &lt; A[1] &lt; ... A[i-1] &lt; A[i] &gt; A[i+1] &gt; ... &gt; A[A.length - 1]</code>.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[0,1,0]</span>\n<strong>Output: </strong><span id=\"example-output-1\">1</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[0,2,1,0]</span>\n<strong>Output: </strong><span id=\"example-output-2\">1</span></pre>\n</div>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>3 &lt;= A.length &lt;= 10000</code></li>\n\t<li><code><font face=\"monospace\">0 &lt;= A[i] &lt;= 10^6</font></code></li>\n\t<li>A&nbsp;is a mountain, as defined above.</li>\n</ol>\n"
    },
    {
        "id": "834",
        "title": "Sum of Distances in Tree",
        "slug": "sum-of-distances-in-tree",
        "difficulty": "Hard",
        "likes": 516,
        "dislikes": 26,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Distribute Coins in Binary Tree\", \"titleSlug\": \"distribute-coins-in-binary-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "465",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree",
            "Depth-first Search"
        ],
        "content": "<p>An undirected, connected&nbsp;tree with <code>N</code> nodes labelled <code>0...N-1</code> and <code>N-1</code> <code>edges</code>&nbsp;are&nbsp;given.</p>\n\n<p>The <code>i</code>th edge connects nodes&nbsp;<code>edges[i][0] </code>and<code>&nbsp;edges[i][1]</code>&nbsp;together.</p>\n\n<p>Return a list <code>ans</code>, where <code>ans[i]</code> is the sum of the distances between node <code>i</code> and all other nodes.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>N = 6, edges = [[0,1],[0,2],[2,3],[2,4],[2,5]]\n<strong>Output: </strong>[8,12,6,10,10,10]\n<strong>Explanation: </strong>\nHere is a diagram of the given tree:\n  0\n / \\\n1   2\n   /|\\\n  3 4 5\nWe can see that dist(0,1) + dist(0,2) + dist(0,3) + dist(0,4) + dist(0,5)\nequals 1 + 1 + 2 + 2 + 2 = 8.  Hence, answer[0] = 8, and so on.\n</pre>\n\n<p>Note:<font face=\"monospace\">&nbsp;<code>1 &lt;= N &lt;= 10000</code></font></p>\n"
    },
    {
        "id": "1053",
        "title": "Previous Permutation With One Swap",
        "slug": "previous-permutation-with-one-swap",
        "difficulty": "Medium",
        "likes": 53,
        "dislikes": 150,
        "hints": [
            "You need to swap two values, one larger than the other.  Where is the larger one located?"
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Array",
            "Greedy"
        ],
        "content": "<p>Given an array <code>A</code> of positive integers (not necessarily distinct), return the lexicographically largest permutation that is smaller than <code>A</code>, that can be <strong>made with one swap</strong> (A <em>swap</em> exchanges the positions of two numbers <code>A[i]</code> and <code>A[j]</code>).&nbsp; If it cannot be done, then return the same array.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>[3,2,1]\n<strong>Output: </strong>[3,1,2]\n<strong>Explanation: </strong>Swapping 2 and 1.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>[1,1,5]\n<strong>Output: </strong>[1,1,5]\n<strong>Explanation: </strong>This is already the smallest permutation.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>[1,9,4,6,7]\n<strong>Output: </strong>[1,7,4,6,9]\n<strong>Explanation: </strong>Swapping 9 and 7.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input: </strong>[3,1,1,3]\n<strong>Output: </strong>[1,3,1,3]\n<strong>Explanation: </strong>Swapping 1 and 3.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 10000</code></li>\n\t<li><code>1 &lt;= A[i] &lt;= 10000</code></li>\n</ol>\n"
    },
    {
        "id": "67",
        "title": "Add Binary",
        "slug": "add-binary",
        "difficulty": "Easy",
        "likes": 1136,
        "dislikes": 216,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Add Two Numbers\", \"titleSlug\": \"add-two-numbers\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Multiply Strings\", \"titleSlug\": \"multiply-strings\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Plus One\", \"titleSlug\": \"plus-one\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Add to Array-Form of Integer\", \"titleSlug\": \"add-to-array-form-of-integer\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Math",
            "String"
        ],
        "content": "<p>Given two binary strings, return their sum (also a binary string).</p>\n\n<p>The input strings are both <strong>non-empty</strong> and contains only characters <code>1</code> or&nbsp;<code>0</code>.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> a = &quot;11&quot;, b = &quot;1&quot;\n<strong>Output:</strong> &quot;100&quot;</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> a = &quot;1010&quot;, b = &quot;1011&quot;\n<strong>Output:</strong> &quot;10101&quot;</pre>\n"
    },
    {
        "id": "938",
        "title": "Range Sum of BST",
        "slug": "range-sum-of-bst",
        "difficulty": "Easy",
        "likes": 492,
        "dislikes": 92,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "611",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree",
            "Recursion"
        ],
        "content": "<p>Given the <code>root</code> node of a binary search tree, return the sum of values of all nodes with value between <code>L</code> and <code>R</code> (inclusive).</p>\n\n<p>The binary search tree is guaranteed to have unique values.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>root = <span id=\"example-input-1-1\">[10,5,15,3,7,null,18]</span>, L = <span id=\"example-input-1-2\">7</span>, R = <span id=\"example-input-1-3\">15</span>\n<strong>Output: </strong><span id=\"example-output-1\">32</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>root = <span id=\"example-input-2-1\">[10,5,15,3,7,13,18,1,null,6]</span>, L = <span id=\"example-input-2-2\">6</span>, R = <span id=\"example-input-2-3\">10</span>\n<strong>Output: </strong><span id=\"example-output-2\">23</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li>The number of nodes in the tree is at most <code>10000</code>.</li>\n\t<li>The final answer is guaranteed to be less than <code>2^31</code>.</li>\n</ol>\n</div>\n</div>"
    },
    {
        "id": "762",
        "title": "Prime Number of Set Bits in Binary Representation",
        "slug": "prime-number-of-set-bits-in-binary-representation",
        "difficulty": "Easy",
        "likes": 168,
        "dislikes": 257,
        "hints": [
            "Write a helper function to count the number of set bits in a number, then check whether the number of set bits is 2, 3, 5, 7, 11, 13, 17 or 19."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Number of 1 Bits\", \"titleSlug\": \"number-of-1-bits\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "373",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Bit Manipulation"
        ],
        "content": "<p>\nGiven two integers <code>L</code> and <code>R</code>, find the count of numbers in the range <code>[L, R]</code> (inclusive) having a prime number of set bits in their binary representation.\n</p><p>\n(Recall that the number of set bits an integer has is the number of <code>1</code>s present when written in binary.  For example, <code>21</code> written in binary is <code>10101</code> which has 3 set bits.  Also, 1 is not a prime.)\n</p><p>\n\n<p><b>Example 1:</b><br /><pre>\n<b>Input:</b> L = 6, R = 10\n<b>Output:</b> 4\n<b>Explanation:</b>\n6 -> 110 (2 set bits, 2 is prime)\n7 -> 111 (3 set bits, 3 is prime)\n9 -> 1001 (2 set bits , 2 is prime)\n10->1010 (2 set bits , 2 is prime)\n</pre></p>\n\n<p><b>Example 2:</b><br /><pre>\n<b>Input:</b> L = 10, R = 15\n<b>Output:</b> 5\n<b>Explanation:</b>\n10 -> 1010 (2 set bits, 2 is prime)\n11 -> 1011 (3 set bits, 3 is prime)\n12 -> 1100 (2 set bits, 2 is prime)\n13 -> 1101 (3 set bits, 3 is prime)\n14 -> 1110 (3 set bits, 3 is prime)\n15 -> 1111 (4 set bits, 4 is not prime)\n</pre></p>\n\n<p><b>Note:</b><br><ol>\n<li><code>L, R</code> will be integers <code>L <= R</code> in the range <code>[1, 10^6]</code>.</li>\n<li><code>R - L</code> will be at most 10000.</li>\n</ol></p>"
    },
    {
        "id": "1038",
        "title": "Binary Search Tree to Greater Sum Tree",
        "slug": "binary-search-tree-to-greater-sum-tree",
        "difficulty": "Medium",
        "likes": 289,
        "dislikes": 44,
        "hints": [
            "What traversal method organizes all nodes in sorted order?"
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Binary Search Tree"
        ],
        "content": "<p>Given the root of a binary <strong>search</strong> tree with distinct values, modify it so that every <code>node</code>&nbsp;has a new value equal to the sum of the values of the original tree that are greater than or equal to <code>node.val</code>.</p>\n\n<p>As a reminder, a&nbsp;<em>binary search tree</em> is a tree that satisfies these constraints:</p>\n\n<ul>\n\t<li>The left subtree of a node contains only nodes with keys&nbsp;<strong>less than</strong>&nbsp;the node&#39;s key.</li>\n\t<li>The right subtree of a node contains only nodes with keys&nbsp;<strong>greater than</strong>&nbsp;the node&#39;s key.</li>\n\t<li>Both the left and right subtrees must also be binary search trees.</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<p><strong><img alt=\"\" src=\"./img/binary-search-tree-to-greater-sum-tree_1.png\" style=\"width: 280px; height: 191px;\" /></strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[4,1,6,0,2,5,7,null,null,null,3,null,null,null,8]</span>\n<strong>Output: </strong><span id=\"example-output-1\">[30,36,21,36,35,26,15,null,null,null,33,null,null,null,8]</span>\n</pre>\n\n<div>\n<p>&nbsp;</p>\n</div>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li>The number of nodes in the tree is between <code>1</code> and <code>100</code>.</li>\n\t<li>Each node will have value between <code>0</code> and <code>100</code>.</li>\n\t<li>The given tree is a binary search tree.</li>\n</ol>\n\n<div>\n<div>\n<div>&nbsp;</div>\n</div>\n</div>\n"
    },
    {
        "id": "378",
        "title": "Kth Smallest Element in a Sorted Matrix",
        "slug": "kth-smallest-element-in-a-sorted-matrix",
        "difficulty": "Medium",
        "likes": 1417,
        "dislikes": 89,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Find K Pairs with Smallest Sums\", \"titleSlug\": \"find-k-pairs-with-smallest-sums\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Kth Smallest Number in Multiplication Table\", \"titleSlug\": \"kth-smallest-number-in-multiplication-table\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Find K-th Smallest Pair Distance\", \"titleSlug\": \"find-k-th-smallest-pair-distance\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"K-th Smallest Prime Fraction\", \"titleSlug\": \"k-th-smallest-prime-fraction\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Binary Search",
            "Heap"
        ],
        "content": "<p>Given a <i>n</i> x <i>n</i> matrix where each of the rows and columns are sorted in ascending order, find the kth smallest element in the matrix.</p>\n\n<p>\nNote that it is the kth smallest element in the sorted order, not the kth distinct element.\n</p>\n\n<p><b>Example:</b>\n<pre>\nmatrix = [\n   [ 1,  5,  9],\n   [10, 11, 13],\n   [12, 13, 15]\n],\nk = 8,\n\nreturn 13.\n</pre>\n</p>\n\n<p><b>Note: </b><br>\nYou may assume k is always valid, 1 &le; k &le; n<sup>2</sup>.</p>"
    },
    {
        "id": "710",
        "title": "Random Pick with Blacklist",
        "slug": "random-pick-with-blacklist",
        "difficulty": "Hard",
        "likes": 191,
        "dislikes": 45,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Random Pick Index\", \"titleSlug\": \"random-pick-index\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Random Pick with Weight\", \"titleSlug\": \"random-pick-with-weight\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "500",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Hash Table",
            "Binary Search",
            "Sort",
            "Random"
        ],
        "content": "<p>Given a blacklist&nbsp;<code>B</code> containing unique integers&nbsp;from <code>[0, N)</code>, write a function to return a uniform random integer from <code>[0, N)</code> which is <strong>NOT</strong>&nbsp;in <code>B</code>.</p>\n\n<p>Optimize it such that it minimizes the call to system&rsquo;s <code>Math.random()</code>.</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= N &lt;= 1000000000</code></li>\n\t<li><code>0 &lt;= B.length &lt; min(100000, N)</code></li>\n\t<li><code>[0, N)</code>&nbsp;does NOT include N. See <a href=\"https://en.wikipedia.org/wiki/Interval_(mathematics)\" target=\"_blank\">interval notation</a>.</li>\n</ol>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: \n</strong><span id=\"example-input-1-1\">[&quot;Solution&quot;,&quot;pick&quot;,&quot;pick&quot;,&quot;pick&quot;]\n</span><span id=\"example-input-1-2\">[[1,[]],[],[],[]]</span>\n<strong>Output: </strong><span id=\"example-output-1\">[null,0,0,0]</span>\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: \n</strong><span id=\"example-input-2-1\">[&quot;Solution&quot;,&quot;pick&quot;,&quot;pick&quot;,&quot;pick&quot;]\n</span><span id=\"example-input-2-2\">[[2,[]],[],[],[]]</span>\n<strong>Output: </strong><span id=\"example-output-2\">[null,1,1,1]</span>\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: \n</strong><span id=\"example-input-3-1\">[&quot;Solution&quot;,&quot;pick&quot;,&quot;pick&quot;,&quot;pick&quot;]\n</span><span id=\"example-input-3-2\">[[3,[1]],[],[],[]]</span>\n<strong>Output: </strong><span id=\"example-output-3\">[null,0,0,2]</span>\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input: \n</strong><span id=\"example-input-4-1\">[&quot;Solution&quot;,&quot;pick&quot;,&quot;pick&quot;,&quot;pick&quot;]\n</span><span id=\"example-input-4-2\">[[4,[2]],[],[],[]]</span>\n<strong>Output: </strong><span id=\"example-output-4\">[null,1,3,1]</span>\n</pre>\n\n<p><strong>Explanation of Input Syntax:</strong></p>\n\n<p>The input is two lists:&nbsp;the subroutines called&nbsp;and their&nbsp;arguments.&nbsp;<code>Solution</code>&#39;s&nbsp;constructor has two arguments,&nbsp;<code>N</code> and the blacklist <code>B</code>. <code>pick</code> has no arguments.&nbsp;Arguments&nbsp;are&nbsp;always wrapped with a list, even if there aren&#39;t any.</p>\n"
    },
    {
        "id": "994",
        "title": "Rotting Oranges",
        "slug": "rotting-oranges",
        "difficulty": "Easy",
        "likes": 356,
        "dislikes": 26,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Walls and Gates\", \"titleSlug\": \"walls-and-gates\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "696",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Breadth-first Search"
        ],
        "content": "<p>In a given grid, each cell can have one of three&nbsp;values:</p>\n\n<ul>\n\t<li>the value <code>0</code> representing an empty cell;</li>\n\t<li>the value <code>1</code> representing a fresh orange;</li>\n\t<li>the value <code>2</code> representing a rotten orange.</li>\n</ul>\n\n<p>Every minute, any fresh orange that is adjacent (4-directionally) to a rotten orange becomes rotten.</p>\n\n<p>Return the minimum number of minutes that must elapse until no cell has a fresh orange.&nbsp; If this is impossible, return <code>-1</code> instead.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<p><strong><img alt=\"\" src=\"./img/rotting-oranges_1.png\" style=\"width: 712px; height: 150px;\" /></strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[[2,1,1],[1,1,0],[0,1,1]]</span>\n<strong>Output: </strong><span id=\"example-output-1\">4</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[[2,1,1],[0,1,1],[1,0,1]]</span>\n<strong>Output: </strong><span id=\"example-output-2\">-1</span>\n<strong>Explanation: </strong> The orange in the bottom left corner (row 2, column 0) is never rotten, because rotting only happens 4-directionally.\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">[[0,2]]</span>\n<strong>Output: </strong><span id=\"example-output-3\">0</span>\n<strong>Explanation: </strong> Since there are already no fresh oranges at minute 0, the answer is just 0.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= grid.length &lt;= 10</code></li>\n\t<li><code>1 &lt;= grid[0].length &lt;= 10</code></li>\n\t<li><code>grid[i][j]</code> is only <code>0</code>, <code>1</code>, or <code>2</code>.</li>\n</ol>\n</div>\n</div>\n</div>"
    },
    {
        "id": "117",
        "title": "Populating Next Right Pointers in Each Node II",
        "slug": "populating-next-right-pointers-in-each-node-ii",
        "difficulty": "Medium",
        "likes": 1014,
        "dislikes": 147,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Populating Next Right Pointers in Each Node\", \"titleSlug\": \"populating-next-right-pointers-in-each-node\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Tree",
            "Depth-first Search"
        ],
        "content": "<p>Given a binary tree</p>\n\n<pre>\nstruct Node {\n  int val;\n  Node *left;\n  Node *right;\n  Node *next;\n}\n</pre>\n\n<p>Populate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to <code>NULL</code>.</p>\n\n<p>Initially, all next pointers are set to <code>NULL</code>.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example:</strong></p>\n\n<p><img alt=\"\" src=\"./img/populating-next-right-pointers-in-each-node-ii_1.png\" style=\"width: 640px; height: 218px;\" /></p>\n\n<pre>\n<strong>Input: </strong><span>{&quot;$id&quot;:&quot;1&quot;,&quot;left&quot;:{&quot;$id&quot;:&quot;2&quot;,&quot;left&quot;:{&quot;$id&quot;:&quot;3&quot;,&quot;left&quot;:null,&quot;next&quot;:null,&quot;right&quot;:null,&quot;val&quot;:4},&quot;next&quot;:null,&quot;right&quot;:{&quot;$id&quot;:&quot;4&quot;,&quot;left&quot;:null,&quot;next&quot;:null,&quot;right&quot;:null,&quot;val&quot;:5},&quot;val&quot;:2},&quot;next&quot;:null,&quot;right&quot;:{&quot;$id&quot;:&quot;5&quot;,&quot;left&quot;:null,&quot;next&quot;:null,&quot;right&quot;:{&quot;$id&quot;:&quot;6&quot;,&quot;left&quot;:null,&quot;next&quot;:null,&quot;right&quot;:null,&quot;val&quot;:7},&quot;val&quot;:3},&quot;val&quot;:1}</span>\n\n<strong>Output: </strong><span>{&quot;$id&quot;:&quot;1&quot;,&quot;left&quot;:{&quot;$id&quot;:&quot;2&quot;,&quot;left&quot;:{&quot;$id&quot;:&quot;3&quot;,&quot;left&quot;:null,&quot;next&quot;:{&quot;$id&quot;:&quot;4&quot;,&quot;left&quot;:null,&quot;next&quot;:{&quot;$id&quot;:&quot;5&quot;,&quot;left&quot;:null,&quot;next&quot;:null,&quot;right&quot;:null,&quot;val&quot;:7},&quot;right&quot;:null,&quot;val&quot;:5},&quot;right&quot;:null,&quot;val&quot;:4},&quot;next&quot;:{&quot;$id&quot;:&quot;6&quot;,&quot;left&quot;:null,&quot;next&quot;:null,&quot;right&quot;:{&quot;$ref&quot;:&quot;5&quot;},&quot;val&quot;:3},&quot;right&quot;:{&quot;$ref&quot;:&quot;4&quot;},&quot;val&quot;:2},&quot;next&quot;:null,&quot;right&quot;:{&quot;$ref&quot;:&quot;6&quot;},&quot;val&quot;:1}</span>\n\n<strong>Explanation: </strong>Given the above binary tree (Figure A), your function should populate each next pointer to point to its next right node, just like in Figure B.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>You may only use constant extra space.</li>\n\t<li>Recursive approach is fine, implicit stack space does not count as extra space for this problem.</li>\n</ul>"
    },
    {
        "id": "998",
        "title": "Maximum Binary Tree II",
        "slug": "maximum-binary-tree-ii",
        "difficulty": "Medium",
        "likes": 88,
        "dislikes": 229,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Maximum Binary Tree\", \"titleSlug\": \"maximum-binary-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Tree"
        ],
        "content": "<p>We are given the <code>root</code>&nbsp;node of a <em>maximum tree:</em> a tree where every node has a value greater than any other value in its subtree.</p>\n\n<p>Just as in the <a href=\"https://leetcode.com/problems/maximum-binary-tree/\">previous problem</a>, the given tree&nbsp;was constructed from an list&nbsp;<code>A</code>&nbsp;(<code>root = Construct(A)</code>) recursively with the following&nbsp;<code>Construct(A)</code> routine:</p>\n\n<ul>\n\t<li>If <code>A</code> is empty, return <code>null</code>.</li>\n\t<li>Otherwise, let <code>A[i]</code> be the largest element of <code>A</code>.&nbsp; Create a <code>root</code> node with value <code>A[i]</code>.</li>\n\t<li>The left child of <code>root</code> will be <code>Construct([A[0], A[1], ..., A[i-1]])</code></li>\n\t<li>The right child of <code>root</code>&nbsp;will be <code>Construct([A[i+1], A[i+2], ..., A[A.length - 1]])</code></li>\n\t<li>Return <code>root</code>.</li>\n</ul>\n\n<p>Note that we were not given A directly, only a root node <code>root = Construct(A)</code>.</p>\n\n<p>Suppose <code>B</code> is a copy of <code>A</code> with the value <code>val</code> appended to it.&nbsp; It is guaranteed that <code>B</code> has unique values.</p>\n\n<p>Return <code>Construct(B)</code>.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<p><strong><img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/02/21/maximum-binary-tree-1-1.png\" style=\"width: 159px; height: 160px;\" /><img alt=\"\" src=\"./img/maximum-binary-tree-ii_1.png\" style=\"width: 169px; height: 160px;\" /></strong></p>\n\n<pre>\n<strong>Input: </strong>root = <span id=\"example-input-1-1\">[4,1,3,null,null,2]</span>, val = <span id=\"example-input-1-2\">5</span>\n<strong>Output: </strong><span id=\"example-output-1\">[5,4,null,1,3,null,null,2]\n<strong>Explanation:</strong> A = </span><span>[1,4,2,3], B = </span><span>[1,4,2,3,5]</span>\n</pre>\n\n<div>\n<p><strong>Example 2:<br />\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/02/21/maximum-binary-tree-2-1.png\" style=\"width: 180px; height: 160px;\" /><img alt=\"\" src=\"./img/maximum-binary-tree-ii_2.png\" style=\"width: 214px; height: 160px;\" /></strong></p>\n\n<pre>\n<strong>Input: </strong>root = <span id=\"example-input-2-1\">[5,2,4,null,1]</span>, val = <span id=\"example-input-2-2\">3</span>\n<strong>Output: </strong><span id=\"example-output-2\">[5,2,4,null,1,null,3]\n</span><span id=\"example-output-1\"><strong>Explanation:</strong> A = </span><span>[2,1,5,4], B = </span><span>[2,1,5,4,3]</span>\n</pre>\n\n<div>\n<p><strong>Example 3:<br />\n<img alt=\"\" src=\"https://assets.leetcode.com/uploads/2019/02/21/maximum-binary-tree-3-1.png\" style=\"width: 180px; height: 160px;\" /><img alt=\"\" src=\"./img/maximum-binary-tree-ii_3.png\" style=\"width: 201px; height: 160px;\" /></strong></p>\n\n<pre>\n<strong>Input: </strong>root = <span id=\"example-input-3-1\">[5,2,3,null,1]</span>, val = <span id=\"example-input-3-2\">4</span>\n<strong>Output: </strong><span id=\"example-output-3\">[5,2,4,null,1,3]\n</span><span id=\"example-output-1\"><strong>Explanation:</strong> A = </span><span>[2,1,5,3], B = </span><span>[2,1,5,3,4]</span>\n</pre>\n\n<p>&nbsp;</p>\n</div>\n</div>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= B.length &lt;= 100</code></li>\n</ol>"
    },
    {
        "id": "896",
        "title": "Monotonic Array",
        "slug": "monotonic-array",
        "difficulty": "Easy",
        "likes": 337,
        "dislikes": 27,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "546",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array"
        ],
        "content": "<p>An array is <em>monotonic</em> if it is either monotone increasing or monotone decreasing.</p>\n\n<p>An array <code>A</code> is monotone increasing if for all <code>i &lt;= j</code>, <code>A[i] &lt;= A[j]</code>.&nbsp; An array <code>A</code> is monotone decreasing if for all <code>i &lt;= j</code>, <code>A[i] &gt;= A[j]</code>.</p>\n\n<p>Return <code>true</code> if and only if the given array <code>A</code> is monotonic.</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[1,2,2,3]</span>\n<strong>Output: </strong><span id=\"example-output-1\">true</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[6,5,4,4]</span>\n<strong>Output: </strong><span id=\"example-output-2\">true</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">[1,3,2]</span>\n<strong>Output: </strong><span id=\"example-output-3\">false</span>\n</pre>\n\n<div>\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-4-1\">[1,2,4,5]</span>\n<strong>Output: </strong><span id=\"example-output-4\">true</span>\n</pre>\n\n<div>\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-5-1\">[1,1,1]</span>\n<strong>Output: </strong><span id=\"example-output-5\">true</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 50000</code></li>\n\t<li><code>-100000 &lt;= A[i] &lt;= 100000</code></li>\n</ol>\n</div>\n</div>\n</div>\n</div>\n</div>\n"
    },
    {
        "id": "173",
        "title": "Binary Search Tree Iterator",
        "slug": "binary-search-tree-iterator",
        "difficulty": "Medium",
        "likes": 1603,
        "dislikes": 251,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Binary Tree Inorder Traversal\", \"titleSlug\": \"binary-tree-inorder-traversal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Flatten 2D Vector\", \"titleSlug\": \"flatten-2d-vector\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Zigzag Iterator\", \"titleSlug\": \"zigzag-iterator\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Peeking Iterator\", \"titleSlug\": \"peeking-iterator\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Inorder Successor in BST\", \"titleSlug\": \"inorder-successor-in-bst\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "737",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Stack",
            "Tree",
            "Design"
        ],
        "content": "<p>Implement an iterator over a binary search tree (BST). Your iterator will be initialized with the root node of a BST.</p>\n\n<p>Calling <code>next()</code> will return the next smallest number in the BST.</p>\n\n<p>&nbsp;</p>\n\n<ul>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<p><strong><img alt=\"\" src=\"./img/binary-search-tree-iterator_1.png\" style=\"width: 189px; height: 178px;\" /></strong></p>\n\n<pre>\nBSTIterator iterator = new BSTIterator(root);\niterator.next();    // return 3\niterator.next();    // return 7\niterator.hasNext(); // return true\niterator.next();    // return 9\niterator.hasNext(); // return true\niterator.next();    // return 15\niterator.hasNext(); // return true\niterator.next();    // return 20\niterator.hasNext(); // return false\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b></p>\n\n<ul>\n\t<li><code>next()</code> and <code>hasNext()</code> should run in average O(1) time and uses O(<i>h</i>) memory, where <i>h</i> is the height of the tree.</li>\n\t<li>You may assume that&nbsp;<code>next()</code>&nbsp;call&nbsp;will always be valid, that is, there will be at least a next smallest number in the BST when <code>next()</code> is called.</li>\n</ul>\n"
    },
    {
        "id": "685",
        "title": "Redundant Connection II",
        "slug": "redundant-connection-ii",
        "difficulty": "Hard",
        "likes": 510,
        "dislikes": 164,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Redundant Connection\", \"titleSlug\": \"redundant-connection\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "306",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree",
            "Depth-first Search",
            "Union Find",
            "Graph"
        ],
        "content": "<p>\nIn this problem, a rooted tree is a <b>directed</b> graph such that, there is exactly one node (the root) for which all other nodes are descendants of this node, plus every node has exactly one parent, except for the root node which has no parents.\n</p><p>\nThe given input is a directed graph that started as a rooted tree with N nodes (with distinct values 1, 2, ..., N), with one additional directed edge added.  The added edge has two different vertices chosen from 1 to N, and was not an edge that already existed.\n</p><p>\nThe resulting graph is given as a 2D-array of <code>edges</code>.  Each element of <code>edges</code> is a pair <code>[u, v]</code> that represents a <b>directed</b> edge connecting nodes <code>u</code> and <code>v</code>, where <code>u</code> is a parent of child <code>v</code>.\n</p><p>\nReturn an edge that can be removed so that the resulting graph is a rooted tree of N nodes.  If there are multiple answers, return the answer that occurs last in the given 2D-array.\n</p><p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> [[1,2], [1,3], [2,3]]\n<b>Output:</b> [2,3]\n<b>Explanation:</b> The given directed graph will be like this:\n  1\n / \\\nv   v\n2-->3\n</pre>\n</p>\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b> [[1,2], [2,3], [3,4], [4,1], [1,5]]\n<b>Output:</b> [4,1]\n<b>Explanation:</b> The given directed graph will be like this:\n5 <- 1 -> 2\n     ^    |\n     |    v\n     4 <- 3\n</pre>\n</p>\n<p><b>Note:</b><br />\n<li>The size of the input 2D-array will be between 3 and 1000.</li>\n<li>Every integer represented in the 2D-array will be between 1 and N, where N is the size of the input array.</li>\n</p>"
    },
    {
        "id": "342",
        "title": "Power of Four",
        "slug": "power-of-four",
        "difficulty": "Easy",
        "likes": 341,
        "dislikes": 157,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Power of Two\", \"titleSlug\": \"power-of-two\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Power of Three\", \"titleSlug\": \"power-of-three\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "767",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Bit Manipulation"
        ],
        "content": "<p>Given an integer (signed 32 bits), write a function to check whether it is a power of 4.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">16</span>\n<strong>Output: </strong><span id=\"example-output-1\">true</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">5</span>\n<strong>Output: </strong><span id=\"example-output-2\">false</span></pre>\n</div>\n\n<p><b>Follow up</b>: Could you solve it without loops/recursion?</p>"
    },
    {
        "id": "949",
        "title": "Largest Time for Given Digits",
        "slug": "largest-time-for-given-digits",
        "difficulty": "Easy",
        "likes": 85,
        "dislikes": 235,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "631",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math"
        ],
        "content": "<p>Given an array of 4 digits, return the largest 24 hour time that can be made.</p>\n\n<p>The smallest 24 hour time is 00:00, and the largest is 23:59.&nbsp; Starting from 00:00, a time is larger if more time has elapsed since midnight.</p>\n\n<p>Return the answer as a string of length 5.&nbsp; If no valid time can be made, return an empty string.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[1,2,3,4]</span>\n<strong>Output: </strong><span id=\"example-output-1\">&quot;23:41&quot;</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[5,5,5,5]</span>\n<strong>Output: </strong><span id=\"example-output-2\">&quot;&quot;</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong><span>Note:</span></strong></p>\n\n<ol>\n\t<li><code>A.length == 4</code></li>\n\t<li><code>0 &lt;= A[i] &lt;= 9</code></li>\n</ol>\n</div>\n</div>"
    },
    {
        "id": "1040",
        "title": "Moving Stones Until Consecutive II",
        "slug": "moving-stones-until-consecutive-ii",
        "difficulty": "Medium",
        "likes": 79,
        "dislikes": 98,
        "hints": [
            "For the minimum, how many cows are already in place?\r\nFor the maximum, we have to lose either the gap A[1] - A[0] or A[N-1] - A[N-2]  (where N = A.length), but every other space can be occupied."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Array",
            "Sliding Window"
        ],
        "content": "<p>On an <strong>infinite</strong> number line, the position of the i-th stone is given by&nbsp;<code>stones[i]</code>.&nbsp; Call a stone an <em>endpoint stone</em> if it has the smallest or largest position.</p>\n\n<p>Each turn, you pick up an endpoint stone and move it to an unoccupied position so that it is no longer an endpoint stone.</p>\n\n<p>In particular,&nbsp;if the stones are at say, <code>stones = [1,2,5]</code>, you <strong>cannot</strong> move the endpoint stone at position 5, since moving it to any position (such as 0, or 3) will still keep that stone as an endpoint stone.</p>\n\n<p>The game ends when you cannot make any more moves, ie. the stones are in consecutive positions.</p>\n\n<p>When the game ends, what is the minimum and maximum number of moves that you could have made?&nbsp; Return the answer as an length 2 array:&nbsp;<code>answer = [minimum_moves, maximum_moves]</code></p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[7,4,9]</span>\n<strong>Output: </strong><span id=\"example-output-1\">[1,2]</span>\n<strong>Explanation: </strong>\nWe can move 4 -&gt; 8 for one move to finish the game.\nOr, we can move 9 -&gt; 5, 4 -&gt; 6 for two moves to finish the game.\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[6,5,4,3,10]</span>\n<strong>Output: </strong><span id=\"example-output-2\">[2,3]</span>\nWe can move 3 -&gt; 8 then 10 -&gt; 7 to finish the game.\nOr, we can move 3 -&gt; 7, 4 -&gt; 8, 5 -&gt; 9 to finish the game.\nNotice we cannot move 10 -&gt; 2 to finish the game, because that would be an illegal move.\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">[100,101,104,102,103]</span>\n<strong>Output: </strong><span id=\"example-output-3\">[0,0]</span></pre>\n\n<p>&nbsp;</p>\n</div>\n</div>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>3 &lt;= stones.length &lt;= 10^4</code></li>\n\t<li><code>1 &lt;= stones[i] &lt;= 10^9</code></li>\n\t<li><code>stones[i]</code> have distinct values.</li>\n</ol>\n\n<div>\n<div>\n<div>&nbsp;</div>\n</div>\n</div>"
    },
    {
        "id": "274",
        "title": "H-Index",
        "slug": "h-index",
        "difficulty": "Medium",
        "likes": 433,
        "dislikes": 752,
        "hints": [
            "An easy approach is to sort the array first.",
            "What are the possible values of h-index?",
            "A faster approach is to use extra space."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"H-Index II\", \"titleSlug\": \"h-index-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "26",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Hash Table",
            "Sort"
        ],
        "content": "<p>Given an array of citations (each citation is a non-negative integer) of a researcher, write a function to compute the researcher&#39;s h-index.</p>\n\n<p>According to the <a href=\"https://en.wikipedia.org/wiki/H-index\" target=\"_blank\">definition of h-index on Wikipedia</a>: &quot;A scientist has index <i>h</i> if <i>h</i> of his/her <i>N</i> papers have <b>at least</b> <i>h</i> citations each, and the other <i>N &minus; h</i> papers have <b>no more than</b> <i>h</i> citations each.&quot;</p>\n\n<p><b>Example:</b></p>\n\n<pre>\n<b>Input:</b> <code>citations = [3,0,6,1,5]</code>\n<b>Output:</b> 3 \n<strong>Explanation: </strong><code>[3,0,6,1,5] </code>means the researcher has <code>5</code> papers in total and each of them had \n             received <code>3, 0, 6, 1, 5</code> citations respectively. \n&nbsp;            Since the researcher has <code>3</code> papers with <b>at least</b> <code>3</code> citations each and the remaining \n&nbsp;            two with <b>no more than</b> <code>3</code> citations each, her h-index is <code>3</code>.</pre>\n\n<p><strong>Note:&nbsp;</strong>If there are several possible values for <em>h</em>, the maximum one is taken as the h-index.</p>\n"
    },
    {
        "id": "922",
        "title": "Sort Array By Parity II",
        "slug": "sort-array-by-parity-ii",
        "difficulty": "Easy",
        "likes": 346,
        "dislikes": 33,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "589",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Sort"
        ],
        "content": "<p>Given an array <code>A</code>&nbsp;of non-negative integers, half of the integers in A are odd, and half of the integers are even.</p>\n\n<p>Sort the array so that whenever <code>A[i]</code> is odd, <code>i</code> is odd; and whenever <code>A[i]</code> is even, <code>i</code> is even.</p>\n\n<p>You may return any answer array that satisfies this condition.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[4,2,5,7]</span>\n<strong>Output: </strong><span id=\"example-output-1\">[4,5,2,7]</span>\n<strong>Explanation: </strong>[4,7,2,5], [2,5,4,7], [2,7,4,5] would also have been accepted.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>2 &lt;= A.length &lt;= 20000</code></li>\n\t<li><code>A.length % 2 == 0</code></li>\n\t<li><code>0 &lt;= A[i] &lt;= 1000</code></li>\n</ol>\n\n<div>\n<p>&nbsp;</p>\n</div>"
    },
    {
        "id": "765",
        "title": "Couples Holding Hands",
        "slug": "couples-holding-hands",
        "difficulty": "Hard",
        "likes": 408,
        "dislikes": 49,
        "hints": [
            "Say there are N two-seat couches.  For each couple, draw an edge from the couch of one partner to the couch of the other partner."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"First Missing Positive\", \"titleSlug\": \"first-missing-positive\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Missing Number\", \"titleSlug\": \"missing-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"K-Similar Strings\", \"titleSlug\": \"k-similar-strings\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "376",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Greedy",
            "Union Find",
            "Graph"
        ],
        "content": "<p>\nN couples sit in 2N seats arranged in a row and want to hold hands.  We want to know the minimum number of swaps so that every couple is sitting side by side.  A <i>swap</i> consists of choosing <b>any</b> two people, then they stand up and switch seats. \n</p><p>\nThe people and seats are represented by an integer from <code>0</code> to <code>2N-1</code>, the couples are numbered in order, the first couple being <code>(0, 1)</code>, the second couple being <code>(2, 3)</code>, and so on with the last couple being <code>(2N-2, 2N-1)</code>.\n</p><p>\nThe couples' initial seating is given by <code>row[i]</code> being the value of the person who is initially sitting in the i-th seat.\n\n<p><b>Example 1:</b><br /><pre>\n<b>Input:</b> row = [0, 2, 1, 3]\n<b>Output:</b> 1\n<b>Explanation:</b> We only need to swap the second (row[1]) and third (row[2]) person.\n</pre></p>\n\n<p><b>Example 2:</b><br /><pre>\n<b>Input:</b> row = [3, 2, 0, 1]\n<b>Output:</b> 0\n<b>Explanation:</b> All couples are already seated side by side.\n</pre></p>\n\n<p>\n<b>Note:</b>\n<ol> \n<li> <code>len(row)</code> is even and in the range of <code>[4, 60]</code>.</li>\n<li> <code>row</code> is guaranteed to be a permutation of <code>0...len(row)-1</code>.</li>\n</ol>"
    },
    {
        "id": "375",
        "title": "Guess Number Higher or Lower II",
        "slug": "guess-number-higher-or-lower-ii",
        "difficulty": "Medium",
        "likes": 577,
        "dislikes": 817,
        "hints": [
            "The best strategy to play the game is to minimize the maximum loss you could possibly face. Another strategy is to minimize the expected loss. Here, we are interested in the <b>first</b> scenario.",
            "Take a small example (n = 3). What do you end up paying in the worst case?",
            "Check out <a href=\"https://en.wikipedia.org/wiki/Minimax\">this article</a> if you're still stuck.",
            "The purely recursive implementation of minimax would be worthless for even a small n. You MUST use dynamic programming.",
            "As a follow-up, how would you modify your code to solve the problem of minimizing the expected loss, instead of the worst-case loss?"
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Flip Game II\", \"titleSlug\": \"flip-game-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Guess Number Higher or Lower\", \"titleSlug\": \"guess-number-higher-or-lower\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Can I Win\", \"titleSlug\": \"can-i-win\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find K Closest Elements\", \"titleSlug\": \"find-k-closest-elements\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "66",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming",
            "Minimax"
        ],
        "content": "<p>We are playing the Guess Game. The game is as follows:</p>\n\n<p>I pick a number from <strong>1</strong> to <strong>n</strong>. You have to guess which number I picked.</p>\n\n<p>Every time you guess wrong, I&#39;ll tell you whether the number I picked is higher or lower.</p>\n\n<p>However, when you guess a particular number x, and you guess wrong, you pay <b>$x</b>. You win the game when you guess the number I picked.</p>\n\n<p><b>Example:</b></p>\n\n<pre>\nn = 10, I pick 8.\n\nFirst round:  You guess 5, I tell you that it&#39;s higher. You pay $5.\nSecond round: You guess 7, I tell you that it&#39;s higher. You pay $7.\nThird round:  You guess 9, I tell you that it&#39;s lower. You pay $9.\n\nGame over. 8 is the number I picked.\n\nYou end up paying $5 + $7 + $9 = $21.\n</pre>\n\n<p>Given a particular <strong>n &ge; 1</strong>, find out how much money you need to have to guarantee a <b>win</b>.</p>"
    },
    {
        "id": "97",
        "title": "Interleaving String",
        "slug": "interleaving-string",
        "difficulty": "Hard",
        "likes": 907,
        "dislikes": 50,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "91",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String",
            "Dynamic Programming"
        ],
        "content": "<p>Given <em>s1</em>, <em>s2</em>, <em>s3</em>, find whether <em>s3</em> is formed by the interleaving of <em>s1</em> and <em>s2</em>.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> s1 = &quot;aabcc&quot;, s2 = &quot;dbbca&quot;, <em>s3</em> = &quot;aadbbcbcac&quot;\n<strong>Output:</strong> true\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> s1 = &quot;aabcc&quot;, s2 = &quot;dbbca&quot;, <em>s3</em> = &quot;aadbbbaccc&quot;\n<strong>Output:</strong> false\n</pre>\n"
    },
    {
        "id": "866",
        "title": "Prime Palindrome",
        "slug": "prime-palindrome",
        "difficulty": "Medium",
        "likes": 95,
        "dislikes": 274,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "504",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math"
        ],
        "content": "<p>Find the smallest prime palindrome greater than or equal to <code>N</code>.</p>\n\n<p>Recall that a&nbsp;number is <em>prime</em> if it&#39;s only divisors are 1 and itself, and it is greater than 1.&nbsp;</p>\n\n<p>For example, 2,3,5,7,11 and 13 are&nbsp;primes.</p>\n\n<p>Recall that a number is a <em>palindrome</em> if it reads the same from left to right as it does from right to left.&nbsp;</p>\n\n<p>For example, 12321 is a palindrome.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">6</span>\n<strong>Output: </strong><span id=\"example-output-1\">7</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">8</span>\n<strong>Output: </strong><span id=\"example-output-2\">11</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">13</span>\n<strong>Output: </strong><span id=\"example-output-3\">101</span></pre>\n</div>\n</div>\n</div>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= N &lt;= 10^8</code></li>\n\t<li>The answer is guaranteed to exist and be less than <code>2 * 10^8</code>.</li>\n</ul>\n"
    },
    {
        "id": "972",
        "title": "Equal Rational Numbers",
        "slug": "equal-rational-numbers",
        "difficulty": "Hard",
        "likes": 32,
        "dislikes": 103,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "656",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math"
        ],
        "content": "<p>Given two strings <code>S</code> and <code>T</code>, each of which represents a non-negative rational number, return <strong>True</strong> if and only if they represent the same number. The strings may use parentheses to denote the repeating part of the rational number.</p>\n\n<p>In general a rational number can be represented using up to&nbsp;three parts: an&nbsp;<em>integer part</em>, a&nbsp;<em>non-repeating part,</em> and a&nbsp;<em>repeating part</em>. The number will be represented&nbsp;in one of the following three ways:</p>\n\n<ul>\n\t<li><code>&lt;IntegerPart&gt;</code> (e.g. 0, 12, 123)</li>\n\t<li><code>&lt;IntegerPart&gt;&lt;.&gt;&lt;NonRepeatingPart&gt;</code> &nbsp;(e.g. 0.5, 1., 2.12, 2.0001)</li>\n\t<li><code>&lt;IntegerPart&gt;&lt;.&gt;&lt;NonRepeatingPart&gt;&lt;(&gt;&lt;RepeatingPart&gt;&lt;)&gt;</code> (e.g. 0.1(6), 0.9(9), 0.00(1212))</li>\n</ul>\n\n<p>The repeating portion of a decimal expansion is conventionally denoted within a pair of round brackets.&nbsp; For example:</p>\n\n<p>1 / 6 = 0.16666666... = 0.1(6) = 0.1666(6) = 0.166(66)</p>\n\n<p>Both 0.1(6) or 0.1666(6) or 0.166(66) are correct representations of 1 / 6.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>S = <span id=\"example-input-1-1\">&quot;0.(52)&quot;</span>, T = <span id=\"example-input-1-2\">&quot;0.5(25)&quot;</span>\n<strong>Output: </strong><span id=\"example-output-1\">true</span>\n<strong>Explanation:\n</strong>Because &quot;0.(52)&quot; represents 0.52525252..., and &quot;0.5(25)&quot; represents 0.52525252525..... , the strings represent the same number.\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>S = <span id=\"example-input-2-1\">&quot;0.1666(6)&quot;</span>, T = <span id=\"example-input-2-2\">&quot;0.166(66)&quot;</span>\n<strong>Output: </strong><span id=\"example-output-2\">true</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>S = <span id=\"example-input-3-1\">&quot;0.9(9)&quot;</span>, T = <span id=\"example-input-3-2\">&quot;1.&quot;</span>\n<strong>Output: </strong><span id=\"example-output-3\">true</span>\n<strong>Explanation: </strong>\n&quot;0.9(9)&quot; represents 0.999999999... repeated forever, which equals 1.  [<a href=\"https://en.wikipedia.org/wiki/0.999...\" target=\"_blank\">See this link for an explanation.</a>]\n&quot;1.&quot; represents the number 1, which is formed correctly: (IntegerPart) = &quot;1&quot; and (NonRepeatingPart) = &quot;&quot;.</pre>\n\n<p>&nbsp;</p>\n</div>\n</div>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li>Each part consists only of digits.</li>\n\t<li>The <code>&lt;IntegerPart&gt;</code>&nbsp;will&nbsp;not begin with 2 or more zeros.&nbsp; (There is no other restriction on the digits of each part.)</li>\n\t<li><code>1 &lt;= &lt;IntegerPart&gt;.length &lt;= 4 </code></li>\n\t<li><code>0 &lt;= &lt;NonRepeatingPart&gt;.length &lt;= 4 </code></li>\n\t<li><code>1 &lt;= &lt;RepeatingPart&gt;.length &lt;= 4</code></li>\n</ol>\n"
    },
    {
        "id": "961",
        "title": "N-Repeated Element in Size 2N Array",
        "slug": "n-repeated-element-in-size-2n-array",
        "difficulty": "Easy",
        "likes": 253,
        "dislikes": 154,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "647",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Hash Table"
        ],
        "content": "<p>In a array <code>A</code> of size <code>2N</code>, there are <code>N+1</code> unique elements, and exactly one of these elements is repeated N times.</p>\n\n<p>Return the element repeated <code>N</code> times.</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[1,2,3,3]</span>\n<strong>Output: </strong><span id=\"example-output-1\">3</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[2,1,2,5,3,2]</span>\n<strong>Output: </strong><span id=\"example-output-2\">2</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">[5,1,5,2,5,3,5,4]</span>\n<strong>Output: </strong><span id=\"example-output-3\">5</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>4 &lt;= A.length &lt;= 10000</code></li>\n\t<li><code>0 &lt;= A[i] &lt; 10000</code></li>\n\t<li><code>A.length</code> is even</li>\n</ol>\n</div>\n</div>\n</div>\n"
    },
    {
        "id": "445",
        "title": "Add Two Numbers II",
        "slug": "add-two-numbers-ii",
        "difficulty": "Medium",
        "likes": 840,
        "dislikes": 113,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Add Two Numbers\", \"titleSlug\": \"add-two-numbers\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Linked List"
        ],
        "content": "<p>You are given two <b>non-empty</b> linked lists representing two non-negative integers. The most significant digit comes first and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.</p>\n\n<p>You may assume the two numbers do not contain any leading zero, except the number 0 itself.</p>\n\n<p><b>Follow up:</b><br />\nWhat if you cannot modify the input lists? In other words, reversing the lists is not allowed.\n</p>\n\n<p>\n<b>Example:</b>\n<pre>\n<b>Input:</b> (7 -> 2 -> 4 -> 3) + (5 -> 6 -> 4)\n<b>Output:</b> 7 -> 8 -> 0 -> 7\n</pre>\n</p>"
    },
    {
        "id": "718",
        "title": "Maximum Length of Repeated Subarray",
        "slug": "maximum-length-of-repeated-subarray",
        "difficulty": "Medium",
        "likes": 755,
        "dislikes": 32,
        "hints": [
            "Use dynamic programming.  dp[i][j] will be the answer for inputs A[i:], B[j:]."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Minimum Size Subarray Sum\", \"titleSlug\": \"minimum-size-subarray-sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "269",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Hash Table",
            "Binary Search",
            "Dynamic Programming"
        ],
        "content": "<p>Given two integer arrays <code>A</code> and <code>B</code>, return the maximum length of an subarray that appears in both arrays.</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b>\nA: [1,2,3,2,1]\nB: [3,2,1,4,7]\n<b>Output:</b> 3\n<b>Explanation:</b> \nThe repeated subarray with maximum length is [3, 2, 1].\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b></p>\n\n<ol>\n\t<li>1 &lt;= len(A), len(B) &lt;= 1000</li>\n\t<li>0 &lt;= A[i], B[i] &lt; 100</li>\n</ol>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "1109",
        "title": "Corporate Flight Bookings",
        "slug": "corporate-flight-bookings",
        "difficulty": "Medium",
        "likes": 204,
        "dislikes": 28,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Array",
            "Math"
        ],
        "content": "<p>There are <code>n</code> flights, and they are labeled&nbsp;from <code>1</code> to <code>n</code>.</p>\n\n<p>We have a list of flight bookings.&nbsp; The <code>i</code>-th booking&nbsp;<code>bookings[i] = [i, j, k]</code>&nbsp;means that we booked <code>k</code> seats from flights labeled <code>i</code> to <code>j</code> inclusive.</p>\n\n<p>Return an array <code>answer</code> of length <code>n</code>, representing the number of seats booked on each flight in order of their label.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> bookings = [[1,2,10],[2,3,20],[2,5,25]], n = 5\n<strong>Output:</strong> [10,55,45,25,25]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= bookings.length &lt;= 20000</code></li>\n\t<li><code>1 &lt;= bookings[i][0] &lt;= bookings[i][1] &lt;= n &lt;= 20000</code></li>\n\t<li><code>1 &lt;= bookings[i][2] &lt;= 10000</code></li>\n</ul>"
    },
    {
        "id": "233",
        "title": "Number of Digit One",
        "slug": "number-of-digit-one",
        "difficulty": "Hard",
        "likes": 191,
        "dislikes": 489,
        "hints": [
            "Beware of overflow."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Factorial Trailing Zeroes\", \"titleSlug\": \"factorial-trailing-zeroes\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Digit Count in Range\", \"titleSlug\": \"digit-count-in-range\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "183",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math"
        ],
        "content": "<p>Given an integer n, count the total number of digit 1 appearing in all non-negative integers less than or equal to n.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input:</strong> 13\n<strong>Output:</strong> 6 \n<strong>Explanation: </strong>Digit 1 occurred in the following numbers: 1, 10, 11, 12, 13.\n</pre>\n"
    },
    {
        "id": "872",
        "title": "Leaf-Similar Trees",
        "slug": "leaf-similar-trees",
        "difficulty": "Easy",
        "likes": 443,
        "dislikes": 26,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "511",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree",
            "Depth-first Search"
        ],
        "content": "<p>Consider all the leaves of a binary tree.&nbsp; From&nbsp;left to right order, the values of those&nbsp;leaves form a <em>leaf value sequence.</em></p>\n\n<p><img alt=\"\" src=\"./img/leaf-similar-trees_1.png\" style=\"width: 300px; height: 240px;\" /></p>\n\n<p>For example, in the given tree above, the leaf value sequence is <code>(6, 7, 4, 9, 8)</code>.</p>\n\n<p>Two binary trees are considered <em>leaf-similar</em>&nbsp;if their leaf value sequence is the same.</p>\n\n<p>Return <code>true</code> if and only if the two given trees with head nodes <code>root1</code> and <code>root2</code> are leaf-similar.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>Both of the given trees will have between <code>1</code> and <code>100</code> nodes.</li>\n</ul>\n"
    },
    {
        "id": "1172",
        "title": "Dinner Plate Stacks",
        "slug": "dinner-plate-stacks",
        "difficulty": "Hard",
        "likes": 60,
        "dislikes": 5,
        "hints": [
            "Use a data structure to save the plate status. You may need to operate the exact index. Maintain the leftmost vacant stack and the rightmost non-empty stack.",
            "Use a list of stack to store the plate status. Use heap to maintain the leftmost and rightmost valid stack."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Design"
        ],
        "content": "<p>You have an infinite number of stacks arranged in a row and numbered (left to right) from 0, each of the stacks has the same&nbsp;maximum <code>capacity</code>.</p>\n\n<p>Implement the <code>DinnerPlates</code> class:</p>\n\n<ul>\n\t<li><code>DinnerPlates(int capacity)</code> Initializes the object with the maximum <code>capacity</code> of the stacks.</li>\n\t<li><code>void push(int val)</code>&nbsp;pushes the given positive integer <code>val</code> into the leftmost stack with size less than <code>capacity</code>.</li>\n\t<li><code>int pop()</code>&nbsp;returns the value at the top of the rightmost non-empty stack and removes it from that stack, and returns <code>-1</code> if all stacks are empty.</li>\n\t<li><code>int popAtStack(int index)</code>&nbsp;returns the value at the top of the stack with the given <code>index</code> and removes it from that stack, and returns -1 if the stack with that&nbsp;given <code>index</code> is empty.</li>\n</ul>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<b>Input: </b>\n[&quot;DinnerPlates&quot;,&quot;push&quot;,&quot;push&quot;,&quot;push&quot;,&quot;push&quot;,&quot;push&quot;,&quot;popAtStack&quot;,&quot;push&quot;,&quot;push&quot;,&quot;popAtStack&quot;,&quot;popAtStack&quot;,&quot;pop&quot;,&quot;pop&quot;,&quot;pop&quot;,&quot;pop&quot;,&quot;pop&quot;]\n[[2],[1],[2],[3],[4],[5],[0],[20],[21],[0],[2],[],[],[],[],[]]\n<b>Output: </b>\n[null,null,null,null,null,null,2,null,null,20,21,5,4,3,1,-1]\n\n<b>Explanation: </b>\nDinnerPlates D = DinnerPlates(2);  // Initialize with capacity = 2\nD.push(1);\nD.push(2);\nD.push(3);\nD.push(4);\nD.push(5);         // The stacks are now:  2 &nbsp;4\n&nbsp;                                          1 &nbsp;3 &nbsp;5\n                                           \ufe48 \ufe48 \ufe48\nD.popAtStack(0);   // Returns 2.  The stacks are now:    &nbsp;4\n            &nbsp;                                          1 &nbsp;3 &nbsp;5\n                                                       \ufe48 \ufe48 \ufe48\nD.push(20);        // The stacks are now: 20  4\n&nbsp;                                          1 &nbsp;3 &nbsp;5\n                                           \ufe48 \ufe48 \ufe48\nD.push(21);        // The stacks are now: 20  4 21\n&nbsp;                                          1 &nbsp;3 &nbsp;5\n                                           \ufe48 \ufe48 \ufe48\nD.popAtStack(0);   // Returns 20.  The stacks are now:     4 21\n             &nbsp;                                          1 &nbsp;3 &nbsp;5\n                                                        \ufe48 \ufe48 \ufe48\nD.popAtStack(2);   // Returns 21.  The stacks are now:     4\n             &nbsp;                                          1 &nbsp;3 &nbsp;5\n                                                        \ufe48 \ufe48 \ufe48 \nD.pop()            // Returns 5.  The stacks are now:      4\n             &nbsp;                                          1 &nbsp;3 \n                                                        \ufe48 \ufe48  \nD.pop()            // Returns 4.  The stacks are now:   1 &nbsp;3 \n                                                        \ufe48 \ufe48   \nD.pop()            // Returns 3.  The stacks are now:   1 \n                                                        \ufe48   \nD.pop()            // Returns 1.  There are no stacks.\nD.pop()            // Returns -1.  There are still no stacks.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= capacity&nbsp;&lt;= 20000</code></li>\n\t<li><code>1 &lt;= val&nbsp;&lt;= 20000</code></li>\n\t<li><code>0 &lt;= index&nbsp;&lt;= 100000</code></li>\n\t<li>At most <code>200000</code>&nbsp;calls will be made to <code>push</code>, <code>pop</code>, and <code>popAtStack</code>.</li>\n</ul>\n"
    },
    {
        "id": "1018",
        "title": "Binary Prefix Divisible By 5",
        "slug": "binary-prefix-divisible-by-5",
        "difficulty": "Easy",
        "likes": 99,
        "dislikes": 62,
        "hints": [
            "If X is the first i digits of the array as a binary number, then 2X + A[i] is the first i+1 digits."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Array"
        ],
        "content": "<p>Given an array <code>A</code> of <code>0</code>s and <code>1</code>s, consider <code>N_i</code>: the i-th subarray from <code>A[0]</code> to <code>A[i]</code>&nbsp;interpreted&nbsp;as a binary number (from most-significant-bit to least-significant-bit.)</p>\n\n<p>Return a list of booleans&nbsp;<code>answer</code>, where <code>answer[i]</code> is <code>true</code>&nbsp;if and only if <code>N_i</code>&nbsp;is divisible by 5.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[0,1,1]</span>\n<strong>Output: </strong><span id=\"example-output-1\">[true,false,false]</span>\n<strong>Explanation: </strong>\nThe input numbers in binary are 0, 01, 011; which are 0, 1, and 3 in base-10.  Only the first number is divisible by 5, so answer[0] is true.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[1,1,1]</span>\n<strong>Output: </strong><span id=\"example-output-2\">[false,false,false]</span>\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">[0,1,1,1,1,1]</span>\n<strong>Output: </strong><span id=\"example-output-3\">[true,false,false,false,true,false]</span>\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-4-1\">[1,1,1,0,1]</span>\n<strong>Output: </strong><span id=\"example-output-4\">[false,false,false,false,false]</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 30000</code></li>\n\t<li><code>A[i]</code> is <code>0</code> or <code>1</code></li>\n</ol>"
    },
    {
        "id": "328",
        "title": "Odd Even Linked List",
        "slug": "odd-even-linked-list",
        "difficulty": "Medium",
        "likes": 892,
        "dislikes": 239,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Split Linked List in Parts\", \"titleSlug\": \"split-linked-list-in-parts\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "28",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Linked List"
        ],
        "content": "<p>Given a singly linked list, group all odd nodes together followed by the even nodes. Please note here we are talking about the node number and not the value in the nodes.</p>\n\n<p>You should try to do it in place. The program should run in O(1) space complexity and O(nodes) time complexity.</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<strong>Input: </strong><code>1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;NULL</code>\n<strong>Output: </strong><code>1-&gt;3-&gt;5-&gt;2-&gt;4-&gt;NULL</code>\n</pre>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<strong>Input: </strong>2<code>-&gt;1-&gt;3-&gt;5-&gt;6-&gt;4-&gt;7-&gt;NULL</code>\n<strong>Output: </strong><code>2-&gt;3-&gt;6-&gt;7-&gt;1-&gt;5-&gt;4-&gt;NULL</code>\n</pre>\n\n<p><b>Note:</b></p>\n\n<ul>\n\t<li>The relative order inside both the even and odd groups should remain as it was in the input.</li>\n\t<li>The first node is considered odd, the second node even and so on ...</li>\n</ul>\n"
    },
    {
        "id": "419",
        "title": "Battleships in a Board",
        "slug": "battleships-in-a-board",
        "difficulty": "Medium",
        "likes": 466,
        "dislikes": 360,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [],
        "content": "Given an 2D board, count how many battleships are in it. The battleships are represented with <code>'X'</code>s, empty slots are represented with <code>'.'</code>s. You may assume the following rules:\n\n<ul>\n<li>You receive a valid board, made of only battleships or empty slots.</li>\n<li>Battleships can only be placed horizontally or vertically. In other words, they can only be made of the shape <code>1xN</code> (1 row, N columns) or <code>Nx1</code> (N rows, 1 column), where N can be of any size.</li>\n<li>At least one horizontal or vertical cell separates between two battleships - there are no adjacent battleships.</li>\n</ul>\n\n<p><b>Example:</b><br />\n<pre>X..X\n...X\n...X\n</pre>\nIn the above board there are 2 battleships.\n\n<p><b>Invalid Example:</b><br />\n<pre>...X\nXXXX\n...X\n</pre>\nThis is an invalid board that you will not receive - as battleships will always have a cell separating between them.\n<p></p>\n<p><b>Follow up:</b><br>Could you do it in <b>one-pass</b>, using only <b>O(1) extra memory</b> and <b>without modifying</b> the value of the board?</p>"
    },
    {
        "id": "947",
        "title": "Most Stones Removed with Same Row or Column",
        "slug": "most-stones-removed-with-same-row-or-column",
        "difficulty": "Medium",
        "likes": 550,
        "dislikes": 158,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "625",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Depth-first Search",
            "Union Find"
        ],
        "content": "<p>On a 2D plane, we place stones at some integer coordinate points.&nbsp; Each coordinate point may have at most one stone.</p>\n\n<p>Now, a <em>move</em> consists of removing a stone&nbsp;that shares a column or row with another stone on the grid.</p>\n\n<p>What is the largest possible number of moves we can make?</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>stones = <span id=\"example-input-1-2\">[[0,0],[0,1],[1,0],[1,2],[2,1],[2,2]]</span>\n<strong>Output: </strong>5\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>stones = <span id=\"example-input-2-2\">[[0,0],[0,2],[1,1],[2,0],[2,2]]</span>\n<strong>Output: </strong>3\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>stones = <span id=\"example-input-3-2\">[[0,0]]</span>\n<strong>Output: </strong>0\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong><span>Note:</span></strong></p>\n\n<ol>\n\t<li><code>1 &lt;= stones.length &lt;= 1000</code></li>\n\t<li><code>0 &lt;= stones[i][j] &lt; 10000</code></li>\n</ol>\n</div>\n</div>\n</div>\n"
    },
    {
        "id": "664",
        "title": "Strange Printer",
        "slug": "strange-printer",
        "difficulty": "Hard",
        "likes": 289,
        "dislikes": 37,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Remove Boxes\", \"titleSlug\": \"remove-boxes\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "329",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming",
            "Depth-first Search"
        ],
        "content": "<p>\nThere is a strange printer with the following two special requirements:\n\n<ol>\n<li>The printer can only print a sequence of the same character each time.</li>\n<li>At each turn, the printer can print new characters starting from and ending at any places, and will cover the original existing characters.</li>\n</ol>\n\n</p>\n\n<p>\nGiven a string consists of lower English letters only, your job is to count the minimum number of turns the printer needed in order to print it.\n</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> \"aaabbb\"\n<b>Output:</b> 2\n<b>Explanation:</b> Print \"aaa\" first and then print \"bbb\".\n</pre>\n</p>\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b> \"aba\"\n<b>Output:</b> 2\n<b>Explanation:</b> Print \"aaa\" first and then print \"b\" from the second place of the string, which will cover the existing character 'a'.\n</pre>\n</p>\n\n<p><b>Hint</b>: Length of the given string will not exceed 100.</p>"
    },
    {
        "id": "190",
        "title": "Reverse Bits",
        "slug": "reverse-bits",
        "difficulty": "Easy",
        "likes": 631,
        "dislikes": 220,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Reverse Integer\", \"titleSlug\": \"reverse-integer\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Number of 1 Bits\", \"titleSlug\": \"number-of-1-bits\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Bit Manipulation"
        ],
        "content": "<p>Reverse bits of a given 32 bits unsigned integer.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> 00000010100101000001111010011100\n<strong>Output:</strong> 00111001011110000010100101000000\n<strong>Explanation: </strong>The input binary string <b>00000010100101000001111010011100</b> represents the unsigned integer 43261596, so return 964176192 which its binary representation is <b>00111001011110000010100101000000</b>.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> 11111111111111111111111111111101\n<strong>Output:</strong> 10111111111111111111111111111111\n<strong>Explanation: </strong>The input binary string <strong>11111111111111111111111111111101</strong> represents the unsigned integer 4294967293, so return 3221225471 which its binary representation is <strong>10101111110010110010011101101001</strong>.</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>Note that in some languages such as Java, there is no unsigned integer type. In this case, both input and output will be given as signed integer type and should not affect your implementation, as the internal binary representation of the integer is the same whether it is signed or unsigned.</li>\n\t<li>In Java,&nbsp;the compiler represents the signed integers using <a href=\"https://en.wikipedia.org/wiki/Two%27s_complement\" target=\"_blank\">2&#39;s complement notation</a>. Therefore, in <strong>Example 2</strong>&nbsp;above the input represents the signed integer <code>-3</code>&nbsp;and the output represents the signed integer <code>-1073741825</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><b>Follow up</b>:</p>\n\n<p>If this function is called many times, how would you optimize it?</p>\n"
    },
    {
        "id": "82",
        "title": "Remove Duplicates from Sorted List II",
        "slug": "remove-duplicates-from-sorted-list-ii",
        "difficulty": "Medium",
        "likes": 1000,
        "dislikes": 84,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Remove Duplicates from Sorted List\", \"titleSlug\": \"remove-duplicates-from-sorted-list\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Linked List"
        ],
        "content": "<p>Given a sorted linked list, delete all nodes that have duplicate numbers, leaving only <em>distinct</em> numbers from the original list.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> 1-&gt;2-&gt;3-&gt;3-&gt;4-&gt;4-&gt;5\n<strong>Output:</strong> 1-&gt;2-&gt;5\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> 1-&gt;1-&gt;1-&gt;2-&gt;3\n<strong>Output:</strong> 2-&gt;3\n</pre>\n"
    },
    {
        "id": "1111",
        "title": "Maximum Nesting Depth of Two Valid Parentheses Strings",
        "slug": "maximum-nesting-depth-of-two-valid-parentheses-strings",
        "difficulty": "Medium",
        "likes": 48,
        "dislikes": 227,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Binary Search",
            "Greedy"
        ],
        "content": "<p>A string is a <em>valid parentheses string</em>&nbsp;(denoted VPS) if and only if it consists of <code>&quot;(&quot;</code> and <code>&quot;)&quot;</code> characters only, and:</p>\n\n<ul>\n\t<li>It is the empty string, or</li>\n\t<li>It can be written as&nbsp;<code>AB</code>&nbsp;(<code>A</code>&nbsp;concatenated with&nbsp;<code>B</code>), where&nbsp;<code>A</code>&nbsp;and&nbsp;<code>B</code>&nbsp;are VPS&#39;s, or</li>\n\t<li>It can be written as&nbsp;<code>(A)</code>, where&nbsp;<code>A</code>&nbsp;is a VPS.</li>\n</ul>\n\n<p>We can&nbsp;similarly define the <em>nesting depth</em> <code>depth(S)</code> of any VPS <code>S</code> as follows:</p>\n\n<ul>\n\t<li><code>depth(&quot;&quot;) = 0</code></li>\n\t<li><code>depth(A + B) = max(depth(A), depth(B))</code>, where <code>A</code> and <code>B</code> are VPS&#39;s</li>\n\t<li><code>depth(&quot;(&quot; + A + &quot;)&quot;) = 1 + depth(A)</code>, where <code>A</code> is a VPS.</li>\n</ul>\n\n<p>For example,&nbsp; <code>&quot;&quot;</code>,&nbsp;<code>&quot;()()&quot;</code>, and&nbsp;<code>&quot;()(()())&quot;</code>&nbsp;are VPS&#39;s (with nesting depths 0, 1, and 2), and <code>&quot;)(&quot;</code> and <code>&quot;(()&quot;</code> are not VPS&#39;s.</p>\n\n<p>&nbsp;</p>\n\n<p>Given a VPS <font face=\"monospace\">seq</font>, split it into two disjoint subsequences <code>A</code> and <code>B</code>, such that&nbsp;<code>A</code> and <code>B</code> are VPS&#39;s (and&nbsp;<code>A.length + B.length = seq.length</code>).</p>\n\n<p>Now choose <strong>any</strong> such <code>A</code> and <code>B</code> such that&nbsp;<code>max(depth(A), depth(B))</code> is the minimum possible value.</p>\n\n<p>Return an <code>answer</code> array (of length <code>seq.length</code>) that encodes such a&nbsp;choice of <code>A</code> and <code>B</code>:&nbsp; <code>answer[i] = 0</code> if <code>seq[i]</code> is part of <code>A</code>, else <code>answer[i] = 1</code>.&nbsp; Note that even though multiple answers may exist, you may return any of them.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> seq = &quot;(()())&quot;\n<strong>Output:</strong> [0,1,1,1,1,0]\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> seq = &quot;()(())()&quot;\n<strong>Output:</strong> [0,0,0,1,1,0,1,1]\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= seq.size &lt;= 10000</code></li>\n</ul>\n"
    },
    {
        "id": "978",
        "title": "Longest Turbulent Subarray",
        "slug": "longest-turbulent-subarray",
        "difficulty": "Medium",
        "likes": 125,
        "dislikes": 49,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Maximum Subarray\", \"titleSlug\": \"maximum-subarray\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "669",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Dynamic Programming",
            "Sliding Window"
        ],
        "content": "<p>A subarray <code>A[i], A[i+1], ..., A[j]</code>&nbsp;of <code>A</code> is said to be <em>turbulent</em> if and only if:</p>\n\n<ul>\n\t<li>For <code>i &lt;= k &lt; j</code>, <code>A[k] &gt; A[k+1]</code> when <code>k</code> is odd, and <code>A[k] &lt; A[k+1]</code> when <code>k</code> is even;</li>\n\t<li><strong>OR</strong>, for <code>i &lt;= k &lt; j</code>, <code>A[k] &gt; A[k+1]</code> when <code>k</code> is even, and <code>A[k] &lt; A[k+1]</code> when <code>k</code> is odd.</li>\n</ul>\n\n<p>That is, the subarray is turbulent if the comparison sign flips between each adjacent pair of elements in the subarray.</p>\n\n<p>Return the <strong>length</strong> of a&nbsp;maximum size turbulent subarray of A.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[9,4,2,10,7,8,8,1,9]</span>\n<strong>Output: </strong><span id=\"example-output-1\">5</span>\n<strong>Explanation: </strong>(A[1] &gt; A[2] &lt; A[3] &gt; A[4] &lt; A[5])\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[4,8,12,16]</span>\n<strong>Output: </strong><span id=\"example-output-2\">2</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">[100]</span>\n<strong>Output: </strong><span id=\"example-output-3\">1</span>\n</pre>\n</div>\n</div>\n</div>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 40000</code></li>\n\t<li><code>0 &lt;= A[i] &lt;= 10^9</code></li>\n</ol>"
    },
    {
        "id": "287",
        "title": "Find the Duplicate Number",
        "slug": "find-the-duplicate-number",
        "difficulty": "Medium",
        "likes": 2855,
        "dislikes": 324,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"First Missing Positive\", \"titleSlug\": \"first-missing-positive\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Single Number\", \"titleSlug\": \"single-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Linked List Cycle II\", \"titleSlug\": \"linked-list-cycle-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Missing Number\", \"titleSlug\": \"missing-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Set Mismatch\", \"titleSlug\": \"set-mismatch\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "338",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Two Pointers",
            "Binary Search"
        ],
        "content": "<p>Given an array <i>nums</i> containing <i>n</i> + 1 integers where each integer is between 1 and <i>n</i> (inclusive), prove that at least one duplicate number must exist. Assume that there is only one duplicate number, find the duplicate one.</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> <code>[1,3,4,2,2]</code>\n<b>Output:</b> 2\n</pre>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input:</b> [3,1,3,4,2]\n<b>Output:</b> 3</pre>\n\n<p><b>Note:</b></p>\n\n<ol>\n\t<li>You <b>must not</b> modify the array (assume the array is read only).</li>\n\t<li>You must use only constant, <i>O</i>(1) extra space.</li>\n\t<li>Your runtime complexity should be less than <em>O</em>(<em>n</em><sup>2</sup>).</li>\n\t<li>There is only one duplicate number in the array, but it could be repeated more than once.</li>\n</ol>\n"
    },
    {
        "id": "847",
        "title": "Shortest Path Visiting All Nodes",
        "slug": "shortest-path-visiting-all-nodes",
        "difficulty": "Hard",
        "likes": 346,
        "dislikes": 37,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "477",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming",
            "Breadth-first Search"
        ],
        "content": "<p>An undirected, connected graph of N nodes (labeled&nbsp;<code>0, 1, 2, ..., N-1</code>) is given as <code>graph</code>.</p>\n\n<p><code>graph.length = N</code>, and <code>j != i</code>&nbsp;is in the list&nbsp;<code>graph[i]</code>&nbsp;exactly once, if and only if nodes <code>i</code> and <code>j</code> are connected.</p>\n\n<p>Return the length of the shortest path that visits every node. You may start and stop at any node, you may revisit nodes multiple times, and you may reuse edges.</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>[[1,2,3],[0],[0],[0]]\n<strong>Output: </strong>4\n<strong>Explanation</strong>: One possible path is [1,0,2,0,3]</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>[[1],[0,2,4],[1,3,4],[2],[1,2]]\n<strong>Output: </strong>4\n<strong>Explanation</strong>: One possible path is [0,1,4,2,3]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= graph.length &lt;= 12</code></li>\n\t<li><code>0 &lt;= graph[i].length &lt;&nbsp;graph.length</code></li>\n</ol>\n"
    },
    {
        "id": "924",
        "title": "Minimize Malware Spread",
        "slug": "minimize-malware-spread",
        "difficulty": "Hard",
        "likes": 186,
        "dislikes": 145,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "588",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Depth-first Search",
            "Union Find"
        ],
        "content": "<p>In a network of nodes, each node <code>i</code> is directly connected to another node <code>j</code> if and only if&nbsp;<code>graph[i][j] = 1</code>.</p>\n\n<p>Some nodes <code>initial</code> are initially infected by malware.&nbsp; Whenever two nodes are directly connected and at least one of those two nodes is infected by malware, both nodes will be infected by malware.&nbsp; This spread of malware will continue until no more nodes can be infected in this manner.</p>\n\n<p>Suppose <code>M(initial)</code>&nbsp;is the final number of nodes infected with malware in the entire network, after the spread of malware stops.</p>\n\n<p>We will&nbsp;remove one node from the initial list.&nbsp; Return the node that if removed, would minimize&nbsp;<code>M(initial)</code>.&nbsp; If multiple nodes could be removed to minimize <code>M(initial)</code>, return such a node with the smallest index.</p>\n\n<p>Note that if a node was removed from the <code>initial</code>&nbsp;list of infected nodes, it may still be infected later as a result of the malware spread.</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>graph = [[1,1,0],[1,1,0],[0,0,1]], initial = [0,1]\n<strong>Output: </strong>0\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>graph = [[1,0,0],[0,1,0],[0,0,1]], initial = [0,2]\n<strong>Output: </strong>0\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>graph = [[1,1,1],[1,1,1],[1,1,1]], initial = [1,2]\n<strong>Output: </strong>1\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt; graph.length = graph[0].length &lt;= 300</code></li>\n\t<li><code>0 &lt;= graph[i][j] == graph[j][i] &lt;= 1</code></li>\n\t<li><code>graph[i][i] = 1</code></li>\n\t<li><code>1 &lt;= initial.length &lt; graph.length</code></li>\n\t<li><code>0 &lt;= initial[i] &lt; graph.length</code></li>\n</ol>\n"
    },
    {
        "id": "925",
        "title": "Long Pressed Name",
        "slug": "long-pressed-name",
        "difficulty": "Easy",
        "likes": 277,
        "dislikes": 35,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "591",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Two Pointers",
            "String"
        ],
        "content": "<p>Your friend is typing his <code>name</code>&nbsp;into a keyboard.&nbsp; Sometimes, when typing a character <code>c</code>, the key might get <em>long pressed</em>, and the character will be typed 1 or more times.</p>\n\n<p>You examine the <code>typed</code>&nbsp;characters of the keyboard.&nbsp; Return <code>True</code> if it is possible that it was your friends name, with some characters (possibly none) being long pressed.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>name = <span id=\"example-input-1-1\">&quot;alex&quot;</span>, typed = <span id=\"example-input-1-2\">&quot;aaleex&quot;</span>\n<strong>Output: </strong><span id=\"example-output-1\">true</span>\n<strong>Explanation: </strong>'a' and 'e' in 'alex' were long pressed.\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>name = <span id=\"example-input-2-1\">&quot;saeed&quot;</span>, typed = <span id=\"example-input-2-2\">&quot;ssaaedd&quot;</span>\n<strong>Output: </strong><span id=\"example-output-2\">false</span>\n<strong>Explanation: </strong>'e' must have been pressed twice, but it wasn't in the typed output.\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>name = <span id=\"example-input-3-1\">&quot;leelee&quot;</span>, typed = <span id=\"example-input-3-2\">&quot;lleeelee&quot;</span>\n<strong>Output: </strong><span id=\"example-output-3\">true</span>\n</pre>\n\n<div>\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input: </strong>name = <span id=\"example-input-4-1\">&quot;laiden&quot;</span>, typed = <span id=\"example-input-4-2\">&quot;laiden&quot;</span>\n<strong>Output: </strong><span id=\"example-output-4\">true</span>\n<strong>Explanation: </strong>It's not necessary to long press any character.\n</pre>\n\n<p>&nbsp;</p>\n</div>\n</div>\n</div>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>name.length &lt;= 1000</code></li>\n\t<li><code>typed.length &lt;= 1000</code></li>\n\t<li>The characters of <code>name</code> and <code>typed</code> are lowercase letters.</li>\n</ol>\n\n<div>\n<p>&nbsp;</p>\n\n<div>\n<div>\n<div>&nbsp;</div>\n</div>\n</div>\n</div>"
    },
    {
        "id": "788",
        "title": "Rotated Digits",
        "slug": "rotated-digits",
        "difficulty": "Easy",
        "likes": 229,
        "dislikes": 785,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "421",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String"
        ],
        "content": "<p>X is a good number if after rotating each digit individually by 180 degrees, we get a valid number that is different from X.&nbsp; Each digit must be rotated - we cannot choose to leave it alone.</p>\n\n<p>A number is valid if each digit remains a digit after rotation. 0, 1, and 8 rotate to themselves; 2 and 5 rotate to each other; 6 and 9 rotate to each other, and the rest of the numbers do not rotate to any other number and become invalid.</p>\n\n<p>Now&nbsp;given a positive number <code>N</code>, how many numbers X from <code>1</code> to <code>N</code> are good?</p>\n\n<pre>\n<strong>Example:</strong>\n<strong>Input:</strong> 10\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> \nThere are four good numbers in the range [1, 10] : 2, 5, 6, 9.\nNote that 1 and 10 are not good numbers, since they remain unchanged after rotating.\n</pre>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>N&nbsp; will be in range <code>[1, 10000]</code>.</li>\n</ul>\n"
    },
    {
        "id": "980",
        "title": "Unique Paths III",
        "slug": "unique-paths-iii",
        "difficulty": "Hard",
        "likes": 238,
        "dislikes": 39,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Sudoku Solver\", \"titleSlug\": \"sudoku-solver\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Unique Paths II\", \"titleSlug\": \"unique-paths-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Word Search II\", \"titleSlug\": \"word-search-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "670",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Backtracking",
            "Depth-first Search"
        ],
        "content": "<p>On a 2-dimensional&nbsp;<code>grid</code>, there are 4 types of squares:</p>\n\n<ul>\n\t<li><code>1</code> represents the starting square.&nbsp; There is exactly one starting square.</li>\n\t<li><code>2</code> represents the ending square.&nbsp; There is exactly one ending square.</li>\n\t<li><code>0</code> represents empty squares we can walk over.</li>\n\t<li><code>-1</code> represents obstacles that we cannot walk over.</li>\n</ul>\n\n<p>Return the number of 4-directional walks&nbsp;from the starting square to the ending square, that <strong>walk over every non-obstacle square&nbsp;exactly once</strong>.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[[1,0,0,0],[0,0,0,0],[0,0,2,-1]]</span>\n<strong>Output: </strong><span id=\"example-output-1\">2</span>\n<strong>Explanation: </strong>We have the following two paths: \n1. (0,0),(0,1),(0,2),(0,3),(1,3),(1,2),(1,1),(1,0),(2,0),(2,1),(2,2)\n2. (0,0),(1,0),(2,0),(2,1),(1,1),(0,1),(0,2),(0,3),(1,3),(1,2),(2,2)</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[[1,0,0,0],[0,0,0,0],[0,0,0,2]]</span>\n<strong>Output: </strong><span id=\"example-output-2\">4</span>\n<strong>Explanation: </strong>We have the following four paths: \n1. (0,0),(0,1),(0,2),(0,3),(1,3),(1,2),(1,1),(1,0),(2,0),(2,1),(2,2),(2,3)\n2. (0,0),(0,1),(1,1),(1,0),(2,0),(2,1),(2,2),(1,2),(0,2),(0,3),(1,3),(2,3)\n3. (0,0),(1,0),(2,0),(2,1),(2,2),(1,2),(1,1),(0,1),(0,2),(0,3),(1,3),(2,3)\n4. (0,0),(1,0),(2,0),(2,1),(1,1),(0,1),(0,2),(0,3),(1,3),(1,2),(2,2),(2,3)</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">[[0,1],[2,0]]</span>\n<strong>Output: </strong><span id=\"example-output-3\">0</span>\n<strong>Explanation: </strong>\nThere is no path that walks over every empty square exactly once.\nNote that the starting and ending square can be anywhere in the grid.\n</pre>\n</div>\n</div>\n</div>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= grid.length * grid[0].length &lt;= 20</code></li>\n</ol>"
    },
    {
        "id": "20",
        "title": "Valid Parentheses",
        "slug": "valid-parentheses",
        "difficulty": "Easy",
        "likes": 3313,
        "dislikes": 155,
        "hints": [
            "An interesting property about a valid parenthesis expression is that a sub-expression of a valid expression should also be a valid expression. (Not every sub-expression) e.g.\r\n\r\n<pre>\r\n{ { } [ ] [ [ [ ] ] ] } is VALID expression\r\n          [ [ [ ] ] ]    is VALID sub-expression\r\n  { } [ ]                is VALID sub-expression\r\n</pre>\r\n\r\nCan we exploit this recursive structure somehow?",
            "What if whenever we encounter a matching pair of parenthesis in the expression, we simply remove it from the expression? This would keep on shortening the expression. e.g.\r\n\r\n<pre>\r\n{ { ( { } ) } }\r\n      |_|\r\n\r\n{ { (      ) } }\r\n    |______|\r\n\r\n{ {          } }\r\n  |__________|\r\n\r\n{                }\r\n|________________|\r\n\r\nVALID EXPRESSION!\r\n</pre>",
            "The <b>stack</b> data structure can come in handy here in representing this recursive structure of the problem. We can't really process this from the inside out because we don't have an idea about the overall structure. But, the stack can help us process this recursively i.e. from outside to inwards."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Generate Parentheses\", \"titleSlug\": \"generate-parentheses\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Longest Valid Parentheses\", \"titleSlug\": \"longest-valid-parentheses\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Remove Invalid Parentheses\", \"titleSlug\": \"remove-invalid-parentheses\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Check If Word Is Valid After Substitutions\", \"titleSlug\": \"check-if-word-is-valid-after-substitutions\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "570",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String",
            "Stack"
        ],
        "content": "<p>Given a string containing just the characters <code>&#39;(&#39;</code>, <code>&#39;)&#39;</code>, <code>&#39;{&#39;</code>, <code>&#39;}&#39;</code>, <code>&#39;[&#39;</code> and <code>&#39;]&#39;</code>, determine if the input string is valid.</p>\n\n<p>An input string is valid if:</p>\n\n<ol>\n\t<li>Open brackets must be closed by the same type of brackets.</li>\n\t<li>Open brackets must be closed in the correct order.</li>\n</ol>\n\n<p>Note that an empty string is&nbsp;also considered valid.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> &quot;()&quot;\n<strong>Output:</strong> true\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> &quot;()[]{}&quot;\n<strong>Output:</strong> true\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> &quot;(]&quot;\n<strong>Output:</strong> false\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input:</strong> &quot;([)]&quot;\n<strong>Output:</strong> false\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input:</strong> &quot;{[]}&quot;\n<strong>Output:</strong> true\n</pre>\n"
    },
    {
        "id": "514",
        "title": "Freedom Trail",
        "slug": "freedom-trail",
        "difficulty": "Hard",
        "likes": 310,
        "dislikes": 18,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Divide and Conquer",
            "Dynamic Programming",
            "Depth-first Search"
        ],
        "content": "<p>In the video game Fallout 4, the quest &quot;Road to Freedom&quot; requires players to reach a metal dial called the &quot;Freedom Trail Ring&quot;, and use the dial to spell a specific keyword in order to open the door.</p>\n\n<p>Given a string <b>ring</b>, which represents the code engraved on the outer ring and another string <b>key</b>, which represents the keyword needs to be spelled. You need to find the <b>minimum</b> number of steps in order to spell all the characters in the keyword.</p>\n\n<p>Initially, the first character of the <b>ring</b> is aligned at 12:00 direction. You need to spell all the characters in the string <b>key</b> one by one by rotating the ring clockwise or anticlockwise to make each character of the string <b>key</b> aligned at 12:00 direction and then by pressing the center button.</p>\n\n<p>At the stage of rotating the ring to spell the key character <b>key[i]</b>:</p>\n\n<ol>\n\t<li>You can rotate the <b>ring</b> clockwise or anticlockwise <b>one place</b>, which counts as 1 step. The final purpose of the rotation is to align one of the string <b>ring&#39;s</b> characters at the 12:00 direction, where this character must equal to the character <b>key[i]</b>.</li>\n\t<li>If the character <b>key[i]</b> has been aligned at the 12:00 direction, you need to press the center button to spell, which also counts as 1 step. After the pressing, you could begin to spell the next character in the key (next stage), otherwise, you&#39;ve finished all the spelling.</li>\n</ol>\n\n<p><b>Example:</b></p>\n\n<center><img src=\"./img/freedom-trail_1.jpg\" style=\"width: 26%;\" /></center>\n&nbsp;\n\n<pre>\n<b>Input:</b> ring = &quot;godding&quot;, key = &quot;gd&quot;\n<b>Output:</b> 4\n<b>Explanation:</b>\nFor the first key character &#39;g&#39;, since it is already in place, we just need 1 step to spell this character. \nFor the second key character &#39;d&#39;, we need to rotate the ring &quot;godding&quot; anticlockwise by two steps to make it become &quot;ddinggo&quot;.\nAlso, we need 1 more step for spelling.\nSo the final output is 4.\n</pre>\n\n<p><b>Note:</b></p>\n\n<ol>\n\t<li>Length of both ring and <b>key</b> will be in range 1 to 100.</li>\n\t<li>There are only lowercase letters in both strings and might be some duplcate characters in both strings.</li>\n\t<li>It&#39;s guaranteed that string <b>key</b> could always be spelled by rotating the string <b>ring</b>.</li>\n</ol>\n"
    },
    {
        "id": "810",
        "title": "Chalkboard XOR Game",
        "slug": "chalkboard-xor-game",
        "difficulty": "Hard",
        "likes": 44,
        "dislikes": 156,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "443",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math"
        ],
        "content": "<p>We are given non-negative integers nums[i] which are written on a chalkboard.&nbsp; Alice and Bob take turns erasing exactly one number from the chalkboard, with Alice starting first.&nbsp; If erasing a number causes&nbsp;the bitwise XOR of all the elements of the chalkboard to become&nbsp;0, then that player loses.&nbsp; (Also, we&#39;ll say the bitwise XOR of one element is that element itself, and the bitwise XOR of no elements is 0.)</p>\n\n<p>Also, if any player starts their turn with the bitwise XOR of all the elements of the chalkboard equal to 0, then that player wins.</p>\n\n<p>Return True if and only if Alice wins the game, assuming both players play optimally.</p>\n\n<pre>\n<strong>Example:</strong>\n<strong>Input:</strong> nums = [1, 1, 2]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> \nAlice has two choices: erase 1 or erase 2. \nIf she erases 1, the nums array becomes [1, 2]. The bitwise XOR of all the elements of the chalkboard is 1 XOR 2 = 3. Now Bob can remove any element he wants, because Alice will be the one to erase the last element and she will lose. \nIf Alice erases 2 first, now nums becomes [1, 1]. The bitwise XOR of all the elements of the chalkboard is 1 XOR 1 = 0. Alice will lose.\n\n</pre>\n\n<p><strong>Notes: </strong></p>\n\n<ul>\n\t<li><code>1 &lt;= N &lt;= 1000</code>.&nbsp;</li>\n\t<li><code>0 &lt;= nums[i] &lt;= 2^16</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "989",
        "title": "Add to Array-Form of Integer",
        "slug": "add-to-array-form-of-integer",
        "difficulty": "Easy",
        "likes": 163,
        "dislikes": 31,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Add Two Numbers\", \"titleSlug\": \"add-two-numbers\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Plus One\", \"titleSlug\": \"plus-one\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Add Binary\", \"titleSlug\": \"add-binary\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Add Strings\", \"titleSlug\": \"add-strings\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "688",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array"
        ],
        "content": "<p>For a non-negative integer <code>X</code>, the&nbsp;<em>array-form of <code>X</code></em>&nbsp;is an array of its digits in left to right order.&nbsp; For example, if <code>X = 1231</code>, then the array form is&nbsp;<code>[1,2,3,1]</code>.</p>\n\n<p>Given the array-form <code>A</code> of a non-negative&nbsp;integer <code>X</code>, return the array-form of the integer <code>X+K</code>.</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-1-1\">[1,2,0,0]</span>, K = 34\n<strong>Output: </strong><span id=\"example-output-1\">[1,2,3,4]</span>\n<strong>Explanation: </strong>1200 + 34 = 1234\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-2-1\">[2,7,4]</span>, K = <span id=\"example-input-2-2\">181</span>\n<strong>Output: </strong><span id=\"example-output-2\">[4,5,5]</span>\n<strong>Explanation: </strong>274 + 181 = 455\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-3-1\">[2,1,5]</span>, K = <span id=\"example-input-3-2\">806</span>\n<strong>Output: </strong><span id=\"example-output-3\">[1,0,2,1]</span>\n<strong>Explanation: </strong>215 + 806 = 1021\n</pre>\n\n<div>\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input: </strong>A = <span id=\"example-input-4-1\">[9,9,9,9,9,9,9,9,9,9]</span>, K = <span id=\"example-input-4-2\">1</span>\n<strong>Output: </strong><span id=\"example-output-4\">[1,0,0,0,0,0,0,0,0,0,0]</span>\n<strong>Explanation: </strong>9999999999 + 1 = 10000000000\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note\uff1a</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 10000</code></li>\n\t<li><code>0 &lt;= A[i] &lt;= 9</code></li>\n\t<li><code>0 &lt;= K &lt;= 10000</code></li>\n\t<li>If <code>A.length &gt; 1</code>, then <code>A[0] != 0</code></li>\n</ol>\n</div>\n</div>\n</div>\n</div>"
    },
    {
        "id": "148",
        "title": "Sort List",
        "slug": "sort-list",
        "difficulty": "Medium",
        "likes": 1693,
        "dislikes": 88,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Merge Two Sorted Lists\", \"titleSlug\": \"merge-two-sorted-lists\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Sort Colors\", \"titleSlug\": \"sort-colors\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Insertion Sort List\", \"titleSlug\": \"insertion-sort-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Linked List",
            "Sort"
        ],
        "content": "<p>Sort a linked list in <em>O</em>(<em>n</em> log <em>n</em>) time using constant space complexity.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> 4-&gt;2-&gt;1-&gt;3\n<strong>Output:</strong> 1-&gt;2-&gt;3-&gt;4\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> -1-&gt;5-&gt;3-&gt;4-&gt;0\n<strong>Output:</strong> -1-&gt;0-&gt;3-&gt;4-&gt;5</pre>\n"
    },
    {
        "id": "391",
        "title": "Perfect Rectangle",
        "slug": "perfect-rectangle",
        "difficulty": "Hard",
        "likes": 252,
        "dislikes": 53,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Line Sweep"
        ],
        "content": "<p>Given N axis-aligned rectangles where N &gt; 0, determine if they all together form an exact cover of a rectangular region.</p>\n\n<p>Each rectangle is represented as a bottom-left point and a top-right point. For example, a unit square is represented as [1,1,2,2]. (coordinate of bottom-left point is (1, 1) and top-right point is (2, 2)).</p>\n\n<div style=\"float:right\"><img src=\"./img/perfect-rectangle_1.gif\" style=\"width: 249px; height: 250px;\" /></div>\n\n<p><b>Example 1:</b></p>\n\n<pre>\nrectangles = [\n  [1,1,3,3],\n  [3,1,4,2],\n  [3,2,4,4],\n  [1,3,2,4],\n  [2,3,3,4]\n]\n\nReturn true. All 5 rectangles together form an exact cover of a rectangular region.\n</pre>\n\n<p>&nbsp;</p>\n\n<div style=\"clear:both\">&nbsp;</div>\n\n<div style=\"float:right\"><img src=\"./img/perfect-rectangle_2.gif\" style=\"width: 249px; height: 250px;\" /></div>\n\n<p><b>Example 2:</b></p>\n\n<pre>\nrectangles = [\n  [1,1,2,3],\n  [1,3,2,4],\n  [3,1,4,2],\n  [3,2,4,4]\n]\n\nReturn false. Because there is a gap between the two rectangular regions.\n</pre>\n\n<p>&nbsp;</p>\n\n<div style=\"clear:both\">&nbsp;</div>\n\n<div style=\"float:right\"><img src=\"./img/perfect-rectangle_3.gif\" style=\"width: 249px; height: 250px;\" /></div>\n\n<p><b>Example 3:</b></p>\n\n<pre>\nrectangles = [\n  [1,1,3,3],\n  [3,1,4,2],\n  [1,3,2,4],\n  [3,2,4,4]\n]\n\nReturn false. Because there is a gap in the top center.\n</pre>\n\n<p>&nbsp;</p>\n\n<div style=\"clear:both\">&nbsp;</div>\n\n<div style=\"float:right\"><img src=\"./img/perfect-rectangle_4.gif\" style=\"width: 249px; height: 250px;\" /></div>\n\n<p><b>Example 4:</b></p>\n\n<pre>\nrectangles = [\n  [1,1,3,3],\n  [3,1,4,2],\n  [1,3,2,4],\n  [2,2,4,4]\n]\n\nReturn false. Because two of the rectangles overlap with each other.\n</pre>\n\n<p>&nbsp;</p>"
    },
    {
        "id": "878",
        "title": "Nth Magical Number",
        "slug": "nth-magical-number",
        "difficulty": "Hard",
        "likes": 121,
        "dislikes": 42,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "522",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math",
            "Binary Search"
        ],
        "content": "<p>A positive integer&nbsp;is <em>magical</em>&nbsp;if it is divisible by either <font face=\"monospace\">A</font>&nbsp;or <font face=\"monospace\">B</font>.</p>\n\n<p>Return the <font face=\"monospace\">N</font>-th magical number.&nbsp; Since the answer may be very large, <strong>return it modulo </strong><code>10^9 + 7</code>.</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>N = <span id=\"example-input-1-1\">1</span>, A = <span id=\"example-input-1-2\">2</span>, B = <span id=\"example-input-1-3\">3</span>\n<strong>Output: </strong><span id=\"example-output-1\">2</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>N = <span id=\"example-input-2-1\">4</span>, A = <span id=\"example-input-2-2\">2</span>, B = <span id=\"example-input-2-3\">3</span>\n<strong>Output: </strong><span id=\"example-output-2\">6</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>N = <span id=\"example-input-3-1\">5</span>, A = <span id=\"example-input-3-2\">2</span>, B = <span id=\"example-input-3-3\">4</span>\n<strong>Output: </strong><span id=\"example-output-3\">10</span>\n</pre>\n\n<div>\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input: </strong>N = <span id=\"example-input-4-1\">3</span>, A = <span id=\"example-input-4-2\">6</span>, B = <span id=\"example-input-4-3\">4</span>\n<strong>Output: </strong><span id=\"example-output-4\">8</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= N&nbsp;&lt;= 10^9</code></li>\n\t<li><code>2 &lt;= A&nbsp;&lt;= 40000</code></li>\n\t<li><code>2 &lt;= B&nbsp;&lt;= 40000</code></li>\n</ol>\n</div>\n</div>\n</div>\n</div>\n"
    },
    {
        "id": "1016",
        "title": "Binary String With Substrings Representing 1 To N",
        "slug": "binary-string-with-substrings-representing-1-to-n",
        "difficulty": "Medium",
        "likes": 56,
        "dislikes": 199,
        "hints": [
            "We only need to check substrings of length at most 20, because 10^6 has 20 bits."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "String"
        ],
        "content": "<p>Given a binary string <code>S</code> (a string consisting only of &#39;0&#39; and &#39;1&#39;s) and a positive integer <code>N</code>, return true if and only if for every integer X from 1 to N, the binary representation of X is a substring of S.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>S = <span id=\"example-input-1-1\">&quot;0110&quot;</span>, N = <span id=\"example-input-1-2\">3</span>\n<strong>Output: </strong><span id=\"example-output-1\">true</span>\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>S = <span id=\"example-input-2-1\">&quot;0110&quot;</span>, N = <span id=\"example-input-2-2\">4</span>\n<strong>Output: </strong><span id=\"example-output-2\">false</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= S.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= N &lt;= 10^9</code></li>\n</ol>\n"
    },
    {
        "id": "525",
        "title": "Contiguous Array",
        "slug": "contiguous-array",
        "difficulty": "Medium",
        "likes": 781,
        "dislikes": 40,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Maximum Size Subarray Sum Equals k\", \"titleSlug\": \"maximum-size-subarray-sum-equals-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "94",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Hash Table"
        ],
        "content": "<p>Given a binary array, find the maximum length of a contiguous subarray with equal number of 0 and 1. </p>\n\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> [0,1]\n<b>Output:</b> 2\n<b>Explanation:</b> [0, 1] is the longest contiguous subarray with equal number of 0 and 1.\n</pre>\n</p>\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b> [0,1,0]\n<b>Output:</b> 2\n<b>Explanation:</b> [0, 1] (or [1, 0]) is a longest contiguous subarray with equal number of 0 and 1.\n</pre>\n</p>\n\n<p><b>Note:</b>\nThe length of the given binary array will not exceed 50,000.\n</p>"
    },
    {
        "id": "304",
        "title": "Range Sum Query 2D - Immutable",
        "slug": "range-sum-query-2d-immutable",
        "difficulty": "Medium",
        "likes": 547,
        "dislikes": 139,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Range Sum Query - Immutable\", \"titleSlug\": \"range-sum-query-immutable\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Range Sum Query 2D - Mutable\", \"titleSlug\": \"range-sum-query-2d-mutable\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "10",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>Given a 2D matrix <i>matrix</i>, find the sum of the elements inside the rectangle defined by its upper left corner (<i>row</i>1, <i>col</i>1) and lower right corner (<i>row</i>2, <i>col</i>2).</p>\n\n<p>\n<img src=\"./img/range-sum-query-2d-immutable_1.png\" border=\"0\" alt=\"Range Sum Query 2D\" /><br />\n<small>The above rectangle (with the red border) is defined by (row1, col1) = <b>(2, 1)</b> and (row2, col2) = <b>(4, 3)</b>, which contains sum = <b>8</b>.</small>\n</p>\n\n<p><b>Example:</b><br>\n<pre>\nGiven matrix = [\n  [3, 0, 1, 4, 2],\n  [5, 6, 3, 2, 1],\n  [1, 2, 0, 1, 5],\n  [4, 1, 0, 1, 7],\n  [1, 0, 3, 0, 5]\n]\n\nsumRegion(2, 1, 4, 3) -> 8\nsumRegion(1, 1, 2, 2) -> 11\nsumRegion(1, 2, 2, 4) -> 12\n</pre>\n</p>\n\n<p><b>Note:</b><br>\n<ol>\n<li>You may assume that the matrix does not change.</li>\n<li>There are many calls to <i>sumRegion</i> function.</li>\n<li>You may assume that <i>row</i>1 &le; <i>row</i>2 and <i>col</i>1 &le; <i>col</i>2.</li>\n</ol>\n</p>"
    },
    {
        "id": "1105",
        "title": "Filling Bookcase Shelves",
        "slug": "filling-bookcase-shelves",
        "difficulty": "Medium",
        "likes": 214,
        "dislikes": 11,
        "hints": [
            "Use dynamic programming:  dp(i) will be the answer to the problem for books[i:]."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>We have a sequence of <code>books</code>: the <code>i</code>-th book has thickness <code>books[i][0]</code> and height <code>books[i][1]</code>.</p>\n\n<p>We want to place these books <strong>in order</strong>&nbsp;onto bookcase shelves that have total width <code>shelf_width</code>.</p>\n\n<p>We choose&nbsp;some of the books to place on this shelf (such that the sum of their thickness is <code>&lt;= shelf_width</code>), then build another level of shelf of the bookcase so that the total height of the bookcase has increased by the maximum height of the books we just put down.&nbsp; We repeat this process until there are no more books to place.</p>\n\n<p>Note again that at each step of the above&nbsp;process, <u>the order of the books we place is the same order as the given sequence of books</u>.&nbsp; For example, if we have an ordered list of 5&nbsp;books, we might place the first and second book onto the first shelf, the third book on the second shelf, and the fourth and fifth book on the last shelf.</p>\n\n<p>Return the minimum possible height that the total bookshelf can be after placing shelves in this manner.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<img alt=\"\" src=\"./img/filling-bookcase-shelves_1.png\" style=\"width: 250px; height: 370px;\" />\n<pre>\n<strong>Input:</strong> books = [[1,1],[2,3],[2,3],[1,1],[1,1],[1,1],[1,2]], shelf_width = 4\n<strong>Output:</strong> 6\n<strong>Explanation:</strong>\nThe sum of the heights of the 3 shelves are 1 + 3 + 2 = 6.\nNotice that book number 2 does not have to be on the first shelf.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= books.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= books[i][0] &lt;= shelf_width &lt;= 1000</code></li>\n\t<li><code>1 &lt;= books[i][1] &lt;= 1000</code></li>\n</ul>\n"
    },
    {
        "id": "330",
        "title": "Patching Array",
        "slug": "patching-array",
        "difficulty": "Hard",
        "likes": 352,
        "dislikes": 62,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "71",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Greedy"
        ],
        "content": "<p>Given a sorted positive integer array <i>nums</i> and an integer <i>n</i>, add/patch elements to the array such that any number in range <code>[1, n]</code> inclusive can be formed by the sum of some elements in the array. Return the minimum number of patches required.</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<strong>Input: </strong><i>nums</i> = <code>[1,3]</code>, <i>n</i> = <code>6</code>\n<strong>Output: </strong>1 \n<strong>Explanation:</strong>\nCombinations of <i>nums</i> are <code>[1], [3], [1,3]</code>, which form possible sums of: <code>1, 3, 4</code>.\nNow if we add/patch <code>2</code> to <i>nums</i>, the combinations are: <code>[1], [2], [3], [1,3], [2,3], [1,2,3]</code>.\nPossible sums are <code>1, 2, 3, 4, 5, 6</code>, which now covers the range <code>[1, 6]</code>.\nSo we only need <code>1</code> patch.</pre>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<strong>Input: </strong><i>nums</i> = <code>[1,5,10]</code>, <i>n</i> = <code>20</code>\n<strong>Output:</strong> 2\n<strong>Explanation: </strong>The two patches can be <code>[2, 4]</code>.\n</pre>\n\n<p><b>Example 3:</b></p>\n\n<pre>\n<strong>Input: </strong><i>nums</i> = <code>[1,2,2]</code>, <i>n</i> = <code>5</code>\n<strong>Output:</strong> 0\n</pre>"
    },
    {
        "id": "581",
        "title": "Shortest Unsorted Continuous Subarray",
        "slug": "shortest-unsorted-continuous-subarray",
        "difficulty": "Easy",
        "likes": 1653,
        "dislikes": 74,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "136",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array"
        ],
        "content": "<p>Given an integer array, you need to find one <b>continuous subarray</b> that if you only sort this subarray in ascending order, then the whole array will be sorted in ascending order, too. </p> \n\n<p>You need to find the <b>shortest</b> such subarray and output its length.</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> [2, 6, 4, 8, 10, 9, 15]\n<b>Output:</b> 5\n<b>Explanation:</b> You need to sort [6, 4, 8, 10, 9] in ascending order to make the whole array sorted in ascending order.\n</pre>\n</p>\n\n<p><b>Note:</b><br>\n<ol>\n<li>Then length of the input array is in range [1, 10,000].</li>\n<li>The input array may contain duplicates, so ascending order here means <b><=</b>. </li>\n</ol>\n</p>"
    },
    {
        "id": "424",
        "title": "Longest Repeating Character Replacement",
        "slug": "longest-repeating-character-replacement",
        "difficulty": "Medium",
        "likes": 661,
        "dislikes": 51,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Longest Substring with At Most K Distinct Characters\", \"titleSlug\": \"longest-substring-with-at-most-k-distinct-characters\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Max Consecutive Ones III\", \"titleSlug\": \"max-consecutive-ones-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Two Pointers",
            "Sliding Window"
        ],
        "content": "<p>Given a string <code>s</code>&nbsp;that consists of only uppercase English letters, you can perform at most <code>k</code> operations on that string.</p>\n\n<p>In one operation, you can choose <strong>any</strong> character of the string and change it to any other uppercase English character.</p>\n\n<p>Find the length of the longest sub-string containing all repeating letters you can get after performing the above operations.</p>\n\n<p><b>Note:</b><br />\nBoth the string&#39;s length and <i>k</i> will not exceed 10<sup>4</sup>.</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b>\ns = &quot;ABAB&quot;, k = 2\n\n<b>Output:</b>\n4\n\n<b>Explanation:</b>\nReplace the two &#39;A&#39;s with two &#39;B&#39;s or vice versa.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input:</b>\ns = &quot;AABABBA&quot;, k = 1\n\n<b>Output:</b>\n4\n\n<b>Explanation:</b>\nReplace the one &#39;A&#39; in the middle with &#39;B&#39; and form &quot;AABBBBA&quot;.\nThe substring &quot;BBBB&quot; has the longest repeating letters, which is 4.\n</pre>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "21",
        "title": "Merge Two Sorted Lists",
        "slug": "merge-two-sorted-lists",
        "difficulty": "Easy",
        "likes": 2608,
        "dislikes": 377,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Merge k Sorted Lists\", \"titleSlug\": \"merge-k-sorted-lists\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Merge Sorted Array\", \"titleSlug\": \"merge-sorted-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Sort List\", \"titleSlug\": \"sort-list\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Shortest Word Distance II\", \"titleSlug\": \"shortest-word-distance-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "310",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Linked List"
        ],
        "content": "<p>Merge two sorted linked lists and return it as a new list. The new list should be made by splicing together the nodes of the first two lists.</p>\n\n<p><b>Example:</b>\n<pre>\n<b>Input:</b> 1->2->4, 1->3->4\n<b>Output:</b> 1->1->2->3->4->4\n</pre>\n</p>"
    },
    {
        "id": "749",
        "title": "Contain Virus",
        "slug": "contain-virus",
        "difficulty": "Hard",
        "likes": 51,
        "dislikes": 173,
        "hints": [
            "The implementation is long - we want to perfrom the following steps:\r\n\r\n* Find all viral regions (connected components), additionally for each region keeping track of the frontier (neighboring uncontaminated cells), and the perimeter of the region.\r\n\r\n* Disinfect the most viral region, adding it's perimeter to the answer.\r\n\r\n* Spread the virus in the remaining regions outward by 1 square."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "346",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Depth-first Search"
        ],
        "content": "<p>\nA virus is spreading rapidly, and your task is to quarantine the infected area by installing walls.\n</p><p>\nThe world is modeled as a 2-D array of cells, where <code>0</code> represents uninfected cells, and <code>1</code> represents cells contaminated with the virus.  A wall (and only one wall) can be installed <b>between any two 4-directionally adjacent cells</b>, on the shared boundary.\n</p><p>\nEvery night, the virus spreads to all neighboring cells in all four directions unless blocked by a wall.\nResources are limited. Each day, you can install walls around only one region -- the affected area (continuous block of infected cells) that threatens the most uninfected cells the following night. There will never be a tie.\n</p><p>\nCan you save the day? If so, what is the number of walls required? If not, and the world becomes fully infected, return the number of walls used.\n</p><p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> grid = \n[[0,1,0,0,0,0,0,1],\n [0,1,0,0,0,0,0,1],\n [0,0,0,0,0,0,0,1],\n [0,0,0,0,0,0,0,0]]\n<b>Output:</b> 10\n<b>Explanation:</b>\nThere are 2 contaminated regions.\nOn the first day, add 5 walls to quarantine the viral region on the left. The board after the virus spreads is:\n\n[[0,1,0,0,0,0,1,1],\n [0,1,0,0,0,0,1,1],\n [0,0,0,0,0,0,1,1],\n [0,0,0,0,0,0,0,1]]\n\nOn the second day, add 5 walls to quarantine the viral region on the right. The virus is fully contained.\n</pre>\n</p>\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b> grid = \n[[1,1,1],\n [1,0,1],\n [1,1,1]]\n<b>Output:</b> 4\n<b>Explanation:</b> Even though there is only one cell saved, there are 4 walls built.\nNotice that walls are only built on the shared boundary of two different cells.\n</pre>\n</p>\n\n<p><b>Example 3:</b><br />\n<pre>\n<b>Input:</b> grid = \n[[1,1,1,0,0,0,0,0,0],\n [1,0,1,0,1,1,1,1,1],\n [1,1,1,0,0,0,0,0,0]]\n<b>Output:</b> 13\n<b>Explanation:</b> The region on the left only builds two new walls.\n</pre>\n</p>\n\n<p><b>Note:</b><br>\n<ol>\n<li>The number of rows and columns of <code>grid</code> will each be in the range <code>[1, 50]</code>.</li>\n<li>Each <code>grid[i][j]</code> will be either <code>0</code> or <code>1</code>.</li>\n<li>Throughout the described process, there is always a contiguous viral region that will infect <b>strictly more</b> uncontaminated squares in the next round.</li>\n</ol>\n</p>"
    },
    {
        "id": "478",
        "title": "Generate Random Point in a Circle",
        "slug": "generate-random-point-in-a-circle",
        "difficulty": "Medium",
        "likes": 108,
        "dislikes": 178,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Random Point in Non-overlapping Rectangles\", \"titleSlug\": \"random-point-in-non-overlapping-rectangles\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "516",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math",
            "Random",
            "Rejection Sampling"
        ],
        "content": "<p>Given the radius and x-y positions of the center of a circle, write a function <code>randPoint</code>&nbsp;which&nbsp;generates a uniform random&nbsp;point in the circle.</p>\n\n<p>Note:</p>\n\n<ol>\n\t<li>input and output values are&nbsp;in&nbsp;<a href=\"https://www.webopedia.com/TERM/F/floating_point_number.html\" target=\"_blank\">floating-point</a>.</li>\n\t<li>radius and x-y position of the center of the circle is passed into the class constructor.</li>\n\t<li>a point on the circumference of the circle is considered to be&nbsp;in the circle.</li>\n\t<li><code>randPoint</code>&nbsp;returns&nbsp;a size 2 array containing x-position and y-position of the random point, in that order.</li>\n</ol>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: \n</strong><span id=\"example-input-1-1\">[&quot;Solution&quot;,&quot;randPoint&quot;,&quot;randPoint&quot;,&quot;randPoint&quot;]\n</span><span id=\"example-input-1-2\">[[1,0,0],[],[],[]]</span>\n<strong>Output: </strong><span id=\"example-output-1\">[null,[-0.72939,-0.65505],[-0.78502,-0.28626],[-0.83119,-0.19803]]</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: \n</strong><span id=\"example-input-2-1\">[&quot;Solution&quot;,&quot;randPoint&quot;,&quot;randPoint&quot;,&quot;randPoint&quot;]\n</span><span id=\"example-input-2-2\">[[10,5,-7.5],[],[],[]]</span>\n<strong>Output: </strong><span id=\"example-output-2\">[null,[11.52438,-8.33273],[2.46992,-16.21705],[11.13430,-12.42337]]</span></pre>\n</div>\n\n<p><strong>Explanation of Input Syntax:</strong></p>\n\n<p>The input is two lists:&nbsp;the subroutines called&nbsp;and their&nbsp;arguments.&nbsp;<code>Solution</code>&#39;s&nbsp;constructor has three arguments, the radius, x-position of the center, and y-position of the center of the circle. <code>randPoint</code> has no arguments.&nbsp;Arguments&nbsp;are&nbsp;always wrapped with a list, even if there aren&#39;t any.</p>\n</div>\n"
    },
    {
        "id": "558",
        "title": "Quad Tree Intersection",
        "slug": "quad-tree-intersection",
        "difficulty": "Easy",
        "likes": 52,
        "dislikes": 250,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [],
        "content": "<p>A quadtree is a tree data in which each internal node has exactly four children: <code>topLeft</code>, <code>topRight</code>, <code>bottomLeft</code> and <code>bottomRight</code>. Quad trees are often used to partition a two-dimensional space by recursively subdividing it into four quadrants or regions.</p>\n\n<p>We want to store True/False information in our quad tree. The quad tree is used to represent a <code>N * N</code> boolean grid. For each node, it will be subdivided into four children nodes <strong>until the values in the region it represents are all the same</strong>. Each node has another two boolean attributes : <code>isLeaf</code> and <code>val</code>. <code>isLeaf</code> is true if and only if the node is a leaf node. The <code>val</code> attribute for a leaf node contains the value of the region it represents.</p>\n\n<p>For example, below are two quad trees A and B:</p>\n\n<pre>\nA:\n+-------+-------+   T: true\n|       |       |   F: false\n|   T   |   T   |\n|       |       |\n+-------+-------+\n|       |       |\n|   F   |   F   |\n|       |       |\n+-------+-------+\ntopLeft: T\ntopRight: T\nbottomLeft: F\nbottomRight: F\n\nB:               \n+-------+---+---+\n|       | F | F |\n|   T   +---+---+\n|       | T | T |\n+-------+---+---+\n|       |       |\n|   T   |   F   |\n|       |       |\n+-------+-------+\ntopLeft: T\ntopRight:\n     topLeft: F\n     topRight: F\n     bottomLeft: T\n     bottomRight: T\nbottomLeft: T\nbottomRight: F\n</pre>\n\n<p>&nbsp;</p>\n\n<p>Your task is to implement a function that will take two quadtrees and return a quadtree that represents the logical OR (or union) of the two trees.</p>\n\n<pre>\nA:                 B:                 C (A or B):\n+-------+-------+  +-------+---+---+  +-------+-------+\n|       |       |  |       | F | F |  |       |       |\n|   T   |   T   |  |   T   +---+---+  |   T   |   T   |\n|       |       |  |       | T | T |  |       |       |\n+-------+-------+  +-------+---+---+  +-------+-------+\n|       |       |  |       |       |  |       |       |\n|   F   |   F   |  |   T   |   F   |  |   T   |   F   |\n|       |       |  |       |       |  |       |       |\n+-------+-------+  +-------+-------+  +-------+-------+\n</pre>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li>Both <code>A</code> and <code>B</code>&nbsp;represent grids of size <code>N * N</code>.</li>\n\t<li><code>N</code> is guaranteed to be a power of 2.</li>\n\t<li>If you want to know more about the quad tree, you can refer to its <a href=\"https://en.wikipedia.org/wiki/Quadtree\">wiki</a>.</li>\n\t<li>The logic OR operation is defined as this: &quot;A or B&quot; is true if <code>A is true</code>, or if <code>B is true</code>, or if <code>both A and B are true</code>.</li>\n</ol>\n"
    },
    {
        "id": "1089",
        "title": "Duplicate Zeros",
        "slug": "duplicate-zeros",
        "difficulty": "Easy",
        "likes": 140,
        "dislikes": 102,
        "hints": [
            "Iterate through the array backwards.  You know whether an integer should be written or not based on how many zeroes are remaining in the array."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Array"
        ],
        "content": "<p>Given a fixed length&nbsp;array <code>arr</code> of integers, duplicate each occurrence of zero, shifting the remaining elements to the right.</p>\n\n<p>Note that elements beyond the length of the original array are not written.</p>\n\n<p>Do the above modifications to the input array <strong>in place</strong>, do not return anything from your function.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[1,0,2,3,0,4,5,0]</span>\n<strong>Output: </strong>null\n<strong>Explanation: </strong>After calling your function, the <strong>input</strong> array is modified to: <span id=\"example-output-1\">[1,0,0,2,3,0,0,4]</span>\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[1,2,3]</span>\n<strong>Output: </strong>null\n<strong>Explanation: </strong>After calling your function, the <strong>input</strong> array is modified to: <span id=\"example-output-2\">[1,2,3]</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= arr.length &lt;= 10000</code></li>\n\t<li><code>0 &lt;= arr[i] &lt;= 9</code></li>\n</ol>"
    },
    {
        "id": "1003",
        "title": "Check If Word Is Valid After Substitutions",
        "slug": "check-if-word-is-valid-after-substitutions",
        "difficulty": "Medium",
        "likes": 101,
        "dislikes": 168,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Valid Parentheses\", \"titleSlug\": \"valid-parentheses\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "String",
            "Stack"
        ],
        "content": "<p>We are given that the string <code>&quot;abc&quot;</code> is valid.</p>\n\n<p>From any valid string <code>V</code>, we may split&nbsp;<code>V</code> into two pieces <code>X</code> and <code>Y</code> such that <code>X + Y</code> (<code>X</code> concatenated with <code>Y</code>) is equal to <code>V</code>.&nbsp; (<code>X</code> or <code>Y</code> may be empty.)&nbsp; Then, <code>X + &quot;abc&quot; + Y</code> is also valid.</p>\n\n<p>If for example <code>S = &quot;abc&quot;</code>, then examples of valid strings are: <code>&quot;abc&quot;, &quot;aabcbc&quot;, &quot;abcabc&quot;, &quot;abcabcababcc&quot;</code>.&nbsp; Examples of <strong>invalid</strong>&nbsp;strings are: <code>&quot;abccba&quot;</code>, <code>&quot;ab&quot;</code>, <code>&quot;cababc&quot;</code>, <code>&quot;bac&quot;</code>.</p>\n\n<p>Return <code>true</code> if and only if the given string&nbsp;<code>S</code>&nbsp;is valid.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">&quot;aabcbc&quot;</span>\n<strong>Output: </strong><span id=\"example-output-1\">true</span>\n<strong>Explanation: </strong>\nWe start with the valid string &quot;abc&quot;.\nThen we can insert another &quot;abc&quot; between &quot;a&quot; and &quot;bc&quot;, resulting in &quot;a&quot; + &quot;abc&quot; + &quot;bc&quot; which is &quot;aabcbc&quot;.\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">&quot;abcabcababcc&quot;</span>\n<strong>Output: </strong><span id=\"example-output-2\">true</span>\n<strong>Explanation: </strong>\n&quot;abcabcabc&quot; is valid after consecutive insertings of &quot;abc&quot;.\nThen we can insert &quot;abc&quot; before the last letter, resulting in &quot;abcabcab&quot; + &quot;abc&quot; + &quot;c&quot; which is &quot;abcabcababcc&quot;.\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">&quot;abccba&quot;</span>\n<strong>Output: </strong><span id=\"example-output-3\">false</span>\n</pre>\n\n<div>\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-4-1\">&quot;cababc&quot;</span>\n<strong>Output: </strong><span id=\"example-output-4\">false</span></pre>\n\n<p>&nbsp;</p>\n</div>\n</div>\n</div>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= S.length &lt;= 20000</code></li>\n\t<li><code>S[i]</code> is <code>&#39;a&#39;</code>, <code>&#39;b&#39;</code>, or <code>&#39;c&#39;</code></li>\n</ol>\n\n<div>\n<div>\n<div>\n<div>&nbsp;</div>\n</div>\n</div>\n</div>"
    },
    {
        "id": "557",
        "title": "Reverse Words in a String III",
        "slug": "reverse-words-in-a-string-iii",
        "difficulty": "Easy",
        "likes": 692,
        "dislikes": 71,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Reverse String II\", \"titleSlug\": \"reverse-string-ii\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "104",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String"
        ],
        "content": "<p>Given a string, you need to reverse the order of characters in each word within a sentence while still preserving whitespace and initial word order.</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> \"Let's take LeetCode contest\"\n<b>Output:</b> \"s'teL ekat edoCteeL tsetnoc\"\n</pre>\n</p>\n\n<p><b>Note:</b>\nIn the string, each word is separated by single space and there will not be any extra space in the string.\n</p>"
    },
    {
        "id": "1092",
        "title": "Shortest Common Supersequence ",
        "slug": "shortest-common-supersequence",
        "difficulty": "Hard",
        "likes": 173,
        "dislikes": 6,
        "hints": [
            "We can find the length of the longest common subsequence between str1[i:] and str2[j:] (for all (i, j)) by using dynamic programming.  We can use this information to recover the longest common supersequence."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Longest Common Subsequence\", \"titleSlug\": \"longest-common-subsequence\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>Given two strings <code>str1</code> and <code>str2</code>,&nbsp;return the shortest string that has both <code>str1</code>&nbsp;and <code>str2</code>&nbsp;as subsequences.&nbsp;&nbsp;If multiple answers exist, you may return any of them.</p>\n\n<p><em>(A string S is a subsequence of string T if deleting some number of characters from T (possibly 0, and the characters are chosen <u>anywhere</u> from T) results in the string S.)</em></p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>str1 = <span id=\"example-input-1-1\">&quot;abac&quot;</span>, str2 = <span id=\"example-input-1-2\">&quot;cab&quot;</span>\n<strong>Output: </strong><span id=\"example-output-1\">&quot;cabac&quot;</span>\n<strong>Explanation: </strong>\nstr1 = &quot;abac&quot; is a subsequence of &quot;cabac&quot; because we can delete the first &quot;c&quot;.\nstr2 = &quot;cab&quot; is a subsequence of &quot;cabac&quot; because we can delete the last &quot;ac&quot;.\nThe answer provided is the shortest such string that satisfies these properties.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= str1.length, str2.length &lt;= 1000</code></li>\n\t<li><code>str1</code> and <code>str2</code> consist of lowercase English letters.</li>\n</ol>\n"
    },
    {
        "id": "392",
        "title": "Is Subsequence",
        "slug": "is-subsequence",
        "difficulty": "Easy",
        "likes": 661,
        "dislikes": 141,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Number of Matching Subsequences\", \"titleSlug\": \"number-of-matching-subsequences\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Shortest Way to Form String\", \"titleSlug\": \"shortest-way-to-form-string\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Binary Search",
            "Dynamic Programming",
            "Greedy"
        ],
        "content": "<p>\nGiven a string <b>s</b> and a string <b>t</b>, check if <b>s</b> is subsequence of <b>t</b>.\n</p>\n\n<p>\nYou may assume that there is only lower case English letters in both <b>s</b> and <b>t</b>. <b>t</b> is potentially a very long (length ~= 500,000) string, and <b>s</b> is a short string (<=100).\n</p>\n\n<p>\nA subsequence of a string is a new string which is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (ie, <code>\"ace\"</code> is a subsequence of <code>\"abcde\"</code> while <code>\"aec\"</code> is not).\n</p>\n\n<p><b>Example 1:</b><br />\n<b>s</b> = <code>\"abc\"</code>, <b>t</b> = <code>\"ahbgdc\"</code>\n</p>\n<p>\nReturn <code>true</code>.\n</p>\n\n<p><b>Example 2:</b><br />\n<b>s</b> = <code>\"axc\"</code>, <b>t</b> = <code>\"ahbgdc\"</code>\n</p>\n<p>\nReturn <code>false</code>.\n</p>\n\n<p><b>Follow up:</b><br />\nIf there are lots of incoming S, say S1, S2, ... , Sk where k >= 1B, and you want to check one by one to see if T has its subsequence. In this scenario, how would you change your code?</p>\n\n<p><b>Credits:</b><br />Special thanks to <a href=\"https://leetcode.com/pbrother/\">@pbrother</a> for adding this problem and creating all test cases.</p>"
    },
    {
        "id": "420",
        "title": "Strong Password Checker",
        "slug": "strong-password-checker",
        "difficulty": "Hard",
        "likes": 101,
        "dislikes": 401,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [],
        "content": "<p>A password is considered strong if below conditions are all met:</p>\n\n<ol>\n<li> It has at least 6 characters and at most 20 characters. </li>\n<li> It must contain at least one lowercase letter, at least one uppercase letter, and at least one digit. </li>\n<li> It must NOT contain three repeating characters in a row (\"...aaa...\" is weak, but \"...aa...a...\" is strong, assuming other conditions are met). </li>\n</ol>\n\n<p>Write a function strongPasswordChecker(s), that takes a string s as input, and return the <b>MINIMUM</b> change required to make s a strong password. If s is already strong, return 0.</p>\n\n<p>Insertion, deletion or replace of any one character are all considered as one change.</p>"
    },
    {
        "id": "977",
        "title": "Squares of a Sorted Array",
        "slug": "squares-of-a-sorted-array",
        "difficulty": "Easy",
        "likes": 474,
        "dislikes": 51,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Merge Sorted Array\", \"titleSlug\": \"merge-sorted-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Sort Transformed Array\", \"titleSlug\": \"sort-transformed-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "671",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Two Pointers"
        ],
        "content": "<p>Given an array of integers <code>A</code>&nbsp;sorted in non-decreasing order,&nbsp;return an array of the squares of each number,&nbsp;also in sorted non-decreasing order.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[-4,-1,0,3,10]</span>\n<strong>Output: </strong><span id=\"example-output-1\">[0,1,9,16,100]</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[-7,-3,2,3,11]</span>\n<strong>Output: </strong><span id=\"example-output-2\">[4,9,9,49,121]</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong><span>Note:</span></strong></p>\n\n<ol>\n\t<li><code><span>1 &lt;= A.length &lt;= 10000</span></code></li>\n\t<li><code>-10000 &lt;= A[i] &lt;= 10000</code></li>\n\t<li><code>A</code>&nbsp;is sorted in non-decreasing order.</li>\n</ol>\n</div>\n</div>"
    },
    {
        "id": "363",
        "title": "Max Sum of Rectangle No Larger Than K",
        "slug": "max-sum-of-rectangle-no-larger-than-k",
        "difficulty": "Hard",
        "likes": 469,
        "dislikes": 36,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Binary Search",
            "Dynamic Programming",
            "Queue"
        ],
        "content": "<p>Given a non-empty 2D matrix <i>matrix</i> and an integer <i>k</i>, find the max sum of a rectangle in the <i>matrix</i> such that its sum is no larger than <i>k</i>.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input: </strong>matrix = <span id=\"example-input-1-1\">[[1,0,1],[0,-2,3]]</span>, k = <span id=\"example-input-1-2\">2</span>\n<strong>Output: </strong><span id=\"example-output-1\">2 \n<strong>Explanation:</strong></span>&nbsp;Because the sum of rectangle <code>[[0, 1], [-2, 3]]</code> is 2,\n&nbsp;            and 2 is the max number no larger than k (k = 2).</pre>\n\n<p><b>Note:</b></p>\n\n<ol>\n\t<li>The rectangle inside the matrix must have an area &gt; 0.</li>\n\t<li>What if the number of rows is much larger than the number of columns?</li>\n</ol>"
    },
    {
        "id": "869",
        "title": "Reordered Power of 2",
        "slug": "reordered-power-of-2",
        "difficulty": "Medium",
        "likes": 145,
        "dislikes": 67,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "508",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math"
        ],
        "content": "<p>Starting with a positive integer <code>N</code>, we reorder the digits in any order (including the original order) such that the leading digit is not zero.</p>\n\n<p>Return <code>true</code>&nbsp;if and only if we can do this in a way such that the resulting number is a power of 2.</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">1</span>\n<strong>Output: </strong><span id=\"example-output-1\">true</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">10</span>\n<strong>Output: </strong><span id=\"example-output-2\">false</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">16</span>\n<strong>Output: </strong><span id=\"example-output-3\">true</span>\n</pre>\n\n<div>\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-4-1\">24</span>\n<strong>Output: </strong><span id=\"example-output-4\">false</span>\n</pre>\n\n<div>\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-5-1\">46</span>\n<strong>Output: </strong><span id=\"example-output-5\">true</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= N &lt;= 10^9</code></li>\n</ol>\n</div>\n</div>\n</div>\n</div>\n</div>\n"
    },
    {
        "id": "470",
        "title": "Implement Rand10() Using Rand7()",
        "slug": "implement-rand10-using-rand7",
        "difficulty": "Medium",
        "likes": 234,
        "dislikes": 83,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "510",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Random",
            "Rejection Sampling"
        ],
        "content": "<p>Given a function <code>rand7</code> which generates a uniform random integer in the range 1 to 7, write a function <code>rand10</code>&nbsp;which generates a uniform random integer in the range 1 to 10.</p>\n\n<p>Do NOT use system&#39;s <code>Math.random()</code>.</p>\n\n<ol>\n</ol>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">1</span>\n<strong>Output: </strong><span id=\"example-output-1\">[7]</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">2</span>\n<strong>Output: </strong><span id=\"example-output-2\">[8,4]</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">3</span>\n<strong>Output: </strong><span id=\"example-output-3\">[8,1,10]</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>rand7</code> is predefined.</li>\n\t<li>Each testcase has one argument:&nbsp;<code>n</code>, the number of times that <code>rand10</code> is called.</li>\n</ol>\n\n<p>&nbsp;</p>\n\n<p><strong>Follow up:</strong></p>\n\n<ol>\n\t<li>What is the <a href=\"https://en.wikipedia.org/wiki/Expected_value\" target=\"_blank\">expected value</a>&nbsp;for the number of calls to&nbsp;<code>rand7()</code>&nbsp;function?</li>\n\t<li>Could you minimize the number of calls to <code>rand7()</code>?</li>\n</ol>\n</div>\n</div>\n</div>\n"
    },
    {
        "id": "1051",
        "title": "Height Checker",
        "slug": "height-checker",
        "difficulty": "Easy",
        "likes": 75,
        "dislikes": 596,
        "hints": [
            "Build the correct order of heights by sorting another array, then compare the two arrays."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Array"
        ],
        "content": "<p>Students are asked to stand in non-decreasing order of heights for an annual photo.</p>\n\n<p>Return the minimum number of students not standing in the right positions.&nbsp; (This is the number of students that must move in order for all students to be standing in non-decreasing order of height.)</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>[1,1,4,2,1,3]\n<strong>Output: </strong>3\n<strong>Explanation: </strong>\nStudents with heights 4, 3 and the last 1 are not standing in the right positions.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= heights.length &lt;= 100</code></li>\n\t<li><code>1 &lt;= heights[i] &lt;= 100</code></li>\n</ol>"
    },
    {
        "id": "596",
        "title": "Classes More Than 5 Students",
        "slug": "classes-more-than-5-students",
        "difficulty": "Easy",
        "likes": 165,
        "dislikes": 476,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "202",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [],
        "content": "<p>There is a table <code>courses</code> with columns: <b>student</b> and <b>class</b></p>\n\n<p>Please list out all classes which have more than or equal to 5 students.</p>\n\n<p>For example, the table:</p>\n\n<pre>\n+---------+------------+\n| student | class      |\n+---------+------------+\n| A       | Math       |\n| B       | English    |\n| C       | Math       |\n| D       | Biology    |\n| E       | Math       |\n| F       | Computer   |\n| G       | Math       |\n| H       | Math       |\n| I       | Math       |\n+---------+------------+\n</pre>\n\n<p>Should output:</p>\n\n<pre>\n+---------+\n| class   |\n+---------+\n| Math    |\n+---------+\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b><br />\nThe students should not be counted duplicate in each course.</p>\n"
    },
    {
        "id": "225",
        "title": "Implement Stack using Queues",
        "slug": "implement-stack-using-queues",
        "difficulty": "Easy",
        "likes": 382,
        "dislikes": 461,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Implement Queue using Stacks\", \"titleSlug\": \"implement-queue-using-stacks\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "41",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Stack",
            "Design"
        ],
        "content": "<p>Implement the following operations of a stack using queues.</p>\n\n<ul>\n\t<li>push(x) -- Push element x onto stack.</li>\n\t<li>pop() -- Removes the element on top of the stack.</li>\n\t<li>top() -- Get the top element.</li>\n\t<li>empty() -- Return whether the stack is empty.</li>\n</ul>\n\n<p><b>Example:</b></p>\n\n<pre>\nMyStack stack = new MyStack();\n\nstack.push(1);\nstack.push(2);  \nstack.top();   // returns 2\nstack.pop();   // returns 2\nstack.empty(); // returns false</pre>\n\n<p><b>Notes:</b></p>\n\n<ul>\n\t<li>You must use <i>only</i> standard operations of a queue -- which means only <code>push to back</code>, <code>peek/pop from front</code>, <code>size</code>, and <code>is empty</code> operations are valid.</li>\n\t<li>Depending on your language, queue may not be supported natively. You may simulate a queue by using a list or deque (double-ended queue), as long as you use only standard operations of a queue.</li>\n\t<li>You may assume that all operations are valid (for example, no pop or top operations will be called on an empty stack).</li>\n</ul>\n"
    },
    {
        "id": "950",
        "title": "Reveal Cards In Increasing Order",
        "slug": "reveal-cards-in-increasing-order",
        "difficulty": "Medium",
        "likes": 430,
        "dislikes": 85,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "632",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array"
        ],
        "content": "<p>In a deck of cards, every card has a unique integer.&nbsp; You can order the deck in&nbsp;any order you want.</p>\n\n<p>Initially, all the cards start face down (unrevealed) in one deck.</p>\n\n<p>Now, you do the following steps repeatedly, until all cards are revealed:</p>\n\n<ol>\n\t<li>Take the top card of the deck, reveal it, and take it out of the deck.</li>\n\t<li>If there are still cards in the deck, put the next top card of the deck at&nbsp;the bottom of the deck.</li>\n\t<li>If there are still unrevealed cards, go back to step 1.&nbsp; Otherwise, stop.</li>\n</ol>\n\n<p>Return an ordering of the deck that would reveal the cards&nbsp;in <strong>increasing order.</strong></p>\n\n<p>The first entry in the answer is considered to be the top of the deck.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[17,13,11,2,3,5,7]</span>\n<strong>Output: </strong><span id=\"example-output-1\">[2,13,3,11,5,17,7]</span>\n<strong>Explanation: </strong>\nWe get the deck in the order [17,13,11,2,3,5,7] (this order doesn't matter), and reorder it.\nAfter reordering, the deck starts as [2,13,3,11,5,17,7], where 2 is the top of the deck.\nWe reveal 2, and move 13 to the bottom.  The deck is now [3,11,5,17,7,13].\nWe reveal 3, and move 11 to the bottom.  The deck is now [5,17,7,13,11].\nWe reveal 5, and move 17 to the bottom.  The deck is now [7,13,11,17].\nWe reveal 7, and move 13 to the bottom.  The deck is now [11,17,13].\nWe reveal 11, and move 17 to the bottom.  The deck is now [13,17].\nWe reveal 13, and move 17 to the bottom.  The deck is now [17].\nWe reveal 17.\nSince all the cards revealed are in increasing order, the answer is correct.\n</pre>\n\n<div>\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= A.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= A[i] &lt;= 10^6</code></li>\n\t<li><code>A[i] != A[j]</code>&nbsp;for all&nbsp;<code>i != j</code></li>\n</ol>\n</div>\n</div>\n"
    },
    {
        "id": "1044",
        "title": "Longest Duplicate Substring",
        "slug": "longest-duplicate-substring",
        "difficulty": "Hard",
        "likes": 94,
        "dislikes": 77,
        "hints": [
            "Binary search for the length of the answer.  (If there's an answer of length 10, then there are answers of length 9, 8, 7, ...)",
            "To check whether an answer of length K exists, we can use Rabin-Karp 's algorithm."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "742",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Hash Table",
            "Binary Search"
        ],
        "content": "<p>Given a string <code>S</code>, consider all <em>duplicated substrings</em>: (contiguous) substrings of S that occur 2 or more times.&nbsp; (The occurrences&nbsp;may overlap.)</p>\n\n<p>Return <strong>any</strong> duplicated&nbsp;substring that has the longest possible length.&nbsp; (If <code>S</code> does not have a duplicated substring, the answer is <code>&quot;&quot;</code>.)</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">&quot;banana&quot;</span>\n<strong>Output: </strong><span id=\"example-output-1\">&quot;ana&quot;</span>\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">&quot;abcd&quot;</span>\n<strong>Output: </strong><span id=\"example-output-2\">&quot;&quot;</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>2 &lt;= S.length &lt;= 10^5</code></li>\n\t<li><code>S</code> consists of lowercase English letters.</li>\n</ol>"
    },
    {
        "id": "401",
        "title": "Binary Watch",
        "slug": "binary-watch",
        "difficulty": "Easy",
        "likes": 401,
        "dislikes": 681,
        "hints": [
            "Simplify by seeking for solutions that involve comparing bit counts.",
            "Consider calculating all possible times for comparison purposes."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Letter Combinations of a Phone Number\", \"titleSlug\": \"letter-combinations-of-a-phone-number\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Number of 1 Bits\", \"titleSlug\": \"number-of-1-bits\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Backtracking",
            "Bit Manipulation"
        ],
        "content": "<p>A binary watch has 4 LEDs on the top which represent the <b>hours</b> (<b>0-11</b>), and the 6 LEDs on the bottom represent the <b>minutes</b> (<b>0-59</b>).</p>\n<p>Each LED represents a zero or one, with the least significant bit on the right.</p>\n<img src=\"./img/binary-watch_1.jpg\" height=\"300\" />\n<p>For example, the above binary watch reads \"3:25\".</p>\n\n<p>Given a non-negative integer <i>n</i> which represents the number of LEDs that are currently on, return all possible times the watch could represent.</p>\n\n<p><b>Example:</b>\n<pre>Input: n = 1<br>Return: [\"1:00\", \"2:00\", \"4:00\", \"8:00\", \"0:01\", \"0:02\", \"0:04\", \"0:08\", \"0:16\", \"0:32\"]</pre>\n</p>\n\n<p><b>Note:</b><br />\n<ul>\n<li>The order of output does not matter.</li>\n<li>The hour must not contain a leading zero, for example \"01:00\" is not valid, it should be \"1:00\".</li>\n<li>The minute must be consist of two digits and may contain a leading zero, for example \"10:2\" is not valid, it should be \"10:02\".</li>\n</ul>\n</p>"
    },
    {
        "id": "303",
        "title": "Range Sum Query - Immutable",
        "slug": "range-sum-query-immutable",
        "difficulty": "Easy",
        "likes": 537,
        "dislikes": 836,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Range Sum Query 2D - Immutable\", \"titleSlug\": \"range-sum-query-2d-immutable\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Range Sum Query - Mutable\", \"titleSlug\": \"range-sum-query-mutable\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Maximum Size Subarray Sum Equals k\", \"titleSlug\": \"maximum-size-subarray-sum-equals-k\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "9",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>Given an integer array <i>nums</i>, find the sum of the elements between indices <i>i</i> and <i>j</i> (<i>i</i> &le; <i>j</i>), inclusive.</p>\n\n<p><b>Example:</b><br>\n<pre>\nGiven nums = [-2, 0, 3, -5, 2, -1]\n\nsumRange(0, 2) -> 1\nsumRange(2, 5) -> -1\nsumRange(0, 5) -> -3\n</pre>\n</p>\n\n<p><b>Note:</b><br>\n<ol>\n<li>You may assume that the array does not change.</li>\n<li>There are many calls to <i>sumRange</i> function.</li>\n</ol>\n</p>"
    },
    {
        "id": "399",
        "title": "Evaluate Division",
        "slug": "evaluate-division",
        "difficulty": "Medium",
        "likes": 1522,
        "dislikes": 120,
        "hints": [
            "Do you recognize this as a graph problem?"
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Union Find",
            "Graph"
        ],
        "content": "<p>Equations are given in the format <code>A / B = k</code>, where <code>A</code> and <code>B</code> are variables represented as strings, and <code>k</code> is a real number (floating point number). Given some queries, return the answers. If the answer does not exist, return <code>-1.0</code>.</p>\n\n<p><b>Example:</b><br />\nGiven <code> a / b = 2.0, b / c = 3.0.</code><br />\nqueries are: <code> a / c = ?, b / a = ?, a / e = ?, a / a = ?, x / x = ? .</code><br />\nreturn <code> [6.0, 0.5, -1.0, 1.0, -1.0 ].</code></p>\n\n<p>The input is: <code> vector&lt;pair&lt;string, string&gt;&gt; equations, vector&lt;double&gt;&amp; values, vector&lt;pair&lt;string, string&gt;&gt; queries </code>, where <code>equations.size() == values.size()</code>, and the values are positive. This represents the equations. Return <code> vector&lt;double&gt;</code>.</p>\n\n<p>According to the example above:</p>\n\n<pre>\nequations = [ [&quot;a&quot;, &quot;b&quot;], [&quot;b&quot;, &quot;c&quot;] ],\nvalues = [2.0, 3.0],\nqueries = [ [&quot;a&quot;, &quot;c&quot;], [&quot;b&quot;, &quot;a&quot;], [&quot;a&quot;, &quot;e&quot;], [&quot;a&quot;, &quot;a&quot;], [&quot;x&quot;, &quot;x&quot;] ]. </pre>\n\n<p>&nbsp;</p>\n\n<p>The input is always valid. You may assume that evaluating the queries will result in no division by zero and there is no contradiction.</p>\n"
    },
    {
        "id": "33",
        "title": "Search in Rotated Sorted Array",
        "slug": "search-in-rotated-sorted-array",
        "difficulty": "Medium",
        "likes": 2888,
        "dislikes": 353,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Search in Rotated Sorted Array II\", \"titleSlug\": \"search-in-rotated-sorted-array-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find Minimum in Rotated Sorted Array\", \"titleSlug\": \"find-minimum-in-rotated-sorted-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "662",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Binary Search"
        ],
        "content": "<p>Suppose an array sorted in ascending order is rotated at some pivot unknown to you beforehand.</p>\n\n<p>(i.e., <code>[0,1,2,4,5,6,7]</code> might become <code>[4,5,6,7,0,1,2]</code>).</p>\n\n<p>You are given a target value to search. If found in the array return its index, otherwise return <code>-1</code>.</p>\n\n<p>You may assume no duplicate exists in the array.</p>\n\n<p>Your algorithm&#39;s runtime complexity must be in the order of&nbsp;<em>O</em>(log&nbsp;<em>n</em>).</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [<code>4,5,6,7,0,1,2]</code>, target = 0\n<strong>Output:</strong> 4\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> nums = [<code>4,5,6,7,0,1,2]</code>, target = 3\n<strong>Output:</strong> -1</pre>\n"
    },
    {
        "id": "307",
        "title": "Range Sum Query - Mutable",
        "slug": "range-sum-query-mutable",
        "difficulty": "Medium",
        "likes": 803,
        "dislikes": 66,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Range Sum Query - Immutable\", \"titleSlug\": \"range-sum-query-immutable\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Range Sum Query 2D - Mutable\", \"titleSlug\": \"range-sum-query-2d-mutable\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "29",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Binary Indexed Tree",
            "Segment Tree"
        ],
        "content": "<p>Given an integer array <i>nums</i>, find the sum of the elements between indices <i>i</i> and <i>j</i> (<i>i</i> &le; <i>j</i>), inclusive.</p>\n\n<p>The <i>update(i, val)</i> function modifies <i>nums</i> by updating the element at index <i>i</i> to <i>val</i>.</p>\n\n<p><b>Example:</b></p>\n\n<pre>\nGiven nums = [1, 3, 5]\n\nsumRange(0, 2) -&gt; 9\nupdate(1, 2)\nsumRange(0, 2) -&gt; 8\n</pre>\n\n<p><b>Note:</b></p>\n\n<ol>\n\t<li>The array is only modifiable by the <i>update</i> function.</li>\n\t<li>You may assume the number of calls to <i>update</i> and <i>sumRange</i> function is distributed evenly.</li>\n</ol>\n"
    },
    {
        "id": "894",
        "title": "All Possible Full Binary Trees",
        "slug": "all-possible-full-binary-trees",
        "difficulty": "Medium",
        "likes": 493,
        "dislikes": 47,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "536",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree",
            "Recursion"
        ],
        "content": "<p>A <em>full binary tree</em>&nbsp;is a binary tree where each node has exactly 0 or 2&nbsp;children.</p>\n\n<p>Return a list of all possible full binary trees with <code>N</code> nodes.&nbsp; Each element of the answer is the root node of one possible tree.</p>\n\n<p>Each <code>node</code> of each&nbsp;tree in the answer <strong>must</strong> have <code>node.val = 0</code>.</p>\n\n<p>You may return the final list of trees in any order.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">7</span>\n<strong>Output: </strong><span id=\"example-output-1\">[[0,0,0,null,null,0,0,null,null,0,0],[0,0,0,null,null,0,0,0,0],[0,0,0,0,0,0,0],[0,0,0,0,0,null,null,null,null,0,0],[0,0,0,0,0,null,null,0,0]]</span>\n<strong>Explanation:</strong>\n<img alt=\"\" src=\"./img/all-possible-full-binary-trees_1.png\" style=\"width: 700px; height: 400px;\" />\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= N &lt;= 20</code></li>\n</ul>\n"
    },
    {
        "id": "416",
        "title": "Partition Equal Subset Sum",
        "slug": "partition-equal-subset-sum",
        "difficulty": "Medium",
        "likes": 1443,
        "dislikes": 40,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Partition to K Equal Sum Subsets\", \"titleSlug\": \"partition-to-k-equal-sum-subsets\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>Given a <b>non-empty</b> array containing <b>only positive integers</b>, find if the array can be partitioned into two subsets such that the sum of elements in both subsets is equal.</p>\n\n<p><b>Note:</b></p>\n\n<ol>\n\t<li>Each of the array element will not exceed 100.</li>\n\t<li>The array size will not exceed 200.</li>\n</ol>\n\n<p>&nbsp;</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\nInput: [1, 5, 11, 5]\n\nOutput: true\n\nExplanation: The array can be partitioned as [1, 5, 5] and [11].\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Example 2:</b></p>\n\n<pre>\nInput: [1, 2, 3, 5]\n\nOutput: false\n\nExplanation: The array cannot be partitioned into equal sum subsets.\n</pre>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "1108",
        "title": "Defanging an IP Address",
        "slug": "defanging-an-ip-address",
        "difficulty": "Easy",
        "likes": 93,
        "dislikes": 311,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "String"
        ],
        "content": "<p>Given a valid (IPv4) IP <code>address</code>, return a defanged version of that IP address.</p>\n\n<p>A <em>defanged&nbsp;IP address</em>&nbsp;replaces every period <code>&quot;.&quot;</code> with <code>&quot;[.]&quot;</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> address = \"1.1.1.1\"\n<strong>Output:</strong> \"1[.]1[.]1[.]1\"\n</pre><p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> address = \"255.100.50.0\"\n<strong>Output:</strong> \"255[.]100[.]50[.]0\"\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>The given <code>address</code> is a valid IPv4 address.</li>\n</ul>"
    },
    {
        "id": "355",
        "title": "Design Twitter",
        "slug": "design-twitter",
        "difficulty": "Medium",
        "likes": 559,
        "dislikes": 144,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Hash Table",
            "Heap",
            "Design"
        ],
        "content": "<p>Design a simplified version of Twitter where users can post tweets, follow/unfollow another user and is able to see the 10 most recent tweets in the user's news feed. Your design should support the following methods:</p>\n\n<p>\n<ol>\n<li><b>postTweet(userId, tweetId)</b>: Compose a new tweet.</li>\n<li><b>getNewsFeed(userId)</b>: Retrieve the 10 most recent tweet ids in the user's news feed. Each item in the news feed must be posted by users who the user followed or by the user herself. Tweets must be ordered from most recent to least recent.</li>\n<li><b>follow(followerId, followeeId)</b>: Follower follows a followee.</li>\n<li><b>unfollow(followerId, followeeId)</b>: Follower unfollows a followee.</li>\n</ol>\n</p>\n\n<p><b>Example:</b>\n<pre>\nTwitter twitter = new Twitter();\n\n// User 1 posts a new tweet (id = 5).\ntwitter.postTweet(1, 5);\n\n// User 1's news feed should return a list with 1 tweet id -> [5].\ntwitter.getNewsFeed(1);\n\n// User 1 follows user 2.\ntwitter.follow(1, 2);\n\n// User 2 posts a new tweet (id = 6).\ntwitter.postTweet(2, 6);\n\n// User 1's news feed should return a list with 2 tweet ids -> [6, 5].\n// Tweet id 6 should precede tweet id 5 because it is posted after tweet id 5.\ntwitter.getNewsFeed(1);\n\n// User 1 unfollows user 2.\ntwitter.unfollow(1, 2);\n\n// User 1's news feed should return a list with 1 tweet id -> [5],\n// since user 1 is no longer following user 2.\ntwitter.getNewsFeed(1);\n</pre>\n</p>"
    },
    {
        "id": "102",
        "title": "Binary Tree Level Order Traversal",
        "slug": "binary-tree-level-order-traversal",
        "difficulty": "Medium",
        "likes": 1745,
        "dislikes": 45,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Binary Tree Zigzag Level Order Traversal\", \"titleSlug\": \"binary-tree-zigzag-level-order-traversal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Binary Tree Level Order Traversal II\", \"titleSlug\": \"binary-tree-level-order-traversal-ii\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Minimum Depth of Binary Tree\", \"titleSlug\": \"minimum-depth-of-binary-tree\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Binary Tree Vertical Order Traversal\", \"titleSlug\": \"binary-tree-vertical-order-traversal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Average of Levels in Binary Tree\", \"titleSlug\": \"average-of-levels-in-binary-tree\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"N-ary Tree Level Order Traversal\", \"titleSlug\": \"n-ary-tree-level-order-traversal\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Cousins in Binary Tree\", \"titleSlug\": \"cousins-in-binary-tree\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "708",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree",
            "Breadth-first Search"
        ],
        "content": "<p>Given a binary tree, return the <i>level order</i> traversal of its nodes' values. (ie, from left to right, level by level).</p>\n\n<p>\nFor example:<br />\nGiven binary tree <code>[3,9,20,null,null,15,7]</code>,<br />\n<pre>\n    3\n   / \\\n  9  20\n    /  \\\n   15   7\n</pre>\n</p>\n<p>\nreturn its level order traversal as:<br />\n<pre>\n[\n  [3],\n  [9,20],\n  [15,7]\n]\n</pre>\n</p>"
    },
    {
        "id": "72",
        "title": "Edit Distance",
        "slug": "edit-distance",
        "difficulty": "Hard",
        "likes": 2436,
        "dislikes": 37,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"One Edit Distance\", \"titleSlug\": \"one-edit-distance\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Delete Operation for Two Strings\", \"titleSlug\": \"delete-operation-for-two-strings\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum ASCII Delete Sum for Two Strings\", \"titleSlug\": \"minimum-ascii-delete-sum-for-two-strings\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Uncrossed Lines\", \"titleSlug\": \"uncrossed-lines\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "622",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String",
            "Dynamic Programming"
        ],
        "content": "<p>Given two words <em>word1</em> and <em>word2</em>, find the minimum number of operations required to convert <em>word1</em> to <em>word2</em>.</p>\n\n<p>You have the following 3 operations permitted on a word:</p>\n\n<ol>\n\t<li>Insert a character</li>\n\t<li>Delete a character</li>\n\t<li>Replace a character</li>\n</ol>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> word1 = &quot;horse&quot;, word2 = &quot;ros&quot;\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> \nhorse -&gt; rorse (replace &#39;h&#39; with &#39;r&#39;)\nrorse -&gt; rose (remove &#39;r&#39;)\nrose -&gt; ros (remove &#39;e&#39;)\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> word1 = &quot;intention&quot;, word2 = &quot;execution&quot;\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> \nintention -&gt; inention (remove &#39;t&#39;)\ninention -&gt; enention (replace &#39;i&#39; with &#39;e&#39;)\nenention -&gt; exention (replace &#39;n&#39; with &#39;x&#39;)\nexention -&gt; exection (replace &#39;n&#39; with &#39;c&#39;)\nexection -&gt; execution (insert &#39;u&#39;)\n</pre>\n"
    },
    {
        "id": "794",
        "title": "Valid Tic-Tac-Toe State",
        "slug": "valid-tic-tac-toe-state",
        "difficulty": "Medium",
        "likes": 112,
        "dislikes": 370,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Design Tic-Tac-Toe\", \"titleSlug\": \"design-tic-tac-toe\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "425",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math",
            "Recursion"
        ],
        "content": "<p>A Tic-Tac-Toe board is given as a string array <code>board</code>. Return True if and only if it is possible to reach this board position during the course of a valid tic-tac-toe game.</p>\n\n<p>The <code>board</code> is a 3 x 3 array, and consists of characters <code>&quot; &quot;</code>, <code>&quot;X&quot;</code>, and <code>&quot;O&quot;</code>.&nbsp; The &quot; &quot; character represents an empty square.</p>\n\n<p>Here are the rules of Tic-Tac-Toe:</p>\n\n<ul>\n\t<li>Players take turns placing characters into empty squares (&quot; &quot;).</li>\n\t<li>The first player always places &quot;X&quot; characters, while the second player always places &quot;O&quot; characters.</li>\n\t<li>&quot;X&quot; and &quot;O&quot; characters are always placed into empty squares, never filled ones.</li>\n\t<li>The game ends when there are 3 of the same (non-empty) character filling any row, column, or diagonal.</li>\n\t<li>The game also ends if all squares are non-empty.</li>\n\t<li>No more moves can be played if the game is over.</li>\n</ul>\n\n<pre>\n<strong>Example 1:</strong>\n<strong>Input:</strong> board = [&quot;O&nbsp; &quot;, &quot;&nbsp; &nbsp;&quot;, &quot;&nbsp; &nbsp;&quot;]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> The first player always plays &quot;X&quot;.\n\n<strong>Example 2:</strong>\n<strong>Input:</strong> board = [&quot;XOX&quot;, &quot; X &quot;, &quot;   &quot;]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> Players take turns making moves.\n\n<strong>Example 3:</strong>\n<strong>Input:</strong> board = [&quot;XXX&quot;, &quot;   &quot;, &quot;OOO&quot;]\n<strong>Output:</strong> false\n\n<strong>Example 4:</strong>\n<strong>Input:</strong> board = [&quot;XOX&quot;, &quot;O O&quot;, &quot;XOX&quot;]\n<strong>Output:</strong> true\n</pre>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li><code>board</code> is a length-3 array of strings, where each string <code>board[i]</code> has length 3.</li>\n\t<li>Each <code>board[i][j]</code> is a character in the set <code>{&quot; &quot;, &quot;X&quot;, &quot;O&quot;}</code>.</li>\n</ul>\n"
    },
    {
        "id": "600",
        "title": "Non-negative Integers without Consecutive Ones",
        "slug": "non-negative-integers-without-consecutive-ones",
        "difficulty": "Hard",
        "likes": 251,
        "dislikes": 65,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"House Robber\", \"titleSlug\": \"house-robber\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"House Robber II\", \"titleSlug\": \"house-robber-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Ones and Zeroes\", \"titleSlug\": \"ones-and-zeroes\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "148",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>Given a positive integer n, find the number of <b>non-negative</b> integers less than or equal to n, whose binary representations do NOT contain <b>consecutive ones</b>.</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> 5\n<b>Output:</b> 5\n<b>Explanation:</b> \nHere are the non-negative integers <= 5 with their corresponding binary representations:\n0 : 0\n1 : 1\n2 : 10\n3 : 11\n4 : 100\n5 : 101\nAmong them, only integer 3 disobeys the rule (two consecutive ones) and the other 5 satisfy the rule. \n</pre>\n</p>\n\n<p><b>Note:</b>\n1 <= n <= 10<sup>9</sup>\n</p>\n"
    },
    {
        "id": "1124",
        "title": "Longest Well-Performing Interval",
        "slug": "longest-well-performing-interval",
        "difficulty": "Medium",
        "likes": 191,
        "dislikes": 41,
        "hints": [
            "Make a new array A of +1/-1s corresponding to if hours[i] is > 8 or not. The goal is to find the longest subarray with positive sum.",
            "Using prefix sums (PrefixSum[i+1] = A[0] + A[1] + ... + A[i]), you need to find for each j, the smallest i < j with PrefixSum[i] + 1 == PrefixSum[j]."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Stack"
        ],
        "content": "<p>We are given <code>hours</code>, a list of the number of hours&nbsp;worked per day for a given employee.</p>\n\n<p>A day is considered to be a <em>tiring day</em> if and only if the number of hours worked is (strictly) greater than <code>8</code>.</p>\n\n<p>A <em>well-performing interval</em> is an interval of days for which the number of tiring days is strictly larger than the number of non-tiring days.</p>\n\n<p>Return the length of the longest well-performing interval.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> hours = [9,9,6,0,6,6,9]\n<strong>Output:</strong> 3\n<strong>Explanation: </strong>The longest well-performing interval is [9,9,6].\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= hours.length &lt;= 10000</code></li>\n\t<li><code>0 &lt;= hours[i] &lt;= 16</code></li>\n</ul>\n"
    },
    {
        "id": "319",
        "title": "Bulb Switcher",
        "slug": "bulb-switcher",
        "difficulty": "Medium",
        "likes": 312,
        "dislikes": 699,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Bulb Switcher II\", \"titleSlug\": \"bulb-switcher-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Minimum Number of K Consecutive Bit Flips\", \"titleSlug\": \"minimum-number-of-k-consecutive-bit-flips\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Math",
            "Brainteaser"
        ],
        "content": "<p>There are <i>n</i> bulbs that are initially off. You first turn on all the bulbs. Then, you turn off every second bulb. On the third round, you toggle every third bulb (turning on if it&#39;s off or turning off if it&#39;s on). For the <i>i</i>-th round, you toggle every <i>i</i> bulb. For the <i>n</i>-th round, you only toggle the last bulb. Find how many bulbs are on after <i>n</i> rounds.</p>\n\n<p><b>Example:</b></p>\n\n<pre>\n<strong>Input: </strong>3\n<strong>Output:</strong> 1 \n<strong>Explanation:</strong> \nAt first, the three bulbs are <b>[off, off, off]</b>.\nAfter first round, the three bulbs are <b>[on, on, on]</b>.\nAfter second round, the three bulbs are <b>[on, off, on]</b>.\nAfter third round, the three bulbs are <b>[on, off, off]</b>. \n\nSo you should return 1, because there is only one bulb is on.\n</pre>\n"
    },
    {
        "id": "125",
        "title": "Valid Palindrome",
        "slug": "valid-palindrome",
        "difficulty": "Easy",
        "likes": 682,
        "dislikes": 2011,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Palindrome Linked List\", \"titleSlug\": \"palindrome-linked-list\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Valid Palindrome II\", \"titleSlug\": \"valid-palindrome-ii\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Two Pointers",
            "String"
        ],
        "content": "<p>Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.</p>\n\n<p><strong>Note:</strong>&nbsp;For the purpose of this problem, we define empty string as valid palindrome.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> &quot;A man, a plan, a canal: Panama&quot;\n<strong>Output:</strong> true\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> &quot;race a car&quot;\n<strong>Output:</strong> false\n</pre>\n"
    },
    {
        "id": "551",
        "title": "Student Attendance Record I",
        "slug": "student-attendance-record-i",
        "difficulty": "Easy",
        "likes": 166,
        "dislikes": 637,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Student Attendance Record II\", \"titleSlug\": \"student-attendance-record-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "109",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String"
        ],
        "content": "You are given a string representing an attendance record for a student. The record only contains the following three characters:\n\n<p>\n<ol>\n<li><b>'A'</b> : Absent. </li>\n<li><b>'L'</b> : Late.</li>\n<li> <b>'P'</b> : Present. </li>\n</ol>\n</p>\n\n<p>\nA student could be rewarded if his attendance record doesn't contain <b>more than one 'A' (absent)</b> or <b>more than two continuous 'L' (late)</b>.    </p>\n\n<p>You need to return whether the student could be rewarded according to his attendance record.</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> \"PPALLP\"\n<b>Output:</b> True\n</pre>\n</p>\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b> \"PPALLL\"\n<b>Output:</b> False\n</pre>\n</p>\n\n\n"
    },
    {
        "id": "155",
        "title": "Min Stack",
        "slug": "min-stack",
        "difficulty": "Easy",
        "likes": 2059,
        "dislikes": 225,
        "hints": [
            "Consider each node in the stack having a minimum value. (Credits to @aakarshmadhavan)"
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Sliding Window Maximum\", \"titleSlug\": \"sliding-window-maximum\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Max Stack\", \"titleSlug\": \"max-stack\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Stack",
            "Design"
        ],
        "content": "<p>Design a stack that supports push, pop, top, and retrieving the minimum element in constant time.</p>\n\n<ul>\n\t<li>push(x) -- Push element x onto stack.</li>\n\t<li>pop() -- Removes the element on top of the stack.</li>\n\t<li>top() -- Get the top element.</li>\n\t<li>getMin() -- Retrieve the minimum element in the stack.</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><b>Example:</b></p>\n\n<pre>\nMinStack minStack = new MinStack();\nminStack.push(-2);\nminStack.push(0);\nminStack.push(-3);\nminStack.getMin();   --&gt; Returns -3.\nminStack.pop();\nminStack.top();      --&gt; Returns 0.\nminStack.getMin();   --&gt; Returns -2.\n</pre>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "212",
        "title": "Word Search II",
        "slug": "word-search-ii",
        "difficulty": "Hard",
        "likes": 1354,
        "dislikes": 76,
        "hints": [
            "You would need to optimize your backtracking to pass the larger test. Could you stop backtracking earlier?",
            "If the current candidate does not exist in all words&#39; prefix, you could stop backtracking immediately. What kind of data structure could answer such query efficiently? Does a hash table work? Why or why not? How about a Trie? If you would like to learn how to implement a basic trie, please work on this problem: <a href=\"https://leetcode.com/problems/implement-trie-prefix-tree/\">Implement Trie (Prefix Tree)</a> first."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Word Search\", \"titleSlug\": \"word-search\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Unique Paths III\", \"titleSlug\": \"unique-paths-iii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Backtracking",
            "Trie"
        ],
        "content": "<p>Given a 2D board and a list of words from the dictionary, find all words in the board.</p>\n\n<p>Each word must be constructed from letters of sequentially adjacent cell, where &quot;adjacent&quot; cells are those horizontally or vertically neighboring. The same letter cell may not be used more than once in a word.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input:</strong> \n<b>board </b>= [\n  [&#39;<span style=\"color:#d70\">o</span>&#39;,&#39;<span style=\"color:#d70\">a</span>&#39;,&#39;a&#39;,&#39;n&#39;],\n  [&#39;e&#39;,&#39;<span style=\"color:#d30\">t</span>&#39;,&#39;<span style=\"color:#d00\">a</span>&#39;,&#39;<span style=\"color:#d00\">e</span>&#39;],\n  [&#39;i&#39;,&#39;<span style=\"color:#d70\">h</span>&#39;,&#39;k&#39;,&#39;r&#39;],\n  [&#39;i&#39;,&#39;f&#39;,&#39;l&#39;,&#39;v&#39;]\n]\n<b>words</b> = <code>[&quot;oath&quot;,&quot;pea&quot;,&quot;eat&quot;,&quot;rain&quot;]</code>\n\n<strong>Output:&nbsp;</strong><code>[&quot;eat&quot;,&quot;oath&quot;]</code>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b></p>\n\n<ol>\n\t<li>All inputs are consist of lowercase letters <code>a-z</code>.</li>\n\t<li>The values of&nbsp;<code>words</code> are distinct.</li>\n</ol>\n"
    },
    {
        "id": "638",
        "title": "Shopping Offers",
        "slug": "shopping-offers",
        "difficulty": "Medium",
        "likes": 397,
        "dislikes": 359,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "199",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming",
            "Depth-first Search"
        ],
        "content": "<p>\nIn LeetCode Store, there are some kinds of items to sell. Each item has a price.\n</p>\n\n<p>\nHowever, there are some special offers, and a special offer consists of one or more different kinds of items with a sale price.\n</p>\n\n<p>\nYou are given the each item's price, a set of special offers, and the number we need to buy for each item.\nThe job is to output the lowest price you have to pay for <b>exactly</b> certain items as given, where you could make optimal use of the special offers.\n</p>\n\n<p>\nEach special offer is represented in the form of an array, the last number represents the price you need to pay for this special offer, other numbers represents how many specific items you could get if you buy this offer.\n</p>\n\n<p>You could use any of special offers as many times as you want.</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> [2,5], [[3,0,5],[1,2,10]], [3,2]\n<b>Output:</b> 14\n<b>Explanation:</b> \nThere are two kinds of items, A and B. Their prices are $2 and $5 respectively. \nIn special offer 1, you can pay $5 for 3A and 0B\nIn special offer 2, you can pay $10 for 1A and 2B. \nYou need to buy 3A and 2B, so you may pay $10 for 1A and 2B (special offer #2), and $4 for 2A.\n</pre>\n</p>\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b> [2,3,4], [[1,1,0,4],[2,2,1,9]], [1,2,1]\n<b>Output:</b> 11\n<b>Explanation:</b> \nThe price of A is $2, and $3 for B, $4 for C. \nYou may pay $4 for 1A and 1B, and $9 for 2A ,2B and 1C. \nYou need to buy 1A ,2B and 1C, so you may pay $4 for 1A and 1B (special offer #1), and $3 for 1B, $4 for 1C. \nYou cannot add more items, though only $9 for 2A ,2B and 1C.\n</pre>\n</p>\n\n<p><b>Note:</b><br />\n<ol>\n<li>There are at most 6 kinds of items, 100 special offers.</li>\n<li>For each item, you need to buy at most 6 of them.</li>\n<li>You are <b>not</b> allowed to buy more items than you want, even if that would lower the overall price.</li>\n</ol>\n</p>"
    },
    {
        "id": "913",
        "title": "Cat and Mouse",
        "slug": "cat-and-mouse",
        "difficulty": "Hard",
        "likes": 200,
        "dislikes": 45,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "572",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Breadth-first Search",
            "Minimax"
        ],
        "content": "<p>A game on an <strong>undirected</strong> graph is played by two players, Mouse and Cat, who alternate turns.</p>\n\n<p>The graph is given as follows: <code>graph[a]</code> is a list of all nodes <code>b</code> such that <code>ab</code> is an edge of the graph.</p>\n\n<p>Mouse starts at node 1 and goes first, Cat starts at node 2 and goes second, and there is a Hole at node 0.</p>\n\n<p>During each player&#39;s turn, they <strong>must</strong> travel along one&nbsp;edge of the graph that meets where they are.&nbsp; For example, if the Mouse is at node <code>1</code>, it <strong>must</strong> travel to any node in <code>graph[1]</code>.</p>\n\n<p>Additionally, it is not allowed for the Cat to travel to the Hole (node 0.)</p>\n\n<p>Then, the game can end in 3 ways:</p>\n\n<ul>\n\t<li>If ever the Cat occupies the same node as the Mouse, the Cat wins.</li>\n\t<li>If ever the Mouse reaches the Hole, the Mouse wins.</li>\n\t<li>If ever a position is repeated (ie.&nbsp;the players are in the same position as a previous turn, and&nbsp;it is the same player&#39;s turn to move), the game is a draw.</li>\n</ul>\n\n<p>Given a <code>graph</code>, and assuming both players play optimally, return <code>1</code>&nbsp;if the game is won by Mouse, <code>2</code>&nbsp;if the game is won by Cat, and <code>0</code>&nbsp;if the game is a draw.</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[[2,5],[3],[0,4,5],[1,4,5],[2,3],[0,2,3]]</span>\n<strong>Output: </strong><span id=\"example-output-1\">0\n<strong>Explanation:</strong>\n</span>4---3---1\n|&nbsp; &nbsp;|\n2---5\n&nbsp;\\&nbsp;/\n&nbsp; 0\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>3 &lt;= graph.length &lt;= 50</code></li>\n\t<li>It is guaranteed that <code>graph[1]</code> is non-empty.</li>\n\t<li>It is guaranteed that <code>graph[2]</code> contains a non-zero element.&nbsp;</li>\n</ol>\n</div>\n"
    },
    {
        "id": "1137",
        "title": "N-th Tribonacci Number",
        "slug": "n-th-tribonacci-number",
        "difficulty": "Easy",
        "likes": 59,
        "dislikes": 12,
        "hints": [
            "Make an array F of length 38, and set F[0] = 0, F[1] = F[2] = 1.",
            "Now write a loop where you set F[n+3] = F[n] + F[n+1] + F[n+2], and return F[n]."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Climbing Stairs\", \"titleSlug\": \"climbing-stairs\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Fibonacci Number\", \"titleSlug\": \"fibonacci-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "755",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Recursion"
        ],
        "content": "<p>The Tribonacci sequence T<sub>n</sub> is defined as follows:&nbsp;</p>\n\n<p>T<sub>0</sub> = 0, T<sub>1</sub> = 1, T<sub>2</sub> = 1, and T<sub>n+3</sub> = T<sub>n</sub> + T<sub>n+1</sub> + T<sub>n+2</sub> for n &gt;= 0.</p>\n\n<p>Given <code>n</code>, return the value of T<sub>n</sub>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 4\n<strong>Output:</strong> 4\n<strong>Explanation:</strong>\nT_3 = 0 + 1 + 1 = 2\nT_4 = 1 + 1 + 2 = 4\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> n = 25\n<strong>Output:</strong> 1389537\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>0 &lt;= n &lt;= 37</code></li>\n\t<li>The answer is guaranteed to fit within a 32-bit integer, ie. <code>answer &lt;= 2^31 - 1</code>.</li>\n</ul>"
    },
    {
        "id": "851",
        "title": "Loud and Rich",
        "slug": "loud-and-rich",
        "difficulty": "Medium",
        "likes": 189,
        "dislikes": 218,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "483",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Depth-first Search"
        ],
        "content": "<p>In a group of N people (labelled <code>0, 1, 2, ..., N-1</code>), each person has different amounts of money, and different levels of quietness.</p>\n\n<p>For convenience, we&#39;ll call the person with label <code>x</code>, simply &quot;person <code>x</code>&quot;.</p>\n\n<p>We&#39;ll say that <code>richer[i] = [x, y]</code> if person <code>x</code>&nbsp;definitely has more money than person&nbsp;<code>y</code>.&nbsp; Note that <code>richer</code>&nbsp;may only be a subset of valid observations.</p>\n\n<p>Also, we&#39;ll say <code>quiet[x] = q</code> if person <font face=\"monospace\">x</font>&nbsp;has quietness <code>q</code>.</p>\n\n<p>Now, return <code>answer</code>, where <code>answer[x] = y</code> if <code>y</code> is the least quiet person (that is, the person <code>y</code> with the smallest value of <code>quiet[y]</code>), among all people&nbsp;who definitely have&nbsp;equal to or more money than person <code>x</code>.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>richer = <span id=\"example-input-1-1\">[[1,0],[2,1],[3,1],[3,7],[4,3],[5,3],[6,3]]</span>, quiet = <span id=\"example-input-1-2\">[3,2,5,4,6,1,7,0]</span>\n<strong>Output: </strong><span id=\"example-output-1\">[5,5,2,5,4,5,6,7]</span>\n<strong>Explanation: </strong>\nanswer[0] = 5.\nPerson 5 has more money than 3, which has more money than 1, which has more money than 0.\nThe only person who is quieter (has lower quiet[x]) is person 7, but\nit isn&#39;t clear if they have more money than person 0.\n\nanswer[7] = 7.\nAmong all people that definitely have equal to or more money than person 7\n(which could be persons 3, 4, 5, 6, or 7), the person who is the quietest (has lower quiet[x])\nis person 7.\n\nThe other answers can be filled out with similar reasoning.\n</pre>\n</div>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= quiet.length = N &lt;= 500</code></li>\n\t<li><code>0 &lt;= quiet[i] &lt; N</code>, all <code>quiet[i]</code> are different.</li>\n\t<li><code>0 &lt;= richer.length &lt;= N * (N-1) / 2</code></li>\n\t<li><code>0 &lt;= richer[i][j] &lt; N</code></li>\n\t<li><code>richer[i][0] != richer[i][1]</code></li>\n\t<li><code>richer[i]</code>&#39;s are all different.</li>\n\t<li>The&nbsp;observations in <code>richer</code> are all logically consistent.</li>\n</ol>\n"
    },
    {
        "id": "1103",
        "title": "Distribute Candies to People",
        "slug": "distribute-candies-to-people",
        "difficulty": "Easy",
        "likes": 97,
        "dislikes": 27,
        "hints": [
            "Give candy to everyone each \"turn\" first [until you can't], then give candy to one person per turn."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "747",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math"
        ],
        "content": "<p>We distribute some&nbsp;number of <code>candies</code>, to a row of <strong><code>n =&nbsp;num_people</code></strong>&nbsp;people in the following way:</p>\n\n<p>We then give 1 candy to the first person, 2 candies to the second person, and so on until we give <code>n</code>&nbsp;candies to the last person.</p>\n\n<p>Then, we go back to the start of the row, giving <code>n&nbsp;+ 1</code> candies to the first person, <code>n&nbsp;+ 2</code> candies to the second person, and so on until we give <code>2 * n</code>&nbsp;candies to the last person.</p>\n\n<p>This process repeats (with us giving one more candy each time, and moving to the start of the row after we reach the end) until we run out of candies.&nbsp; The last person will receive all of our remaining candies (not necessarily one more than the previous gift).</p>\n\n<p>Return an array (of length <code>num_people</code>&nbsp;and sum <code>candies</code>) that represents the final distribution of candies.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> candies = 7, num_people = 4\n<strong>Output:</strong> [1,2,3,1]\n<strong>Explanation:</strong>\nOn the first turn, ans[0] += 1, and the array is [1,0,0,0].\nOn the second turn, ans[1] += 2, and the array is [1,2,0,0].\nOn the third turn, ans[2] += 3, and the array is [1,2,3,0].\nOn the fourth turn, ans[3] += 1 (because there is only one candy left), and the final array is [1,2,3,1].\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> candies = 10, num_people = 3\n<strong>Output:</strong> [5,2,3]\n<strong>Explanation: </strong>\nOn the first turn, ans[0] += 1, and the array is [1,0,0].\nOn the second turn, ans[1] += 2, and the array is [1,2,0].\nOn the third turn, ans[2] += 3, and the array is [1,2,3].\nOn the fourth turn, ans[0] += 4, and the final array is [5,2,3].\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li>1 &lt;= candies &lt;= 10^9</li>\n\t<li>1 &lt;= num_people &lt;= 1000</li>\n</ul>\n"
    },
    {
        "id": "761",
        "title": "Special Binary String",
        "slug": "special-binary-string",
        "difficulty": "Hard",
        "likes": 193,
        "dislikes": 75,
        "hints": [
            "Draw a line from (x, y) to (x+1, y+1) if we see a \"1\", else to (x+1, y-1).\r\nA special substring is just a line that starts and ends at the same y-coordinate, and that is the lowest y-coordinate reached.\r\nCall a mountain a special substring with no special prefixes - ie. only at the beginning and end is the lowest y-coordinate reached.\r\nIf F is the answer function, and S has mountain decomposition M1,M2,M3,...,Mk,  then the answer is:\r\nreverse_sorted(F(M1), F(M2), ..., F(Mk)).\r\nHowever, you'll also need to deal with the case that S is a mountain, such as 11011000 -> 11100100."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Valid Parenthesis String\", \"titleSlug\": \"valid-parenthesis-string\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "370",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String",
            "Recursion"
        ],
        "content": "<p>\n<i>Special</i> binary strings are binary strings with the following two properties:\n</p><p>\n<li>The number of 0's is equal to the number of 1's.</li>\n<li>Every prefix of the binary string has at least as many 1's as 0's.</li>\n</p><p>\nGiven a special string <code>S</code>, a <i>move</i> consists of choosing two consecutive, non-empty, special substrings of <code>S</code>, and swapping them.  <i>(Two strings are consecutive if the last character of the first string is exactly one index before the first character of the second string.)</i>\n</p><p>\nAt the end of any number of moves, what is the lexicographically largest resulting string possible?\n</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> S = \"11011000\"\n<b>Output:</b> \"11100100\"\n<b>Explanation:</b>\nThe strings \"10\" [occuring at S[1]] and \"1100\" [at S[3]] are swapped.\nThis is the lexicographically largest string possible after some number of swaps.\n</pre>\n</p>\n\n<p><b>Note:</b><ol>\n<li><code>S</code> has length at most <code>50</code>.</li>\n<li><code>S</code> is guaranteed to be a <i>special</i> binary string as defined above.</li>\n</ol></p>"
    },
    {
        "id": "415",
        "title": "Add Strings",
        "slug": "add-strings",
        "difficulty": "Easy",
        "likes": 492,
        "dislikes": 164,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Add Two Numbers\", \"titleSlug\": \"add-two-numbers\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Multiply Strings\", \"titleSlug\": \"multiply-strings\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Add to Array-Form of Integer\", \"titleSlug\": \"add-to-array-form-of-integer\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "String"
        ],
        "content": "<p>Given two non-negative integers <code>num1</code> and <code>num2</code> represented as string, return the sum of <code>num1</code> and <code>num2</code>.</p>\n\n<p><b>Note:</b>\n<ol>\n<li>The length of both <code>num1</code> and <code>num2</code> is < 5100.</li>\n<li>Both <code>num1</code> and <code>num2</code> contains only digits <code>0-9</code>.</li>\n<li>Both <code>num1</code> and <code>num2</code> does not contain any leading zero.</li>\n<li>You <b>must not use any built-in BigInteger library</b> or <b>convert the inputs to integer</b> directly.</li>\n</ol>\n</p>"
    },
    {
        "id": "143",
        "title": "Reorder List",
        "slug": "reorder-list",
        "difficulty": "Medium",
        "likes": 1070,
        "dislikes": 79,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Linked List"
        ],
        "content": "<p>Given a singly linked list <em>L</em>: <em>L</em><sub>0</sub>&rarr;<em>L</em><sub>1</sub>&rarr;&hellip;&rarr;<em>L</em><sub><em>n</em>-1</sub>&rarr;<em>L</em><sub>n</sub>,<br />\nreorder it to: <em>L</em><sub>0</sub>&rarr;<em>L</em><sub><em>n</em></sub>&rarr;<em>L</em><sub>1</sub>&rarr;<em>L</em><sub><em>n</em>-1</sub>&rarr;<em>L</em><sub>2</sub>&rarr;<em>L</em><sub><em>n</em>-2</sub>&rarr;&hellip;</p>\n\n<p>You may <strong>not</strong> modify the values in the list&#39;s nodes, only nodes itself may be changed.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\nGiven 1-&gt;2-&gt;3-&gt;4, reorder it to 1-&gt;4-&gt;2-&gt;3.</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\nGiven 1-&gt;2-&gt;3-&gt;4-&gt;5, reorder it to 1-&gt;5-&gt;2-&gt;4-&gt;3.\n</pre>\n"
    },
    {
        "id": "309",
        "title": "Best Time to Buy and Sell Stock with Cooldown",
        "slug": "best-time-to-buy-and-sell-stock-with-cooldown",
        "difficulty": "Medium",
        "likes": 1551,
        "dislikes": 59,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Best Time to Buy and Sell Stock\", \"titleSlug\": \"best-time-to-buy-and-sell-stock\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Best Time to Buy and Sell Stock II\", \"titleSlug\": \"best-time-to-buy-and-sell-stock-ii\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>Say you have an array for which the <i>i</i><sup>th</sup> element is the price of a given stock on day <i>i</i>.</p>\n\n<p>Design an algorithm to find the maximum profit. You may complete as many transactions as you like (ie, buy one and sell one share of the stock multiple times) with the following restrictions:</p>\n\n<ul>\n\t<li>You may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again).</li>\n\t<li>After you sell your stock, you cannot buy stock on next day. (ie, cooldown 1 day)</li>\n</ul>\n\n<p><b>Example:</b></p>\n\n<pre>\n<strong>Input:</strong> [1,2,3,0,2]\n<strong>Output: </strong>3 \n<strong>Explanation:</strong> transactions = [buy, sell, cooldown, buy, sell]\n</pre>"
    },
    {
        "id": "15",
        "title": "3Sum",
        "slug": "3sum",
        "difficulty": "Medium",
        "likes": 4448,
        "dislikes": 506,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Two Sum\", \"titleSlug\": \"two-sum\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"3Sum Closest\", \"titleSlug\": \"3sum-closest\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"4Sum\", \"titleSlug\": \"4sum\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"3Sum Smaller\", \"titleSlug\": \"3sum-smaller\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Array",
            "Two Pointers"
        ],
        "content": "<p>Given an array <code>nums</code> of <em>n</em> integers, are there elements <em>a</em>, <em>b</em>, <em>c</em> in <code>nums</code> such that <em>a</em> + <em>b</em> + <em>c</em> = 0? Find all unique triplets in the array which gives the sum of zero.</p>\n\n<p><strong>Note:</strong></p>\n\n<p>The solution set must not contain duplicate triplets.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\nGiven array nums = [-1, 0, 1, 2, -1, -4],\n\nA solution set is:\n[\n  [-1, 0, 1],\n  [-1, -1, 2]\n]\n</pre>\n"
    },
    {
        "id": "1041",
        "title": "Robot Bounded In Circle",
        "slug": "robot-bounded-in-circle",
        "difficulty": "Medium",
        "likes": 116,
        "dislikes": 80,
        "hints": [
            "Calculate the final vector of how the robot travels after executing all instructions once - it consists of a change in position plus a change in direction.",
            "The robot stays in the circle iff (looking at the final vector) it changes direction (ie. doesn't stay pointing north), or it moves 0."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Math"
        ],
        "content": "<p>On an infinite plane, a&nbsp;robot initially stands at <code>(0, 0)</code> and faces north.&nbsp;&nbsp;The robot can receive one of three instructions:</p>\n\n<ul>\n\t<li><code>&quot;G&quot;</code>: go straight 1 unit;</li>\n\t<li><code>&quot;L&quot;</code>: turn 90 degrees to the left;</li>\n\t<li><code>&quot;R&quot;</code>: turn 90 degress to the right.</li>\n</ul>\n\n<p>The robot performs the <code>instructions</code> given in order, and repeats them forever.</p>\n\n<p>Return <code>true</code> if and only if there exists a circle in the plane such that the robot never leaves the circle.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>&quot;GGLLGG&quot;\n<strong>Output: </strong>true\n<strong>Explanation: </strong>\nThe robot moves from (0,0) to (0,2), turns 180 degrees, and then returns to (0,0).\nWhen repeating these instructions, the robot remains in the circle of radius 2 centered at the origin.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>&quot;GG&quot;\n<strong>Output: </strong>false\n<strong>Explanation: </strong>\nThe robot moves north indefinitely.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>&quot;GL&quot;\n<strong>Output: </strong>true\n<strong>Explanation: </strong>\nThe robot moves from (0, 0) -&gt; (0, 1) -&gt; (-1, 1) -&gt; (-1, 0) -&gt; (0, 0) -&gt; ...\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= instructions.length &lt;= 100</code></li>\n\t<li><code>instructions[i]</code> is in <code>{&#39;G&#39;, &#39;L&#39;, &#39;R&#39;}</code></li>\n</ol>\n"
    },
    {
        "id": "451",
        "title": "Sort Characters By Frequency",
        "slug": "sort-characters-by-frequency",
        "difficulty": "Medium",
        "likes": 821,
        "dislikes": 74,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Top K Frequent Elements\", \"titleSlug\": \"top-k-frequent-elements\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"First Unique Character in a String\", \"titleSlug\": \"first-unique-character-in-a-string\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Hash Table",
            "Heap"
        ],
        "content": "<p>Given a string, sort it in decreasing order based on the frequency of characters.</p>\n\n<p><b>Example 1:</b>\n<pre>\n<b>Input:</b>\n\"tree\"\n\n<b>Output:</b>\n\"eert\"\n\n<b>Explanation:</b>\n'e' appears twice while 'r' and 't' both appear once.\nSo 'e' must appear before both 'r' and 't'. Therefore \"eetr\" is also a valid answer.\n</pre>\n</p>\n\n<p><b>Example 2:</b>\n<pre>\n<b>Input:</b>\n\"cccaaa\"\n\n<b>Output:</b>\n\"cccaaa\"\n\n<b>Explanation:</b>\nBoth 'c' and 'a' appear three times, so \"aaaccc\" is also a valid answer.\nNote that \"cacaca\" is incorrect, as the same characters must be together.\n</pre>\n</p>\n\n<p><b>Example 3:</b>\n<pre>\n<b>Input:</b>\n\"Aabb\"\n\n<b>Output:</b>\n\"bbAa\"\n\n<b>Explanation:</b>\n\"bbaA\" is also a valid answer, but \"Aabb\" is incorrect.\nNote that 'A' and 'a' are treated as two different characters.\n</pre>\n</p>"
    },
    {
        "id": "122",
        "title": "Best Time to Buy and Sell Stock II",
        "slug": "best-time-to-buy-and-sell-stock-ii",
        "difficulty": "Easy",
        "likes": 1223,
        "dislikes": 1403,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Best Time to Buy and Sell Stock\", \"titleSlug\": \"best-time-to-buy-and-sell-stock\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Best Time to Buy and Sell Stock III\", \"titleSlug\": \"best-time-to-buy-and-sell-stock-iii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Best Time to Buy and Sell Stock IV\", \"titleSlug\": \"best-time-to-buy-and-sell-stock-iv\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Best Time to Buy and Sell Stock with Cooldown\", \"titleSlug\": \"best-time-to-buy-and-sell-stock-with-cooldown\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Best Time to Buy and Sell Stock with Transaction Fee\", \"titleSlug\": \"best-time-to-buy-and-sell-stock-with-transaction-fee\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "53",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Greedy"
        ],
        "content": "<p>Say you have an array for which the <em>i</em><sup>th</sup> element is the price of a given stock on day <em>i</em>.</p>\n\n<p>Design an algorithm to find the maximum profit. You may complete as many transactions as you like (i.e., buy one and sell one share of the stock multiple times).</p>\n\n<p><strong>Note:</strong> You may not engage in multiple transactions at the same time (i.e., you must sell the stock before you buy again).</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> [7,1,5,3,6,4]\n<strong>Output:</strong> 7\n<strong>Explanation:</strong> Buy on day 2 (price = 1) and sell on day 3 (price = 5), profit = 5-1 = 4.\n&nbsp;            Then buy on day 4 (price = 3) and sell on day 5 (price = 6), profit = 6-3 = 3.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> [1,2,3,4,5]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong> Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4.\n&nbsp;            Note that you cannot buy on day 1, buy on day 2 and sell them later, as you are\n&nbsp;            engaging multiple transactions at the same time. You must sell before buying again.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> [7,6,4,3,1]\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> In this case, no transaction is done, i.e. max profit = 0.</pre>\n"
    },
    {
        "id": "79",
        "title": "Word Search",
        "slug": "word-search",
        "difficulty": "Medium",
        "likes": 2155,
        "dislikes": 109,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Word Search II\", \"titleSlug\": \"word-search-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Array",
            "Backtracking"
        ],
        "content": "<p>Given a 2D board and a word, find if the word exists in the grid.</p>\n\n<p>The word can be constructed from letters of sequentially adjacent cell, where &quot;adjacent&quot; cells are those horizontally or vertically neighboring. The same letter cell may not be used more than once.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\nboard =\n[\n  [&#39;A&#39;,&#39;B&#39;,&#39;C&#39;,&#39;E&#39;],\n  [&#39;S&#39;,&#39;F&#39;,&#39;C&#39;,&#39;S&#39;],\n  [&#39;A&#39;,&#39;D&#39;,&#39;E&#39;,&#39;E&#39;]\n]\n\nGiven word = &quot;<strong>ABCCED</strong>&quot;, return <strong>true</strong>.\nGiven word = &quot;<strong>SEE</strong>&quot;, return <strong>true</strong>.\nGiven word = &quot;<strong>ABCB</strong>&quot;, return <strong>false</strong>.\n</pre>\n"
    },
    {
        "id": "733",
        "title": "Flood Fill",
        "slug": "flood-fill",
        "difficulty": "Easy",
        "likes": 523,
        "dislikes": 120,
        "hints": [
            "Write a recursive function that paints the pixel if it's the correct color, then recurses on neighboring pixels."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Island Perimeter\", \"titleSlug\": \"island-perimeter\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "307",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Depth-first Search"
        ],
        "content": "<p>\nAn <code>image</code> is represented by a 2-D array of integers, each integer representing the pixel value of the image (from 0 to 65535).\n</p><p>\nGiven a coordinate <code>(sr, sc)</code> representing the starting pixel (row and column) of the flood fill, and a pixel value <code>newColor</code>, \"flood fill\" the image.\n</p><p>\nTo perform a \"flood fill\", consider the starting pixel, plus any pixels connected 4-directionally to the starting pixel of the same color as the starting pixel, plus any pixels connected 4-directionally to those pixels (also with the same color as the starting pixel), and so on.  Replace the color of all of the aforementioned pixels with the newColor.\n</p><p>\nAt the end, return the modified image.\n</p>\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> \nimage = [[1,1,1],[1,1,0],[1,0,1]]\nsr = 1, sc = 1, newColor = 2\n<b>Output:</b> [[2,2,2],[2,2,0],[2,0,1]]\n<b>Explanation:</b> \nFrom the center of the image (with position (sr, sc) = (1, 1)), all pixels connected \nby a path of the same color as the starting pixel are colored with the new color.\nNote the bottom corner is not colored 2, because it is not 4-directionally connected\nto the starting pixel.\n</pre>\n</p>\n\n<p><b>Note:</b>\n<li>The length of <code>image</code> and <code>image[0]</code> will be in the range <code>[1, 50]</code>.</li>\n<li>The given starting pixel will satisfy <code>0 <= sr < image.length</code> and <code>0 <= sc < image[0].length</code>.</li>\n<li>The value of each color in <code>image[i][j]</code> and <code>newColor</code> will be an integer in <code>[0, 65535]</code>.</li>\n</p>"
    },
    {
        "id": "728",
        "title": "Self Dividing Numbers",
        "slug": "self-dividing-numbers",
        "difficulty": "Easy",
        "likes": 463,
        "dislikes": 249,
        "hints": [
            "For each number in the range, check whether it is self dividing by converting that number to a character array (or string in Python), then checking that each digit is nonzero and divides the original number."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Perfect Number\", \"titleSlug\": \"perfect-number\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "296",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math"
        ],
        "content": "<p>\nA <i>self-dividing number</i> is a number that is divisible by every digit it contains.\n</p><p>\nFor example, 128 is a self-dividing number because <code>128 % 1 == 0</code>, <code>128 % 2 == 0</code>, and <code>128 % 8 == 0</code>.\n</p><p>\nAlso, a self-dividing number is not allowed to contain the digit zero.\n</p><p>\nGiven a lower and upper number bound, output a list of every possible self dividing number, including the bounds if possible.\n</p>\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> \nleft = 1, right = 22\n<b>Output:</b> [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22]\n</pre>\n</p>\n\n<p><b>Note:</b>\n<li>The boundaries of each input argument are <code>1 <= left <= right <= 10000</code>.</li>\n</p>"
    },
    {
        "id": "691",
        "title": "Stickers to Spell Word",
        "slug": "stickers-to-spell-word",
        "difficulty": "Hard",
        "likes": 275,
        "dislikes": 26,
        "hints": [
            "We want to perform an exhaustive search, but we need to speed it up based on the input data being random.  \r\n\r\nFor all stickers, we can ignore any letters that are not in the target word.  \r\n\r\nWhen our candidate answer won't be smaller than an answer we have already found, we can stop searching this path.  \r\n\r\nWhen a sticker dominates another, we shouldn't include the dominated sticker in our sticker collection.  [Here, we say a sticker `A` dominates `B` if `A.count(letter) >= B.count(letter)` for all letters.]"
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Ransom Note\", \"titleSlug\": \"ransom-note\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "257",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming",
            "Backtracking"
        ],
        "content": "<p>\nWe are given N different types of stickers.  Each sticker has a lowercase English word on it.\n</p><p>\nYou would like to spell out the given <code>target</code> string by cutting individual letters from your collection of stickers and rearranging them.\n</p><p>\nYou can use each sticker more than once if you want, and you have infinite quantities of each sticker.\n</p><p>\nWhat is the minimum number of stickers that you need to spell out the <code>target</code>?  If the task is impossible, return -1.\n</p>\n\n<p><b>Example 1:</b></p>\n<p>Input:<pre>\n[\"with\", \"example\", \"science\"], \"thehat\"\n</pre></p>\n\n<p>Output:<pre>\n3\n</pre></p>\n\n<p>Explanation:<pre>\nWe can use 2 \"with\" stickers, and 1 \"example\" sticker.\nAfter cutting and rearrange the letters of those stickers, we can form the target \"thehat\".\nAlso, this is the minimum number of stickers necessary to form the target string.\n</pre></p>\n\n<p><b>Example 2:</b></p>\n<p>Input:<pre>\n[\"notice\", \"possible\"], \"basicbasic\"\n</pre></p>\n\n<p>Output:<pre>\n-1\n</pre></p>\n\n<p>Explanation:<pre>\nWe can't form the target \"basicbasic\" from cutting letters from the given stickers.\n</pre></p>\n\n<p><b>Note:</b>\n<li><code>stickers</code> has length in the range <code>[1, 50]</code>.</li>\n<li><code>stickers</code> consists of lowercase English words (without apostrophes).</li>\n<li><code>target</code> has length in the range <code>[1, 15]</code>, and consists of lowercase English letters.</li>\n<li>In all test cases, all words were chosen <u>randomly</u> from the 1000 most common US English words, and the target was chosen as a concatenation of two random words.</li>\n<li>The time limit may be more challenging than usual.  It is expected that a 50 sticker test case can be solved within 35ms on average.</li>\n</p>"
    },
    {
        "id": "201",
        "title": "Bitwise AND of Numbers Range",
        "slug": "bitwise-and-of-numbers-range",
        "difficulty": "Medium",
        "likes": 483,
        "dislikes": 66,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Bit Manipulation"
        ],
        "content": "<p>Given a range [m, n] where 0 &lt;= m &lt;= n &lt;= 2147483647, return the bitwise AND of all numbers in this range, inclusive.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> [5,7]\n<strong>Output:</strong> 4\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> [0,1]\n<strong>Output:</strong> 0</pre>"
    },
    {
        "id": "1131",
        "title": "Maximum of Absolute Value Expression",
        "slug": "maximum-of-absolute-value-expression",
        "difficulty": "Medium",
        "likes": 58,
        "dislikes": 72,
        "hints": [
            "Use the idea that abs(A) + abs(B) = max(A+B, A-B, -A+B, -A-B)."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Math",
            "Bit Manipulation"
        ],
        "content": "<p>Given two arrays of integers with equal lengths, return the maximum value of:</p>\n\n<p><code>|arr1[i] - arr1[j]| + |arr2[i] - arr2[j]| + |i - j|</code></p>\n\n<p>where the maximum is taken over all <code>0 &lt;= i, j &lt; arr1.length</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr1 = [1,2,3,4], arr2 = [-1,4,5,6]\n<strong>Output:</strong> 13\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> arr1 = [1,-2,-5,0,10], arr2 = [0,-2,-1,-7,-4]\n<strong>Output:</strong> 20\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>2 &lt;= arr1.length == arr2.length &lt;= 40000</code></li>\n\t<li><code>-10^6 &lt;= arr1[i], arr2[i] &lt;= 10^6</code></li>\n</ul>\n"
    },
    {
        "id": "1048",
        "title": "Longest String Chain",
        "slug": "longest-string-chain",
        "difficulty": "Medium",
        "likes": 177,
        "dislikes": 13,
        "hints": [
            "Instead of adding a character, try deleting a character to form a chain in reverse.",
            "For each word in order of length, for each word2 which is word with one character removed, length[word2] = max(length[word2], length[word] + 1)."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Hash Table",
            "Dynamic Programming"
        ],
        "content": "<p>Given a list of words, each word consists of English lowercase letters.</p>\n\n<p>Let&#39;s say <code>word1</code> is a predecessor of <code>word2</code>&nbsp;if and only if we can add exactly one letter anywhere in <code>word1</code> to make it equal to <code>word2</code>.&nbsp; For example,&nbsp;<code>&quot;abc&quot;</code>&nbsp;is a predecessor of <code>&quot;abac&quot;</code>.</p>\n\n<p>A <em>word chain&nbsp;</em>is a sequence of words <code>[word_1, word_2, ..., word_k]</code>&nbsp;with <code>k &gt;= 1</code>,&nbsp;where <code>word_1</code> is a predecessor of <code>word_2</code>, <code>word_2</code> is a predecessor of <code>word_3</code>, and so on.</p>\n\n<p>Return the longest possible length of a word chain with words chosen from the given list of <code>words</code>.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[&quot;a&quot;,&quot;b&quot;,&quot;ba&quot;,&quot;bca&quot;,&quot;bda&quot;,&quot;bdca&quot;]</span>\n<strong>Output: </strong><span id=\"example-output-1\">4\n<strong>Explanation</strong>: one of </span>the longest word chain is &quot;a&quot;,&quot;ba&quot;,&quot;bda&quot;,&quot;bdca&quot;.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= words.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= words[i].length &lt;= 16</code></li>\n\t<li><code>words[i]</code> only consists of English lowercase letters.</li>\n</ol>\n\n<div>\n<p>&nbsp;</p>\n</div>"
    },
    {
        "id": "1128",
        "title": "Number of Equivalent Domino Pairs",
        "slug": "number-of-equivalent-domino-pairs",
        "difficulty": "Easy",
        "likes": 75,
        "dislikes": 44,
        "hints": [
            "For each domino j, find the number of dominoes you've already seen (dominoes i with i < j) that are equivalent.",
            "You can keep track of what you've seen using a hashmap."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Array"
        ],
        "content": "<p>Given a list of <code>dominoes</code>,&nbsp;<code>dominoes[i] = [a, b]</code>&nbsp;is <em>equivalent</em> to <code>dominoes[j] = [c, d]</code>&nbsp;if and only if either (<code>a==c</code> and <code>b==d</code>), or (<code>a==d</code> and <code>b==c</code>) - that is, one domino can be rotated to be equal to another domino.</p>\n\n<p>Return the number of pairs <code>(i, j)</code> for which <code>0 &lt;= i &lt; j &lt; dominoes.length</code>, and&nbsp;<code>dominoes[i]</code> is equivalent to <code>dominoes[j]</code>.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> dominoes = [[1,2],[2,1],[3,4],[5,6]]\n<strong>Output:</strong> 1\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= dominoes.length &lt;= 40000</code></li>\n\t<li><code>1 &lt;= dominoes[i][j] &lt;= 9</code></li>\n</ul>"
    },
    {
        "id": "208",
        "title": "Implement Trie (Prefix Tree)",
        "slug": "implement-trie-prefix-tree",
        "difficulty": "Medium",
        "likes": 1833,
        "dislikes": 35,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Add and Search Word - Data structure design\", \"titleSlug\": \"add-and-search-word-data-structure-design\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Design Search Autocomplete System\", \"titleSlug\": \"design-search-autocomplete-system\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Replace Words\", \"titleSlug\": \"replace-words\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Implement Magic Dictionary\", \"titleSlug\": \"implement-magic-dictionary\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "40",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Design",
            "Trie"
        ],
        "content": "<p>Implement a trie with <code>insert</code>, <code>search</code>, and <code>startsWith</code> methods.</p>\n\n<p><b>Example:</b></p>\n\n<pre>\nTrie trie = new Trie();\n\ntrie.insert(&quot;apple&quot;);\ntrie.search(&quot;apple&quot;);   // returns true\ntrie.search(&quot;app&quot;);     // returns false\ntrie.startsWith(&quot;app&quot;); // returns true\ntrie.insert(&quot;app&quot;);   \ntrie.search(&quot;app&quot;);     // returns true\n</pre>\n\n<p><b>Note:</b></p>\n\n<ul>\n\t<li>You may assume that all inputs are consist of lowercase letters <code>a-z</code>.</li>\n\t<li>All inputs are guaranteed to be non-empty strings.</li>\n</ul>\n"
    },
    {
        "id": "686",
        "title": "Repeated String Match",
        "slug": "repeated-string-match",
        "difficulty": "Easy",
        "likes": 549,
        "dislikes": 551,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Repeated Substring Pattern\", \"titleSlug\": \"repeated-substring-pattern\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "256",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String"
        ],
        "content": "<p>Given two strings A and B, find the minimum number of times A has to be repeated such that B is a substring of it. If no such solution, return -1.</p>\n\n<p>For example, with A = &quot;abcd&quot; and B = &quot;cdabcdab&quot;.</p>\n\n<p>Return 3, because by repeating A three times (&ldquo;abcdabcdabcd&rdquo;), B is a substring of it; and B is not a substring of A repeated two times (&quot;abcdabcd&quot;).</p>\n\n<p><b>Note:</b><br />\nThe length of <code>A</code> and <code>B</code> will be between 1 and 10000.</p>\n"
    },
    {
        "id": "865",
        "title": "Smallest Subtree with all the Deepest Nodes",
        "slug": "smallest-subtree-with-all-the-deepest-nodes",
        "difficulty": "Medium",
        "likes": 439,
        "dislikes": 132,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "503",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree"
        ],
        "content": "<p>Given a binary tree rooted at <code>root</code>, the <em>depth</em> of each node is the shortest distance to the root.</p>\n\n<p>A node is <em>deepest</em> if it has the largest depth possible among&nbsp;any node in the <u>entire tree</u>.</p>\n\n<p>The subtree of a node is that node, plus the set of all descendants of that node.</p>\n\n<p>Return the node with the largest depth such that it contains all the deepest nodes in its subtree.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[3,5,1,6,2,0,8,null,null,7,4]</span>\n<strong>Output: </strong><span id=\"example-output-1\">[2,7,4]</span>\n<strong>Explanation:\n</strong>\n<img alt=\"\" src=\"./img/smallest-subtree-with-all-the-deepest-nodes_1.png\" style=\"width: 280px; height: 238px;\" />\n\nWe return the node with value 2, colored in yellow in the diagram.\nThe nodes colored in blue are the deepest nodes of the tree.\nThe input &quot;[3, 5, 1, 6, 2, 0, 8, null, null, 7, 4]&quot; is a serialization of the given tree.\nThe output &quot;[2, 7, 4]&quot; is a serialization of the subtree rooted at the node with value 2.\nBoth the input and output have TreeNode type.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the tree will be between 1 and 500.</li>\n\t<li>The values of each node are unique.</li>\n</ul>\n"
    },
    {
        "id": "611",
        "title": "Valid Triangle Number",
        "slug": "valid-triangle-number",
        "difficulty": "Medium",
        "likes": 685,
        "dislikes": 80,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"3Sum Smaller\", \"titleSlug\": \"3sum-smaller\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "165",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array"
        ],
        "content": "Given an array consists of non-negative integers,  your task is to count the number of triplets chosen from the array that can make triangles if we take them as side lengths of a triangle.\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> [2,2,3,4]\n<b>Output:</b> 3\n<b>Explanation:</b>\nValid combinations are: \n2,3,4 (using the first 2)\n2,3,4 (using the second 2)\n2,2,3\n</pre>\n</p>\n\n<p><b>Note:</b><br>\n<ol>\n<li>The length of the given array won't exceed 1000.</li>\n<li>The integers in the given array are in the range of [0, 1000].</li>\n</ol>\n</p>\n"
    },
    {
        "id": "609",
        "title": "Find Duplicate File in System",
        "slug": "find-duplicate-file-in-system",
        "difficulty": "Medium",
        "likes": 271,
        "dislikes": 424,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "151",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Hash Table",
            "String"
        ],
        "content": "<p>Given a list of directory info including directory path, and all the files with contents in this directory, you need to find out all the groups of duplicate files in the file system in terms of their paths.</p>\n\n<p>A group of duplicate files consists of at least <b>two</b> files that have exactly the same content.</p>\n\n<p>A single directory info string in the <b>input</b> list has the following format:</p>\n\n<p><code>&quot;root/d1/d2/.../dm f1.txt(f1_content) f2.txt(f2_content) ... fn.txt(fn_content)&quot;</code></p>\n\n<p>It means there are <b>n</b> files (<code>f1.txt</code>, <code>f2.txt</code> ... <code>fn.txt</code> with content <code>f1_content</code>, <code>f2_content</code> ... <code>fn_content</code>, respectively) in directory <code>root/d1/d2/.../dm</code>. Note that n &gt;= 1 and m &gt;= 0. If m = 0, it means the directory is just the root directory.</p>\n\n<p>The <b>output</b> is a list of group of duplicate file paths. For each group, it contains all the file paths of the files that have the same content. A file path is a string that has the following format:</p>\n\n<p><code>&quot;directory_path/file_name.txt&quot;</code></p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b>\n[&quot;root/a 1.txt(abcd) 2.txt(efgh)&quot;, &quot;root/c 3.txt(abcd)&quot;, &quot;root/c/d 4.txt(efgh)&quot;, &quot;root 4.txt(efgh)&quot;]\n<b>Output:</b>  \n[[&quot;root/a/2.txt&quot;,&quot;root/c/d/4.txt&quot;,&quot;root/4.txt&quot;],[&quot;root/a/1.txt&quot;,&quot;root/c/3.txt&quot;]]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b></p>\n\n<ol>\n\t<li>No order is required for the final output.</li>\n\t<li>You may assume the directory name, file name and file content only has letters and digits, and the length of file content is in the range of [1,50].</li>\n\t<li>The number of files given is in the range of [1,20000].</li>\n\t<li>You may assume no files or directories share the same name in the same directory.</li>\n\t<li>You may assume each given directory info represents a unique directory. Directory path and file info are separated by a single blank space.</li>\n</ol>\n\n<p>&nbsp;</p>\n<b>Follow-up beyond contest:</b>\n\n<ol>\n\t<li>Imagine you are given a real file system, how will you search files? DFS or BFS?</li>\n\t<li>If the file content is very large (GB level), how will you modify your solution?</li>\n\t<li>If you can only read the file by 1kb each time, how will you modify your solution?</li>\n\t<li>What is the time complexity of your modified solution? What is the most time-consuming part and memory consuming part of it? How to optimize?</li>\n\t<li>How to make sure the duplicated files you find are not false positive?</li>\n</ol>\n"
    },
    {
        "id": "799",
        "title": "Champagne Tower",
        "slug": "champagne-tower",
        "difficulty": "Medium",
        "likes": 314,
        "dislikes": 21,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "431",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [],
        "content": "<p>We stack glasses in a pyramid, where the first row has 1 glass, the second row has 2 glasses, and so on until the 100th row.&nbsp; Each glass holds one cup (250ml) of champagne.</p>\n\n<p>Then, some champagne is poured in the first glass at the top.&nbsp; When the top most glass is full, any excess liquid poured will fall equally to the glass immediately to the left and right of it.&nbsp; When those glasses become full, any excess champagne will fall equally to the left and right of those glasses, and so on.&nbsp; (A glass at the bottom row has it&#39;s excess champagne fall on the floor.)</p>\n\n<p>For example, after one cup of champagne is poured, the top most glass is full.&nbsp; After two cups of champagne are poured, the two glasses on the second row are half full.&nbsp; After three cups of champagne are poured, those two cups become full - there are 3 full glasses total now.&nbsp; After four cups of champagne are poured, the third row has the middle glass half full, and the two outside glasses are a quarter full, as pictured below.</p>\n\n<p><img alt=\"\" src=\"./img/champagne-tower_1.png\" style=\"height:200px; width:290px\" /></p>\n\n<p>Now after pouring some non-negative integer cups of champagne, return how full the j-th glass in the i-th row is (both i and j are 0 indexed.)</p>\n\n<p>&nbsp;</p>\n\n<pre>\n<strong>Example 1:</strong>\n<strong>Input:</strong> poured = 1, query_glass = 1, query_row = 1\n<strong>Output:</strong> 0.0\n<strong>Explanation:</strong> We poured 1 cup of champange to the top glass of the tower (which is indexed as (0, 0)). There will be no excess liquid so all the glasses under the top glass will remain empty.\n\n<strong>Example 2:</strong>\n<strong>Input:</strong> poured = 2, query_glass = 1, query_row = 1\n<strong>Output:</strong> 0.5\n<strong>Explanation:</strong> We poured 2 cups of champange to the top glass of the tower (which is indexed as (0, 0)). There is one cup of excess liquid. The glass indexed as (1, 0) and the glass indexed as (1, 1) will share the excess liquid equally, and each will get half cup of champange.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li><code>poured</code>&nbsp;will&nbsp;be&nbsp;in the range of <code>[0, 10 ^ 9]</code>.</li>\n\t<li><code>query_glass</code> and <code>query_row</code> will be in the range of <code>[0, 99]</code>.</li>\n</ul>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "231",
        "title": "Power of Two",
        "slug": "power-of-two",
        "difficulty": "Easy",
        "likes": 498,
        "dislikes": 137,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Number of 1 Bits\", \"titleSlug\": \"number-of-1-bits\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Power of Three\", \"titleSlug\": \"power-of-three\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Power of Four\", \"titleSlug\": \"power-of-four\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "760",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math",
            "Bit Manipulation"
        ],
        "content": "<p>Given an integer, write a function to determine if it is a power of two.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> 1\n<strong>Output:</strong> true \n<strong>Explanation: </strong>2<sup>0</sup>&nbsp;= 1\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> 16\n<strong>Output:</strong> true\n<strong>Explanation: </strong>2<sup>4</sup>&nbsp;= 16</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong> 218\n<strong>Output:</strong> false</pre>\n"
    },
    {
        "id": "373",
        "title": "Find K Pairs with Smallest Sums",
        "slug": "find-k-pairs-with-smallest-sums",
        "difficulty": "Medium",
        "likes": 788,
        "dislikes": 66,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Kth Smallest Element in a Sorted Matrix\", \"titleSlug\": \"kth-smallest-element-in-a-sorted-matrix\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find K-th Smallest Pair Distance\", \"titleSlug\": \"find-k-th-smallest-pair-distance\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Heap"
        ],
        "content": "<p>You are given two integer arrays <b>nums1</b> and <b>nums2</b> sorted in ascending order and an integer <b>k</b>.</p>\n\n<p>Define a pair <b>(u,v)</b> which consists of one element from the first array and one element from the second array.</p>\n\n<p>Find the k pairs <b>(u<sub>1</sub>,v<sub>1</sub>),(u<sub>2</sub>,v<sub>2</sub>) ...(u<sub>k</sub>,v<sub>k</sub>)</b> with the smallest sums.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>nums1 = <span id=\"example-input-1-1\">[1,7,11]</span>, nums2 = <span id=\"example-input-1-2\">[2,4,6]</span>, k = <span id=\"example-input-1-3\">3</span>\n<strong>Output: </strong><span id=\"example-output-1\">[[1,2],[1,4],[1,6]] \n<strong>Explanation: </strong></span>The first 3 pairs are returned from the sequence: \n&nbsp;            [1,2],[1,4],[1,6],[7,2],[7,4],[11,2],[7,6],[11,4],[11,6]</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>nums1 = [1,1,2], nums2 = [1,2,3], k = 2\n<strong>Output: </strong>[1,1],[1,1]<span>\n<strong>Explanation: </strong></span>The first 2 pairs are returned from the sequence: \n&nbsp;            [1,1],[1,1],[1,2],[2,1],[1,2],[2,2],[1,3],[1,3],[2,3]</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>nums1 = [1,2], nums2 = [3], k = 3\n<strong>Output: </strong>[1,3],[2,3]<span>\n<strong>Explanation: </strong></span>All possible pairs are returned from the sequence: [1,3],[2,3]\n</pre>\n"
    },
    {
        "id": "1054",
        "title": "Distant Barcodes",
        "slug": "distant-barcodes",
        "difficulty": "Medium",
        "likes": 153,
        "dislikes": 10,
        "hints": [
            "We want to always choose the most common or second most common element to write next.  What data structure allows us to query this effectively?"
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Heap",
            "Sort"
        ],
        "content": "<p>In a warehouse, there is a row of barcodes, where the <code>i</code>-th barcode is&nbsp;<code>barcodes[i]</code>.</p>\n\n<p>Rearrange the barcodes so that no two adjacent barcodes are equal.&nbsp; You may return any answer, and it is guaranteed an answer exists.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[1,1,1,2,2,2]</span>\n<strong>Output: </strong><span id=\"example-output-1\">[2,1,2,1,2,1]</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[1,1,1,1,2,2,3,3]</span>\n<strong>Output: </strong><span id=\"example-output-2\">[1,3,1,3,2,1,2,1]</span></pre>\n</div>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= barcodes.length &lt;= 10000</code></li>\n\t<li><code>1 &lt;= barcodes[i] &lt;= 10000</code></li>\n</ol>\n\n<div>\n<div>&nbsp;</div>\n</div>"
    },
    {
        "id": "176",
        "title": "Second Highest Salary",
        "slug": "second-highest-salary",
        "difficulty": "Easy",
        "likes": 558,
        "dislikes": 296,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "217",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [],
        "content": "<p>Write a SQL query to get the second highest salary from the <code>Employee</code> table.</p>\n\n<pre>\n+----+--------+\n| Id | Salary |\n+----+--------+\n| 1  | 100    |\n| 2  | 200    |\n| 3  | 300    |\n+----+--------+\n</pre>\n\n<p>For example, given the above Employee table, the query should return <code>200</code> as the second highest salary. If there is no second highest salary, then the query should return <code>null</code>.</p>\n\n<pre>\n+---------------------+\n| SecondHighestSalary |\n+---------------------+\n| 200                 |\n+---------------------+\n</pre>\n"
    },
    {
        "id": "65",
        "title": "Valid Number",
        "slug": "valid-number",
        "difficulty": "Hard",
        "likes": 500,
        "dislikes": 3569,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"String to Integer (atoi)\", \"titleSlug\": \"string-to-integer-atoi\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Math",
            "String"
        ],
        "content": "<p>Validate if a given string can be interpreted as&nbsp;a decimal number.</p>\n\n<p>Some examples:<br />\n<code>&quot;0&quot;</code> =&gt; <code>true</code><br />\n<code>&quot; 0.1 &quot;</code> =&gt; <code>true</code><br />\n<code>&quot;abc&quot;</code> =&gt; <code>false</code><br />\n<code>&quot;1 a&quot;</code> =&gt; <code>false</code><br />\n<code>&quot;2e10&quot;</code> =&gt; <code>true</code><br />\n<code>&quot; -90e3&nbsp; &nbsp;&quot;</code> =&gt; <code>true</code><br />\n<code>&quot; 1e&quot;</code> =&gt; <code>false</code><br />\n<code>&quot;e3&quot;</code> =&gt; <code>false</code><br />\n<code>&quot; 6e-1&quot;</code> =&gt; <code>true</code><br />\n<code>&quot; 99e2.5&nbsp;&quot;</code> =&gt; <code>false</code><br />\n<code>&quot;53.5e93&quot;</code> =&gt; <code>true</code><br />\n<code>&quot; --6 &quot;</code> =&gt; <code>false</code><br />\n<code>&quot;-+3&quot;</code> =&gt; <code>false</code><br />\n<code>&quot;95a54e53&quot;</code> =&gt; <code>false</code></p>\n\n<p><strong>Note:</strong> It is intended for the problem statement to be ambiguous. You should gather all requirements up front before implementing one. However, here is a list of characters that can be in a valid decimal number:</p>\n\n<ul>\n\t<li>Numbers 0-9</li>\n\t<li>Exponent - &quot;e&quot;</li>\n\t<li>Positive/negative sign - &quot;+&quot;/&quot;-&quot;</li>\n\t<li>Decimal point - &quot;.&quot;</li>\n</ul>\n\n<p>Of course, the context of these characters also matters in the input.</p>\n\n<p><strong>Update (2015-02-10):</strong><br />\nThe signature of the <code>C++</code> function had been updated. If you still see your function signature accepts a <code>const char *</code> argument, please click the reload button to reset your code definition.</p>\n"
    },
    {
        "id": "283",
        "title": "Move Zeroes",
        "slug": "move-zeroes",
        "difficulty": "Easy",
        "likes": 2333,
        "dislikes": 83,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Remove Element\", \"titleSlug\": \"remove-element\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "52",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Two Pointers"
        ],
        "content": "<p>Given an array <code>nums</code>, write a function to move all <code>0</code>&#39;s to the end of it while maintaining the relative order of the non-zero elements.</p>\n\n<p><b>Example:</b></p>\n\n<pre>\n<b>Input:</b> <code>[0,1,0,3,12]</code>\n<b>Output:</b> <code>[1,3,12,0,0]</code></pre>\n\n<p><b>Note</b>:</p>\n\n<ol>\n\t<li>You must do this <b>in-place</b> without making a copy of the array.</li>\n\t<li>Minimize the total number of operations.</li>\n</ol>"
    },
    {
        "id": "71",
        "title": "Simplify Path",
        "slug": "simplify-path",
        "difficulty": "Medium",
        "likes": 495,
        "dislikes": 1320,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "String",
            "Stack"
        ],
        "content": "<p>Given an <strong>absolute path</strong> for a file (Unix-style), simplify it. Or in other words, convert it to the <strong>canonical path</strong>.</p>\n\n<p>In a UNIX-style file system, a period <code>.</code>&nbsp;refers to the current directory. Furthermore, a double period <code>..</code>&nbsp;moves the directory up a level. For more information, see:&nbsp;<a href=\"https://www.linuxnix.com/abslute-path-vs-relative-path-in-linuxunix/\" target=\"_blank\">Absolute path&nbsp;vs&nbsp;relative&nbsp;path&nbsp;in&nbsp;Linux/Unix</a></p>\n\n<p>Note that the returned canonical path must always begin&nbsp;with a slash <code>/</code>, and there must be only a single slash <code>/</code>&nbsp;between two directory names.&nbsp;The last directory name (if it exists) <b>must not</b>&nbsp;end with a trailing <code>/</code>. Also, the canonical path must be the <strong>shortest</strong> string&nbsp;representing the absolute path.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: &quot;</strong><span id=\"example-input-1-1\">/home/&quot;</span>\n<strong>Output: &quot;</strong><span id=\"example-output-1\">/home&quot;\n<strong>Explanation:</strong> Note that there is no trailing slash after the last directory name.</span>\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: &quot;</strong><span id=\"example-input-1-1\">/../&quot;</span>\n<strong>Output: &quot;</strong><span id=\"example-output-1\">/&quot;</span>\n<strong>Explanation:</strong> Going one level up from the root directory is a no-op, as the root level is the highest level you can go.\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: &quot;</strong><span id=\"example-input-1-1\">/home//foo/&quot;</span>\n<strong>Output: &quot;</strong><span id=\"example-output-1\">/home/foo&quot;</span>\n<strong>Explanation: </strong>In the canonical path, multiple consecutive slashes are replaced by a single one.\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input: &quot;</strong><span id=\"example-input-1-1\">/a/./b/../../c/&quot;</span>\n<strong>Output: &quot;</strong><span id=\"example-output-1\">/c&quot;</span>\n</pre>\n\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input: &quot;</strong><span id=\"example-input-1-1\">/a/../../b/../c//.//&quot;</span>\n<strong>Output: &quot;</strong><span id=\"example-output-1\">/c&quot;</span>\n</pre>\n\n<p><strong>Example 6:</strong></p>\n\n<pre>\n<strong>Input: &quot;</strong><span id=\"example-input-1-1\">/a//b////c/d//././/..&quot;</span>\n<strong>Output: &quot;</strong><span id=\"example-output-1\">/a/b/c&quot;</span>\n</pre>\n"
    },
    {
        "id": "460",
        "title": "LFU Cache",
        "slug": "lfu-cache",
        "difficulty": "Hard",
        "likes": 806,
        "dislikes": 86,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"LRU Cache\", \"titleSlug\": \"lru-cache\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Design In-Memory File System\", \"titleSlug\": \"design-in-memory-file-system\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Design"
        ],
        "content": "<p>Design and implement a data structure for <a href=\"https://en.wikipedia.org/wiki/Least_frequently_used\" target=\"_blank\">Least Frequently Used (LFU)</a> cache. It should support the following operations: <code>get</code> and <code>put</code>.\n</p>\n\n<p>\n<code>get(key)</code> - Get the value (will always be positive) of the key if the key exists in the cache, otherwise return -1.<br>\n<code>put(key, value)</code> - Set or insert the value if the key is not already present. When the cache reaches its capacity, it should invalidate the least frequently used item before inserting a new item. For the purpose of this problem, when there is a tie (i.e., two or more keys that have the same frequency), the least <b>recently</b> used key would be evicted.\n</p>\n\n<p><b>Follow up:</b><br />\nCould you do both operations in <b>O(1)</b> time complexity?</p>\n\n<p><b>Example:</b>\n<pre>\nLFUCache cache = new LFUCache( 2 /* capacity */ );\n\ncache.put(1, 1);\ncache.put(2, 2);\ncache.get(1);       // returns 1\ncache.put(3, 3);    // evicts key 2\ncache.get(2);       // returns -1 (not found)\ncache.get(3);       // returns 3.\ncache.put(4, 4);    // evicts key 1.\ncache.get(1);       // returns -1 (not found)\ncache.get(3);       // returns 3\ncache.get(4);       // returns 4\n</pre>\n</p>"
    },
    {
        "id": "332",
        "title": "Reconstruct Itinerary",
        "slug": "reconstruct-itinerary",
        "difficulty": "Medium",
        "likes": 904,
        "dislikes": 594,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Depth-first Search",
            "Graph"
        ],
        "content": "<p>Given a list of airline tickets represented by pairs of departure and arrival airports <code>[from, to]</code>, reconstruct the itinerary in order. All of the tickets belong to a man who departs from <code>JFK</code>. Thus, the itinerary must begin with <code>JFK</code>.</p>\n\n<p><b>Note:</b></p>\n\n<ol>\n\t<li>If there are multiple valid itineraries, you should return the itinerary that has the smallest lexical order when read as a single string. For example, the itinerary <code>[&quot;JFK&quot;, &quot;LGA&quot;]</code> has a smaller lexical order than <code>[&quot;JFK&quot;, &quot;LGB&quot;]</code>.</li>\n\t<li>All airports are represented by three capital letters (IATA code).</li>\n\t<li>You may assume all tickets form at least one valid itinerary.</li>\n</ol>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<code><strong>Input: </strong></code><code>[[&quot;MUC&quot;, &quot;LHR&quot;], [&quot;JFK&quot;, &quot;MUC&quot;], [&quot;SFO&quot;, &quot;SJC&quot;], [&quot;LHR&quot;, &quot;SFO&quot;]]</code>\n<strong>Output: </strong><code>[&quot;JFK&quot;, &quot;MUC&quot;, &quot;LHR&quot;, &quot;SFO&quot;, &quot;SJC&quot;]</code>\n</pre>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<code><strong>Input: </strong></code><code>[[&quot;JFK&quot;,&quot;SFO&quot;],[&quot;JFK&quot;,&quot;ATL&quot;],[&quot;SFO&quot;,&quot;ATL&quot;],[&quot;ATL&quot;,&quot;JFK&quot;],[&quot;ATL&quot;,&quot;SFO&quot;]]</code>\n<strong>Output: </strong><code>[&quot;JFK&quot;,&quot;ATL&quot;,&quot;JFK&quot;,&quot;SFO&quot;,&quot;ATL&quot;,&quot;SFO&quot;]</code>\n<strong>Explanation: </strong>Another possible reconstruction is <code>[&quot;JFK&quot;,&quot;SFO&quot;,&quot;ATL&quot;,&quot;JFK&quot;,&quot;ATL&quot;,&quot;SFO&quot;]</code>.\n&nbsp;            But it is larger in lexical order.\n</pre>\n"
    },
    {
        "id": "958",
        "title": "Check Completeness of a Binary Tree",
        "slug": "check-completeness-of-a-binary-tree",
        "difficulty": "Medium",
        "likes": 331,
        "dislikes": 7,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "642",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree"
        ],
        "content": "<p>Given a binary tree, determine if it is a <em>complete binary tree</em>.</p>\n\n<p><u><b>Definition of a complete binary tree from <a href=\"http://en.wikipedia.org/wiki/Binary_tree#Types_of_binary_trees\" target=\"_blank\">Wikipedia</a>:</b></u><br />\nIn a complete binary tree every level, except possibly the last, is completely filled, and all nodes in the last level are as far left as possible. It can have between 1 and 2<sup>h</sup> nodes inclusive at the last level h.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<p><strong><img alt=\"\" src=\"./img/check-completeness-of-a-binary-tree_1.png\" style=\"width: 180px; height: 145px;\" /></strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[1,2,3,4,5,6]</span>\n<strong>Output: </strong><span id=\"example-output-1\">true</span>\n<span><strong>Explanation: </strong></span>Every level before the last is full (ie. levels with node-values {1} and {2, 3}), and all nodes in the last level ({4, 5, 6}) are as far left as possible.\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<p><strong><img alt=\"\" src=\"./img/check-completeness-of-a-binary-tree_2.png\" style=\"width: 200px; height: 145px;\" /></strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[1,2,3,4,5,null,7]</span>\n<strong>Output: </strong><span id=\"example-output-2\">false</span>\n<strong>Explanation: </strong>The node with value 7 isn&#39;t as far left as possible.<span>\n</span></pre>\n\n<div>&nbsp;</div>\n</div>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li>The tree will have between 1 and 100 nodes.</li>\n</ol>\n"
    },
    {
        "id": "438",
        "title": "Find All Anagrams in a String",
        "slug": "find-all-anagrams-in-a-string",
        "difficulty": "Medium",
        "likes": 1808,
        "dislikes": 140,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Valid Anagram\", \"titleSlug\": \"valid-anagram\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Permutation in String\", \"titleSlug\": \"permutation-in-string\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Hash Table"
        ],
        "content": "<p>Given a string <b>s</b> and a <b>non-empty</b> string <b>p</b>, find all the start indices of <b>p</b>'s anagrams in <b>s</b>.</p>\n\n<p>Strings consists of lowercase English letters only and the length of both strings <b>s</b> and <b>p</b> will not be larger than 20,100.</p>\n\n<p>The order of output does not matter.</p>\n\n<p><b>Example 1:</b>\n<pre>\n<b>Input:</b>\ns: \"cbaebabacd\" p: \"abc\"\n\n<b>Output:</b>\n[0, 6]\n\n<b>Explanation:</b>\nThe substring with start index = 0 is \"cba\", which is an anagram of \"abc\".\nThe substring with start index = 6 is \"bac\", which is an anagram of \"abc\".\n</pre>\n</p>\n\n<p><b>Example 2:</b>\n<pre>\n<b>Input:</b>\ns: \"abab\" p: \"ab\"\n\n<b>Output:</b>\n[0, 1, 2]\n\n<b>Explanation:</b>\nThe substring with start index = 0 is \"ab\", which is an anagram of \"ab\".\nThe substring with start index = 1 is \"ba\", which is an anagram of \"ab\".\nThe substring with start index = 2 is \"ab\", which is an anagram of \"ab\".\n</pre>\n</p>"
    },
    {
        "id": "589",
        "title": "N-ary Tree Preorder Traversal",
        "slug": "n-ary-tree-preorder-traversal",
        "difficulty": "Easy",
        "likes": 290,
        "dislikes": 40,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Binary Tree Preorder Traversal\", \"titleSlug\": \"binary-tree-preorder-traversal\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"N-ary Tree Level Order Traversal\", \"titleSlug\": \"n-ary-tree-level-order-traversal\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"N-ary Tree Postorder Traversal\", \"titleSlug\": \"n-ary-tree-postorder-traversal\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "603",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree"
        ],
        "content": "<p>Given an n-ary tree, return the <i>preorder</i> traversal of its nodes&#39; values.</p>\n\n<p>For example, given a <code>3-ary</code> tree:</p>\n\n<p>&nbsp;</p>\n\n<p><img src=\"./img/n-ary-tree-preorder-traversal_1.png\" style=\"width: 100%; max-width: 300px;\" /></p>\n\n<p>&nbsp;</p>\n\n<p>Return its preorder traversal as: <code>[1,3,5,6,2,4]</code>.</p>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b></p>\n\n<p>Recursive solution is trivial, could you do it iteratively?</p>\n"
    },
    {
        "id": "466",
        "title": "Count The Repetitions",
        "slug": "count-the-repetitions",
        "difficulty": "Hard",
        "likes": 122,
        "dislikes": 95,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "230",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>Define <code>S = [s,n]</code> as the string S which consists of n connected strings s. For example, <code>[\"abc\", 3]</code> =\"abcabcabc\". </p>\n<p>On the other hand, we define that string s1 can be obtained from string s2 if we can remove some characters from s2 such that it becomes s1. For example, \u201cabc\u201d  can be obtained from \u201cabdbec\u201d based on our definition, but it can not be obtained from \u201cacbbe\u201d.</p>\n<p>You are given two non-empty strings s1 and s2 (each at most 100 characters long) and two integers 0 &le; n1 &le; 10<sup>6</sup> and 1 &le; n2 &le; 10<sup>6</sup>. Now consider the strings S1 and S2, where <code>S1=[s1,n1]</code> and <code>S2=[s2,n2]</code>. Find the maximum integer M such that <code>[S2,M]</code> can be obtained from <code>S1</code>.</p>\n\n<p><b>Example:</b>\n<pre>\nInput:\ns1=\"acb\", n1=4\ns2=\"ab\", n2=2\n\nReturn:\n2\n</pre>\n</p>"
    },
    {
        "id": "222",
        "title": "Count Complete Tree Nodes",
        "slug": "count-complete-tree-nodes",
        "difficulty": "Medium",
        "likes": 1187,
        "dislikes": 150,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Closest Binary Search Tree Value\", \"titleSlug\": \"closest-binary-search-tree-value\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "741",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Binary Search",
            "Tree"
        ],
        "content": "<p>Given a <b>complete</b> binary tree, count the number of nodes.</p>\n\n<p><b>Note: </b></p>\n\n<p><b><u>Definition of a complete binary tree from <a href=\"http://en.wikipedia.org/wiki/Binary_tree#Types_of_binary_trees\" target=\"_blank\">Wikipedia</a>:</u></b><br />\nIn a complete binary tree every level, except possibly the last, is completely filled, and all nodes in the last level are as far left as possible. It can have between 1 and 2<sup>h</sup> nodes inclusive at the last level h.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input:</strong> \n    1\n   / \\\n  2   3\n / \\  /\n4  5 6\n\n<strong>Output:</strong> 6</pre>\n"
    },
    {
        "id": "662",
        "title": "Maximum Width of Binary Tree",
        "slug": "maximum-width-of-binary-tree",
        "difficulty": "Medium",
        "likes": 735,
        "dislikes": 144,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "330",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree"
        ],
        "content": "<p>Given a binary tree, write a function to get the maximum width of the given tree. The width of a tree is the maximum width among all levels. The binary tree has the same structure as a <b>full binary tree</b>, but some nodes are null.</p>\n\n<p>The width of one level is defined as the length between the end-nodes (the leftmost and right most non-null nodes in the level, where the <code>null</code> nodes between the end-nodes are also counted into the length calculation.</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> \n\n           1\n         /   \\\n        3     2\n       / \\     \\  \n      5   3     9 \n\n<b>Output:</b> 4\n<b>Explanation:</b> The maximum width existing in the third level with the length 4 (5,3,null,9).\n</pre>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input:</b> \n\n          1\n         /  \n        3    \n       / \\       \n      5   3     \n\n<b>Output:</b> 2\n<b>Explanation:</b> The maximum width existing in the third level with the length 2 (5,3).\n</pre>\n\n<p><b>Example 3:</b></p>\n\n<pre>\n<b>Input:</b> \n\n          1\n         / \\\n        3   2 \n       /        \n      5      \n\n<b>Output:</b> 2\n<b>Explanation:</b> The maximum width existing in the second level with the length 2 (3,2).\n</pre>\n\n<p><b>Example 4:</b></p>\n\n<pre>\n<b>Input:</b> \n\n          1\n         / \\\n        3   2\n       /     \\  \n      5       9 \n     /         \\\n    6           7\n<b>Output:</b> 8\n<b>Explanation:</b>The maximum width existing in the fourth level with the length 8 (6,null,null,null,null,null,null,7).\n\n\n</pre>\n\n<p><b>Note:</b> Answer will in the range of 32-bit signed integer.</p>\n"
    },
    {
        "id": "843",
        "title": "Guess the Word",
        "slug": "guess-the-word",
        "difficulty": "Hard",
        "likes": 319,
        "dislikes": 344,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "473",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Minimax"
        ],
        "content": "<p>This problem is an&nbsp;<strong><em>interactive problem</em></strong>&nbsp;new to the LeetCode platform.</p>\n\n<p>We are given a word list of unique words, each word is 6 letters long, and one word in this list is chosen as <strong>secret</strong>.</p>\n\n<p>You may call <code>master.guess(word)</code>&nbsp;to guess a word.&nbsp; The guessed word should have&nbsp;type <code>string</code>&nbsp;and must be from the original list&nbsp;with 6 lowercase letters.</p>\n\n<p>This function returns an&nbsp;<code>integer</code>&nbsp;type, representing&nbsp;the number of exact matches (value and position) of your guess to the <strong>secret word</strong>.&nbsp; Also, if your guess is not in the given wordlist, it will return <code>-1</code> instead.</p>\n\n<p>For each test case, you have 10 guesses to guess the word. At the end of any number of calls, if you have made 10 or less calls to <code>master.guess</code>&nbsp;and at least one of these guesses was the <strong>secret</strong>, you pass the testcase.</p>\n\n<p>Besides the example test case below, there will be 5&nbsp;additional test cases, each with 100 words in the word list.&nbsp; The letters of each word in those testcases were chosen&nbsp;independently at random from <code>&#39;a&#39;</code> to <code>&#39;z&#39;</code>, such that every word in the given word lists is unique.</p>\n\n<pre>\n<strong>Example 1:</strong>\n<strong>Input:</strong>&nbsp;secret = &quot;acckzz&quot;, wordlist = [&quot;acckzz&quot;,&quot;ccbazz&quot;,&quot;eiowzz&quot;,&quot;abcczz&quot;]\n\n<strong>Explanation:</strong>\n\n<code>master.guess(&quot;aaaaaa&quot;)</code> returns -1, because&nbsp;<code>&quot;aaaaaa&quot;</code>&nbsp;is not in wordlist.\n<code>master.guess(&quot;acckzz&quot;) </code>returns 6, because&nbsp;<code>&quot;acckzz&quot;</code> is secret and has all 6&nbsp;matches.\n<code>master.guess(&quot;ccbazz&quot;)</code> returns 3, because<code>&nbsp;&quot;ccbazz&quot;</code>&nbsp;has 3 matches.\n<code>master.guess(&quot;eiowzz&quot;)</code> returns 2, because&nbsp;<code>&quot;eiowzz&quot;</code>&nbsp;has 2&nbsp;matches.\n<code>master.guess(&quot;abcczz&quot;)</code> returns 4, because&nbsp;<code>&quot;abcczz&quot;</code> has 4 matches.\n\nWe made 5 calls to&nbsp;master.guess and one of them was the secret, so we pass the test case.\n</pre>\n\n<p><strong>Note:</strong>&nbsp; Any solutions that attempt to circumvent the judge&nbsp;will result in disqualification.</p>\n"
    },
    {
        "id": "979",
        "title": "Distribute Coins in Binary Tree",
        "slug": "distribute-coins-in-binary-tree",
        "difficulty": "Medium",
        "likes": 703,
        "dislikes": 23,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Sum of Distances in Tree\", \"titleSlug\": \"sum-of-distances-in-tree\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Binary Tree Cameras\", \"titleSlug\": \"binary-tree-cameras\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "668",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree",
            "Depth-first Search"
        ],
        "content": "<p>Given the <code>root</code> of a binary tree with <code>N</code> nodes, each <code>node</code>&nbsp;in the tree has <code>node.val</code> coins, and there are <code>N</code> coins total.</p>\n\n<p>In one move, we may choose two adjacent nodes and move one coin from one node to another.&nbsp; (The move may be from parent to child, or from child to parent.)</p>\n\n<p>Return the number of moves required to make every node have exactly one coin.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<p><strong><img alt=\"\" src=\"./img/distribute-coins-in-binary-tree_1.png\" style=\"width: 150px; height: 142px;\" /></strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[3,0,0]</span>\n<strong>Output: </strong><span id=\"example-output-1\">2</span>\n<strong>Explanation: </strong>From the root of the tree, we move one coin to its left child, and one coin to its right child.\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<p><strong><img alt=\"\" src=\"./img/distribute-coins-in-binary-tree_2.png\" style=\"width: 150px; height: 142px;\" /></strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[0,3,0]</span>\n<strong>Output: </strong><span id=\"example-output-2\">3</span>\n<strong>Explanation: </strong>From the left child of the root, we move two coins to the root [taking two moves].  Then, we move one coin from the root of the tree to the right child.\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<p><strong><img alt=\"\" src=\"./img/distribute-coins-in-binary-tree_3.png\" style=\"width: 150px; height: 142px;\" /></strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">[1,0,2]</span>\n<strong>Output: </strong><span id=\"example-output-3\">2</span>\n</pre>\n\n<div>\n<p><strong>Example 4:</strong></p>\n\n<p><strong><img alt=\"\" src=\"./img/distribute-coins-in-binary-tree_4.png\" style=\"width: 155px; height: 156px;\" /></strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-4-1\">[1,0,0,null,3]</span>\n<strong>Output: </strong><span id=\"example-output-4\">4</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong><span>Note:</span></strong></p>\n\n<ol>\n\t<li><code>1&lt;= N &lt;= 100</code></li>\n\t<li><code>0 &lt;= node.val &lt;= N</code></li>\n</ol>\n</div>\n</div>\n</div>\n</div>"
    },
    {
        "id": "714",
        "title": "Best Time to Buy and Sell Stock with Transaction Fee",
        "slug": "best-time-to-buy-and-sell-stock-with-transaction-fee",
        "difficulty": "Medium",
        "likes": 1020,
        "dislikes": 33,
        "hints": [
            "Consider the first K stock prices.  At the end, the only legal states are that you don't own a share of stock, or that you do.  Calculate the most profit you could have under each of these two cases."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Best Time to Buy and Sell Stock II\", \"titleSlug\": \"best-time-to-buy-and-sell-stock-ii\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "265",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Dynamic Programming",
            "Greedy"
        ],
        "content": "<p>Your are given an array of integers <code>prices</code>, for which the <code>i</code>-th element is the price of a given stock on day <code>i</code>; and a non-negative integer <code>fee</code> representing a transaction fee.</p>\n<p>You may complete as many transactions as you like, but you need to pay the transaction fee for each transaction.  You may not buy more than 1 share of a stock at a time (ie. you must sell the stock share before you buy again.)</p>\n<p>Return the maximum profit you can make.</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> prices = [1, 3, 2, 8, 4, 9], fee = 2\n<b>Output:</b> 8\n<b>Explanation:</b> The maximum profit can be achieved by:\n<li>Buying at prices[0] = 1</li><li>Selling at prices[3] = 8</li><li>Buying at prices[4] = 4</li><li>Selling at prices[5] = 9</li>The total profit is ((8 - 1) - 2) + ((9 - 4) - 2) = 8.\n</pre>\n</p>\n\n<p><b>Note:</b>\n<li><code>0 < prices.length <= 50000</code>.</li>\n<li><code>0 < prices[i] < 50000</code>.</li>\n<li><code>0 <= fee < 50000</code>.</li>\n</p>"
    },
    {
        "id": "11",
        "title": "Container With Most Water",
        "slug": "container-with-most-water",
        "difficulty": "Medium",
        "likes": 3875,
        "dislikes": 469,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Trapping Rain Water\", \"titleSlug\": \"trapping-rain-water\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "55",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Two Pointers"
        ],
        "content": "<p>Given <i>n</i> non-negative integers <i>a<sub>1</sub></i>, <i>a<sub>2</sub></i>, ..., <i>a<sub>n&nbsp;</sub></i>, where each represents a point at coordinate (<i>i</i>, <i>a<sub>i</sub></i>). <i>n</i> vertical lines are drawn such that the two endpoints of line <i>i</i> is at (<i>i</i>, <i>a<sub>i</sub></i>) and (<i>i</i>, 0). Find two lines, which together with x-axis forms a container, such that the container contains the most water.</p>\n\n<p><strong>Note:&nbsp;</strong>You may not slant the container and <i>n</i> is at least 2.</p>\n\n<p>&nbsp;</p>\n\n<p><img alt=\"\" src=\"./img/container-with-most-water_1.jpg\" style=\"width: 600px; height: 287px;\" /></p>\n\n<p><small>The above vertical lines are represented by array [1,8,6,2,5,4,8,3,7]. In this case, the max area of water (blue section) the container can contain&nbsp;is 49. </small></p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input:</strong> [1,8,6,2,5,4,8,3,7]\n<strong>Output:</strong> 49</pre>\n"
    },
    {
        "id": "345",
        "title": "Reverse Vowels of a String",
        "slug": "reverse-vowels-of-a-string",
        "difficulty": "Easy",
        "likes": 432,
        "dislikes": 816,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Reverse String\", \"titleSlug\": \"reverse-string\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Remove Vowels from a String\", \"titleSlug\": \"remove-vowels-from-a-string\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Two Pointers",
            "String"
        ],
        "content": "<p>Write a function that takes a string as input and reverse only the vowels of a string.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">&quot;hello&quot;</span>\n<strong>Output: </strong><span id=\"example-output-1\">&quot;holle&quot;</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">&quot;leetcode&quot;</span>\n<strong>Output: </strong><span id=\"example-output-2\">&quot;leotcede&quot;</span></pre>\n</div>\n\n<p><b>Note:</b><br />\nThe vowels does not include the letter &quot;y&quot;.</p>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "134",
        "title": "Gas Station",
        "slug": "gas-station",
        "difficulty": "Medium",
        "likes": 880,
        "dislikes": 306,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "707",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Greedy"
        ],
        "content": "<p>There are <em>N</em> gas stations along a circular route, where the amount of gas at station <em>i</em> is <code>gas[i]</code>.</p>\n\n<p>You have a car with an unlimited gas tank and it costs <code>cost[i]</code> of gas to travel from station <em>i</em> to its next station (<em>i</em>+1). You begin the journey with an empty tank at one of the gas stations.</p>\n\n<p>Return the starting gas station&#39;s index if you can travel around the circuit once in the clockwise direction, otherwise return -1.</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>If there exists a&nbsp;solution, it is guaranteed to be unique.</li>\n\t<li>Both input arrays are non-empty and have the same length.</li>\n\t<li>Each element in the input arrays is a non-negative integer.</li>\n</ul>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> \ngas  = [1,2,3,4,5]\ncost = [3,4,5,1,2]\n\n<strong>Output:</strong> 3\n\n<strong>Explanation:\n</strong>Start at station 3 (index 3) and fill up with 4 unit of gas. Your tank = 0 + 4 = 4\nTravel to station 4. Your tank = 4 - 1 + 5 = 8\nTravel to station 0. Your tank = 8 - 2 + 1 = 7\nTravel to station 1. Your tank = 7 - 3 + 2 = 6\nTravel to station 2. Your tank = 6 - 4 + 3 = 5\nTravel to station 3. The cost is 5. Your gas is just enough to travel back to station 3.\nTherefore, return 3 as the starting index.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> \ngas  = [2,3,4]\ncost = [3,4,3]\n\n<strong>Output:</strong> -1\n\n<strong>Explanation:\n</strong>You can&#39;t start at station 0 or 1, as there is not enough gas to travel to the next station.\nLet&#39;s start at station 2 and fill up with 4 unit of gas. Your tank = 0 + 4 = 4\nTravel to station 0. Your tank = 4 - 3 + 2 = 3\nTravel to station 1. Your tank = 3 - 3 + 3 = 3\nYou cannot travel back to station 2, as it requires 4 unit of gas but you only have 3.\nTherefore, you can&#39;t travel around the circuit once no matter where you start.\n</pre>\n"
    },
    {
        "id": "781",
        "title": "Rabbits in Forest",
        "slug": "rabbits-in-forest",
        "difficulty": "Medium",
        "likes": 173,
        "dislikes": 225,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "414",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Hash Table",
            "Math"
        ],
        "content": "<p>In a forest, each rabbit has some color. Some subset of rabbits (possibly all of them) tell you how many other rabbits have the same color as them. Those <code>answers</code> are placed in an array.</p>\n\n<p>Return the minimum number of rabbits that could be in the forest.</p>\n\n<pre>\n<strong>Examples:</strong>\n<strong>Input:</strong> answers = [1, 1, 2]\n<strong>Output:</strong> 5\n<strong>Explanation:</strong>\nThe two rabbits that answered &quot;1&quot; could both be the same color, say red.\nThe rabbit than answered &quot;2&quot; can&#39;t be red or the answers would be inconsistent.\nSay the rabbit that answered &quot;2&quot; was blue.\nThen there should be 2 other blue rabbits in the forest that didn&#39;t answer into the array.\nThe smallest possible number of rabbits in the forest is therefore 5: 3 that answered plus 2 that didn&#39;t.\n\n<strong>Input:</strong> answers = [10, 10, 10]\n<strong>Output:</strong> 11\n\n<strong>Input:</strong> answers = []\n<strong>Output:</strong> 0\n</pre>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>answers</code> will have length at most <code>1000</code>.</li>\n\t<li>Each <code>answers[i]</code> will be an integer in the range <code>[0, 999]</code>.</li>\n</ol>\n"
    },
    {
        "id": "481",
        "title": "Magical String",
        "slug": "magical-string",
        "difficulty": "Medium",
        "likes": 85,
        "dislikes": 569,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [],
        "content": "<p>\nA magical string <b>S</b> consists of only '1' and '2' and obeys the following rules:\n</p>\n<p>\nThe string <b>S</b> is magical because concatenating the number of contiguous occurrences of characters '1' and '2' generates the string <b>S</b> itself.\n</p>\n\n<p>\nThe first few elements of string <b>S</b> is the following:\n<b>S</b> = \"1221121221221121122\u2026\u2026\"\n</p>\n\n<p>\nIf we group the consecutive '1's and '2's in <b>S</b>, it will be:\n</p>\n<p>\n1   22  11  2  1  22  1  22  11  2  11  22 ......\n</p>\n<p>\nand the occurrences of '1's or '2's in each group are:\n</p>\n<p>\n1   2\t   2    1   1    2     1    2     2    1    2    2 ......\n</p>\n\n<p>\nYou can see that the occurrence sequence above is the <b>S</b> itself. \n</p>\n\n<p>\nGiven an integer N as input, return the number of '1's in the first N number in the magical string <b>S</b>.\n</p>\n\n<p><b>Note:</b>\nN will not exceed 100,000.\n</p>\n\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> 6\n<b>Output:</b> 3\n<b>Explanation:</b> The first 6 elements of magical string S is \"12211\" and it contains three 1's, so return 3.\n</pre>\n</p>"
    },
    {
        "id": "350",
        "title": "Intersection of Two Arrays II",
        "slug": "intersection-of-two-arrays-ii",
        "difficulty": "Easy",
        "likes": 801,
        "dislikes": 286,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Intersection of Two Arrays\", \"titleSlug\": \"intersection-of-two-arrays\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Find Common Characters\", \"titleSlug\": \"find-common-characters\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Hash Table",
            "Two Pointers",
            "Binary Search",
            "Sort"
        ],
        "content": "<p>Given two arrays, write a function to compute their intersection.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>nums1 = <span id=\"example-input-1-1\">[1,2,2,1]</span>, nums2 = <span id=\"example-input-1-2\">[2,2]</span>\n<strong>Output: </strong><span id=\"example-output-1\">[2,2]</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>nums1 = <span id=\"example-input-2-1\">[4,9,5]</span>, nums2 = <span id=\"example-input-2-2\">[9,4,9,8,4]</span>\n<strong>Output: </strong><span id=\"example-output-2\">[4,9]</span></pre>\n</div>\n\n<p><b>Note:</b></p>\n\n<ul>\n\t<li>Each element in the result should appear as many times as it shows in both arrays.</li>\n\t<li>The result can be in any order.</li>\n</ul>\n\n<p><b>Follow up:</b></p>\n\n<ul>\n\t<li>What if the given array is already sorted? How would you optimize your algorithm?</li>\n\t<li>What if <i>nums1</i>&#39;s size is small compared to <i>nums2</i>&#39;s size? Which algorithm is better?</li>\n\t<li>What if elements of <i>nums2</i> are stored on disk, and the memory is limited such that you cannot load all elements into the memory at once?</li>\n</ul>\n"
    },
    {
        "id": "406",
        "title": "Queue Reconstruction by Height",
        "slug": "queue-reconstruction-by-height",
        "difficulty": "Medium",
        "likes": 1779,
        "dislikes": 199,
        "hints": [
            "What can you say about the position of the shortest person? </br>\r\nIf the position of the shortest person is <i>i</i>, how many people would be in front of the shortest person?",
            "Once you fix the position of the shortest person, what can you say about the position of the second shortest person?"
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Count of Smaller Numbers After Self\", \"titleSlug\": \"count-of-smaller-numbers-after-self\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "754",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Greedy"
        ],
        "content": "<p>Suppose you have a random list of people standing in a queue. Each person is described by a pair of integers <code>(h, k)</code>, where <code>h</code> is the height of the person and <code>k</code> is the number of people in front of this person who have a height greater than or equal to <code>h</code>. Write an algorithm to reconstruct the queue.</p>\n\n<p><b>Note:</b><br />\nThe number of people is less than 1,100.</p>\n&nbsp;\n\n<p><b>Example</b></p>\n\n<pre>\nInput:\n[[7,0], [4,4], [7,1], [5,0], [6,1], [5,2]]\n\nOutput:\n[[5,0], [7,0], [5,2], [6,1], [4,4], [7,1]]\n</pre>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "677",
        "title": "Map Sum Pairs",
        "slug": "map-sum-pairs",
        "difficulty": "Medium",
        "likes": 333,
        "dislikes": 62,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "245",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Trie"
        ],
        "content": "<p>\nImplement a MapSum class with <code>insert</code>, and <code>sum</code> methods.\n</p>\n\n<p>\nFor the method <code>insert</code>, you'll be given a pair of (string, integer). The string represents the key and the integer represents the value. If the key already existed, then the original key-value pair will be overridden to the new one.\n</p>\n\n<p>\nFor the method <code>sum</code>, you'll be given a string representing the prefix, and you need to return the sum of all the pairs' value whose key starts with the prefix.\n</p>\n\n<p><b>Example 1:</b><br />\n<pre>\nInput: insert(\"apple\", 3), Output: Null\nInput: sum(\"ap\"), Output: 3\nInput: insert(\"app\", 2), Output: Null\nInput: sum(\"ap\"), Output: 5\n</pre>\n</p>\n"
    },
    {
        "id": "42",
        "title": "Trapping Rain Water",
        "slug": "trapping-rain-water",
        "difficulty": "Hard",
        "likes": 4298,
        "dislikes": 80,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Container With Most Water\", \"titleSlug\": \"container-with-most-water\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Product of Array Except Self\", \"titleSlug\": \"product-of-array-except-self\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Trapping Rain Water II\", \"titleSlug\": \"trapping-rain-water-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Pour Water\", \"titleSlug\": \"pour-water\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "150",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Two Pointers",
            "Stack"
        ],
        "content": "<p>Given <em>n</em> non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it is able to trap after raining.</p>\n\n<p><img src=\"./img/trapping-rain-water_1.png\" style=\"width: 412px; height: 161px;\" /><br />\n<small>The above elevation map is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case, 6 units of rain water (blue section) are being trapped. <strong>Thanks Marcos</strong> for contributing this image!</small></p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input:</strong> [0,1,0,2,1,0,1,3,2,1,2,1]\n<strong>Output:</strong> 6</pre>\n"
    },
    {
        "id": "649",
        "title": "Dota2 Senate",
        "slug": "dota2-senate",
        "difficulty": "Medium",
        "likes": 219,
        "dislikes": 167,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Teemo Attacking\", \"titleSlug\": \"teemo-attacking\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "333",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Greedy"
        ],
        "content": "<p>In the world of Dota2, there are two parties: the <code>Radiant</code> and the <code>Dire</code>.</p>\n\n<p>The Dota2 senate consists of senators coming from two parties. Now the senate wants to make a decision about a change in the Dota2 game. The voting for this change is a round-based procedure. In each round, each senator can exercise <code>one</code> of the two rights:</p>\n\n<ol>\n\t<li><code>Ban one senator&#39;s right</code>:<br />\n\tA senator can make another senator lose <b>all his rights</b> in this and all the following rounds.</li>\n\t<li><code>Announce the victory</code>:<br />\n\tIf this senator found the senators who still have rights to vote are all from <b>the same party</b>, he can announce the victory and make the decision about the change in the game.</li>\n</ol>\n\n<p>&nbsp;</p>\n\n<p>Given a string representing each senator&#39;s party belonging. The character &#39;R&#39; and &#39;D&#39; represent the <code>Radiant</code> party and the <code>Dire</code> party respectively. Then if there are <code>n</code> senators, the size of the given string will be <code>n</code>.</p>\n\n<p>The round-based procedure starts from the first senator to the last senator in the given order. This procedure will last until the end of voting. All the senators who have lost their rights will be skipped during the procedure.</p>\n\n<p>Suppose every senator is smart enough and will play the best strategy for his own party, you need to predict which party will finally announce the victory and make the change in the Dota2 game. The output should be <code>Radiant</code> or <code>Dire</code>.</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> &quot;RD&quot;\n<b>Output:</b> &quot;Radiant&quot;\n<b>Explanation:</b> The first senator comes from Radiant and he can just ban the next senator&#39;s right in the round 1. \nAnd the second senator can&#39;t exercise any rights any more since his right has been banned. \nAnd in the round 2, the first senator can just announce the victory since he is the only guy in the senate who can vote.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input:</b> &quot;RDD&quot;\n<b>Output:</b> &quot;Dire&quot;\n<b>Explanation:</b> \nThe first senator comes from Radiant and he can just ban the next senator&#39;s right in the round 1. \nAnd the second senator can&#39;t exercise any rights anymore since his right has been banned. \nAnd the third senator comes from Dire and he can ban the first senator&#39;s right in the round 1. \nAnd in the round 2, the third senator can just announce the victory since he is the only guy in the senate who can vote.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b></p>\n\n<ol>\n\t<li>The length of the given string will in the range [1, 10,000].</li>\n</ol>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "701",
        "title": "Insert into a Binary Search Tree",
        "slug": "insert-into-a-binary-search-tree",
        "difficulty": "Medium",
        "likes": 425,
        "dislikes": 51,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Search in a Binary Search Tree\", \"titleSlug\": \"search-in-a-binary-search-tree\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "720",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree"
        ],
        "content": "<p>Given the root node of a binary search tree (BST) and a value to be inserted into the tree,&nbsp;insert the value into the BST. Return the root node of the BST after the insertion. It is guaranteed that the new value does not exist in the original BST.</p>\n\n<p>Note that there may exist&nbsp;multiple valid ways for the&nbsp;insertion, as long as the tree remains a BST after insertion. You can return any of them.</p>\n\n<p>For example,&nbsp;</p>\n\n<pre>\nGiven the tree:\n        4\n       / \\\n      2   7\n     / \\\n    1   3\nAnd the value to insert: 5\n</pre>\n\n<p>You can return this binary search tree:</p>\n\n<pre>\n         4\n       /   \\\n      2     7\n     / \\   /\n    1   3 5\n</pre>\n\n<p>This tree is also valid:</p>\n\n<pre>\n         5\n       /   \\\n      2     7\n     / \\   \n    1   3\n         \\\n          4\n</pre>\n"
    },
    {
        "id": "61",
        "title": "Rotate List",
        "slug": "rotate-list",
        "difficulty": "Medium",
        "likes": 703,
        "dislikes": 872,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Rotate Array\", \"titleSlug\": \"rotate-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Split Linked List in Parts\", \"titleSlug\": \"split-linked-list-in-parts\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "700",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Linked List",
            "Two Pointers"
        ],
        "content": "<p>Given a linked&nbsp;list, rotate the list to the right by <em>k</em> places, where <em>k</em> is non-negative.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> 1-&gt;2-&gt;3-&gt;4-&gt;5-&gt;NULL, k = 2\n<strong>Output:</strong> 4-&gt;5-&gt;1-&gt;2-&gt;3-&gt;NULL\n<strong>Explanation:</strong>\nrotate 1 steps to the right: 5-&gt;1-&gt;2-&gt;3-&gt;4-&gt;NULL\nrotate 2 steps to the right: 4-&gt;5-&gt;1-&gt;2-&gt;3-&gt;NULL\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> 0-&gt;1-&gt;2-&gt;NULL, k = 4\n<strong>Output:</strong> <code>2-&gt;0-&gt;1-&gt;NULL</code>\n<strong>Explanation:</strong>\nrotate 1 steps to the right: 2-&gt;0-&gt;1-&gt;NULL\nrotate 2 steps to the right: 1-&gt;2-&gt;0-&gt;NULL\nrotate 3 steps to the right:&nbsp;<code>0-&gt;1-&gt;2-&gt;NULL</code>\nrotate 4 steps to the right:&nbsp;<code>2-&gt;0-&gt;1-&gt;NULL</code></pre>\n"
    },
    {
        "id": "169",
        "title": "Majority Element",
        "slug": "majority-element",
        "difficulty": "Easy",
        "likes": 1939,
        "dislikes": 166,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Majority Element II\", \"titleSlug\": \"majority-element-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Check If a Number Is Majority Element in a Sorted Array\", \"titleSlug\": \"check-if-a-number-is-majority-element-in-a-sorted-array\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "293",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Divide and Conquer",
            "Bit Manipulation"
        ],
        "content": "<p>Given an array of size <i>n</i>, find the majority element. The majority element is the element that appears <b>more than</b> <code>&lfloor; n/2 &rfloor;</code> times.</p>\n\n<p>You may assume that the array is non-empty and the majority element always exist in the array.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> [3,2,3]\n<strong>Output:</strong> 3</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> [2,2,1,1,1,2,2]\n<strong>Output:</strong> 2\n</pre>\n"
    },
    {
        "id": "796",
        "title": "Rotate String",
        "slug": "rotate-string",
        "difficulty": "Easy",
        "likes": 445,
        "dislikes": 39,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "429",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [],
        "content": "<p>We are given two strings, <code>A</code> and <code>B</code>.</p>\n\n<p>A <em>shift on <code>A</code></em> consists of taking string <code>A</code> and moving the leftmost character to the rightmost position. For example, if <code>A = &#39;abcde&#39;</code>, then it will be <code>&#39;bcdea&#39;</code> after one shift on <code>A</code>. Return <code>True</code> if and only if <code>A</code> can become <code>B</code> after some number of shifts on <code>A</code>.</p>\n\n<pre>\n<strong>Example 1:</strong>\n<strong>Input:</strong> A = &#39;abcde&#39;, B = &#39;cdeab&#39;\n<strong>Output:</strong> true\n\n<strong>Example 2:</strong>\n<strong>Input:</strong> A = &#39;abcde&#39;, B = &#39;abced&#39;\n<strong>Output:</strong> false\n</pre>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li><code>A</code> and <code>B</code> will have length at most <code>100</code>.</li>\n</ul>\n"
    },
    {
        "id": "1080",
        "title": "Insufficient Nodes in Root to Leaf Paths",
        "slug": "insufficient-nodes-in-root-to-leaf-paths",
        "difficulty": "Medium",
        "likes": 71,
        "dislikes": 242,
        "hints": [
            "Consider a DFS traversal of the tree.  You can keep track of the current path sum from root to this node, and you can also use DFS to return the minimum value of any path from this node to the leaf.  This will tell you if this node is insufficient."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Depth-first Search"
        ],
        "content": "<p>Given the <code>root</code>&nbsp;of a binary tree, consider all <em>root to leaf paths</em>: paths from the root&nbsp;to any leaf.&nbsp; (A leaf is a node with no children.)</p>\n\n<p>A <code>node</code> is <em>insufficient</em> if&nbsp;<strong>every</strong> such root to leaf path intersecting this <code>node</code> has sum strictly less than&nbsp;<code>limit</code>.</p>\n\n<p>Delete all insufficient nodes simultaneously, and return the root of the resulting&nbsp;binary tree.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong><img alt=\"\" src=\"./img/insufficient-nodes-in-root-to-leaf-paths_1.png\" style=\"width: 482px; height: 200px;\" />\nInput: </strong>root = <span id=\"example-input-1-1\">[1,2,3,4,-99,-99,7,8,9,-99,-99,12,13,-99,14]</span>, limit = <span id=\"example-input-1-2\">1</span>\n<strong><img alt=\"\" src=\"./img/insufficient-nodes-in-root-to-leaf-paths_2.png\" style=\"width: 258px; height: 200px;\" />\nOutput: </strong><span id=\"example-output-1\">[1,2,3,4,null,null,7,8,9,null,14]</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong><img alt=\"\" src=\"./img/insufficient-nodes-in-root-to-leaf-paths_3.png\" style=\"width: 292px; height: 200px;\" />\nInput: </strong>root = <span id=\"example-input-2-1\">[5,4,8,11,null,17,4,7,1,null,null,5,3]</span>, limit = <span id=\"example-input-2-2\">22</span>\n<strong><img alt=\"\" src=\"./img/insufficient-nodes-in-root-to-leaf-paths_4.png\" style=\"width: 264px; height: 200px;\" />\nOutput: </strong><span id=\"example-output-2\">[5,4,8,11,null,17,4,7,null,null,null,5]</span></pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong><img alt=\"\" src=\"./img/insufficient-nodes-in-root-to-leaf-paths_5.png\" style=\"width: 188px; height: 150px;\" />\nInput: </strong>root = <span>[1,2,-3,-5,null,4,null]</span>, limit = -1\n<img alt=\"\" src=\"./img/insufficient-nodes-in-root-to-leaf-paths_6.png\" style=\"width: 122px; height: 150px;\" /><strong>\nOutput: </strong><span>[1,null,-3,4]</span></pre>\n</div>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li>The given tree will have between <code>1</code> and <code>5000</code> nodes.</li>\n\t<li><code>-10^5&nbsp;&lt;= node.val &lt;= 10^5</code></li>\n\t<li><code>-10^9 &lt;= limit&nbsp;&lt;= 10^9</code></li>\n</ol>\n\n<div>\n<div>&nbsp;</div>\n</div>\n"
    },
    {
        "id": "496",
        "title": "Next Greater Element I",
        "slug": "next-greater-element-i",
        "difficulty": "Easy",
        "likes": 908,
        "dislikes": 1461,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Next Greater Element II\", \"titleSlug\": \"next-greater-element-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Next Greater Element III\", \"titleSlug\": \"next-greater-element-iii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Daily Temperatures\", \"titleSlug\": \"daily-temperatures\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "87",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Stack"
        ],
        "content": "<p>\nYou are given two arrays <b>(without duplicates)</b> <code>nums1</code> and <code>nums2</code> where <code>nums1</code>\u2019s elements are subset of <code>nums2</code>. Find all the next greater numbers for <code>nums1</code>'s elements in the corresponding places of <code>nums2</code>. \n</p>\n\n<p>\nThe Next Greater Number of a number <b>x</b> in <code>nums1</code> is the first greater number to its right in <code>nums2</code>. If it does not exist, output -1 for this number.\n</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> <b>nums1</b> = [4,1,2], <b>nums2</b> = [1,3,4,2].\n<b>Output:</b> [-1,3,-1]\n<b>Explanation:</b>\n    For number 4 in the first array, you cannot find the next greater number for it in the second array, so output -1.\n    For number 1 in the first array, the next greater number for it in the second array is 3.\n    For number 2 in the first array, there is no next greater number for it in the second array, so output -1.\n</pre>\n</p>\n\n<p><b>Example 2:</b><br />\n<pre>\n<b>Input:</b> <b>nums1</b> = [2,4], <b>nums2</b> = [1,2,3,4].\n<b>Output:</b> [3,-1]\n<b>Explanation:</b>\n    For number 2 in the first array, the next greater number for it in the second array is 3.\n    For number 4 in the first array, there is no next greater number for it in the second array, so output -1.\n</pre>\n</p>\n\n\n<p><b>Note:</b><br>\n<ol>\n<li>All elements in <code>nums1</code> and <code>nums2</code> are unique.</li>\n<li>The length of both <code>nums1</code> and <code>nums2</code> would not exceed 1000.</li>\n</ol>\n</p>"
    },
    {
        "id": "617",
        "title": "Merge Two Binary Trees",
        "slug": "merge-two-binary-trees",
        "difficulty": "Easy",
        "likes": 2036,
        "dislikes": 138,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "163",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree"
        ],
        "content": "<p>Given two binary trees and imagine that when you put one of them to cover the other, some nodes of the two trees are overlapped while the others are not.</p>\n\n<p>You need to merge them into a new binary tree. The merge rule is that if two nodes overlap, then sum node values up as the new value of the merged node. Otherwise, the NOT null node will be used as the node of new tree.</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> \n\tTree 1                     Tree 2                  \n          1                         2                             \n         / \\                       / \\                            \n        3   2                     1   3                        \n       /                           \\   \\                      \n      5                             4   7                  \n<b>Output:</b> \nMerged tree:\n\t     3\n\t    / \\\n\t   4   5\n\t  / \\   \\ \n\t 5   4   7\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b> The merging process must start from the root nodes of both trees.</p>\n"
    },
    {
        "id": "1024",
        "title": "Video Stitching",
        "slug": "video-stitching",
        "difficulty": "Medium",
        "likes": 200,
        "dislikes": 16,
        "hints": [
            "What if we sort the intervals?  Considering the sorted intervals, how can we solve the problem with dynamic programming?",
            "Let's consider a DP(pos, limit) where pos represents the position of the current interval we are gonna take the decision and limit is the current covered area from [0 - limit]. This DP returns the minimum number of taken intervals or infinite if it's not possible to cover the [0 - T] section."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>You are given a series of video clips from a sporting event that lasted <code>T</code> seconds.&nbsp;&nbsp;These video clips can be overlapping with each other and have varied lengths.</p>\n\n<p>Each video clip <code>clips[i]</code>&nbsp;is an interval: it starts at time <code>clips[i][0]</code> and ends at time <code>clips[i][1]</code>.&nbsp; We can cut these clips into segments freely: for example, a clip <code>[0, 7]</code> can be cut into segments&nbsp;<code>[0, 1] +&nbsp;[1, 3] + [3, 7]</code>.</p>\n\n<p>Return the minimum number of clips needed so that we can cut the clips into segments that cover the entire sporting event (<code>[0, T]</code>).&nbsp; If the task is impossible, return <code>-1</code>.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>clips = <span id=\"example-input-1-1\">[[0,2],[4,6],[8,10],[1,9],[1,5],[5,9]]</span>, T = <span id=\"example-input-1-2\">10</span>\n<strong>Output: </strong><span id=\"example-output-1\">3</span>\n<strong>Explanation: </strong>\nWe take the clips [0,2], [8,10], [1,9]; a total of 3 clips.\nThen, we can reconstruct the sporting event as follows:\nWe cut [1,9] into segments [1,2] + [2,8] + [8,9].\nNow we have segments [0,2] + [2,8] + [8,10] which cover the sporting event [0, 10].\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>clips = <span id=\"example-input-2-1\">[[0,1],[1,2]]</span>, T = <span id=\"example-input-2-2\">5</span>\n<strong>Output: </strong><span id=\"example-output-2\">-1</span>\n<strong>Explanation: </strong>\nWe can&#39;t cover [0,5] with only [0,1] and [0,2].\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>clips = <span id=\"example-input-3-1\">[[0,1],[6,8],[0,2],[5,6],[0,4],[0,3],[6,7],[1,3],[4,7],[1,4],[2,5],[2,6],[3,4],[4,5],[5,7],[6,9]]</span>, T = <span id=\"example-input-3-2\">9</span>\n<strong>Output: </strong><span id=\"example-output-3\">3</span>\n<strong>Explanation: </strong>\nWe can take clips [0,4], [4,7], and [6,9].\n</pre>\n\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input: </strong>clips = <span id=\"example-input-4-1\">[[0,4],[2,8]]</span>, T = <span id=\"example-input-4-2\">5</span>\n<strong>Output: </strong><span id=\"example-output-4\">2</span>\n<strong>Explanation: </strong>\nNotice you can have extra video after the event ends.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= clips.length &lt;= 100</code></li>\n\t<li><code>0 &lt;= clips[i][0], clips[i][1] &lt;= 100</code></li>\n\t<li><code>0 &lt;= T &lt;= 100</code></li>\n</ol>\n"
    },
    {
        "id": "47",
        "title": "Permutations II",
        "slug": "permutations-ii",
        "difficulty": "Medium",
        "likes": 1210,
        "dislikes": 47,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Next Permutation\", \"titleSlug\": \"next-permutation\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Permutations\", \"titleSlug\": \"permutations\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Palindrome Permutation II\", \"titleSlug\": \"palindrome-permutation-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Number of Squareful Arrays\", \"titleSlug\": \"number-of-squareful-arrays\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Backtracking"
        ],
        "content": "<p>Given a collection of numbers that might contain duplicates, return all possible unique permutations.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input:</strong> [1,1,2]\n<strong>Output:</strong>\n[\n  [1,1,2],\n  [1,2,1],\n  [2,1,1]\n]\n</pre>\n"
    },
    {
        "id": "793",
        "title": "Preimage Size of Factorial Zeroes Function",
        "slug": "preimage-size-of-factorial-zeroes-function",
        "difficulty": "Hard",
        "likes": 115,
        "dislikes": 46,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Factorial Trailing Zeroes\", \"titleSlug\": \"factorial-trailing-zeroes\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "426",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Binary Search"
        ],
        "content": "<p>Let <code>f(x)</code> be the number of zeroes at the end of <code>x!</code>. (Recall that <code>x! = 1 * 2 * 3 * ... * x</code>, and by convention, <code>0! = 1</code>.)</p>\n\n<p>For example, <code>f(3) = 0</code> because 3! = 6 has no zeroes at the end, while <code>f(11) = 2</code> because 11! = 39916800 has 2 zeroes at the end. Given <code>K</code>, find how many non-negative integers <code>x</code> have the property that <code>f(x) = K</code>.</p>\n\n<pre>\n<strong>Example 1:</strong>\n<strong>Input:</strong> K = 0\n<strong>Output:</strong> 5\n<strong>Explanation:</strong> 0!, 1!, 2!, 3!, and 4! end with K = 0 zeroes.\n\n<strong>Example 2:</strong>\n<strong>Input:</strong> K = 5\n<strong>Output:</strong> 0\n<strong>Explanation:</strong> There is no x such that x! ends in K = 5 zeroes.\n</pre>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li><code>K</code> will be an integer in the range <code>[0, 10^9]</code>.</li>\n</ul>\n"
    },
    {
        "id": "200",
        "title": "Number of Islands",
        "slug": "number-of-islands",
        "difficulty": "Medium",
        "likes": 3097,
        "dislikes": 109,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Surrounded Regions\", \"titleSlug\": \"surrounded-regions\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Walls and Gates\", \"titleSlug\": \"walls-and-gates\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Number of Islands II\", \"titleSlug\": \"number-of-islands-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Number of Connected Components in an Undirected Graph\", \"titleSlug\": \"number-of-connected-components-in-an-undirected-graph\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Number of Distinct Islands\", \"titleSlug\": \"number-of-distinct-islands\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Max Area of Island\", \"titleSlug\": \"max-area-of-island\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "342",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Depth-first Search",
            "Breadth-first Search",
            "Union Find"
        ],
        "content": "<p>Given a 2d grid map of <code>&#39;1&#39;</code>s (land) and <code>&#39;0&#39;</code>s (water), count the number of islands. An island is surrounded by water and is formed by connecting adjacent lands horizontally or vertically. You may assume all four edges of the grid are all surrounded by water.</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<strong>Input:</strong>\n11110\n11010\n11000\n00000\n\n<strong>Output:</strong>&nbsp;1\n</pre>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<strong>Input:</strong>\n11000\n11000\n00100\n00011\n\n<strong>Output: </strong>3\n</pre>"
    },
    {
        "id": "528",
        "title": "Random Pick with Weight",
        "slug": "random-pick-with-weight",
        "difficulty": "Medium",
        "likes": 336,
        "dislikes": 631,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Random Pick Index\", \"titleSlug\": \"random-pick-index\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Random Pick with Blacklist\", \"titleSlug\": \"random-pick-with-blacklist\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Random Point in Non-overlapping Rectangles\", \"titleSlug\": \"random-point-in-non-overlapping-rectangles\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "517",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Binary Search",
            "Random"
        ],
        "content": "<p>Given an array <code>w</code> of positive integers, where <code>w[i]</code> describes the weight of index <code>i</code>,&nbsp;write a function <code>pickIndex</code>&nbsp;which randomly&nbsp;picks an index&nbsp;in proportion&nbsp;to its weight.</p>\n\n<p>Note:</p>\n\n<ol>\n\t<li><code>1 &lt;= w.length &lt;= 10000</code></li>\n\t<li><code>1 &lt;= w[i] &lt;= 10^5</code></li>\n\t<li><code>pickIndex</code>&nbsp;will be called at most <code>10000</code> times.</li>\n</ol>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: \n</strong><span id=\"example-input-1-1\">[&quot;Solution&quot;,&quot;pickIndex&quot;]\n</span><span id=\"example-input-1-2\">[[[1]],[]]</span>\n<strong>Output: </strong><span id=\"example-output-1\">[null,0]</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: \n</strong><span id=\"example-input-2-1\">[&quot;Solution&quot;,&quot;pickIndex&quot;,&quot;pickIndex&quot;,&quot;pickIndex&quot;,&quot;pickIndex&quot;,&quot;pickIndex&quot;]\n</span><span id=\"example-input-2-2\">[[[1,3]],[],[],[],[],[]]</span>\n<strong>Output: </strong><span id=\"example-output-2\">[null,0,1,1,1,0]</span></pre>\n</div>\n\n<p><strong>Explanation of Input Syntax:</strong></p>\n\n<p>The input is two lists:&nbsp;the subroutines called&nbsp;and their&nbsp;arguments.&nbsp;<code>Solution</code>&#39;s&nbsp;constructor has one argument, the&nbsp;array <code>w</code>. <code>pickIndex</code> has no arguments.&nbsp;Arguments&nbsp;are&nbsp;always wrapped with a list, even if there aren&#39;t any.</p>\n"
    },
    {
        "id": "91",
        "title": "Decode Ways",
        "slug": "decode-ways",
        "difficulty": "Medium",
        "likes": 1637,
        "dislikes": 1890,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Decode Ways II\", \"titleSlug\": \"decode-ways-ii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "String",
            "Dynamic Programming"
        ],
        "content": "<p>A message containing letters from <code>A-Z</code> is being encoded to numbers using the following mapping:</p>\n\n<pre>\n&#39;A&#39; -&gt; 1\n&#39;B&#39; -&gt; 2\n...\n&#39;Z&#39; -&gt; 26\n</pre>\n\n<p>Given a <strong>non-empty</strong> string containing only digits, determine the total number of ways to decode it.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> &quot;12&quot;\n<strong>Output:</strong> 2\n<strong>Explanation:</strong>&nbsp;It could be decoded as &quot;AB&quot; (1 2) or &quot;L&quot; (12).\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> &quot;226&quot;\n<strong>Output:</strong> 3\n<strong>Explanation:</strong>&nbsp;It could be decoded as &quot;BZ&quot; (2 26), &quot;VF&quot; (22 6), or &quot;BBF&quot; (2 2 6).</pre>\n"
    },
    {
        "id": "886",
        "title": "Possible Bipartition",
        "slug": "possible-bipartition",
        "difficulty": "Medium",
        "likes": 331,
        "dislikes": 16,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "529",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Depth-first Search"
        ],
        "content": "<p>Given a set of <code>N</code>&nbsp;people (numbered <code>1, 2, ..., N</code>), we would like to split everyone into two groups of <strong>any</strong> size.</p>\n\n<p>Each person may dislike some other people, and they should not go into the same group.&nbsp;</p>\n\n<p>Formally, if <code>dislikes[i] = [a, b]</code>, it means it is not allowed to put the people numbered <code>a</code> and <code>b</code> into the same group.</p>\n\n<p>Return <code>true</code>&nbsp;if and only if it is possible to split everyone into two groups in this way.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<div>\n<ol>\n</ol>\n</div>\n</div>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>N = <span id=\"example-input-1-1\">4</span>, dislikes = <span id=\"example-input-1-2\">[[1,2],[1,3],[2,4]]</span>\n<strong>Output: </strong><span id=\"example-output-1\">true</span>\n<strong>Explanation</strong>: group1 [1,4], group2 [2,3]\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>N = <span id=\"example-input-2-1\">3</span>, dislikes = <span id=\"example-input-2-2\">[[1,2],[1,3],[2,3]]</span>\n<strong>Output: </strong><span id=\"example-output-2\">false</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>N = <span id=\"example-input-3-1\">5</span>, dislikes = <span id=\"example-input-3-2\">[[1,2],[2,3],[3,4],[4,5],[1,5]]</span>\n<strong>Output: </strong><span id=\"example-output-3\">false</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= N &lt;= 2000</code></li>\n\t<li><code>0 &lt;= dislikes.length &lt;= 10000</code></li>\n\t<li><code>1 &lt;= dislikes[i][j] &lt;= N</code></li>\n\t<li><code>dislikes[i][0] &lt; dislikes[i][1]</code></li>\n\t<li>There does not exist <code>i != j</code> for which <code>dislikes[i] == dislikes[j]</code>.</li>\n</ol>\n</div>\n</div>\n</div>\n"
    },
    {
        "id": "775",
        "title": "Global and Local Inversions",
        "slug": "global-and-local-inversions",
        "difficulty": "Medium",
        "likes": 228,
        "dislikes": 123,
        "hints": [
            "Where can the 0 be placed in an ideal permutation?  What about the 1?"
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "403",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Math"
        ],
        "content": "<p>We have some permutation <code>A</code> of <code>[0, 1, ..., N - 1]</code>, where <code>N</code> is the length of <code>A</code>.</p>\n\n<p>The number of (global) inversions is the number of <code>i &lt; j</code> with <code>0 &lt;= i &lt; j &lt; N</code> and <code>A[i] &gt; A[j]</code>.</p>\n\n<p>The number of local inversions is the number of <code>i</code> with <code>0 &lt;= i &lt; N</code> and <code>A[i] &gt; A[i+1]</code>.</p>\n\n<p>Return <code>true</code>&nbsp;if and only if the number of global inversions is equal to the number of local inversions.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> A = [1,0,2]\n<strong>Output:</strong> true\n<strong>Explanation:</strong> There is 1 global inversion, and 1 local inversion.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> A = [1,2,0]\n<strong>Output:</strong> false\n<strong>Explanation:</strong> There are 2 global inversions, and 1 local inversion.\n</pre>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li><code>A</code> will be a permutation of <code>[0, 1, ..., A.length - 1]</code>.</li>\n\t<li><code>A</code> will have length in range <code>[1, 5000]</code>.</li>\n\t<li>The time limit for this problem has been reduced.</li>\n</ul>\n"
    },
    {
        "id": "687",
        "title": "Longest Univalue Path",
        "slug": "longest-univalue-path",
        "difficulty": "Easy",
        "likes": 1097,
        "dislikes": 281,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Binary Tree Maximum Path Sum\", \"titleSlug\": \"binary-tree-maximum-path-sum\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Count Univalue Subtrees\", \"titleSlug\": \"count-univalue-subtrees\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Path Sum III\", \"titleSlug\": \"path-sum-iii\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "253",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree",
            "Recursion"
        ],
        "content": "<p>Given a binary tree, find the length of the longest path where each node in the path has the same value. This path may or may not pass through the root.</p>\n\n<p>The length of path between two nodes is represented by the number of edges between them.</p>\n\n<p>&nbsp;</p>\n\n<p><b>Example 1:</b></p>\n\n<p><strong>Input:</strong></p>\n\n<pre>\n              5\n             / \\\n            4   5\n           / \\   \\\n          1   1   5\n</pre>\n\n<p><strong>Output:</strong>&nbsp;2</p>\n\n<p>&nbsp;</p>\n\n<p><b>Example 2:</b></p>\n\n<p><strong>Input:</strong></p>\n\n<pre>\n              1\n             / \\\n            4   5\n           / \\   \\\n          4   4   5\n</pre>\n\n<p><strong>Output:</strong>&nbsp;2</p>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b> The given binary tree has not more than 10000 nodes. The height of the tree is not more than 1000.</p>\n"
    },
    {
        "id": "357",
        "title": "Count Numbers with Unique Digits",
        "slug": "count-numbers-with-unique-digits",
        "difficulty": "Medium",
        "likes": 269,
        "dislikes": 669,
        "hints": [
            "A direct way is to use the backtracking approach.",
            "Backtracking should contains three states which are (the current number, number of steps to get that number and a bitmask which represent which number is marked as visited so far in the current number). Start with state (0,0,0) and count all valid number till we reach number of steps equals to 10<sup>n</sup>.",
            "This problem can also be solved using a dynamic programming approach and some knowledge of combinatorics.",
            "Let f(k) = count of numbers with unique digits with length equals k.",
            "f(1) = 10, ..., f(k) = 9 * 9 * 8 * ... (9 - k + 2) [The first factor is 9 because a number cannot start with 0]."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Math",
            "Dynamic Programming",
            "Backtracking"
        ],
        "content": "<p>Given a <b>non-negative</b> integer n, count all numbers with unique digits, x, where 0 &le; x &lt; 10<sup>n</sup>.</p>\n\n<div>\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">2</span>\n<strong>Output: </strong><span id=\"example-output-1\">91 \n<strong>Explanation: </strong></span>The answer should be the total numbers in the range of 0 &le; x &lt; 100, \n&nbsp;            excluding <code>11,22,33,44,55,66,77,88,99</code>\n</pre>\n</div>"
    },
    {
        "id": "802",
        "title": "Find Eventual Safe States",
        "slug": "find-eventual-safe-states",
        "difficulty": "Medium",
        "likes": 425,
        "dislikes": 64,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "434",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Depth-first Search",
            "Graph"
        ],
        "content": "<p>In a directed graph, we start at some node and every turn, walk along a directed edge of the graph.&nbsp; If we reach a node that is terminal (that is, it has no outgoing directed edges), we stop.</p>\n\n<p>Now, say our starting node is <em>eventually safe&nbsp;</em>if and only if we must eventually walk to a terminal node.&nbsp; More specifically, there exists a natural number <code>K</code> so that for any choice of where to walk, we must have stopped at a terminal node in less than <code>K</code> steps.</p>\n\n<p>Which nodes are eventually safe?&nbsp; Return them as an array in sorted order.</p>\n\n<p>The directed graph has <code>N</code> nodes with labels <code>0, 1, ..., N-1</code>, where <code>N</code> is the length of <code>graph</code>.&nbsp; The&nbsp;graph is given in the following form: <code>graph[i]</code> is a list of labels <code>j</code> such that <code>(i, j)</code> is a directed edge of the graph.</p>\n\n<pre>\n<strong>Example:</strong>\n<strong>Input:</strong> graph = [[1,2],[2,3],[5],[0],[5],[],[]]\n<strong>Output:</strong> [2,4,5,6]\nHere is a diagram of the above graph.\n\n</pre>\n\n<p><img alt=\"Illustration of graph\" src=\"./img/find-eventual-safe-states_1.png\" style=\"height:86px; width:300px\" /></p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li><code>graph</code> will have length at most <code>10000</code>.</li>\n\t<li>The number of edges in the graph will not exceed <code>32000</code>.</li>\n\t<li>Each <code>graph[i]</code> will be a sorted list of different integers, chosen within the range <code>[0, graph.length - 1]</code>.</li>\n</ul>\n"
    },
    {
        "id": "871",
        "title": "Minimum Number of Refueling Stops",
        "slug": "minimum-number-of-refueling-stops",
        "difficulty": "Hard",
        "likes": 396,
        "dislikes": 8,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "506",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming",
            "Heap"
        ],
        "content": "<p>A car travels from a starting position to a destination which is <code>target</code> miles east of the starting position.</p>\n\n<p>Along the way, there are gas stations.&nbsp; Each <code>station[i]</code>&nbsp;represents a gas station that is <code>station[i][0]</code> miles east of the starting position, and has <code>station[i][1]</code> liters of gas.</p>\n\n<p>The car starts with an infinite tank of gas, which initially has&nbsp;<code>startFuel</code>&nbsp;liters of fuel in it.&nbsp; It uses 1 liter of gas per 1 mile that it drives.</p>\n\n<p>When the car&nbsp;reaches a gas station, it may stop and refuel, transferring all the gas from the station into the car.</p>\n\n<p>What is the least number of refueling stops the car must make in order to reach its destination?&nbsp; If it cannot reach the destination, return <code>-1</code>.</p>\n\n<p>Note that if the car reaches a gas station with 0 fuel left, the car can still refuel there.&nbsp; If the car reaches the destination with 0 fuel left, it is still considered to have arrived.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>target = <span id=\"example-input-1-1\">1</span>, startFuel = <span id=\"example-input-1-2\">1</span>, stations = <span id=\"example-input-1-3\">[]</span>\n<strong>Output: </strong><span id=\"example-output-1\">0</span>\n<strong>Explanation: </strong>We can reach the target without refueling.\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>target = <span id=\"example-input-2-1\">100</span>, startFuel = <span id=\"example-input-2-2\">1</span>, stations = <span id=\"example-input-2-3\">[[10,100]]</span>\n<strong>Output: </strong><span id=\"example-output-2\">-1</span>\n<strong>Explanation: </strong>We can&#39;t reach the target (or even the first gas station).\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>target = <span id=\"example-input-3-1\">100</span>, startFuel = <span id=\"example-input-3-2\">10</span>, stations = <span id=\"example-input-3-3\">[[10,60],[20,30],[30,30],[60,40]]</span>\n<strong>Output: </strong><span id=\"example-output-3\">2</span>\n<strong>Explanation: </strong>\nWe start with 10 liters of fuel.\nWe drive to position 10, expending 10 liters of fuel.  We refuel from 0 liters to 60 liters of gas.\nThen, we drive from position 10 to position 60 (expending 50 liters of fuel),\nand refuel from 10 liters to 50 liters of gas.  We then drive to and reach the target.\nWe made 2 refueling stops along the way, so we return 2.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= target, startFuel, stations[i][1] &lt;= 10^9</code></li>\n\t<li><code>0 &lt;= stations.length &lt;= 500</code></li>\n\t<li><code>0 &lt; stations[0][0] &lt; stations[1][0] &lt; ... &lt; stations[stations.length-1][0] &lt; target</code></li>\n</ol>\n</div>\n</div>\n</div>\n"
    },
    {
        "id": "595",
        "title": "Big Countries",
        "slug": "big-countries",
        "difficulty": "Easy",
        "likes": 389,
        "dislikes": 559,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "200",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [],
        "content": "<p>There is a table <code>World</code></p>\n\n<pre>\n+-----------------+------------+------------+--------------+---------------+\n| name            | continent  | area       | population   | gdp           |\n+-----------------+------------+------------+--------------+---------------+\n| Afghanistan     | Asia       | 652230     | 25500100     | 20343000      |\n| Albania         | Europe     | 28748      | 2831741      | 12960000      |\n| Algeria         | Africa     | 2381741    | 37100000     | 188681000     |\n| Andorra         | Europe     | 468        | 78115        | 3712000       |\n| Angola          | Africa     | 1246700    | 20609294     | 100990000     |\n+-----------------+------------+------------+--------------+---------------+\n</pre>\n\n<p>A country is big if it has an area of bigger than 3 million square km or a population of more than 25 million.</p>\n\n<p>Write a SQL solution to output big countries&#39; name, population and area.</p>\n\n<p>For example, according to the above table, we should output:</p>\n\n<pre>\n+--------------+-------------+--------------+\n| name         | population  | area         |\n+--------------+-------------+--------------+\n| Afghanistan  | 25500100    | 652230       |\n| Algeria      | 37100000    | 2381741      |\n+--------------+-------------+--------------+\n</pre>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "329",
        "title": "Longest Increasing Path in a Matrix",
        "slug": "longest-increasing-path-in-a-matrix",
        "difficulty": "Hard",
        "likes": 1183,
        "dislikes": 21,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "70",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Depth-first Search",
            "Topological Sort",
            "Memoization"
        ],
        "content": "<p>Given an integer matrix, find the length of the longest increasing path.</p>\n\n<p>From each cell, you can either move to four directions: left, right, up or down. You may NOT move diagonally or move outside of the boundary (i.e. wrap-around is not allowed).</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<strong>Input: </strong>nums = \n[\n  [<font color=\"red\">9</font>,9,4],\n  [<font color=\"red\">6</font>,6,8],\n  [<font color=\"red\">2</font>,<font color=\"red\">1</font>,1]\n] \n<strong>Output:</strong> 4 \n<strong>Explanation:</strong> The longest increasing path is <code>[1, 2, 6, 9]</code>.\n</pre>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<strong>Input:</strong> nums = \n[\n  [<font color=\"red\">3</font>,<font color=\"red\">4</font>,<font color=\"red\">5</font>],\n  [3,2,<font color=\"red\">6</font>],\n  [2,2,1]\n] \n<strong>Output: </strong>4 \n<strong>Explanation: </strong>The longest increasing path is <code>[3, 4, 5, 6]</code>. Moving diagonally is not allowed.\n</pre>\n"
    },
    {
        "id": "448",
        "title": "Find All Numbers Disappeared in an Array",
        "slug": "find-all-numbers-disappeared-in-an-array",
        "difficulty": "Easy",
        "likes": 1844,
        "dislikes": 170,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"First Missing Positive\", \"titleSlug\": \"first-missing-positive\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Find All Duplicates in an Array\", \"titleSlug\": \"find-all-duplicates-in-an-array\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Array"
        ],
        "content": "<p>Given an array of integers where 1 &le; a[i] &le; <i>n</i> (<i>n</i> = size of array), some elements appear twice and others appear once.</p>\n\n<p>Find all the elements of [1, <i>n</i>] inclusive that do not appear in this array.</p>\n\n<p>Could you do it without extra space and in O(<i>n</i>) runtime? You may assume the returned list does not count as extra space.</p>\n\n<p><b>Example:</b>\n<pre>\n<b>Input:</b>\n[4,3,2,7,8,2,3,1]\n\n<b>Output:</b>\n[5,6]\n</pre>\n</p>"
    },
    {
        "id": "149",
        "title": "Max Points on a Line",
        "slug": "max-points-on-a-line",
        "difficulty": "Hard",
        "likes": 554,
        "dislikes": 1462,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Line Reflection\", \"titleSlug\": \"line-reflection\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "678",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Hash Table",
            "Math"
        ],
        "content": "<p>Given <em>n</em> points on a 2D plane, find the maximum number of points that lie on the same straight line.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> [[1,1],[2,2],[3,3]]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong>\n^\n|\n| &nbsp; &nbsp; &nbsp; &nbsp;o\n| &nbsp; &nbsp; o\n| &nbsp;o &nbsp;\n+-------------&gt;\n0 &nbsp;1 &nbsp;2 &nbsp;3  4\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> [[1,1],[3,2],[5,3],[4,1],[2,3],[1,4]]\n<strong>Output:</strong> 4\n<strong>Explanation:</strong>\n^\n|\n|  o\n| &nbsp;&nbsp;&nbsp;&nbsp;o&nbsp;&nbsp;      o\n| &nbsp;&nbsp;&nbsp;&nbsp;   o\n| &nbsp;o &nbsp;      o\n+-------------------&gt;\n0 &nbsp;1 &nbsp;2 &nbsp;3 &nbsp;4 &nbsp;5 &nbsp;6\n</pre>\n\n<p><strong>NOTE:</strong>&nbsp;input types have been changed on April 15, 2019. Please reset to default code definition to get new method signature.</p>\n"
    },
    {
        "id": "1114",
        "title": "Print in Order",
        "slug": "print-in-order",
        "difficulty": "Easy",
        "likes": 191,
        "dislikes": 28,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Print FooBar Alternately\", \"titleSlug\": \"print-foobar-alternately\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [],
        "content": "<p>Suppose we have a class:</p>\n\n<pre>\npublic class Foo {\n&nbsp; public void first() { print(&quot;first&quot;); }\n&nbsp; public void second() { print(&quot;second&quot;); }\n&nbsp; public void third() { print(&quot;third&quot;); }\n}\n</pre>\n\n<p>The same instance of <code>Foo</code> will be passed to three different threads. Thread A will call <code>first()</code>, thread B will call <code>second()</code>, and thread C will call <code>third()</code>. Design a mechanism and modify the program&nbsp;to ensure that&nbsp;<code>second()</code>&nbsp;is executed after&nbsp;<code>first()</code>, and&nbsp;<code>third()</code> is executed after&nbsp;<code>second()</code>.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<b>Input:</b> [1,2,3]\n<b>Output:</b> &quot;firstsecondthird&quot;\n<strong>Explanation:</strong> There are three threads being fired asynchronously. The input [1,2,3] means thread A calls first(), thread B calls second(), and thread C calls third(). &quot;firstsecondthird&quot; is the correct output.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<b>Input:</b> [1,3,2]\n<b>Output:</b> &quot;firstsecondthird&quot;\n<strong>Explanation:</strong> The input [1,3,2] means thread A calls first(), thread B calls third(), and thread C calls second(). &quot;firstsecondthird&quot; is the correct output.</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<p>We do not know how the threads will be scheduled in the operating system, even though the numbers in the input seems to imply the ordering. The input format you see is mainly&nbsp;to ensure our tests&#39; comprehensiveness.</p>\n"
    },
    {
        "id": "630",
        "title": "Course Schedule III",
        "slug": "course-schedule-iii",
        "difficulty": "Hard",
        "likes": 466,
        "dislikes": 24,
        "hints": [
            "During iteration, say I want to add the current course, currentTotalTime being total time of all courses taken till now, but adding the current course might exceed my deadline or it doesn\u2019t.</br></br>\r\n\r\n1. If it doesn\u2019t, then I have added one new course. Increment the currentTotalTime with duration of current course.",
            "2. If it exceeds deadline, I can swap current course with current courses that has biggest duration.</br>\r\n* No harm done and I might have just reduced the currentTotalTime, right? </br>\r\n* What preprocessing do I need to do on my course processing order so that this swap is always legal?"
        ],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Course Schedule\", \"titleSlug\": \"course-schedule\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Course Schedule II\", \"titleSlug\": \"course-schedule-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "184",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Greedy"
        ],
        "content": "<p>There are <code>n</code> different online courses numbered from <code>1</code> to <code>n</code>. Each course has some duration(course length) <code>t</code> and closed on <code>d<sub>th</sub></code> day. A course should be taken <b>continuously</b> for <code>t</code> days and must be finished before or on the <code>d<sub>th</sub></code> day. You will start at the <code>1<sub>st</sub></code> day.</p>\n\n<p>Given <code>n</code> online courses represented by pairs <code>(t,d)</code>, your task is to find the maximal number of courses that can be taken.</p>\n\n<p><b>Example:</b></p>\n\n<pre>\n<b>Input:</b> [[100, 200], [200, 1300], [1000, 1250], [2000, 3200]]\n<b>Output:</b> 3\n<b>Explanation:</b> \nThere&#39;re totally 4 courses, but you can take 3 courses at most:\nFirst, take the 1st course, it costs 100 days so you will finish it on the 100th day, and ready to take the next course on the 101st day.\nSecond, take the 3rd course, it costs 1000 days so you will finish it on the 1100th day, and ready to take the next course on the 1101st day. \nThird, take the 2nd course, it costs 200 days so you will finish it on the 1300th day. \nThe 4th course cannot be taken now, since you will finish it on the 3300th day, which exceeds the closed date.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b></p>\n\n<ol>\n\t<li>The integer 1 &lt;= d, t, n &lt;= 10,000.</li>\n\t<li>You can&#39;t take two courses simultaneously.</li>\n</ol>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "188",
        "title": "Best Time to Buy and Sell Stock IV",
        "slug": "best-time-to-buy-and-sell-stock-iv",
        "difficulty": "Hard",
        "likes": 889,
        "dislikes": 57,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Best Time to Buy and Sell Stock\", \"titleSlug\": \"best-time-to-buy-and-sell-stock\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Best Time to Buy and Sell Stock II\", \"titleSlug\": \"best-time-to-buy-and-sell-stock-ii\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Best Time to Buy and Sell Stock III\", \"titleSlug\": \"best-time-to-buy-and-sell-stock-iii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>Say you have an array for which the <i>i<span style=\"font-size: 10.8333px;\">-</span></i><span style=\"font-size: 10.8333px;\">th</span>&nbsp;element is the price of a given stock on day <i>i</i>.</p>\n\n<p>Design an algorithm to find the maximum profit. You may complete at most <b>k</b> transactions.</p>\n\n<p><b>Note:</b><br />\nYou may not engage in multiple transactions at the same time (ie, you must sell the stock before you buy again).</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> [2,4,1], k = 2\n<strong>Output:</strong> 2\n<strong>Explanation:</strong> Buy on day 1 (price = 2) and sell on day 2 (price = 4), profit = 4-2 = 2.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> [3,2,6,5,0,3], k = 2\n<strong>Output:</strong> 7\n<strong>Explanation:</strong> Buy on day 2 (price = 2) and sell on day 3 (price = 6), profit = 6-2 = 4.\n&nbsp;            Then buy on day 5 (price = 0) and sell on day 6 (price = 3), profit = 3-0 = 3.\n</pre>\n"
    },
    {
        "id": "926",
        "title": "Flip String to Monotone Increasing",
        "slug": "flip-string-to-monotone-increasing",
        "difficulty": "Medium",
        "likes": 362,
        "dislikes": 13,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "592",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array"
        ],
        "content": "<p>A string of <code>&#39;0&#39;</code>s and <code>&#39;1&#39;</code>s is <em>monotone increasing</em> if it consists of some number of <code>&#39;0&#39;</code>s (possibly 0), followed by some number of <code>&#39;1&#39;</code>s (also possibly 0.)</p>\n\n<p>We are given a string <code>S</code> of <code>&#39;0&#39;</code>s and <code>&#39;1&#39;</code>s, and we may flip any <code>&#39;0&#39;</code> to a <code>&#39;1&#39;</code> or a <code>&#39;1&#39;</code> to a <code>&#39;0&#39;</code>.</p>\n\n<p>Return the minimum number of flips to make <code>S</code>&nbsp;monotone increasing.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">&quot;00110&quot;</span>\n<strong>Output: </strong><span id=\"example-output-1\">1</span>\n<strong>Explanation: </strong>We flip the last digit to get 00111.\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">&quot;010110&quot;</span>\n<strong>Output: </strong><span id=\"example-output-2\">2</span>\n<strong>Explanation: </strong>We flip to get 011111, or alternatively 000111.\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">&quot;00011000&quot;</span>\n<strong>Output: </strong><span id=\"example-output-3\">2</span>\n<strong>Explanation: </strong>We flip to get 00000000.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong><span>Note:</span></strong></p>\n\n<ol>\n\t<li><code>1 &lt;= S.length &lt;= 20000</code></li>\n\t<li><code>S</code> only consists of <code>&#39;0&#39;</code> and <code>&#39;1&#39;</code> characters.</li>\n</ol>\n</div>\n</div>\n</div>"
    },
    {
        "id": "1090",
        "title": "Largest Values From Labels",
        "slug": "largest-values-from-labels",
        "difficulty": "Medium",
        "likes": 42,
        "dislikes": 138,
        "hints": [
            "Consider the items in order from largest to smallest value, and greedily take the items if they fall under the use_limit.  We can keep track of how many items of each label are used by using a hash table."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Hash Table",
            "Greedy"
        ],
        "content": "<p>We have a set of items: the <code>i</code>-th item has value <code>values[i]</code> and label <code>labels[i]</code>.</p>\n\n<p>Then, we choose&nbsp;a subset <code>S</code> of these items, such that:</p>\n\n<ul>\n\t<li><code>|S| &lt;= num_wanted</code></li>\n\t<li>For every label <code>L</code>, the number of items in <code>S</code> with&nbsp;label <code>L</code> is <code>&lt;= use_limit</code>.</li>\n</ul>\n\n<p>Return the largest possible sum of the subset <code>S</code>.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>values = <span id=\"example-input-1-1\">[5,4,3,2,1]</span>, labels = <span id=\"example-input-1-2\">[1,1,2,2,3]</span>, <code>num_wanted </code>= <span id=\"example-input-1-3\">3</span>, use_limit = <span id=\"example-input-1-4\">1</span>\n<strong>Output: </strong><span id=\"example-output-1\">9</span>\n<strong>Explanation: </strong>The subset chosen is the first, third, and fifth item.\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>values = <span id=\"example-input-2-1\">[5,4,3,2,1]</span>, labels = <span id=\"example-input-2-2\">[1,3,3,3,2]</span>, <code>num_wanted </code>= <span id=\"example-input-2-3\">3</span>, use_limit = <span id=\"example-input-2-4\">2</span>\n<strong>Output: </strong><span id=\"example-output-2\">12</span>\n<strong>Explanation: </strong>The subset chosen is the first, second, and third item.\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>values = <span id=\"example-input-3-1\">[9,8,8,7,6]</span>, labels = <span id=\"example-input-3-2\">[0,0,0,1,1]</span>, <code>num_wanted </code>= <span id=\"example-input-3-3\">3</span>, use_limit = <span id=\"example-input-3-4\">1</span>\n<strong>Output:</strong>&nbsp;16\n<strong>Explanation: </strong>The subset chosen is the first and fourth item.\n</pre>\n\n<div>\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input: </strong>values = <span id=\"example-input-4-1\">[9,8,8,7,6]</span>, labels = <span id=\"example-input-4-2\">[0,0,0,1,1]</span>, <code>num_wanted </code>= <span id=\"example-input-4-3\">3</span>, use_limit = <span id=\"example-input-4-4\">2</span>\n<strong>Output: </strong><span id=\"example-output-4\">24</span>\n<strong>Explanation: </strong>The subset chosen is the first, second, and fourth item.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= values.length == labels.length &lt;= 20000</code></li>\n\t<li><code>0 &lt;= values[i], labels[i]&nbsp;&lt;= 20000</code></li>\n\t<li><code>1 &lt;= num_wanted, use_limit&nbsp;&lt;= values.length</code></li>\n</ol>\n</div>\n</div>\n</div>\n</div>"
    },
    {
        "id": "838",
        "title": "Push Dominoes",
        "slug": "push-dominoes",
        "difficulty": "Medium",
        "likes": 340,
        "dislikes": 39,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "470",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Two Pointers",
            "Dynamic Programming"
        ],
        "content": "<p>There are<font face=\"monospace\">&nbsp;<code>N</code></font> dominoes in a line, and we place each domino vertically upright.</p>\n\n<p>In the beginning, we simultaneously push&nbsp;some of the dominoes either to the left or to the right.</p>\n\n<p><img alt=\"\" src=\"./img/push-dominoes_1.png\" style=\"height: 160px;\" /></p>\n\n<p>After each second, each domino that is falling to the left pushes the adjacent domino on the left.</p>\n\n<p>Similarly, the dominoes falling to the right push their adjacent dominoes standing on the right.</p>\n\n<p>When a vertical domino has dominoes falling on it from both sides, it stays still due to the balance of the forces.</p>\n\n<p>For the purposes of this question, we will consider that a falling domino&nbsp;expends no additional force to a falling or already fallen domino.</p>\n\n<p>Given a string &quot;S&quot; representing the initial state.&nbsp;<code>S[i] = &#39;L&#39;</code>, if the i-th domino has been pushed to the left; <code>S[i] = &#39;R&#39;</code>, if the i-th domino has been pushed to the right; <code>S[i] = &#39;.&#39;</code>,&nbsp;if the <code>i</code>-th domino has not been pushed.</p>\n\n<p>Return a string representing the final state.&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>&quot;.L.R...LR..L..&quot;\n<strong>Output: </strong>&quot;LL.RR.LLRRLL..&quot;\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>&quot;RR.L&quot;\n<strong>Output: </strong>&quot;RR.L&quot;\n<strong>Explanation: </strong>The first domino expends no additional force on the second domino.\n</pre>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>0 &lt;= N&nbsp;&lt;= 10^5</code></li>\n\t<li>String&nbsp;<code>dominoes</code> contains only&nbsp;<code>&#39;L</code>&#39;, <code>&#39;R&#39;</code> and <code>&#39;.&#39;</code></li>\n</ol>\n"
    },
    {
        "id": "1125",
        "title": "Smallest Sufficient Team",
        "slug": "smallest-sufficient-team",
        "difficulty": "Hard",
        "likes": 154,
        "dislikes": 6,
        "hints": [
            "Do a bitmask DP.",
            "For each person, for each set of skills, we can update our understanding of a minimum set of people needed to perform this set of skills."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Dynamic Programming",
            "Bit Manipulation"
        ],
        "content": "<p>In a project, you have a list of required skills <code>req_skills</code>,&nbsp;and a list of <code>people</code>.&nbsp; The i-th person <code>people[i]</code>&nbsp;contains a list of skills that person has.</p>\n\n<p>Consider a <em>sufficient team</em>: a set of people such that for every required skill in <code>req_skills</code>, there is at least one person in the team who has that skill.&nbsp; We can represent these teams by the index of each person: for example, <code>team = [0, 1, 3]</code> represents the people with skills <code>people[0]</code>, <code>people[1]</code>, and <code>people[3]</code>.</p>\n\n<p>Return <strong>any</strong>&nbsp;sufficient team of the smallest possible size, represented by the index of each person.</p>\n\n<p>You may return the answer in any order.&nbsp; It is guaranteed an answer exists.</p>\n\n<p>&nbsp;</p>\n<p><strong>Example 1:</strong></p>\n<pre><strong>Input:</strong> req_skills = [\"java\",\"nodejs\",\"reactjs\"], people = [[\"java\"],[\"nodejs\"],[\"nodejs\",\"reactjs\"]]\n<strong>Output:</strong> [0,2]\n</pre><p><strong>Example 2:</strong></p>\n<pre><strong>Input:</strong> req_skills = [\"algorithms\",\"math\",\"java\",\"reactjs\",\"csharp\",\"aws\"], people = [[\"algorithms\",\"math\",\"java\"],[\"algorithms\",\"math\",\"reactjs\"],[\"java\",\"csharp\",\"aws\"],[\"reactjs\",\"csharp\"],[\"csharp\",\"math\"],[\"aws\",\"java\"]]\n<strong>Output:</strong> [1,2]\n</pre>\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= req_skills.length &lt;= 16</code></li>\n\t<li><code>1 &lt;= people.length &lt;= 60</code></li>\n\t<li><code>1 &lt;= people[i].length, req_skills[i].length, people[i][j].length&nbsp;&lt;= 16</code></li>\n\t<li>Elements of <code>req_skills</code> and <code>people[i]</code> are (respectively) distinct.</li>\n\t<li><code>req_skills[i][j], people[i][j][k]</code> are&nbsp;lowercase English letters.</li>\n\t<li>Every skill in <code>people[i]</code>&nbsp;is a skill in <code>req_skills</code>.</li>\n\t<li>It is guaranteed a sufficient team exists.</li>\n</ul>\n"
    },
    {
        "id": "672",
        "title": "Bulb Switcher II",
        "slug": "bulb-switcher-ii",
        "difficulty": "Medium",
        "likes": 102,
        "dislikes": 744,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Bulb Switcher\", \"titleSlug\": \"bulb-switcher\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "302",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math"
        ],
        "content": "<p>There is a room with <code>n</code> lights which are turned on initially and 4 buttons on the wall. After performing exactly <code>m</code> unknown operations towards buttons, you need to return how many different kinds of status of the <code>n</code> lights could be.</p>\n\n<p>Suppose <code>n</code> lights are labeled as number [1, 2, 3 ..., n], function of these 4 buttons are given below:</p>\n\n<ol>\n\t<li>Flip all the lights.</li>\n\t<li>Flip lights with even numbers.</li>\n\t<li>Flip lights with odd numbers.</li>\n\t<li>Flip lights with (3k + 1) numbers, k = 0, 1, 2, ...</li>\n</ol>\n\n<p>&nbsp;</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> n = 1, m = 1.\n<b>Output:</b> 2\n<b>Explanation:</b> Status can be: [on], [off]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<b>Input:</b> n = 2, m = 1.\n<b>Output:</b> 3\n<b>Explanation:</b> Status can be: [on, off], [off, on], [off, off]\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Example 3:</b></p>\n\n<pre>\n<b>Input:</b> n = 3, m = 1.\n<b>Output:</b> 4\n<b>Explanation:</b> Status can be: [off, on, off], [on, off, on], [off, off, off], [off, on, on].\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b> <code>n</code> and <code>m</code> both fit in range [0, 1000].</p>\n"
    },
    {
        "id": "554",
        "title": "Brick Wall",
        "slug": "brick-wall",
        "difficulty": "Medium",
        "likes": 607,
        "dislikes": 31,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "105",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Hash Table"
        ],
        "content": "<p>There is a brick wall in front of you. The wall is rectangular and has several rows of bricks. The bricks have the same height but different width. You want to draw a vertical line from the <b>top</b> to the <b>bottom</b> and cross the <b>least</b> bricks.</p>\n\n<p>The brick wall is represented by a list of rows. Each row is a list of integers representing the width of each brick in this row from left to right.</p>\n\n<p>If your line go through the edge of a brick, then the brick is not considered as crossed. You need to find out how to draw the line to cross the least bricks and return the number of crossed bricks.</p>\n\n<p><b>You cannot draw a line just along one of the two vertical edges of the wall, in which case the line will obviously cross no bricks. </b></p>\n\n<p>&nbsp;</p>\n\n<p><b>Example:</b></p>\n\n<pre>\n<b>Input:</b> [[1,2,2,1],\n        [3,1,2],\n        [1,3,2],\n        [2,4],\n        [3,1,2],\n        [1,3,1,1]]\n\n<b>Output:</b> 2\n\n<b>Explanation:</b> \n<img src=\"./img/brick-wall_1.png\" style=\"width: 100%; max-width: 350px\" />\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b></p>\n\n<ol>\n\t<li>The width sum of bricks in different rows are the same and won&#39;t exceed INT_MAX.</li>\n\t<li>The number of bricks in each row is in range [1,10,000]. The height of wall is in range [1,10,000]. Total number of bricks of the wall won&#39;t exceed 20,000.</li>\n</ol>\n"
    },
    {
        "id": "744",
        "title": "Find Smallest Letter Greater Than Target",
        "slug": "find-smallest-letter-greater-than-target",
        "difficulty": "Easy",
        "likes": 261,
        "dislikes": 385,
        "hints": [
            "Try to find whether each of 26 next letters are in the given string array."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "336",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Binary Search"
        ],
        "content": "<p>\nGiven a list of sorted characters <code>letters</code> containing only lowercase letters, and given a target letter <code>target</code>, find the smallest element in the list that is larger than the given target.\n</p><p>\nLetters also wrap around.  For example, if the target is <code>target = 'z'</code> and <code>letters = ['a', 'b']</code>, the answer is <code>'a'</code>.\n</p>\n\n<p><b>Examples:</b><br />\n<pre>\n<b>Input:</b>\nletters = [\"c\", \"f\", \"j\"]\ntarget = \"a\"\n<b>Output:</b> \"c\"\n\n<b>Input:</b>\nletters = [\"c\", \"f\", \"j\"]\ntarget = \"c\"\n<b>Output:</b> \"f\"\n\n<b>Input:</b>\nletters = [\"c\", \"f\", \"j\"]\ntarget = \"d\"\n<b>Output:</b> \"f\"\n\n<b>Input:</b>\nletters = [\"c\", \"f\", \"j\"]\ntarget = \"g\"\n<b>Output:</b> \"j\"\n\n<b>Input:</b>\nletters = [\"c\", \"f\", \"j\"]\ntarget = \"j\"\n<b>Output:</b> \"c\"\n\n<b>Input:</b>\nletters = [\"c\", \"f\", \"j\"]\ntarget = \"k\"\n<b>Output:</b> \"c\"\n</pre>\n</p>\n\n<p><b>Note:</b><br>\n<ol>\n<li><code>letters</code> has a length in range <code>[2, 10000]</code>.</li>\n<li><code>letters</code> consists of lowercase letters, and contains at least 2 unique letters.</li>\n<li><code>target</code> is a lowercase letter.</li>\n</ol>\n</p>"
    },
    {
        "id": "235",
        "title": "Lowest Common Ancestor of a Binary Search Tree",
        "slug": "lowest-common-ancestor-of-a-binary-search-tree",
        "difficulty": "Easy",
        "likes": 1248,
        "dislikes": 88,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Lowest Common Ancestor of a Binary Tree\", \"titleSlug\": \"lowest-common-ancestor-of-a-binary-tree\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "644",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree"
        ],
        "content": "<p>Given a binary search tree (BST), find the lowest common ancestor (LCA) of two given nodes in the BST.</p>\n\n<p>According to the <a href=\"https://en.wikipedia.org/wiki/Lowest_common_ancestor\" target=\"_blank\">definition of LCA on Wikipedia</a>: &ldquo;The lowest common ancestor is defined between two nodes p and q&nbsp;as the lowest node in T that has both p and q&nbsp;as descendants (where we allow <b>a node to be a descendant of itself</b>).&rdquo;</p>\n\n<p>Given binary search tree:&nbsp; root =&nbsp;[6,2,8,0,4,7,9,null,null,3,5]</p>\n<img alt=\"\" src=\"./img/lowest-common-ancestor-of-a-binary-search-tree_1.png\" style=\"width: 200px; height: 190px;\" />\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [6,2,8,0,4,7,9,null,null,3,5], p = 2, q = 8\n<strong>Output:</strong> 6\n<strong>Explanation: </strong>The LCA of nodes <code>2</code> and <code>8</code> is <code>6</code>.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong> root = [6,2,8,0,4,7,9,null,null,3,5], p = 2, q = 4\n<strong>Output:</strong> 2\n<strong>Explanation: </strong>The LCA of nodes <code>2</code> and <code>4</code> is <code>2</code>, since a node can be a descendant of itself according to the LCA definition.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>All of the nodes&#39; values will be unique.</li>\n\t<li>p and q are different and both values will&nbsp;exist in the BST.</li>\n</ul>\n"
    },
    {
        "id": "526",
        "title": "Beautiful Arrangement",
        "slug": "beautiful-arrangement",
        "difficulty": "Medium",
        "likes": 477,
        "dislikes": 116,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Beautiful Arrangement II\", \"titleSlug\": \"beautiful-arrangement-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "118",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Backtracking"
        ],
        "content": "<p>Suppose you have <b>N</b> integers from 1 to N. We define a beautiful arrangement as an array that is constructed by these <b>N</b> numbers successfully if one of the following is true for the i<sub>th</sub> position (1 &lt;= i &lt;= N) in this array:</p>\n\n<ol>\n\t<li>The number at the i<sub>th</sub> position is divisible by <b>i</b>.</li>\n\t<li><b>i</b> is divisible by the number at the i<sub>th</sub> position.</li>\n</ol>\n\n<p>&nbsp;</p>\n\n<p>Now given N, how many beautiful arrangements can you construct?</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<b>Input:</b> 2\n<b>Output:</b> 2\n<b>Explanation:</b> \n\nThe first beautiful arrangement is [1, 2]:\n\nNumber at the 1st position (i=1) is 1, and 1 is divisible by i (i=1).\n\nNumber at the 2nd position (i=2) is 2, and 2 is divisible by i (i=2).\n\nThe second beautiful arrangement is [2, 1]:\n\nNumber at the 1st position (i=1) is 2, and 2 is divisible by i (i=1).\n\nNumber at the 2nd position (i=2) is 1, and i (i=2) is divisible by 1.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><b>Note:</b></p>\n\n<ol>\n\t<li><b>N</b> is a positive integer and will not exceed 15.</li>\n</ol>\n\n<p>&nbsp;</p>\n"
    },
    {
        "id": "948",
        "title": "Bag of Tokens",
        "slug": "bag-of-tokens",
        "difficulty": "Medium",
        "likes": 110,
        "dislikes": 96,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "626",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Greedy"
        ],
        "content": "<p>You have an initial power <code>P</code>, an initial score of <code>0</code> points, and a bag of tokens.</p>\n\n<p>Each token can be used at most once, has a value <code>token[i]</code>, and has potentially two ways to use it.</p>\n\n<ul>\n\t<li>If we have at least <code>token[i]</code> power, we may play the token face up, losing <code>token[i]</code> power, and gaining <code>1</code> point.</li>\n\t<li>If we have at least <code>1</code> point, we may play the token face down, gaining <code>token[i]</code> power, and losing <code>1</code> point.</li>\n</ul>\n\n<p>Return the largest number of points we can have after playing any number of tokens.</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>tokens = <span id=\"example-input-1-1\">[100]</span>, P = <span id=\"example-input-1-2\">50</span>\n<strong>Output: </strong><span id=\"example-output-1\">0</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>tokens = <span id=\"example-input-2-1\">[100,200]</span>, P = <span id=\"example-input-2-2\">150</span>\n<strong>Output: </strong><span id=\"example-output-2\">1</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong>tokens = <span id=\"example-input-3-1\">[100,200,300,400]</span>, P = <span id=\"example-input-3-2\">200</span>\n<strong>Output: </strong><span id=\"example-output-3\">2</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>tokens.length &lt;= 1000</code></li>\n\t<li><code>0 &lt;= tokens[i] &lt; 10000</code></li>\n\t<li><code>0 &lt;= P &lt; 10000</code></li>\n</ol>\n</div>\n</div>\n</div>\n"
    },
    {
        "id": "100",
        "title": "Same Tree",
        "slug": "same-tree",
        "difficulty": "Easy",
        "likes": 1295,
        "dislikes": 43,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "706",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree",
            "Depth-first Search"
        ],
        "content": "<p>Given two binary trees, write a function to check if they are the same or not.</p>\n\n<p>Two binary trees are considered the same if they are structurally identical and the nodes have the same value.</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input:</strong>     1         1\n          / \\       / \\\n         2   3     2   3\n\n        [1,2,3],   [1,2,3]\n\n<strong>Output:</strong> true\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input:</strong>     1         1\n          /           \\\n         2             2\n\n        [1,2],     [1,null,2]\n\n<strong>Output:</strong> false\n</pre>\n\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input:</strong>     1         1\n          / \\       / \\\n         2   1     1   2\n\n        [1,2,1],   [1,1,2]\n\n<strong>Output:</strong> false\n</pre>\n"
    },
    {
        "id": "826",
        "title": "Most Profit Assigning Work",
        "slug": "most-profit-assigning-work",
        "difficulty": "Medium",
        "likes": 242,
        "dislikes": 42,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "457",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Two Pointers"
        ],
        "content": "<p>We have jobs: <code>difficulty[i]</code>&nbsp;is the difficulty of the&nbsp;<code>i</code>th job, and&nbsp;<code>profit[i]</code>&nbsp;is the profit of the&nbsp;<code>i</code>th job.&nbsp;</p>\n\n<p>Now we have some workers.&nbsp;<code>worker[i]</code>&nbsp;is the ability of the&nbsp;<code>i</code>th worker, which means that this worker can only complete a job with difficulty at most&nbsp;<code>worker[i]</code>.&nbsp;</p>\n\n<p>Every worker can be assigned at most one job, but one job&nbsp;can be completed multiple times.</p>\n\n<p>For example, if 3 people attempt the same job that pays $1, then the total profit will be $3.&nbsp; If a worker cannot complete any job, his profit is $0.</p>\n\n<p>What is the most profit we can make?</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>difficulty = [2,4,6,8,10], profit = [10,20,30,40,50], worker = [4,5,6,7]\n<strong>Output: </strong>100 \n<strong>Explanation: W</strong>orkers are assigned jobs of difficulty [4,4,6,6] and they get profit of [20,20,30,30] seperately.</pre>\n\n<p><strong>Notes:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= difficulty.length = profit.length &lt;= 10000</code></li>\n\t<li><code>1 &lt;= worker.length &lt;= 10000</code></li>\n\t<li><code>difficulty[i], profit[i], worker[i]</code>&nbsp; are in range&nbsp;<code>[1, 10^5]</code></li>\n</ul>\n"
    },
    {
        "id": "37",
        "title": "Sudoku Solver",
        "slug": "sudoku-solver",
        "difficulty": "Hard",
        "likes": 1057,
        "dislikes": 70,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Valid Sudoku\", \"titleSlug\": \"valid-sudoku\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Unique Paths III\", \"titleSlug\": \"unique-paths-iii\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "709",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Hash Table",
            "Backtracking"
        ],
        "content": "<p>Write a program to solve a Sudoku puzzle by filling the empty cells.</p>\n\n<p>A&nbsp;sudoku solution must satisfy <strong>all of&nbsp;the following rules</strong>:</p>\n\n<ol>\n\t<li>Each of the digits&nbsp;<code>1-9</code> must occur exactly&nbsp;once in each row.</li>\n\t<li>Each of the digits&nbsp;<code>1-9</code>&nbsp;must occur&nbsp;exactly once in each column.</li>\n\t<li>Each of the the digits&nbsp;<code>1-9</code> must occur exactly once in each of the 9 <code>3x3</code> sub-boxes of the grid.</li>\n</ol>\n\n<p>Empty cells are indicated by the character <code>&#39;.&#39;</code>.</p>\n\n<p><img src=\"./img/sudoku-solver_1.png\" style=\"height:250px; width:250px\" /><br />\n<small>A sudoku puzzle...</small></p>\n\n<p><img src=\"./img/sudoku-solver_2.png\" style=\"height:250px; width:250px\" /><br />\n<small>...and its solution numbers marked in red.</small></p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>The given board&nbsp;contain only digits <code>1-9</code> and the character <code>&#39;.&#39;</code>.</li>\n\t<li>You may assume that the given Sudoku puzzle will have a single unique solution.</li>\n\t<li>The given board size is always <code>9x9</code>.</li>\n</ul>\n"
    },
    {
        "id": "541",
        "title": "Reverse String II",
        "slug": "reverse-string-ii",
        "difficulty": "Easy",
        "likes": 272,
        "dislikes": 845,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Reverse String\", \"titleSlug\": \"reverse-string\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Reverse Words in a String III\", \"titleSlug\": \"reverse-words-in-a-string-iii\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": {
            "id": "321",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "String"
        ],
        "content": "</p>\nGiven a string and an integer k, you need to reverse the first k characters for every 2k characters counting from the start of the string. If there are less than k characters left, reverse all of them. If there are less than 2k but greater than or equal to k characters, then reverse the first k characters and left the other as original.\n</p>\n\n<p><b>Example:</b><br />\n<pre>\n<b>Input:</b> s = \"abcdefg\", k = 2\n<b>Output:</b> \"bacdfeg\"\n</pre>\n</p>\n\n<b>Restrictions:</b> </b>\n<ol>\n<li> The string consists of lower English letters only.</li>\n<li> Length of the given string and k will in the range [1, 10000]</li>\n</ol>"
    },
    {
        "id": "914",
        "title": "X of a Kind in a Deck of Cards",
        "slug": "x-of-a-kind-in-a-deck-of-cards",
        "difficulty": "Easy",
        "likes": 269,
        "dislikes": 66,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "573",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Math"
        ],
        "content": "<p>In a deck of cards, each card has an integer written on it.</p>\n\n<p>Return <code>true</code> if and only if you can choose&nbsp;<code>X &gt;= 2</code> such that&nbsp;it is possible to split the entire deck&nbsp;into 1 or more groups of cards, where:</p>\n\n<ul>\n\t<li>Each group has exactly <code>X</code> cards.</li>\n\t<li>All the cards in each group have the same integer.</li>\n</ul>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[1,2,3,4,4,3,2,1]</span>\n<strong>Output: </strong><span id=\"example-output-1\">true\n<strong>Explanation</strong>: Possible partition [1,1],[2,2],[3,3],[4,4]</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[1,1,1,2,2,2,3,3]</span>\n<strong>Output: </strong><span id=\"example-output-2\">false\n</span><span id=\"example-output-1\"><strong>Explanation</strong>: No possible partition.</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">[1]</span>\n<strong>Output: </strong><span id=\"example-output-3\">false\n</span><span id=\"example-output-1\"><strong>Explanation</strong>: No possible partition.</span>\n</pre>\n\n<div>\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-4-1\">[1,1]</span>\n<strong>Output: </strong><span id=\"example-output-4\">true\n</span><span id=\"example-output-1\"><strong>Explanation</strong>: Possible partition [1,1]</span>\n</pre>\n\n<div>\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-5-1\">[1,1,2,2,2,2]</span>\n<strong>Output: </strong><span id=\"example-output-5\">true\n</span><span id=\"example-output-1\"><strong>Explanation</strong>: Possible partition [1,1],[2,2],[2,2]</span>\n</pre>\n</div>\n</div>\n</div>\n</div>\n\n<p><br />\n<strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= deck.length &lt;= 10000</code></li>\n\t<li><code>0 &lt;= deck[i] &lt;&nbsp;10000</code></li>\n</ol>\n\n<div>\n<div>\n<div>\n<div>\n<div>&nbsp;</div>\n</div>\n</div>\n</div>\n</div>\n"
    },
    {
        "id": "846",
        "title": "Hand of Straights",
        "slug": "hand-of-straights",
        "difficulty": "Medium",
        "likes": 318,
        "dislikes": 45,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "479",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Ordered Map"
        ],
        "content": "<p>Alice has a <code>hand</code> of cards, given as an array of integers.</p>\n\n<p>Now she wants to rearrange the cards into groups so that each group is size <code>W</code>, and consists of <code>W</code> consecutive cards.</p>\n\n<p>Return <code>true</code> if and only if she can.</p>\n\n<p>&nbsp;</p>\n\n<ol>\n</ol>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>hand = [1,2,3,6,2,3,4,7,8], W = 3\n<strong>Output: </strong>true\n<strong>Explanation:</strong> Alice&#39;s <code>hand</code> can be rearranged as <code>[1,2,3],[2,3,4],[6,7,8]</code>.</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>hand = [1,2,3,4,5], W = 4\n<strong>Output: </strong>false\n<strong>Explanation:</strong> Alice&#39;s <code>hand</code> can&#39;t be rearranged into groups of <code>4</code>.</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= hand.length &lt;= 10000</code></li>\n\t<li><code>0 &lt;= hand[i]&nbsp;&lt;= 10^9</code></li>\n\t<li><code>1 &lt;= W &lt;= hand.length</code></li>\n</ol>\n"
    },
    {
        "id": "877",
        "title": "Stone Game",
        "slug": "stone-game",
        "difficulty": "Medium",
        "likes": 381,
        "dislikes": 660,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "521",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math",
            "Dynamic Programming",
            "Minimax"
        ],
        "content": "<p>Alex and Lee play a game with piles of stones.&nbsp; There are an even number of&nbsp;piles <strong>arranged in a row</strong>, and each pile has a positive integer number of stones <code>piles[i]</code>.</p>\n\n<p>The objective of the game is to end with the most&nbsp;stones.&nbsp; The total number of stones is odd, so there are no ties.</p>\n\n<p>Alex and Lee take turns, with Alex starting first.&nbsp; Each turn, a player&nbsp;takes the entire pile of stones from either the beginning or the end of the row.&nbsp; This continues until there are no more piles left, at which point the person with the most stones wins.</p>\n\n<p>Assuming Alex and Lee play optimally, return <code>True</code>&nbsp;if and only if Alex wins the game.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[5,3,4,5]</span>\n<strong>Output: </strong><span id=\"example-output-1\">true</span>\n<strong>Explanation: </strong>\nAlex starts first, and can only take the first 5 or the last 5.\nSay he takes the first 5, so that the row becomes [3, 4, 5].\nIf Lee takes 3, then the board is [4, 5], and Alex takes 5 to win with 10 points.\nIf Lee takes the last 5, then the board is [3, 4], and Alex takes 4 to win with 9 points.\nThis demonstrated that taking the first 5 was a winning move for Alex, so we return true.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>2 &lt;= piles.length &lt;= 500</code></li>\n\t<li><code>piles.length</code> is even.</li>\n\t<li><code>1 &lt;= piles[i] &lt;= 500</code></li>\n\t<li><code>sum(piles)</code> is odd.</li>\n</ol>"
    },
    {
        "id": "561",
        "title": "Array Partition I",
        "slug": "array-partition-i",
        "difficulty": "Easy",
        "likes": 614,
        "dislikes": 1884,
        "hints": [
            "Obviously, brute force won't help here. Think of something else, take some example like 1,2,3,4.",
            "How will you make pairs to get the result? There must be some pattern.",
            "Did you observe that- Minimum element gets add into the result in sacrifice of maximum element.",
            "Still won't able to find pairs? Sort the array and try to find the pattern."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "117",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array"
        ],
        "content": "<p>\nGiven an array of <b>2n</b> integers, your task is to group these integers into <b>n</b> pairs of integer, say (a<sub>1</sub>, b<sub>1</sub>), (a<sub>2</sub>, b<sub>2</sub>), ..., (a<sub>n</sub>, b<sub>n</sub>) which makes sum of min(a<sub>i</sub>, b<sub>i</sub>) for all i from 1 to n as large as possible.\n</p>\n\n<p><b>Example 1:</b><br />\n<pre>\n<b>Input:</b> [1,4,3,2]\n\n<b>Output:</b> 4\n<b>Explanation:</b> n is 2, and the maximum sum of pairs is 4 = min(1, 2) + min(3, 4).\n</pre>\n</p>\n\n<p><b>Note:</b><br>\n<ol>\n<li><b>n</b> is a positive integer, which is in the range of [1, 10000].</li>\n<li>All the integers in the array will be in the range of [-10000, 10000].</li>\n</ol>\n</p>"
    },
    {
        "id": "879",
        "title": "Profitable Schemes",
        "slug": "profitable-schemes",
        "difficulty": "Hard",
        "likes": 164,
        "dislikes": 20,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "523",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>There are G people in a gang, and a list of various crimes they could commit.</p>\n\n<p>The <code>i</code>-th crime generates a <code>profit[i]</code> and requires <code>group[i]</code> gang members to participate.</p>\n\n<p>If a gang member participates in one crime, that member can&#39;t participate in another crime.</p>\n\n<p>Let&#39;s call a <em>profitable&nbsp;scheme</em>&nbsp;any subset of these crimes that generates at least <code>P</code> profit, and the total number of gang members participating in that subset of crimes is at most G.</p>\n\n<p>How many schemes can be chosen?&nbsp; Since the answer may be very&nbsp;large, <strong>return it modulo</strong> <code>10^9 + 7</code>.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>G = <span id=\"example-input-1-1\">5</span>, P = <span id=\"example-input-1-2\">3</span>, group = <span id=\"example-input-1-3\">[2,2]</span>, profit = <span id=\"example-input-1-4\">[2,3]</span>\n<strong>Output: </strong><span id=\"example-output-1\">2</span>\n<strong>Explanation: </strong>\nTo make a profit of at least 3, the gang could either commit crimes 0 and 1, or just crime 1.\nIn total, there are 2 schemes.\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>G = <span id=\"example-input-2-1\">10</span>, P = <span id=\"example-input-2-2\">5</span>, group = <span id=\"example-input-2-3\">[2,3,5]</span>, profit = <span id=\"example-input-2-4\">[6,7,8]</span>\n<strong>Output: </strong><span id=\"example-output-2\">7</span>\n<strong>Explanation: </strong>\nTo make a profit of at least 5, the gang could commit any crimes, as long as they commit one.\nThere are 7 possible schemes: (0), (1), (2), (0,1), (0,2), (1,2), and (0,1,2).\n</pre>\n\n<p>&nbsp;</p>\n</div>\n\n<p><strong>Note:</strong></p>\n\n<ol>\n\t<li><code>1 &lt;= G &lt;= 100</code></li>\n\t<li><code>0 &lt;= P &lt;= 100</code></li>\n\t<li><code>1 &lt;= group[i] &lt;= 100</code></li>\n\t<li><code>0 &lt;= profit[i] &lt;= 100</code></li>\n\t<li><code>1 &lt;= group.length = profit.length &lt;= 100</code></li>\n</ol>\n\n<div>\n<div>&nbsp;</div>\n</div>\n"
    },
    {
        "id": "801",
        "title": "Minimum Swaps To Make Sequences Increasing",
        "slug": "minimum-swaps-to-make-sequences-increasing",
        "difficulty": "Medium",
        "likes": 572,
        "dislikes": 35,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "435",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Dynamic Programming"
        ],
        "content": "<p>We have two integer sequences <code>A</code> and <code>B</code> of the same non-zero length.</p>\n\n<p>We are allowed to swap elements <code>A[i]</code> and <code>B[i]</code>.&nbsp; Note that both elements are in the same index position in their respective sequences.</p>\n\n<p>At the end of some number of swaps, <code>A</code> and <code>B</code> are both strictly increasing.&nbsp; (A sequence is <em>strictly increasing</em> if and only if <code>A[0] &lt; A[1] &lt; A[2] &lt; ... &lt; A[A.length - 1]</code>.)</p>\n\n<p>Given A and B, return the minimum number of swaps to make both sequences strictly increasing.&nbsp; It is guaranteed that the given input always makes it possible.</p>\n\n<pre>\n<strong>Example:</strong>\n<strong>Input:</strong> A = [1,3,5,4], B = [1,2,3,7]\n<strong>Output:</strong> 1\n<strong>Explanation: </strong>\nSwap A[3] and B[3].  Then the sequences are:\nA = [1, 3, 5, 7] and B = [1, 2, 3, 4]\nwhich are both strictly increasing.\n</pre>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li><code>A, B</code> are arrays with the same length, and that length will be in the range <code>[1, 1000]</code>.</li>\n\t<li><code>A[i], B[i]</code> are integer values in the range <code>[0, 2000]</code>.</li>\n</ul>\n"
    },
    {
        "id": "876",
        "title": "Middle of the Linked List",
        "slug": "middle-of-the-linked-list",
        "difficulty": "Easy",
        "likes": 610,
        "dislikes": 42,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "520",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Linked List"
        ],
        "content": "<p>Given a non-empty, singly&nbsp;linked list with head node <code>head</code>, return&nbsp;a&nbsp;middle node of linked list.</p>\n\n<p>If there are two middle nodes, return the second middle node.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[1,2,3,4,5]</span>\n<strong>Output: </strong>Node 3 from this list (Serialization: <span id=\"example-output-1\">[3,4,5]</span>)\nThe returned node has value 3.  (The judge&#39;s serialization of this node is [3,4,5]).\nNote that we returned a ListNode object ans, such that:\nans.val = 3, ans.next.val = 4, ans.next.next.val = 5, and ans.next.next.next = NULL.\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[1,2,3,4,5,6]</span>\n<strong>Output: </strong>Node 4 from this list (Serialization: <span id=\"example-output-2\">[4,5,6]</span>)\nSince the list has two middle nodes with values 3 and 4, we return the second one.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>The number of nodes in the given list will be between <code>1</code>&nbsp;and <code>100</code>.</li>\n</ul>\n</div>\n</div>\n"
    },
    {
        "id": "1178",
        "title": "Number of Valid Words for Each Puzzle",
        "slug": "number-of-valid-words-for-each-puzzle",
        "difficulty": "Hard",
        "likes": 91,
        "dislikes": 8,
        "hints": [
            "Exploit the fact that the length of the puzzle is only 7.",
            "Use bit-masks to represent the word and puzzle strings.",
            "For each puzzle, count the number of words whose bit-mask is a sub-mask of the puzzle's bit-mask."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Hash Table",
            "Bit Manipulation"
        ],
        "content": "With respect to a given <code>puzzle</code> string, a <code>word</code> is <em>valid</em>&nbsp;if both the following conditions are satisfied:\n<ul>\n\t<li><code>word</code> contains the first letter of <code>puzzle</code>.</li>\n\t<li>For each letter in <code>word</code>, that letter is in <code>puzzle</code>.<br />\n\tFor example, if the puzzle is &quot;abcdefg&quot;, then valid words are &quot;faced&quot;, &quot;cabbage&quot;, and &quot;baggage&quot;; while invalid words are &quot;beefed&quot; (doesn&#39;t include &quot;a&quot;) and &quot;based&quot; (includes &quot;s&quot; which isn&#39;t in the puzzle).</li>\n</ul>\nReturn an array <code>answer</code>, where <code>answer[i]</code> is the number of words in the given word list&nbsp;<code>words</code> that are valid with respect to the puzzle <code>puzzles[i]</code>.\n<p>&nbsp;</p>\n<p><strong>Example :</strong></p>\n\n<pre>\n<strong>Input:</strong> \nwords = [&quot;aaaa&quot;,&quot;asas&quot;,&quot;able&quot;,&quot;ability&quot;,&quot;actt&quot;,&quot;actor&quot;,&quot;access&quot;], \npuzzles = [&quot;aboveyz&quot;,&quot;abrodyz&quot;,&quot;abslute&quot;,&quot;absoryz&quot;,&quot;actresz&quot;,&quot;gaswxyz&quot;]\n<strong>Output:</strong> [1,1,3,2,4,0]\n<strong>Explanation:</strong>\n1 valid word&nbsp;for &quot;aboveyz&quot; : &quot;aaaa&quot; \n1 valid word&nbsp;for &quot;abrodyz&quot; : &quot;aaaa&quot;\n3 valid words for &quot;abslute&quot; : &quot;aaaa&quot;, &quot;asas&quot;, &quot;able&quot;\n2 valid words for&nbsp;&quot;absoryz&quot; : &quot;aaaa&quot;, &quot;asas&quot;\n4 valid words for&nbsp;&quot;actresz&quot; : &quot;aaaa&quot;, &quot;asas&quot;, &quot;actt&quot;, &quot;access&quot;\nThere&#39;re&nbsp;no valid words for&nbsp;&quot;gaswxyz&quot; cause none of the words in the list contains letter &#39;g&#39;.\n</pre>\n\n<p>&nbsp;</p>\n<p><strong>Constraints:</strong></p>\n\n<ul>\n\t<li><code>1 &lt;= words.length &lt;= 10^5</code></li>\n\t<li><code>4 &lt;= words[i].length &lt;= 50</code></li>\n\t<li><code>1 &lt;= puzzles.length &lt;= 10^4</code></li>\n\t<li><code>puzzles[i].length == 7</code></li>\n\t<li><code>words[i][j]</code>, <code>puzzles[i][j]</code> are English lowercase letters.</li>\n\t<li>Each <code>puzzles[i] </code>doesn&#39;t contain repeated characters.</li>\n</ul>\n"
    },
    {
        "id": "85",
        "title": "Maximal Rectangle",
        "slug": "maximal-rectangle",
        "difficulty": "Hard",
        "likes": 1688,
        "dislikes": 54,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Largest Rectangle in Histogram\", \"titleSlug\": \"largest-rectangle-in-histogram\", \"difficulty\": \"Hard\", \"translatedTitle\": null}, {\"title\": \"Maximal Square\", \"titleSlug\": \"maximal-square\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "712",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Hash Table",
            "Dynamic Programming",
            "Stack"
        ],
        "content": "<p>Given a 2D binary matrix filled with 0&#39;s and 1&#39;s, find the largest rectangle containing only 1&#39;s and return its area.</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input:</strong>\n[\n  [&quot;1&quot;,&quot;0&quot;,&quot;1&quot;,&quot;0&quot;,&quot;0&quot;],\n  [&quot;1&quot;,&quot;0&quot;,&quot;<strong>1</strong>&quot;,&quot;<strong>1</strong>&quot;,&quot;<strong>1</strong>&quot;],\n  [&quot;1&quot;,&quot;1&quot;,&quot;<strong>1</strong>&quot;,&quot;<strong>1</strong>&quot;,&quot;<strong>1</strong>&quot;],\n  [&quot;1&quot;,&quot;0&quot;,&quot;0&quot;,&quot;1&quot;,&quot;0&quot;]\n]\n<strong>Output:</strong> 6\n</pre>\n"
    },
    {
        "id": "84",
        "title": "Largest Rectangle in Histogram",
        "slug": "largest-rectangle-in-histogram",
        "difficulty": "Hard",
        "likes": 2258,
        "dislikes": 60,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Maximal Rectangle\", \"titleSlug\": \"maximal-rectangle\", \"difficulty\": \"Hard\", \"translatedTitle\": null}]",
        "solution": {
            "id": "67",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array",
            "Stack"
        ],
        "content": "<p>Given <em>n</em> non-negative integers representing the histogram&#39;s bar height where the width of each bar is 1, find the area of largest rectangle in the histogram.</p>\n\n<p>&nbsp;</p>\n\n<p><img src=\"./img/largest-rectangle-in-histogram_1.png\" style=\"width: 188px; height: 204px;\" /><br />\n<small>Above is a histogram where width of each bar is 1, given height = <code>[2,1,5,6,2,3]</code>.</small></p>\n\n<p>&nbsp;</p>\n\n<p><img src=\"./img/largest-rectangle-in-histogram_2.png\" style=\"width: 188px; height: 204px;\" /><br />\n<small>The largest rectangle is shown in the shaded area, which has area = <code>10</code> unit.</small></p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example:</strong></p>\n\n<pre>\n<strong>Input:</strong> [2,1,5,6,2,3]\n<strong>Output:</strong> 10\n</pre>\n"
    },
    {
        "id": "110",
        "title": "Balanced Binary Tree",
        "slug": "balanced-binary-tree",
        "difficulty": "Easy",
        "likes": 1428,
        "dislikes": 127,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Maximum Depth of Binary Tree\", \"titleSlug\": \"maximum-depth-of-binary-tree\", \"difficulty\": \"Easy\", \"translatedTitle\": null}]",
        "solution": null,
        "topicTags": [
            "Tree",
            "Depth-first Search"
        ],
        "content": "<p>Given a binary tree, determine if it is height-balanced.</p>\n\n<p>For this problem, a height-balanced binary tree is defined as:</p>\n\n<blockquote>\n<p>a binary tree in which the depth of the two subtrees of <em>every</em> node never differ by more than 1.</p>\n</blockquote>\n\n<p><strong>Example 1:</strong></p>\n\n<p>Given the following tree <code>[3,9,20,null,null,15,7]</code>:</p>\n\n<pre>\n    3\n   / \\\n  9  20\n    /  \\\n   15   7</pre>\n\n<p>Return true.<br />\n<br />\n<strong>Example 2:</strong></p>\n\n<p>Given the following tree <code>[1,2,2,3,3,null,null,4,4]</code>:</p>\n\n<pre>\n       1\n      / \\\n     2   2\n    / \\\n   3   3\n  / \\\n 4   4\n</pre>\n\n<p>Return false.</p>\n"
    },
    {
        "id": "828",
        "title": "Unique Letter String",
        "slug": "unique-letter-string",
        "difficulty": "Hard",
        "likes": 249,
        "dislikes": 30,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "460",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Two Pointers"
        ],
        "content": "<p>A character is unique in string <code>S</code> if it occurs exactly once in it.</p>\n\n<p>For example, in string <code>S = &quot;LETTER&quot;</code>, the only unique characters are <code>&quot;L&quot;</code> and <code>&quot;R&quot;</code>.</p>\n\n<p>Let&#39;s define <code>UNIQ(S)</code> as the number of unique characters in string <code>S</code>.</p>\n\n<p>For example, <code>UNIQ(&quot;LETTER&quot;) =&nbsp; 2</code>.</p>\n\n<p>Given a string <code>S</code> with only uppercases, calculate the sum of <code>UNIQ(substring)</code> over all non-empty substrings of <code>S</code>.</p>\n\n<p>If there are two or more equal substrings at different positions in <code>S</code>, we consider them different.</p>\n\n<p>Since the answer can be very large, return&nbsp;the answer&nbsp;modulo&nbsp;<code>10 ^ 9 + 7</code>.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>&quot;ABC&quot;\n<strong>Output: </strong>10\n<strong>Explanation: </strong>All possible substrings are: &quot;A&quot;,&quot;B&quot;,&quot;C&quot;,&quot;AB&quot;,&quot;BC&quot; and &quot;ABC&quot;.\nEvey substring is composed with only unique letters.\nSum of lengths of all substring is 1 + 1 + 1 + 2 + 2 + 3 = 10</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>&quot;ABA&quot;\n<strong>Output: </strong>8\n<strong>Explanation: </strong>The same as example 1, except uni(&quot;ABA&quot;) = 1.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong> <code>0 &lt;= S.length &lt;= 10000</code>.</p>\n"
    },
    {
        "id": "792",
        "title": "Number of Matching Subsequences",
        "slug": "number-of-matching-subsequences",
        "difficulty": "Medium",
        "likes": 544,
        "dislikes": 43,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"Is Subsequence\", \"titleSlug\": \"is-subsequence\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Shortest Way to Form String\", \"titleSlug\": \"shortest-way-to-form-string\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "423",
            "canSeeDetail": false,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Array"
        ],
        "content": "<p>Given string <code>S</code> and a&nbsp;dictionary of words <code>words</code>, find the number of <code>words[i]</code> that is a subsequence of <code>S</code>.</p>\n\n<pre>\n<strong>Example :</strong>\n<strong>Input:</strong> \nS = &quot;abcde&quot;\nwords = [&quot;a&quot;, &quot;bb&quot;, &quot;acd&quot;, &quot;ace&quot;]\n<strong>Output:</strong> 3\n<strong>Explanation:</strong> There are three words in <code>words</code> that are a subsequence of <code>S</code>: &quot;a&quot;, &quot;acd&quot;, &quot;ace&quot;.\n</pre>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>All words in <code>words</code> and <code>S</code> will only consists of lowercase letters.</li>\n\t<li>The length of <code>S</code> will be in the range of <code>[1, 50000]</code>.</li>\n\t<li>The length of <code>words</code> will be in the range of&nbsp;<code>[1, 5000]</code>.</li>\n\t<li>The length of <code>words[i]</code> will be in the range of <code>[1, 50]</code>.</li>\n</ul>\n"
    },
    {
        "id": "806",
        "title": "Number of Lines To Write String",
        "slug": "number-of-lines-to-write-string",
        "difficulty": "Easy",
        "likes": 168,
        "dislikes": 686,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "437",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [],
        "content": "<p>We are to write the letters of a given string <code>S</code>, from left to right into lines. Each line has maximum width 100 units, and if writing a letter would cause the width of the line to exceed 100 units, it is written on the next line. We are given an array&nbsp;<code>widths</code>, an array where widths[0] is the width of &#39;a&#39;, widths[1] is the width of &#39;b&#39;, ..., and widths[25] is the width of &#39;z&#39;.</p>\n\n<p>Now answer two questions: how many lines have at least one character from <code>S</code>, and what is the width used by the last such line? Return your answer as an integer list of length 2.</p>\n\n<p>&nbsp;</p>\n\n<pre>\n<strong>Example :</strong>\n<strong>Input:</strong> \nwidths = [10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10]\nS = &quot;abcdefghijklmnopqrstuvwxyz&quot;\n<strong>Output:</strong> [3, 60]\n<strong>Explanation: </strong>\nAll letters have the same length of 10. To write all 26 letters,\nwe need two full lines and one line with 60 units.\n</pre>\n\n<pre>\n<strong>Example :</strong>\n<strong>Input:</strong> \nwidths = [4,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10]\nS = &quot;bbbcccdddaaa&quot;\n<strong>Output:</strong> [2, 4]\n<strong>Explanation: </strong>\nAll letters except &#39;a&#39; have the same length of 10, and \n&quot;bbbcccdddaa&quot; will cover 9 * 10 + 2 * 4 = 98 units.\nFor the last &#39;a&#39;, it is written on the second line because\nthere is only 2 units left in the first line.\nSo the answer is 2 lines, plus 4 units in the second line.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>Note:</strong></p>\n\n<ul>\n\t<li>The length of <code>S</code> will be in the range&nbsp;[1, 1000].</li>\n\t<li><code>S</code> will only contain lowercase letters.</li>\n\t<li><code>widths</code> is&nbsp;an array of length <code>26</code>.</li>\n\t<li><code>widths[i]</code> will be in the range of <code>[2, 10]</code>.</li>\n</ul>\n"
    },
    {
        "id": "374",
        "title": "Guess Number Higher or Lower",
        "slug": "guess-number-higher-or-lower",
        "difficulty": "Easy",
        "likes": 259,
        "dislikes": 1287,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[{\"title\": \"First Bad Version\", \"titleSlug\": \"first-bad-version\", \"difficulty\": \"Easy\", \"translatedTitle\": null}, {\"title\": \"Guess Number Higher or Lower II\", \"titleSlug\": \"guess-number-higher-or-lower-ii\", \"difficulty\": \"Medium\", \"translatedTitle\": null}, {\"title\": \"Find K Closest Elements\", \"titleSlug\": \"find-k-closest-elements\", \"difficulty\": \"Medium\", \"translatedTitle\": null}]",
        "solution": {
            "id": "57",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Binary Search"
        ],
        "content": "<p>We are playing the Guess Game. The game is as follows:</p>\n\n<p>I pick a number from <b>1</b> to <b><i>n</i></b>. You have to guess which number I picked.</p>\n\n<p>Every time you guess wrong, I&#39;ll tell you whether the number is higher or lower.</p>\n\n<p>You call a pre-defined API <code>guess(int num)</code> which returns 3 possible results (<code>-1</code>, <code>1</code>, or <code>0</code>):</p>\n\n<pre>\n-1 : My number is lower\n 1 : My number is higher\n 0 : Congrats! You got it!\n</pre>\n\n<p><strong>Example :</strong></p>\n\n<div>\n<pre>\n<strong>Input: </strong>n = <span id=\"example-input-1-1\">10</span>, pick = <span id=\"example-input-1-2\">6</span>\n<strong>Output: </strong><span id=\"example-output-1\">6</span>\n</pre>\n</div>\n"
    },
    {
        "id": "883",
        "title": "Projection Area of 3D Shapes",
        "slug": "projection-area-of-3d-shapes",
        "difficulty": "Easy",
        "likes": 163,
        "dislikes": 580,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "526",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Math"
        ],
        "content": "<p>On a&nbsp;<code>N&nbsp;*&nbsp;N</code> grid, we place some&nbsp;<code>1 * 1 * 1&nbsp;</code>cubes that are axis-aligned with the x, y, and z axes.</p>\n\n<p>Each value&nbsp;<code>v = grid[i][j]</code>&nbsp;represents a tower of&nbsp;<code>v</code>&nbsp;cubes placed on top of grid cell <code>(i, j)</code>.</p>\n\n<p>Now we view the&nbsp;<em>projection</em>&nbsp;of these cubes&nbsp;onto the xy, yz, and zx planes.</p>\n\n<p>A projection is like a shadow, that&nbsp;maps our 3 dimensional figure to a 2 dimensional plane.&nbsp;</p>\n\n<p>Here, we are viewing the &quot;shadow&quot; when looking at the cubes from the top, the front, and the side.</p>\n\n<p>Return the total area of all three projections.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<ul>\n</ul>\n</div>\n\n<div>\n<div>\n<ul>\n</ul>\n</div>\n</div>\n\n<div>\n<div>\n<div>\n<div>\n<ul>\n</ul>\n</div>\n</div>\n</div>\n</div>\n\n<div>\n<div>\n<div>\n<div>\n<div>\n<div>\n<div>\n<div>\n<ul>\n</ul>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-1-1\">[[2]]</span>\n<strong>Output: </strong><span id=\"example-output-1\">5</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-2-1\">[[1,2],[3,4]]</span>\n<strong>Output: </strong><span id=\"example-output-2\">17</span>\n<strong>Explanation: </strong>\nHere are the three projections (&quot;shadows&quot;) of the shape made with each axis-aligned plane.\n<img alt=\"\" src=\"./img/projection-area-of-3d-shapes_1.png\" style=\"width: 749px; height: 200px;\" />\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-3-1\">[[1,0],[0,2]]</span>\n<strong>Output: </strong><span id=\"example-output-3\">8</span>\n</pre>\n\n<div>\n<p><strong>Example 4:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-4-1\">[[1,1,1],[1,0,1],[1,1,1]]</span>\n<strong>Output: </strong><span id=\"example-output-4\">14</span>\n</pre>\n\n<div>\n<p><strong>Example 5:</strong></p>\n\n<pre>\n<strong>Input: </strong><span id=\"example-input-5-1\">[[2,2,2],[2,1,2],[2,2,2]]</span>\n<strong>Output: </strong><span id=\"example-output-5\">21</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<div>\n<div>\n<div>\n<p><span><strong>Note:</strong></span></p>\n\n<ul>\n\t<li><code>1 &lt;= grid.length = grid[0].length&nbsp;&lt;= 50</code></li>\n\t<li><code>0 &lt;= grid[i][j] &lt;= 50</code></li>\n</ul>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n"
    },
    {
        "id": "115",
        "title": "Distinct Subsequences",
        "slug": "distinct-subsequences",
        "difficulty": "Hard",
        "likes": 785,
        "dislikes": 39,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "String",
            "Dynamic Programming"
        ],
        "content": "<p>Given a string <strong>S</strong> and a string <strong>T</strong>, count the number of distinct subsequences of <strong>S</strong> which equals <strong>T</strong>.</p>\n\n<p>A subsequence of a string is a new string which is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (ie, <code>&quot;ACE&quot;</code> is a subsequence of <code>&quot;ABCDE&quot;</code> while <code>&quot;AEC&quot;</code> is not).</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>S = <code>&quot;rabbbit&quot;</code>, T = <code>&quot;rabbit&quot;\n<strong>Output:</strong>&nbsp;3\n</code><strong>Explanation:\n</strong>\nAs shown below, there are 3 ways you can generate &quot;rabbit&quot; from S.\n(The caret symbol ^ means the chosen letters)\n\n<code>rabbbit</code>\n^^^^ ^^\n<code>rabbbit</code>\n^^ ^^^^\n<code>rabbbit</code>\n^^^ ^^^\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>S = <code>&quot;babgbag&quot;</code>, T = <code>&quot;bag&quot;\n<strong>Output:</strong>&nbsp;5\n</code><strong>Explanation:\n</strong>\nAs shown below, there are 5 ways you can generate &quot;bag&quot; from S.\n(The caret symbol ^ means the chosen letters)\n\n<code>babgbag</code>\n^^ ^\n<code>babgbag</code>\n^^    ^\n<code>babgbag</code>\n^    ^^\n<code>babgbag</code>\n  ^  ^^\n<code>babgbag</code>\n    ^^^\n</pre>\n"
    },
    {
        "id": "335",
        "title": "Self Crossing",
        "slug": "self-crossing",
        "difficulty": "Hard",
        "likes": 91,
        "dislikes": 281,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Math"
        ],
        "content": "<p>You are given an array <i>x</i> of <code>n</code> positive numbers. You start at point <code>(0,0)</code> and moves <code>x[0]</code> metres to the north, then <code>x[1]</code> metres to the west, <code>x[2]</code> metres to the south, <code>x[3]</code> metres to the east and so on. In other words, after each move your direction changes counter-clockwise.</p>\n\n<p>Write a one-pass algorithm with <code>O(1)</code> extra space to determine, if your path crosses itself, or not.</p>\n\n<p>&nbsp;</p>\n\n<p><b>Example 1:</b></p>\n\n<pre>\n<strong>\u250c\u2500\u2500\u2500\u2510\n\u2502 &nbsp; \u2502\n\u2514\u2500\u2500\u2500\u253c\u2500\u2500&gt;\n&nbsp; &nbsp; \u2502\n\nInput: </strong><code>[2,1,1,2]</code>\n<strong>Output: </strong>true\n</pre>\n\n<p><b>Example 2:</b></p>\n\n<pre>\n<strong>\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 &nbsp; &nbsp; &nbsp;\u2502\n\u2502\n\u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500&gt;\n\nInput:</strong> <code>[1,2,3,4]</code>\n<strong>Output: </strong>false \n</pre>\n\n<p><b>Example 3:</b></p>\n\n<pre>\n<strong>\u250c\u2500\u2500\u2500\u2510\n\u2502 &nbsp; \u2502\n\u2514\u2500\u2500\u2500\u253c&gt;\n\nInput:</strong> <code>[1,1,1,1]</code>\n<strong>Output:</strong> true \n</pre>\n"
    },
    {
        "id": "1160",
        "title": "Find Words That Can Be Formed by Characters",
        "slug": "find-words-that-can-be-formed-by-characters",
        "difficulty": "Easy",
        "likes": 72,
        "dislikes": 15,
        "hints": [
            "Solve the problem for each string in <code>words</code> independently.",
            "Now try to think in frequency of letters.",
            "Count how many times each character occurs in string <code>chars</code>.",
            "To form a string using characters from <code>chars</code>, the frequency of each character in <code>chars</code> must be greater than or equal the frequency of that character in the string to be formed."
        ],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": null,
        "topicTags": [
            "Array",
            "Hash Table"
        ],
        "content": "<p>You are given an array of strings&nbsp;<code>words</code>&nbsp;and a string&nbsp;<code>chars</code>.</p>\n\n<p>A string is <em>good</em>&nbsp;if&nbsp;it can be formed by&nbsp;characters from <code>chars</code>&nbsp;(each character&nbsp;can only be used once).</p>\n\n<p>Return the sum of lengths of all good strings in <code>words</code>.</p>\n\n<p>&nbsp;</p>\n\n<p><strong>Example 1:</strong></p>\n\n<pre>\n<strong>Input: </strong>words = <span id=\"example-input-1-1\">[&quot;cat&quot;,&quot;bt&quot;,&quot;hat&quot;,&quot;tree&quot;]</span>, chars = <span id=\"example-input-1-2\">&quot;atach&quot;</span>\n<strong>Output: </strong><span id=\"example-output-1\">6</span>\n<strong>Explanation: </strong>\nThe strings that can be formed are &quot;cat&quot; and &quot;hat&quot; so the answer is 3 + 3 = 6.\n</pre>\n\n<p><strong>Example 2:</strong></p>\n\n<pre>\n<strong>Input: </strong>words = <span id=\"example-input-2-1\">[&quot;hello&quot;,&quot;world&quot;,&quot;leetcode&quot;]</span>, chars = <span id=\"example-input-2-2\">&quot;welldonehoneyr&quot;</span>\n<strong>Output: </strong><span id=\"example-output-2\">10</span>\n<strong>Explanation: </strong>\nThe strings that can be formed are &quot;hello&quot; and &quot;world&quot; so the answer is 5 + 5 = 10.\n</pre>\n\n<p>&nbsp;</p>\n\n<p><span><strong>Note:</strong></span></p>\n\n<ol>\n\t<li><code>1 &lt;= words.length &lt;= 1000</code></li>\n\t<li><code>1 &lt;= words[i].length, chars.length&nbsp;&lt;= 100</code></li>\n\t<li>All strings contain lowercase English letters only.</li>\n</ol>"
    },
    {
        "id": "971",
        "title": "Flip Binary Tree To Match Preorder Traversal",
        "slug": "flip-binary-tree-to-match-preorder-traversal",
        "difficulty": "Medium",
        "likes": 142,
        "dislikes": 68,
        "hints": [],
        "isPaidOnly": false,
        "similarQuestions": "[]",
        "solution": {
            "id": "658",
            "canSeeDetail": true,
            "__typename": "ArticleNode"
        },
        "topicTags": [
            "Tree",
            "Depth-first Search"
        ],
        "content": "<p>Given a binary tree with <code>N</code> nodes, each node has a different value from&nbsp;<code>{1, ..., N}</code>.</p>\n\n<p>A node in this binary tree can be <em>flipped</em>&nbsp;by swapping the left child and the right child of that node.</p>\n\n<p>Consider the sequence of&nbsp;<code>N</code> values reported by a preorder traversal starting from the root.&nbsp; Call such a sequence of <code>N</code> values the&nbsp;<em>voyage</em>&nbsp;of the tree.</p>\n\n<p>(Recall that a <em>preorder traversal</em>&nbsp;of a node means we report the current node&#39;s value, then preorder-traverse the left child, then preorder-traverse the right child.)</p>\n\n<p>Our goal is to flip the <strong>least number</strong> of nodes in the tree so that the voyage of the tree matches the <code>voyage</code> we are given.</p>\n\n<p>If we can do so, then return a&nbsp;list&nbsp;of the values of all nodes flipped.&nbsp; You may return the answer in any order.</p>\n\n<p>If we cannot do so, then return the list <code>[-1]</code>.</p>\n\n<p>&nbsp;</p>\n\n<div>\n<p><strong>Example 1:</strong></p>\n\n<p><strong><img alt=\"\" src=\"./img/flip-binary-tree-to-match-preorder-traversal_1.png\" style=\"width: 88px; height: 120px;\" /></strong></p>\n\n<pre>\n<strong>Input: </strong>root = <span id=\"example-input-1-1\">[1,2]</span>, voyage = <span id=\"example-input-1-2\">[2,1]</span>\n<strong>Output: </strong><span id=\"example-output-1\">[-1]</span>\n</pre>\n\n<div>\n<p><strong>Example 2:</strong></p>\n\n<p><strong><img alt=\"\" src=\"./img/flip-binary-tree-to-match-preorder-traversal_2.png\" style=\"width: 127px; height: 120px;\" /></strong></p>\n\n<pre>\n<strong>Input: </strong>root = <span id=\"example-input-2-1\">[1,2,3]</span>, voyage = <span id=\"example-input-2-2\">[1,3,2]</span>\n<strong>Output: </strong><span id=\"example-output-2\">[1]</span>\n</pre>\n\n<div>\n<p><strong>Example 3:</strong></p>\n\n<p><strong><img alt=\"\" src=\"./img/flip-binary-tree-to-match-preorder-traversal_2.png\" style=\"width: 127px; height: 120px;\" /></strong></p>\n\n<pre>\n<strong>Input: </strong>root = <span id=\"example-input-3-1\">[1,2,3]</span>, voyage = <span id=\"example-input-3-2\">[1,2,3]</span>\n<strong>Output: </strong><span id=\"example-output-3\">[]</span>\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong><span>Note:</span></strong></p>\n\n<ol>\n\t<li><code>1 &lt;= N &lt;= 100</code></li>\n</ol>\n</div>\n</div>\n</div>\n"
    }
]